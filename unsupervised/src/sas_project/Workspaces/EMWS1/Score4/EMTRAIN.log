MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:43:47 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                23 December 2017
Time:                09:43:47 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ASPA69 "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ASPA69 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:43:47 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "23 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:43:47 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Score4\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22442      proc freq data=EMWS1.Score4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Score4_VariableSet noprint;
22443      table ROLE*LEVEL/out=WORK.Score4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score4META;
22444      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.SCORE4_VARIABLESET.
NOTE: The data set WORK.SCORE4META has 1 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

22445      proc print data=WORK.Score4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score4META label noobs;
22446      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22447      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22448      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22449      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22450      run;

NOTE: There were 1 observations read from the data set WORK.SCORE4META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22451      title10;
MPRINT(EM_DIAGRAM):   title10;
22452      %let groupid =;
22453      %let endGroupid =;
22454      %let prescoreid =;
22455      %let idsTable =;
22456      %let hpdmTable =;
22457      %let lasthptm =;
22458      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22459      set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
22460      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
22461      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
22462      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
22463      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
22464      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
22465      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
22466      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
22467      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
22468      end;
MPRINT(EM_DIAGRAM):   end;
22469      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22470      %let em_rootkey=;
22471      %let em_keytype=;
22472      %let em_keylen=;
22473      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22474      set EMWS1.Ids_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_cmeta_data;
22475      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
22476      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
22477      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
22478      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
22479      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data EMWS1.Score4_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids2_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: DESKTOP-61HCQ9U;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_GB;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\misil\Desktop\MIS;
MPRINT(EM_DIAGRAM):   * Project Name: DM1_project;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Segmentation;
MPRINT(EM_DIAGRAM):   * Generated by: misil;
MPRINT(EM_DIAGRAM):   * Date: 23DEC2017:09:43:48;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Imputation;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Impt;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *MOST FREQUENT VALUE (COUNT);
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   length IMP_Children 8;
MPRINT(EM_DIAGRAM):   label IMP_Children = 'Imputed Children';
MPRINT(EM_DIAGRAM):   IMP_Children = Children;
MPRINT(EM_DIAGRAM):   if missing(Children) then IMP_Children = 1;
MPRINT(EM_DIAGRAM):   length IMP_EducDeg $25;
MPRINT(EM_DIAGRAM):   label IMP_EducDeg = 'Imputed EducDeg';
MPRINT(EM_DIAGRAM):   IMP_EducDeg = EducDeg;
MPRINT(EM_DIAGRAM):   if EducDeg = '' then IMP_EducDeg = '3 - BSc/MSc';
MPRINT(EM_DIAGRAM):   length IMP_GeoLivArea 8;
MPRINT(EM_DIAGRAM):   label IMP_GeoLivArea = 'Imputed GeoLivArea';
MPRINT(EM_DIAGRAM):   IMP_GeoLivArea = GeoLivArea;
MPRINT(EM_DIAGRAM):   if missing(GeoLivArea) then IMP_GeoLivArea = 4;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *;
MPRINT(EM_DIAGRAM):   label IMP_BirthYear = 'Imputed BirthYear';
MPRINT(EM_DIAGRAM):   length IMP_BirthYear 8;
MPRINT(EM_DIAGRAM):   IMP_BirthYear = BirthYear;
MPRINT(EM_DIAGRAM):   if missing(BirthYear) then IMP_BirthYear = 1968;
MPRINT(EM_DIAGRAM):   label IMP_FirstPolYear = 'Imputed FirstPolYear';
MPRINT(EM_DIAGRAM):   length IMP_FirstPolYear 8;
MPRINT(EM_DIAGRAM):   IMP_FirstPolYear = FirstPolYear;
MPRINT(EM_DIAGRAM):   if missing(FirstPolYear) then IMP_FirstPolYear = 1986;
MPRINT(EM_DIAGRAM):   label IMP_MonthSal = 'Imputed MonthSal';
MPRINT(EM_DIAGRAM):   length IMP_MonthSal 8;
MPRINT(EM_DIAGRAM):   IMP_MonthSal = MonthSal;
MPRINT(EM_DIAGRAM):   if missing(MonthSal) then IMP_MonthSal = 2501.5;
MPRINT(EM_DIAGRAM):   label IMP_PremHealth = 'Imputed PremHealth';
MPRINT(EM_DIAGRAM):   length IMP_PremHealth 8;
MPRINT(EM_DIAGRAM):   IMP_PremHealth = PremHealth;
MPRINT(EM_DIAGRAM):   if missing(PremHealth) then IMP_PremHealth = 162.81;
MPRINT(EM_DIAGRAM):   label IMP_PremLife = 'Imputed PremLife';
MPRINT(EM_DIAGRAM):   length IMP_PremLife 8;
MPRINT(EM_DIAGRAM):   IMP_PremLife = PremLife;
MPRINT(EM_DIAGRAM):   if missing(PremLife) then IMP_PremLife = 25.56;
MPRINT(EM_DIAGRAM):   label IMP_PremMotor = 'Imputed PremMotor';
MPRINT(EM_DIAGRAM):   length IMP_PremMotor 8;
MPRINT(EM_DIAGRAM):   IMP_PremMotor = PremMotor;
MPRINT(EM_DIAGRAM):   if missing(PremMotor) then IMP_PremMotor = 298.61;
MPRINT(EM_DIAGRAM):   label IMP_PremWork = 'Imputed PremWork';
MPRINT(EM_DIAGRAM):   length IMP_PremWork 8;
MPRINT(EM_DIAGRAM):   IMP_PremWork = PremWork;
MPRINT(EM_DIAGRAM):   if missing(PremWork) then IMP_PremWork = 25.67;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   revHealth =(IMP_PremHealth < 0) ;
MPRINT(EM_DIAGRAM):   revLife =(IMP_PremLife < 0) ;
MPRINT(EM_DIAGRAM):   revWork =(IMP_PremWork < 0) ;
MPRINT(EM_DIAGRAM):   revHousehold =(PremHousehold < 0) ;
MPRINT(EM_DIAGRAM):   revMotor =(IMP_PremMotor < 0) ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   newPremHealth =IMP_PremHealth * ( NOT revHealth) ;
MPRINT(EM_DIAGRAM):   newPremLife =IMP_PremLife * ( NOT revLife) ;
MPRINT(EM_DIAGRAM):   newPremMotor =IMP_PremMotor * ( NOT revMotor) ;
MPRINT(EM_DIAGRAM):   newPremWork =IMP_PremWork * ( NOT revWork) ;
MPRINT(EM_DIAGRAM):   newPremHousehold =PremHousehold * ( NOT revHousehold) ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   age =2016 - IMP_BirthYear ;
MPRINT(EM_DIAGRAM):   policy_time =2016 - IMP_FirstPolYear ;
MPRINT(EM_DIAGRAM):   reversals =revHealth + revHousehold + revLife + revMotor + revWork ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Drop Node;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Drop;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Clustering;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Clus3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize newPremHealth ;
MPRINT(EM_DIAGRAM):   drop T_newPremHealth ;
MPRINT(EM_DIAGRAM):   if missing( newPremHealth ) then T_newPremHealth = .;
MPRINT(EM_DIAGRAM):   else T_newPremHealth = (newPremHealth - 169.635180503589) * 0.01346436244109;
MPRINT(EM_DIAGRAM):   *** Standardize newPremHousehold ;
MPRINT(EM_DIAGRAM):   drop T_newPremHousehold ;
MPRINT(EM_DIAGRAM):   if missing( newPremHousehold ) then T_newPremHousehold = .;
MPRINT(EM_DIAGRAM):   else T_newPremHousehold = (newPremHousehold - 197.588431590653) * 0.00470478682718;
MPRINT(EM_DIAGRAM):   *** Standardize newPremLife ;
MPRINT(EM_DIAGRAM):   drop T_newPremLife ;
MPRINT(EM_DIAGRAM):   if missing( newPremLife ) then T_newPremLife = .;
MPRINT(EM_DIAGRAM):   else T_newPremLife = (newPremLife - 37.3322793002349) * 0.02644481356546;
MPRINT(EM_DIAGRAM):   *** Standardize newPremMotor ;
MPRINT(EM_DIAGRAM):   drop T_newPremMotor ;
MPRINT(EM_DIAGRAM):   if missing( newPremMotor ) then T_newPremMotor = .;
MPRINT(EM_DIAGRAM):   else T_newPremMotor = (newPremMotor - 305.97255839822) * 0.00754702532898;
MPRINT(EM_DIAGRAM):   *** Standardize newPremWork ;
MPRINT(EM_DIAGRAM):   drop T_newPremWork ;
MPRINT(EM_DIAGRAM):   if missing( newPremWork ) then T_newPremWork = .;
MPRINT(EM_DIAGRAM):   else T_newPremWork = (newPremWork - 37.4512539184974) * 0.02618215251777;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS3vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUS3vads [4] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 4;
MPRINT(EM_DIAGRAM):   CLUS3vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremHealth ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_newPremHealth - -1.08501211322444 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_newPremHealth - 0.01346491417017 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_newPremHealth - 1.28393537137595 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_newPremHealth - -0.03543372708688 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremHousehold ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_newPremHousehold - -0.67020446789888 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_newPremHousehold - -0.24526523426993 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_newPremHousehold - 0.06351078161482 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_newPremHousehold - 1.50628429946247 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremLife ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_newPremLife - -0.71602648765378 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_newPremLife - -0.22872463110426 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_newPremLife - 0.18505423226036 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_newPremLife - 1.37875822346978 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremMotor ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_newPremMotor - 1.23895265298044 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_newPremMotor - 0.19616985117357 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_newPremMotor - -0.84044401744246 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_newPremMotor - -1.25811249513167 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremWork ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_newPremWork - -0.69857344043344 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_newPremWork - -0.22205160536151 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [3] + ( T_newPremWork - 0.14838432904781 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [4] + ( T_newPremWork - 1.38775088205119 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 5 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.8421709430404E-12 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 4;
MPRINT(EM_DIAGRAM):   if CLUS3vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (5 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS3vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score4: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment Variable';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _SEGMENT_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
