*------------------------------------------------------------*
User:                misil
Date:                22 December 2017
Time:                13:05:06 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "22 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:04:58 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                22 December 2017
Time:                13:04:58 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2284WM8 "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2284WM8 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "22 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:04:58 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "22 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:04:58 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22362      proc freq data=EMWS1.Clus_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Clus_VariableSet noprint;
22363      table ROLE*LEVEL/out=WORK.ClusMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ClusMETA;
22364      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUSMETA has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
22365      proc print data=WORK.ClusMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ClusMETA label noobs;
22366      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22367      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22368      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22369      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22370      run;
 
NOTE: There were 2 observations read from the data set WORK.CLUSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22371      title10;
MPRINT(EM_DIAGRAM):   title10;
22372      data WORK.M05GTB4G;
MPRINT(EM_DIAGRAM):    data WORK.M05GTB4G;
22373      set WORK.M05GTB4G;
MPRINT(EM_DIAGRAM):   set WORK.M05GTB4G;
22374      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22375      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M05GTB4G.
NOTE: The data set WORK.M05GTB4G has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M05GTB4G;
MPRINT(EM_DIAGRAM):   set WORK.M05GTB4G;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
22384      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22385      * Clus: Training;
MPRINT(EM_DIAGRAM):   * Clus: Training;
22386      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22387      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22388      * Clus: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBClass Macro ;
22389      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22390      %macro DMDBClass;
22391
22392      %mend DMDBClass;
22393      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22394      * Clus: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus: DMDBVar Macro ;
22395      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22396      %macro DMDBVar;
22397          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
22398      %mend DMDBVar;
22399      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22400      * Clus: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus: Create DMDB;
22401      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22402      proc dmdb batch data=EMWS1.Filter2_TRAIN
22403      dmdbcat=WORK.Clus_DMDB
22404      maxlevel = 513
22405      out=WORK.Clus_DMDB
22406      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter2_TRAIN dmdbcat=WORK.Clus_DMDB maxlevel = 513 out=WORK.Clus_DMDB ;
MPRINT(EM_DIAGRAM):   var
22407      var %DMDBVar;
MPRINT(DMDBVAR):   newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
MPRINT(EM_DIAGRAM):  ;
22408      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 9889   Memory used = 511K.
NOTE: There were 10296 observations read from the data set A2Z_INSU.A2Z_INSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS3_TRAIN.
NOTE: View EMWS1.FILTER2_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
NOTE: There were 10296 observations read from the data set EMWS1.DROP_TRAIN.
NOTE: There were 9889 observations read from the data set EMWS1.FILTER2_TRAIN.
NOTE: The data set WORK.CLUS_DMDB has 9889 observations and 5 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22409      quit;
22410      *--- end code ---*;
 
22411      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22412      * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
22413      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22414      %macro DMVQINTERVAL;
22415          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
22416      %mend DMVQINTERVAL;
22417      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22418      * Clus: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run DMVQ procedure;
22419      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22420      title;
MPRINT(EM_DIAGRAM):   title;
22421      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22422      proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK
22423      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus_DMDB dmdbcat=WORK.Clus_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS_DMDB.DATA has 5 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22424      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 5 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22425      VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 2 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22426      MAKE outvar=EMWS1.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus_OUTVAR;
 
NOTE: 5 input variable(s).
NOTE: Number of cases=9889
NOTE: Sum of frequencies=9889
NOTE: Sum of weights=9889
NOTE: VARDEF=DF
NOTE: Maximum number of categories=0
NOTE: The total number of variables is 5 with dimensionality 5.
NOTE: 5 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS_OUTVAR.DATA with 6 variables.
NOTE: The data set EMWS1.CLUS_OUTVAR has 4 observations and 6 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22427      INITIAL radius=0
22428      initial=PRINCOMP
22429      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 initial=PRINCOMP ;
NOTE: 2 seeds were selected from data set WORK.CLUS_DMDB.DATA using the PRINCOMP algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22430      TRAIN tech=FORGY
22431      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22432      SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS1.Clus_OUTSTAT outmean=EMWS1.Clus_OUTMEAN;
NOTE: The data set EMWS1.CLUS_OUTSTAT has 28 observations and 8 variables.
NOTE: The data set EMWS1.CLUS_OUTMEAN has 2 observations and 14 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22433      code file="C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas"
22434      group=Clus
22435      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas" group=Clus ;
NOTE: External file C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22436      run;
MPRINT(EM_DIAGRAM):   run;
 
22437      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 9889 observations read from the data set WORK.CLUS_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
22438      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
22439      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22440      * Clus: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus: Cluster Label;
22441      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22442      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
22443      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
22444      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
22445      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
22446      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
22447      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
22448      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
22449      output;
MPRINT(EM_DIAGRAM):   output;
22450      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
22451      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
22452      output;
MPRINT(EM_DIAGRAM):   output;
22453      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_LABEL has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "22 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:04:59 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                22 December 2017
Time:                13:04:59 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O106MHO2 "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O106MHO2 new;
MPRINT(EM_DIAGRAM):   run;
22555      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
22556      var newPremHealth--newPremWork;
MPRINT(EM_DIAGRAM):   var newPremHealth--newPremWork;
22557      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22558      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22559      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
22560      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22561      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22562      proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
22563      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22564      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22565      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
22566      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
22567      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22568      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
22569      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 6 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
22570      filename emflow "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22571      *------------------------------------------------------------*;
22572      * Clus: Scoring DATA data;
22573      *------------------------------------------------------------*;
22574      data EMWS1.Clus_TRAIN
22575      / view=EMWS1.Clus_TRAIN
22576      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TRAIN / view=EMWS1.Clus_TRAIN ;
22577      set EMWS1.Filter2_TRAIN
22578      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter2_TRAIN ;
22579      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize newPremHealth ;
MPRINT(EM_DIAGRAM):   drop T_newPremHealth ;
MPRINT(EM_DIAGRAM):   if missing( newPremHealth ) then T_newPremHealth = .;
MPRINT(EM_DIAGRAM):   else T_newPremHealth = (newPremHealth - 169.635180503589) * 0.01346436244109;
MPRINT(EM_DIAGRAM):   *** Standardize newPremHousehold ;
MPRINT(EM_DIAGRAM):   drop T_newPremHousehold ;
MPRINT(EM_DIAGRAM):   if missing( newPremHousehold ) then T_newPremHousehold = .;
MPRINT(EM_DIAGRAM):   else T_newPremHousehold = (newPremHousehold - 197.588431590653) * 0.00470478682718;
MPRINT(EM_DIAGRAM):   *** Standardize newPremLife ;
MPRINT(EM_DIAGRAM):   drop T_newPremLife ;
MPRINT(EM_DIAGRAM):   if missing( newPremLife ) then T_newPremLife = .;
MPRINT(EM_DIAGRAM):   else T_newPremLife = (newPremLife - 37.3322793002349) * 0.02644481356546;
MPRINT(EM_DIAGRAM):   *** Standardize newPremMotor ;
MPRINT(EM_DIAGRAM):   drop T_newPremMotor ;
MPRINT(EM_DIAGRAM):   if missing( newPremMotor ) then T_newPremMotor = .;
MPRINT(EM_DIAGRAM):   else T_newPremMotor = (newPremMotor - 305.97255839822) * 0.00754702532898;
MPRINT(EM_DIAGRAM):   *** Standardize newPremWork ;
MPRINT(EM_DIAGRAM):   drop T_newPremWork ;
MPRINT(EM_DIAGRAM):   if missing( newPremWork ) then T_newPremWork = .;
MPRINT(EM_DIAGRAM):   else T_newPremWork = (newPremWork - 37.4512539184974) * 0.02618215251777;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [2] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 2;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremHealth ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_newPremHealth - -0.50872279165006 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_newPremHealth - 0.60847900418104 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremHousehold ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_newPremHousehold - -0.51505369245157 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_newPremHousehold - 0.61605134078266 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremLife ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_newPremLife - -0.53587579857008 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_newPremLife - 0.64095648480965 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremMotor ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_newPremMotor - 0.7585724788734 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_newPremMotor - -0.90732208998715 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_newPremWork ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_newPremWork - -0.53010825120418 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_newPremWork - 0.63405797046085 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 5 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 2.8421709430404E-12 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 2;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (5 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
22683      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER2_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22684      quit;
22685      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22686      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22687      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
22688      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus_TRAIN out=WORK.M00E4BUD noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00E4BUD;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M00E4BUD(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00E4BUD;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M00E4BUD;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M13T_DIM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36R3E30(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   set WORK.M13T_DIM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "22 December 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:05:01 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                22 December 2017
Time:                13:05:01 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3GEN593 "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3GEN593 new;
MPRINT(EM_DIAGRAM):   run;
23098      data WORK.M1FMUN6H;
MPRINT(EM_DIAGRAM):    data WORK.M1FMUN6H;
23099      set WORK.M1FMUN6H;
MPRINT(EM_DIAGRAM):   set WORK.M1FMUN6H;
23100      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
23101      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M1FMUN6H.
NOTE: The data set WORK.M1FMUN6H has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23102      data WORK.M1FMUN6H;
MPRINT(EM_DIAGRAM):    data WORK.M1FMUN6H;
23103      set WORK.M1FMUN6H end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1FMUN6H end=_eof_ nobs=_nobs_;
23104      output;
MPRINT(EM_DIAGRAM):   output;
23105      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
23106      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
23107      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
23108      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
23109      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
23110      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
23111      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
23112      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
23113      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
23114      output;
MPRINT(EM_DIAGRAM):   output;
23115      end;
MPRINT(EM_DIAGRAM):   end;
23116      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M1FMUN6H.
NOTE: The data set WORK.M1FMUN6H has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23117      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23118      * Clus: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus: Create decision matrix;
23119      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23120      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23121      * Clus: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Variables Macro ;
23122      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23123      %macro EM_TREEVARS;
23124          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
23125      %mend EM_TREEVARS;
23126      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23127      * Clus: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Tree Targets Macro ;
23128      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23129      %macro EM_TREETARGETS;
23130          _SEGMENT_
23131      %mend EM_TREETARGETS;
23132      data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
MPRINT(EM_DIAGRAM):   data EMWS1.EM_Clus / view=EMWS1.EM_Clus;
23133      set
23133    ! EMWS1.Clus_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TRAIN(keep
MPRINT(EM_DIAGRAM):  =newPremHealth newPremHousehold newPremLife newPremMotor newPremWork _SEGMENT_);
23134      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.EM_CLUS.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.23 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23135      *------------------------------------------------------------* ;
23136      * Clus: Interval Inputs Macro ;
23137      *------------------------------------------------------------* ;
23138      %macro INTINPUTS;
23139          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
23140      %mend INTINPUTS;
23141      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23142      * Clus: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Binary and Nominal Inputs Macro ;
23143      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23144      %macro NOMINPUTS;
23145
23146      %mend NOMINPUTS;
23147      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23148      * Clus: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus: Ordinal Inputs Macro ;
23149      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23150      %macro ORDINPUTS;
23151
23152      %mend ORDINPUTS;
23153      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23154      * Clus: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus: Run ARBOR procedure;
23155      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
23156      proc arbor data=EMWS1.EM_Clus
23157      MAXSURRS=4
23158      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS1.EM_Clus MAXSURRS=4 ;
23159      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
23160      input %INTINPUTS
MPRINT(INTINPUTS):   newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
23161      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
23162      target _SEGMENT_ / level=NOMINAL
23163      Criterion=PROBCHISQ
23164      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
23165      ;
MPRINT(EM_DIAGRAM):   ;
23166      Performance DISK
23167      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
23168      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1165010 kilobytes of physical memory.
NOTE: Will use 9889 out of 9889 training cases.
NOTE: Using memory pool with 86893568 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 1588816 bytes of work memory.
NOTE: The subtree sequence contains 38 subtrees. The largest has 75 nodes and 38 leaves.
NOTE: Using subtree with 47 nodes and 24 leaves.
NOTE: Created macro variable NLEAVES equal to 24.
23169      save
23170      MODEL=EMWS1.Clus_PLOTDS
23171      SEQUENCE=EMWS1.Clus_OUTSEQ
23172      IMPORTANCE=EMWS1.Clus_OUTIMPORT
23173      NODESTAT=EMWS1.Clus_OUTNODES
23174      SUMMARY=WORK.OUTSUMMARY_TREE_0N1Y_FL
23175      STATSBYNODE=WORK.OUTSTATS_TREE_0N1Y_FL
23176      Pathlistnonmissing = WORK.OUTPATH_TREE_0N1Y_FL
23177      Rules = WORK.OUTRULES_TREE_0N1Y_FL
23178      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS1.Clus_PLOTDS SEQUENCE=EMWS1.Clus_OUTSEQ IMPORTANCE=EMWS1.Clus_OUTIMPORT NODESTAT=EMWS1.Clus_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_0N1Y_FL STATSBYNODE=WORK.OUTSTATS_TREE_0N1Y_FL Pathlistnonmissing =
WORK.OUTPATH_TREE_0N1Y_FL Rules = WORK.OUTRULES_TREE_0N1Y_FL ;
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 5 observations and 5 variables.
NOTE: The data set EMWS1.CLUS_PLOTDS has 2332 observations and 4 variables.
NOTE: The data set EMWS1.CLUS_OUTNODES has 47 observations and 20 variables.
NOTE: The data set WORK.OUTPATH_TREE_0N1Y_FL has 179 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_0N1Y_FL has 658 observations and 6 variables.
NOTE: The data set EMWS1.CLUS_OUTSEQ has 38 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_0N1Y_FL has 188 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_0N1Y_FL has 12 observations and 5 variables.
23179      run;
MPRINT(EM_DIAGRAM):   run;
 
23180      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 10296 observations read from the data set A2Z_INSU.A2Z_INSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS3_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.DROP_TRAIN.
NOTE: There were 9889 observations read from the data set EMWS1.FILTER2_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           0.81 seconds
      cpu time            0.73 seconds
 
NOTE: There were 9889 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 9889 observations read from the data set EMWS1.EM_CLUS.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.84 seconds
      cpu time            0.75 seconds
 
 
23181      data EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_OUTIMPORT;
23182      set EMWS1.Clus_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT;
23183      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
23184         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
23185      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
23186      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.CLUS_OUTIMPORT.
NOTE: The data set EMWS1.CLUS_OUTIMPORT has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
23187      filename x "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
23188      data temp;
MPRINT(EM_DIAGRAM):    data temp;
23189      length varname $16;
MPRINT(EM_DIAGRAM):   length varname $16;
23190      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
23191      set WORK.OUTPATH_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0N1Y_FL;
23192      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
23193      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
23194      output;
MPRINT(EM_DIAGRAM):   output;
23195      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 179 observations read from the data set WORK.OUTPATH_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMP has 179 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23196      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
23197      by node;
MPRINT(EM_DIAGRAM):   by node;
23198      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 179 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 179 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23199      proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=outnodes;
23200      by node;
MPRINT(EM_DIAGRAM):   by node;
23201      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.OUTNODES has 47 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23202      data temp;
MPRINT(EM_DIAGRAM):   data temp;
23203      merge temp(in=_a) outnodes(keep= node
23204      NPRIORS
23205      P__SEGMENT_1
23206      P__SEGMENT_2
23207      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_2 );
23208      by node;
MPRINT(EM_DIAGRAM):   by node;
23209      if _a;
MPRINT(EM_DIAGRAM):   if _a;
23210      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 179 observations read from the data set WORK.TEMP.
NOTE: There were 47 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 179 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23211      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
23212      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
23213      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 179 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 179 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23214      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
23215      file x;
MPRINT(EM_DIAGRAM):   file x;
23216      set temp;
MPRINT(EM_DIAGRAM):   set temp;
23217      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
23218      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
23219      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
23220      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
23221      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
23222      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
23223      end;
MPRINT(EM_DIAGRAM):   end;
23224      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
23225      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
23226      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
23227      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
23228      end;
MPRINT(EM_DIAGRAM):   end;
23229      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
23230      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
23231      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
23232      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
23233      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
23234      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
23235      end;
MPRINT(EM_DIAGRAM):   end;
23236      else do;
MPRINT(EM_DIAGRAM):   else do;
23237      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
23238      end;
MPRINT(EM_DIAGRAM):   end;
23239      end;
MPRINT(EM_DIAGRAM):   end;
23240      end;
MPRINT(EM_DIAGRAM):   end;
23241      else do;
MPRINT(EM_DIAGRAM):   else do;
23242      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
23243      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
23244      end;
MPRINT(EM_DIAGRAM):   end;
23245      else do;
MPRINT(EM_DIAGRAM):   else do;
23246      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
23247      end;
MPRINT(EM_DIAGRAM):   end;
23248      end;
MPRINT(EM_DIAGRAM):   end;
23249      end;
MPRINT(EM_DIAGRAM):   end;
23250      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
23251      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
23252      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
23253      end;
MPRINT(EM_DIAGRAM):   end;
23254      else do;
MPRINT(EM_DIAGRAM):   else do;
23255      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
23256      end;
MPRINT(EM_DIAGRAM):   end;
23257      end;
MPRINT(EM_DIAGRAM):   end;
23258      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
23259      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
23260      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
23261      end;
MPRINT(EM_DIAGRAM):   end;
23262      else do;
MPRINT(EM_DIAGRAM):   else do;
23263      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
23264      end;
MPRINT(EM_DIAGRAM):   end;
23265      end;
MPRINT(EM_DIAGRAM):   end;
23266      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
23267      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
23268      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
23269      end;
MPRINT(EM_DIAGRAM):   end;
23270      else do;
MPRINT(EM_DIAGRAM):   else do;
23271      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
23272      end;
MPRINT(EM_DIAGRAM):   end;
23273      end;
MPRINT(EM_DIAGRAM):   end;
23274      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
23275      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
23276      end;
MPRINT(EM_DIAGRAM):   end;
23277      else do;
MPRINT(EM_DIAGRAM):   else do;
23278      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
23279      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
23280      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
23281      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
23282      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
23283      end;
MPRINT(EM_DIAGRAM):   end;
23284      end;
MPRINT(EM_DIAGRAM):   end;
23285      else do;
MPRINT(EM_DIAGRAM):   else do;
23286      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
23287      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
23288      end;
MPRINT(EM_DIAGRAM):   end;
23289      end;
MPRINT(EM_DIAGRAM):   end;
23290      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
23291      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
23292      end;
MPRINT(EM_DIAGRAM):   end;
23293      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
23294      end;
MPRINT(EM_DIAGRAM):   end;
23295      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
23296      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
23297      end;
MPRINT(EM_DIAGRAM):   end;
23298      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
23299      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
23300      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
23301      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
23302      end;
MPRINT(EM_DIAGRAM):   end;
23303      end;
MPRINT(EM_DIAGRAM):   end;
23304      put string;
MPRINT(EM_DIAGRAM):   put string;
23305      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
23306      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
23307      end;
MPRINT(EM_DIAGRAM):   end;
23308      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
23309      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
23310      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
23311      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
23312      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
23313      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
23314      put " ";
MPRINT(EM_DIAGRAM):   put " ";
23315      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
23316      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
23317      end;
MPRINT(EM_DIAGRAM):   end;
23318      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23234:67    23237:66    23281:108   23282:72
NOTE: The file X is:
      Filename=C:\Users\misil\Desktop\MIS\DM1_project\Workspaces\EMWS1\Clus\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=22 December 2017 13:05:02 o'clock,
      Create Time=22 December 2017 12:46:53 o'clock
 
NOTE: 292 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 63.
NOTE: There were 179 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23319      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
23320      /* belowtext */
23321      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
23322      set WORK.OUTRULES_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0N1Y_FL;
23323      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
23324      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
23325      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
23326      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 658 observations read from the data set WORK.OUTRULES_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23327      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
23328      set WORK.OUTRULES_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0N1Y_FL;
23329      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
23330      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
23331      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 658 observations read from the data set WORK.OUTRULES_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPVAR has 23 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23332      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
23333      by node;
MPRINT(EM_DIAGRAM):   by node;
23334      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23335      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
23336      by node;
MPRINT(EM_DIAGRAM):   by node;
23337      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23338      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
23339      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
23340      by node;
MPRINT(EM_DIAGRAM):   by node;
23341      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
23342      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
23343      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 23 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 23 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23344      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
23345      by node;
MPRINT(EM_DIAGRAM):   by node;
23346      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23347      /* abovetext */
23348      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
23349      set WORK.OUTRULES_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0N1Y_FL;
23350      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
23351      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 658 observations read from the data set WORK.OUTRULES_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPOUTRULES has 23 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23352      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
23353      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
23354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 23 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23355      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
23356      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
23357      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
23358      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
23359      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
23360      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
23361      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
23362      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
23363      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
23364      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23365      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23366      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
23367      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
23368      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
23369      output;
MPRINT(EM_DIAGRAM):   output;
23370      end;
MPRINT(EM_DIAGRAM):   end;
23371      else do;
MPRINT(EM_DIAGRAM):   else do;
23372      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
23373      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
23374      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
23375      output;
MPRINT(EM_DIAGRAM):   output;
23376      end;
MPRINT(EM_DIAGRAM):   end;
23377      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
23378      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23379      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23380      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23381      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
23382      output;
MPRINT(EM_DIAGRAM):   output;
23383      end;
MPRINT(EM_DIAGRAM):   end;
23384      else do;
MPRINT(EM_DIAGRAM):   else do;
23385      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23386      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
23387      output;
MPRINT(EM_DIAGRAM):   output;
23388      end;
MPRINT(EM_DIAGRAM):   end;
23389      end;
MPRINT(EM_DIAGRAM):   end;
23390      end;
MPRINT(EM_DIAGRAM):   end;
23391      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
23392      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
23393      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23394      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23395      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
23396      end;
MPRINT(EM_DIAGRAM):   end;
23397      else do;
MPRINT(EM_DIAGRAM):   else do;
23398      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
23399      end;
MPRINT(EM_DIAGRAM):   end;
23400      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23401      output;
MPRINT(EM_DIAGRAM):   output;
23402      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23403      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23404      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
23405      end;
MPRINT(EM_DIAGRAM):   end;
23406      else do;
MPRINT(EM_DIAGRAM):   else do;
23407      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
23408      end;
MPRINT(EM_DIAGRAM):   end;
23409      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23410      output;
MPRINT(EM_DIAGRAM):   output;
23411      end;
MPRINT(EM_DIAGRAM):   end;
23412      else do;
MPRINT(EM_DIAGRAM):   else do;
23413      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23414      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23415      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
23416      end;
MPRINT(EM_DIAGRAM):   end;
23417      else do;
MPRINT(EM_DIAGRAM):   else do;
23418      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
23419      end;
MPRINT(EM_DIAGRAM):   end;
23420      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23421      output;
MPRINT(EM_DIAGRAM):   output;
23422      end;
MPRINT(EM_DIAGRAM):   end;
23423      end;
MPRINT(EM_DIAGRAM):   end;
23424      else do;
MPRINT(EM_DIAGRAM):   else do;
23425      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
23426      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23427      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
23428      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
23429      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
23430      end;
MPRINT(EM_DIAGRAM):   end;
23431      else do;
MPRINT(EM_DIAGRAM):   else do;
23432      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
23433      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
23434      end;
MPRINT(EM_DIAGRAM):   end;
23435      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23436      output;
MPRINT(EM_DIAGRAM):   output;
23437      end;
MPRINT(EM_DIAGRAM):   end;
23438      else do;
MPRINT(EM_DIAGRAM):   else do;
23439      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
23440      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
23441      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
23442      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
23443      end;
MPRINT(EM_DIAGRAM):   end;
23444      else do;
MPRINT(EM_DIAGRAM):   else do;
23445      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
23446      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
23447      end;
MPRINT(EM_DIAGRAM):   end;
23448      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
23449      output;
MPRINT(EM_DIAGRAM):   output;
23450      end;
MPRINT(EM_DIAGRAM):   end;
23451      end;
MPRINT(EM_DIAGRAM):   end;
23452      end;
MPRINT(EM_DIAGRAM):   end;
23453      else do;
MPRINT(EM_DIAGRAM):   else do;
23454      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
23455      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
23456      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
23457      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
23458      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
23459      output;
MPRINT(EM_DIAGRAM):   output;
23460      end;
MPRINT(EM_DIAGRAM):   end;
23461      end;
MPRINT(EM_DIAGRAM):   end;
23462      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
23463      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
23464      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
23465      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
23466      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
23467      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
23468      end;
MPRINT(EM_DIAGRAM):   end;
23469      else do;
MPRINT(EM_DIAGRAM):   else do;
23470      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
23471      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
23472      end;
MPRINT(EM_DIAGRAM):   end;
23473      end;
MPRINT(EM_DIAGRAM):   end;
23474      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
23475      output;
MPRINT(EM_DIAGRAM):   output;
23476      end;
MPRINT(EM_DIAGRAM):   end;
23477      else do;
MPRINT(EM_DIAGRAM):   else do;
23478      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
23479      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
23480      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
23481      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
23482      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
23483      end;
MPRINT(EM_DIAGRAM):   end;
23484      else do;
MPRINT(EM_DIAGRAM):   else do;
23485      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
23486      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
23487      end;
MPRINT(EM_DIAGRAM):   end;
23488      end;
MPRINT(EM_DIAGRAM):   end;
23489      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
23490      end;
MPRINT(EM_DIAGRAM):   end;
23491      end;
MPRINT(EM_DIAGRAM):   end;
23492      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
23493      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23366:25   23381:26   23395:24   23395:47   23404:26   23415:26   23428:24   23428:47   23441:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      23446:11
NOTE: There were 23 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 46 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23494      /* MIssing value to abovetext */
23495      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
23496      set WORK.OUTRULES_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0N1Y_FL;
23497      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
23498      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
23499      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 658 observations read from the data set WORK.OUTRULES_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPMISSING has 23 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23500      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
23501      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
23502      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 46 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23503      proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_OUTNODES out=tempoutnodes;
23504      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
23505      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 47 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23506      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
23507      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
23508      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 23 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23509      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
23510      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
23511      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
23512      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
23513      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
23514      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
23515      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
23516      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
23517      end;
MPRINT(EM_DIAGRAM):   end;
23518      else do;
MPRINT(EM_DIAGRAM):   else do;
23519      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
23520      end;
MPRINT(EM_DIAGRAM):   end;
23521      end;
MPRINT(EM_DIAGRAM):   end;
23522      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
23523      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
23524      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
23525      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
23526      end;
MPRINT(EM_DIAGRAM):   end;
23527      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
23528      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
23529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 46 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 47 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 23 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS_OUTNODES has 47 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23530      proc sort data=WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_outnodes;
23531      by node;
MPRINT(EM_DIAGRAM):   by node;
23532      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.CLUS_OUTNODES has 47 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23533      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
23534      by node;
MPRINT(EM_DIAGRAM):   by node;
23535      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23536      data WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus_outnodes;
23537      merge WORK.Clus_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_outnodes tempbelow;
23538      by node;
MPRINT(EM_DIAGRAM):   by node;
23539      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: There were 23 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS_OUTNODES has 47 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 10296 observations read from the data set A2Z_INSU.A2Z_INSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS3_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.DROP_TRAIN.
NOTE: There were 9889 observations read from the data set EMWS1.FILTER2_TRAIN.
NOTE: View EMWS1.EM_CLUS.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
 
NOTE: There were 9889 observations read from the data set EMWS1.CLUS_TRAIN.
23540      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
23541      set WORK.OUTSTATS_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0N1Y_FL;
23542      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
23543      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
23544      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 188 observations read from the data set WORK.OUTSTATS_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPOUTSTATS has 188 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23545      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
23546      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
23547      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
23548      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
23549         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
23550         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
23551         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
23552      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
23553      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 47 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
23554      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
23555      by node;
MPRINT(EM_DIAGRAM):   by node;
23556      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23557      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
23558      by node;
MPRINT(EM_DIAGRAM):   by node;
23559      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 188 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 188 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23560      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_TREE_PLOT;
23561      merge EMWS1.Clus_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempoutstats;
23562      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
23563      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
23564      by node;
MPRINT(EM_DIAGRAM):   by node;
23565      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
23566      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
23567      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
23568      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
23569      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
23570      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
23571      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
23572      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
23573      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
23574      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
23575      end;
MPRINT(EM_DIAGRAM):   end;
23576      else do;
MPRINT(EM_DIAGRAM):   else do;
23577      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
23578      end;
MPRINT(EM_DIAGRAM):   end;
23579      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
23580      end;
MPRINT(EM_DIAGRAM):   end;
23581      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
23582      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
23583      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
23584      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
23585      end;
MPRINT(EM_DIAGRAM):   end;
23586      end;
MPRINT(EM_DIAGRAM):   end;
23587      else do;
MPRINT(EM_DIAGRAM):   else do;
23588      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
23589      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
23590      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
23591      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
23592      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
23593      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
23594      ;
MPRINT(EM_DIAGRAM):   ;
23595      ;
MPRINT(EM_DIAGRAM):   ;
23596      end;
MPRINT(EM_DIAGRAM):   end;
23597      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
23598      output EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus_TREE_PLOT;
23599      end;
MPRINT(EM_DIAGRAM):   end;
23600      ;
MPRINT(EM_DIAGRAM):   ;
23601      end;
MPRINT(EM_DIAGRAM):   end;
23602      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
23603      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
23604      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 188 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
23605      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
23606      set WORK.OUTSTATS_TREE_0N1Y_FL;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0N1Y_FL;
23607      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
23608      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
23609      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 188 observations read from the data set WORK.OUTSTATS_TREE_0N1Y_FL.
NOTE: The data set WORK.TEMPCOLOR has 188 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23610      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
23611      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
23612      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
23613      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
23614      end;
MPRINT(EM_DIAGRAM):   end;
23615      else do;
MPRINT(EM_DIAGRAM):   else do;
23616      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
23617      end;
MPRINT(EM_DIAGRAM):   end;
23618      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 188 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 47 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23619      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
23620      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
23621      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
23622      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
23623      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
23624      end;
MPRINT(EM_DIAGRAM):   end;
23625      else do;
MPRINT(EM_DIAGRAM):   else do;
23626      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
23627      end;
MPRINT(EM_DIAGRAM):   end;
23628      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
23629      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23630      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
23631      by node;
MPRINT(EM_DIAGRAM):   by node;
23632      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23633      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
23634      by node;
MPRINT(EM_DIAGRAM):   by node;
23635      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 47 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23636      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
23637      merge EMWS1.Clus_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tempcolor;
23638      by node;
MPRINT(EM_DIAGRAM):   by node;
23639      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
23640      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
23641      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
23642      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
23643      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
23644      end;
MPRINT(EM_DIAGRAM):   end;
23645      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
23646      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 47 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23647      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
23648      set EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_TREE_PLOT;
23649      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
23650      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23651      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
23652      set WORK.Clus_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus_outnodes;
23653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.CLUS_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 47 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23654      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
23655      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
23656      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 47 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23657      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
23658      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
23659      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
23660      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
23661      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Percent Cases";
23662      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Event Percentage";
23663      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
23664      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
23665      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
23666      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
23667      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
23668      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
23669      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
23670      keep NODE index tprob perc_train percevent_train
23671      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
23672      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23673      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
23674      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
23675      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 24 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23676      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
23677      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
23678      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23679      data EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TREE_PLOT;
23680      merge EMWS1.Clus_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_TREE_PLOT tree_temp;
23681      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
23682      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: There were 24 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23683      proc sort data=EMWS1.Clus_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_TREE_PLOT;
23684      by node index;
MPRINT(EM_DIAGRAM):   by node index;
23685      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: The data set EMWS1.CLUS_TREE_PLOT has 47 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23686      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
23687      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
23688      proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
23689      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23690      title10;
MPRINT(EM_DIAGRAM):   title10;
23691      data WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):    data WORK.M1YU63DG;
23692      set WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):   set WORK.M1YU63DG;
23693      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
23694      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M1YU63DG.
NOTE: The data set WORK.M1YU63DG has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23695      proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_OUTIMPORT out=WORK.Clus_GRAPHVARS(keep=NAME);
23696      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
23697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS_GRAPHVARS has 5 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23699      proc sort data = WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1YU63DG;
23700      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M1YU63DG.
NOTE: The data set WORK.M1YU63DG has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23702      data WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):   data WORK.M1YU63DG;
23703      merge WORK.M1YU63DG WORK.Clus_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1YU63DG WORK.Clus_GRAPHVARS(in=_b_);
23704      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23705      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
23706      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M1YU63DG.
NOTE: There were 5 observations read from the data set WORK.CLUS_GRAPHVARS.
NOTE: The data set WORK.M1YU63DG has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23707      data WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):    data WORK.M1YU63DG;
23708      set WORK.M1YU63DG end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1YU63DG end=_eof_ nobs=_nobs_;
23709      output;
MPRINT(EM_DIAGRAM):   output;
23710      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
23711      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
23712      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
23713      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
23714      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
23715      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
23716      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
23717      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
23718      output;
MPRINT(EM_DIAGRAM):   output;
23719      end;
MPRINT(EM_DIAGRAM):   end;
23720      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M1YU63DG.
NOTE: The data set WORK.M1YU63DG has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23721      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
23722      * Clus: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus: STDIZE Variables Macro ;
23723      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23724      %macro stdizevar;
23725          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
23726      %mend stdizevar;
23727      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23728      * Clus: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus: Computing Summary Statistics;
23729      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23730      proc stdize
23731      data = EMWS1.Clus_TRAIN
23732      out=_null_
23733      outstat=WORK.Clus_STAT
23734      add=0 fuzz=1E-14 initial=MAD
23735      vardef=df
23736      method=STD
23737      mult=1
23738      pctlmtd=ORD_STAT pctldef=2
23739      pctlpts=(
23740      0
23741      100
23742      )
23743      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Clus_TRAIN out=_null_ outstat=WORK.Clus_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
23744      var %stdizevar;
MPRINT(STDIZEVAR):   newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
MPRINT(EM_DIAGRAM):  ;
23745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 10296 observations read from the data set A2Z_INSU.A2Z_INSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS3_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.DROP_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
 
NOTE: There were 9889 observations read from the data set EMWS1.FILTER2_TRAIN.
NOTE: There were 9889 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK.CLUS_STAT has 10 observations and 6 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.28 seconds
      cpu time            0.24 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23746      quit;
 
23747      data WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus_MINMAX;
23748      set WORK.Clus_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus_STAT;
23749      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
23750      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
23751      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
23752      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS_MINMAX has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23753      proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus_MINMAX out=WORK.Clus_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
23754      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
23755      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_MINMAX has 5 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
23756      data WORK.Clus_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus_UGRID;
23757      set WORK.Clus_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus_MINMAX;
23758      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
23759      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
23760      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
23761      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
23762      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
23763      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
23764      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
23765      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
23766      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
23767      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
23768      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.CLUS_MINMAX.
NOTE: The data set WORK.CLUS_UGRID has 5 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23769      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23770      * Clus: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus: Creating formats for binning interval variables;
23771      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23772      proc format;
MPRINT(EM_DIAGRAM):   proc format;
23773      value F1_
23774      0-55.3575 = "0:55.358"
23775      55.3575-110.715 = "55.358:110.72"
23776      110.715-166.0725 = "110.72:166.07"
23777      166.0725-221.43 = "166.07:221.43"
23778      221.43-276.7875 = "221.43:276.79"
23779      276.7875-332.145 = "276.79:332.15"
23780      332.145-387.5025 = "332.15:387.5"
23781      387.5025-442.86 = "387.5:442.86"
23782      ;
MPRINT(EM_DIAGRAM):   value F1_ 0-55.3575 = "0:55.358" 55.3575-110.715 = "55.358:110.72" 110.715-166.0725 = "110.72:166.07" 166.0725-221.43 = "166.07:221.43" 221.43-276.7875 = "221.43:276.79" 276.7875-332.145 = "276.79:332.15" 332.145-387.5025 =
"332.15:387.5" 387.5025-442.86 = "387.5:442.86" ;
NOTE: Format F1_ has been output.
23783      value F2_
23784      0-156.90625 = "0:156.91"
23785      156.90625-313.8125 = "156.91:313.81"
23786      313.8125-470.71875 = "313.81:470.72"
23787      470.71875-627.625 = "470.72:627.63"
23788      627.625-784.53125 = "627.63:784.53"
23789      784.53125-941.4375 = "784.53:941.44"
23790      941.4375-1098.34375 = "941.44:1098.3"
23791      1098.34375-1255.25 = "1098.3:1255.3"
23792      ;
MPRINT(EM_DIAGRAM):   value F2_ 0-156.90625 = "0:156.91" 156.90625-313.8125 = "156.91:313.81" 313.8125-470.71875 = "313.81:470.72" 470.71875-627.625 = "470.72:627.63" 627.625-784.53125 = "627.63:784.53" 784.53125-941.4375 = "784.53:941.44"
941.4375-1098.34375 = "941.44:1098.3" 1098.34375-1255.25 = "1098.3:1255.3" ;
NOTE: Format F2_ has been output.
23793      value F3_
23794      0-22.8375 = "0:22.838"
23795      22.8375-45.675 = "22.838:45.675"
23796      45.675-68.5125 = "45.675:68.513"
23797      68.5125-91.35 = "68.513:91.35"
23798      91.35-114.1875 = "91.35:114.19"
23799      114.1875-137.025 = "114.19:137.03"
23800      137.025-159.8625 = "137.03:159.86"
23801      159.8625-182.7 = "159.86:182.7"
23802      ;
MPRINT(EM_DIAGRAM):   value F3_ 0-22.8375 = "0:22.838" 22.8375-45.675 = "22.838:45.675" 45.675-68.5125 = "45.675:68.513" 68.5125-91.35 = "68.513:91.35" 91.35-114.1875 = "91.35:114.19" 114.1875-137.025 = "114.19:137.03" 137.025-159.8625 = "137.03:159.86"
159.8625-182.7 = "159.86:182.7" ;
NOTE: Format F3_ has been output.
23803      value F4_
23804      1.78-74.71 = "1.78:74.71"
23805      74.71-147.64 = "74.71:147.64"
23806      147.64-220.57 = "147.64:220.57"
23807      220.57-293.5 = "220.57:293.5"
23808      293.5-366.43 = "293.5:366.43"
23809      366.43-439.36 = "366.43:439.36"
23810      439.36-512.29 = "439.36:512.29"
23811      512.29-585.22 = "512.29:585.22"
23812      ;
MPRINT(EM_DIAGRAM):   value F4_ 1.78-74.71 = "1.78:74.71" 74.71-147.64 = "74.71:147.64" 147.64-220.57 = "147.64:220.57" 220.57-293.5 = "220.57:293.5" 293.5-366.43 = "293.5:366.43" 366.43-439.36 = "366.43:439.36" 439.36-512.29 = "439.36:512.29"
512.29-585.22 = "512.29:585.22" ;
NOTE: Format F4_ has been output.
23813      value F5_
23814      0-24.29625 = "0:24.296"
23815      24.29625-48.5925 = "24.296:48.593"
23816      48.5925-72.88875 = "48.593:72.889"
23817      72.88875-97.185 = "72.889:97.185"
23818      97.185-121.48125 = "97.185:121.48"
23819      121.48125-145.7775 = "121.48:145.78"
23820      145.7775-170.07375 = "145.78:170.07"
23821      170.07375-194.37 = "170.07:194.37"
23822      ;
MPRINT(EM_DIAGRAM):   value F5_ 0-24.29625 = "0:24.296" 24.29625-48.5925 = "24.296:48.593" 48.5925-72.88875 = "48.593:72.889" 72.88875-97.185 = "72.889:97.185" 97.185-121.48125 = "97.185:121.48" 121.48125-145.7775 = "121.48:145.78" 145.7775-170.07375 =
"145.78:170.07" 170.07375-194.37 = "170.07:194.37" ;
NOTE: Format F5_ has been output.
MPRINT(EM_DIAGRAM):   run;
23823      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23824      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
23825      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
23826      proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Clus_TRAIN order=formatted addnames;
23827      table newPremHealth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table newPremHealth * _SEGMENT_ / missing;
23828      table newPremHousehold * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table newPremHousehold * _SEGMENT_ / missing;
23829      table newPremLife * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table newPremLife * _SEGMENT_ / missing;
23830      table newPremMotor * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table newPremMotor * _SEGMENT_ / missing;
23831      table newPremWork * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table newPremWork * _SEGMENT_ / missing;
23832      format NEWPREMHEALTH F1_.;
MPRINT(EM_DIAGRAM):   format NEWPREMHEALTH F1_.;
23833      format NEWPREMHOUSEHOLD F2_.;
MPRINT(EM_DIAGRAM):   format NEWPREMHOUSEHOLD F2_.;
23834      format NEWPREMLIFE F3_.;
MPRINT(EM_DIAGRAM):   format NEWPREMLIFE F3_.;
23835      format NEWPREMMOTOR F4_.;
MPRINT(EM_DIAGRAM):   format NEWPREMMOTOR F4_.;
23836      format NEWPREMWORK F5_.;
MPRINT(EM_DIAGRAM):   format NEWPREMWORK F5_.;
23837      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10296 observations read from the data set A2Z_INSU.A2Z_INSURANCE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 10296 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.TRANS3_TRAIN.
NOTE: There were 10296 observations read from the data set EMWS1.DROP_TRAIN.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.25 seconds
 
NOTE: There were 9889 observations read from the data set EMWS1.FILTER2_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 135 observations and 16 variables.
NOTE: There were 9889 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.34 seconds
      cpu time            0.29 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23838      quit;
23839      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
23840      data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS1.Clus_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
23841      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
23842         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
23843         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
23844      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
23845      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
23846      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
23847      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
23848      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
23849      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
23850      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
23851      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
23852      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
23853      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
23854      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
23855      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
23856      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
23857      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
23858      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
23859      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
23860      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
23861      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
23862      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
23863      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
23864      end;
MPRINT(EM_DIAGRAM):   end;
23865      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
23866      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
23867      end;
MPRINT(EM_DIAGRAM):   end;
23868      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
23869      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
23870      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
23871      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
23872      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23873      proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS1.Clus_PROFILE noprint missing NWAY;
23874      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
23875      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
23876      output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
23877      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set WORK.CLUS_STATCOUNT has 10 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23878      proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_STATCOUNT NOTHREADS;
23879      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
23880      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set WORK.CLUS_STATCOUNT has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23881      data EMWS1.Clus_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(drop=SUM);
23882      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
23883      merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE WORK.Clus_STATCOUNT;
23884      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
23885      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
23886      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 10 observations read from the data set WORK.CLUS_STATCOUNT.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23887      proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE NOTHREADS;
23888      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
23889      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23890      proc sort data=WORK.M1YU63DG;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1YU63DG;
23891      by Name;
MPRINT(EM_DIAGRAM):   by Name;
23892      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M1YU63DG.
NOTE: The data set WORK.M1YU63DG has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23893      data EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE;
23894      merge EMWS1.Clus_PROFILE(in=_a) WORK.M1YU63DG(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_PROFILE(in=_a) WORK.M1YU63DG(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
23895      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
23896      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
23897      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
23898      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
23899      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: There were 6 observations read from the data set WORK.M1YU63DG.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23900      proc sort data=EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus_PROFILE;
23901      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
23902      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23903      data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
23904      set EMWS1.Clus_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_PROFILE;
23905      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
23906      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Ordered Values";
23907      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
23908      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
23909      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
23910      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set EMWS1.CLUS_PROFILE.
NOTE: The data set EMWS1.CLUS_PROFILE has 80 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23911      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
23912      var newPremHealth--newPremWork;
MPRINT(EM_DIAGRAM):   var newPremHealth--newPremWork;
23913      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
23914      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 5 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
23915      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
23916      * Clus: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus: DMVQ Variables;
23917      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23918      %macro dmvqvars;
23919          newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
23920      %mend ;
23921
23922
 
23923      data WORK.Clus_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus_temp;
23924      set EMWS1.Clus_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTMEAN;
23925      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
23926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTMEAN.
NOTE: The data set WORK.CLUS_TEMP has 2 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23927      proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus_temp out=EMWS1.Clus_DISTANCE method=l(2) shape=square;
23928      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
23929      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  newPremHealth newPremHousehold newPremLife newPremMotor newPremWork
MPRINT(EM_DIAGRAM):  );
23930      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS_DISTANCE has 2 observations and 3 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
23931      proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
23932      modify Clus_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus_DISTANCE;
23933      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
23934      run;
 
NOTE: MODIFY was successful for EMWS1.CLUS_DISTANCE.DATA.
23935      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
23936      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23937      * Clus: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus: Creating data set for Input Mean report;
23938      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23939      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
23940      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
23941      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
23942      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23943      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
23944      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
23945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23946      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
23947      var newPremHealth--newPremWork;
MPRINT(EM_DIAGRAM):   var newPremHealth--newPremWork;
23948      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 3 observations and 6 variables.
NOTE: The data set WORK.STAT has 10 observations and 6 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
23949      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
23950      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
23951      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 5 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
23952      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
23953      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
23954      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
23955      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
23956      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
23957      end;
MPRINT(EM_DIAGRAM):   end;
23958      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
23959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23960      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
23961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23962      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 5 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23963      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
23964      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
23965      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 3 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 15 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
23966      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
23967      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23968      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23969      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
23970      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
23971      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23972      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
23973      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
23974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 5 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
23975      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
23976      var newPremHealth--newPremWork;
MPRINT(EM_DIAGRAM):   var newPremHealth--newPremWork;
23977      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
23978      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
23979      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 5 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
23980      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
23981      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23982      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23983      data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_INPUTMEAN(rename=(NAME=VARIABLE));
23984      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
23985      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
23985    !  INPUT =
23986         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
23987         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
23988      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
23989      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
23990      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
23991      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
23992      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
23993      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TEMPVAR.
NOTE: There were 15 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 15 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
23994      proc sort data=EMWS1.Clus_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_INPUTMEAN;
23995      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
23996      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.CLUS_INPUTMEAN.
NOTE: The data set EMWS1.CLUS_INPUTMEAN has 15 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
23997      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23998      * Clus: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus: Determining the important variables;
23999      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
24000      %let _nobs = 0;
24001      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
24002      set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
24003      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
24004      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.CLUS_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24005      proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
24006      var newPremHealth--newPremWork;
MPRINT(EM_DIAGRAM):   var newPremHealth--newPremWork;
24007      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
24008      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
24009      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 5 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
24010      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
24011      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24012      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24013      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
24014      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24015      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24016      data vars;
MPRINT(EM_DIAGRAM):   data vars;
24017      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
24018      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24019      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
24020      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might cause unexpected results.
NOTE: There were 5 observations read from the data set WORK.TEMPVAR.
NOTE: There were 5 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24021      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
24022      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
24023      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24024      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24025      set vars;
MPRINT(EM_DIAGRAM):   set vars;
24026      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
24027      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
24028      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24029      *------------------------------------------------------------*;
24030      * mergeVarMeansandClusLabel;
24031      *------------------------------------------------------------*;
24032      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ newPremMotor newPremHealth newPremLife newPremWork newPremHousehold);
24033      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ newPremMotor newPremHealth newPremLife newPremWork newPremHousehold 8;
24034      set EMWS1.Clus_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus_OUTSTAT;
24035      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
24036      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24037      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
24038      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24039      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24040      data EMWS1.Clus_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_LABEL;
24041      merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus_LABEL(keep=_SEGMENT_ LABEL) temp;
24042      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24043      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS_LABEL.
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.CLUS_LABEL has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
