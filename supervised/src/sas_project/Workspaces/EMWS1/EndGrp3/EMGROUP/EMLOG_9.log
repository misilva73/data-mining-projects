*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:00:03 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:57 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:59:57 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1Z76P8A "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1Z76P8A new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMGROUP\EMLOG_9.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:57 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMGROUP\EMOUTPUT_9.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:57 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3030959    proc freq data=EMWS1.EndGrp3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp3_VariableSet noprint;
3030960    table ROLE*LEVEL/out=WORK.EndGrp3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp3META;
3030961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP3_VARIABLESET.
NOTE: The data set WORK.ENDGRP3META has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
3030962    proc print data=WORK.EndGrp3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp3META label noobs;
3030963    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3030964    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3030965    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3030966    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3030967    run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRP3META.
NOTE: The PROCEDURE PRINT printed page 2038.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3030968    title10;
MPRINT(EM_DIAGRAM):   title10;
3030969    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3030998    data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3030999    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3031000    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3031001       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3031002    set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3031003    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3031004    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3031005    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3031006    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3031007    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3031008    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3031009    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3031010    end;
MPRINT(EM_DIAGRAM):   end;
3031011    output;
MPRINT(EM_DIAGRAM):   output;
3031012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3031013    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3031014    proc print data=WORK.EndGrp3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp3_EVENT noobs label;
3031015    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3031016    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3031017    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3031018    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP3_EVENT.
NOTE: The PROCEDURE PRINT printed page 2039.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3031019    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3031020    proc print data = EMWS1.Tree3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree3_DepVar_DM noobs label;
3031021    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3031022    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3031023    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3031024    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3031025    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3031026    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2040.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3031027    title10;
MPRINT(EM_DIAGRAM):   title10;
3031028    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=303;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13848263254113;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1885;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86151736745886;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3031505    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3031506    * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
3031507    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3031508    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3031509    %let EMEXCEPTIONSTRING=;
3031510    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3031511    * TRAIN: EndGrp3;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp3;
3031512    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031513    %let EM_ACTION = TRAIN;
3031514    %let syscc = 0;
3031515    %macro main;
3031516       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3031517
3031518           filename temp catalog 'sashelp.emutil.endgp_train.source';
3031519           %include temp;
3031520           filename temp;
3031521
3031522           %train;
3031523
3031524       %end;
3031525       %else
3031526          %if %upcase(&EM_ACTION) = SCORE %then %do;
3031527
3031528           filename temp catalog 'sashelp.emutil.endgp_score.source';
3031529           %include temp;
3031530           filename temp;
3031531
3031532           %score;
3031533       %end;
3031534       %else
3031535       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3031536
3031537           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3031538           %include temp;
3031539           filename temp;
3031540
3031541           %postloop;
3031542
3031543       %end;
3031544
3031545       %doendm:
3031546    %mend main;
3031547
3031548    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3031549   +%macro copyModelDs(model=, key=);
3031550   +   %let modelDs  = &em_lib..&model._&key;
3031551   +   %let reportDs = &em_lib..&em_nodeid._&key;
3031552   +   %if %sysfunc(exist(&modelDs)) %then %do;
3031553   +       data &reportDs;
3031554   +          length ModelId $16;
3031555   +          retain ModelId "&model";
3031556   +          set &modelDs;
3031557   +       run;
3031558   +   %end;
3031559   +%mend copyModelDs;
3031560   +
3031561   +%macro traintarget(groupid=);
3031562   +   %em_getname(key=emoutfit, type=DATA);
3031563   +   %let targetname=;
3031564   +   data _null_;
3031565   +     set &em_lib..&groupid._&looptype;
3031566   +     where _LOOP_ = &EMLOOPNUMBER;
3031567   +     call symput('targetname', strip(_TARGET_));
3031568   +   run;
3031569   +   %let modelId =;
3031570   +   data _null_;
3031571   +      set &em_import_data_eminfo;
3031572   +      where key = 'MODEL' and TARGET = "&targetname";
3031573   +      call symput('modelId',   strip(data));
3031574   +   run;
3031575   +   %if "&modelId" ne "" %then %do;
3031576   +       %copyModelDs(model=&modelid, key=EMRANK);
3031577   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3031578   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3031579   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3031580   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3031581   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3031582   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3031583   +   %end;
3031584   +
3031585   +   %doendtgp:
3031586   +%mend;
3031587   +
3031588   +%macro trainboost(groupid=);
3031589   +
3031590   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3031591   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3031592   +
3031593   +   data _null_;
3031594   +      retain index 0;
3031595   +      set &boostinfoDs;
3031596   +      call symput('targetname', strip(_target_));
3031597   +   run;
3031598   +
3031599   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3031600   +       %let decmeta = ;
3031601   +       data _null_;
3031602   +          set &em_import_data_eminfo;
3031603   +          where (key='DECMETA' and TARGET="&targetname");
3031604   +          call symput('DECMETA', strip(data));
3031605   +       run;
3031606   +       %if "&decmeta" eq "" %then %do;
3031607   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3031608   +           %goto doendtb;
3031609   +       %end;
3031610   +
3031611   +       %let predictedVars=;
3031612   +       data _null_;
3031613   +          set &decmeta;
3031614   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3031615   +          else
3031616   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3031617   +          else
3031618   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3031619   +       run;
3031620   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3031621   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3031622   +       %end;
3031623   +   %end;
3031624   +
3031625   +   * ;
3031626   +   * ENDGROUP &NODEID : Boosting scoring ;
3031627   +   * ;
3031628   +   data &em_lib..&groupid._boostscore;
3031629   +      set &em_import_data;
3031630   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3031631   +      %if "%em_freq" ne "" %then %do ;
3031632   +          keep %em_freq ;
3031633   +      %end ;
3031634   +   run;
3031635   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3031636   +
3031637   +   %doendtb:
3031638   +
3031639   +%mend trainboost;
3031640   +
3031641   +%macro trainbag(groupid=);
3031642   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3031643   +   data _null_;
3031644   +      retain index 0;
3031645   +      set &baginfoDs;
3031646   +      call symput('targetname', strip(_target_));
3031647   +   run;
3031648   +
3031649   +   %let decmeta = ;
3031650   +   data _null_;
3031651   +       set &em_import_data_eminfo;
3031652   +       where (key='DECMETA' and TARGET="&targetname");
3031653   +       call symput('DECMETA', strip(data));
3031654   +   run;
3031655   +   %if "&decmeta" eq "" %then %do;
3031656   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3031657   +       %goto doendtg;
3031658   +   %end;
3031659   +
3031660   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3031661   +
3031662   +   %doendtg:
3031663   +%mend trainbag;
3031664   +
3031665   +%macro traingroup(groupid=);
3031666   +   %let targetNum = 0;
3031667   +
3031668   +   data _temp1;
3031669   +      set &em_lib..&groupid._eminfo;
3031670   +      where key='MODEL';
3031671   +   run;
3031672   +   data _temp2;
3031673   +      set &em_import_data_eminfo;
3031674   +      where key='MODEL';
3031675   +   run;
3031676   +   proc sort data=_temp1; by TARGET DATA;
3031677   +   proc sort data=_temp2; by TARGET DATA;
3031678   +   data _temp2;
3031679   +      merge _temp1(in=_a) _temp2(in=_b);
3031680   +      by TARGET DATA;
3031681   +      if ^_a and _b then output;
3031682   +   run;
3031683   +   data _null_;
3031684   +      retain index 0;
3031685   +      set _temp2 end=eof;
3031686   +      index +1;
3031687   +      where key ='MODEL';
3031688   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3031689   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3031690   +      if eof then
3031691   +         call symput('targetnum', strip(put(index, best.)));
3031692   +   run;
3031693   +   proc datasets lib=work nolist;
3031694   +      delete _temp1 _temp2;
3031695   +   run;
3031696   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3031697   +
3031698   +   %let modelString =;
3031699   +   %do i=1 %to &targetnum;
3031700   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3031701   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3031702   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3031703   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3031704   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3031705   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3031706   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3031707   +            %let modelString = &modelString &&modelid&i;
3031708   +       %end;
3031709   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3031710   +   %end;
3031711   +
3031712   +   %doendtgp:
3031713   +
3031714   +%mend traingroup;
3031715   +
3031716   +%macro getSize(data=, nobsvar=);
3031717   +
3031718   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3031719   +       %let dsid = %sysfunc(open(&data));
3031720   +       %if &dsid %then %do;
3031721   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3031722   +           %let dsid = %sysfunc(close(&dsid));
3031723   +       %end;
3031724   +   %end;
3031725   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3031726   +        proc sql;
3031727   +           reset noprint;
3031728   +           select count(*) into :&nobsvar from &data;
3031729   +        quit;
3031730   +   %end;
3031731   +
3031732   +%mend getsize;
3031733   +
3031734   +%macro train;
3031735   +
3031736   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3031737   +      %let EM_TOOLTYPE=UTILITY;
3031738   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3031739   +          proc delete data=&em_data_eminfo;
3031740   +          run;
3031741   +      %end;
3031742   +      %goto doendtr;
3031743   +   %end;
3031744   +
3031745   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3031746   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3031747   +       %goto doendtr;
3031748   +   %end;
3031749   +
3031750   +   %let xgroupid = ;
3031751   +   data _null_;
3031752   +      set &em_import_data_eminfo;
3031753   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3031754   +      call symput('XGROUPID',  strip(data));
3031755   +      call symput('LOOPTYPE', strip(key));
3031756   +   run;
3031757   +
3031758   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3031759   +       %let nDataObs=0;
3031760   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3031761   +
3031762   +       %let nStartObs=0;
3031763   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3031764   +
3031765   +       %if &nDataObs ne &nStartObs %then %do;
3031766   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3031767   +           %goto doendtr;
3031768   +       %end;
3031769   +
3031770   +       %trainboost(groupid=&xgroupid);
3031771   +   %end;
3031772   +   %else
3031773   +   %if "&looptype" eq "BAGINFO" %then %do;
3031774   +       %trainbag(groupid=&xgroupid);
3031775   +   %end;
3031776   +   %else
3031777   +   %if "&looptype" eq "GROUPINFO" %then %do;
3031778   +       %traingroup(groupid=&xgroupid);
3031779   +   %end;
3031780   +   %else
3031781   +   %if "&looptype" eq "TARGETINFO" %then %do;
3031782   +       %traintarget(groupid=&xgroupid);
3031783   +   %end;
3031784   +
3031785   +   data &em_data_eminfo;
3031786   +      length TARGET KEY $32  DATA $43;
3031787   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3031788   +   run;
3031789   +
3031790   +   %let EM_TOOLTYPE=MODEL;
3031791   +
3031792   +   %doendtr:
3031793   +
3031794   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp3_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE3_EMRANK.
NOTE: The data set EMWS1.ENDGRP3_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.TREE3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP3_EMSCOREDIST has 12 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp3_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp3";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031795    *------------------------------------------------------------*;
3031796    * End TRAIN: EndGrp3;
3031797    *------------------------------------------------------------*;
3031798
 
3031799    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3031800    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3031801    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031802    ;
MPRINT(EM_DIAGRAM):   ;
3031803    ;
MPRINT(EM_DIAGRAM):   ;
3031804    ;
MPRINT(EM_DIAGRAM):   ;
3031805    ;
MPRINT(EM_DIAGRAM):   ;
3031806    quit;
MPRINT(EM_DIAGRAM):   quit;
3031807    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031808    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3031809    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031810    /*; *"; *'; */
3031811    ;
MPRINT(EM_DIAGRAM):   ;
3031812    run;
MPRINT(EM_DIAGRAM):   run;
3031813    quit;
MPRINT(EM_DIAGRAM):   quit;
3031814    /* Reset EM Options */
3031815    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3031816    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3031817    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:00:00 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:00:00 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O01EDAT8 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O01EDAT8 new;
MPRINT(EM_DIAGRAM):   run;
3031919    %let EMEXCEPTIONSTRING=;
3031920    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3031921    * SCORE: EndGrp3;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp3;
3031922    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3031923    %let EM_ACTION = SCORE;
3031924    %let syscc = 0;
3031925    %macro main;
3031926       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3031927
3031928           filename temp catalog 'sashelp.emutil.endgp_train.source';
3031929           %include temp;
3031930           filename temp;
3031931
3031932           %train;
3031933
3031934       %end;
3031935       %else
3031936          %if %upcase(&EM_ACTION) = SCORE %then %do;
3031937
3031938           filename temp catalog 'sashelp.emutil.endgp_score.source';
3031939           %include temp;
3031940           filename temp;
3031941
3031942           %score;
3031943       %end;
3031944       %else
3031945       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3031946
3031947           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3031948           %include temp;
3031949           filename temp;
3031950
3031951           %postloop;
3031952
3031953       %end;
3031954
3031955       %doendm:
3031956    %mend main;
3031957
3031958    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3031959   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3031961   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3031962   +       data &out / view=&out;
3031963   +          set &data
3031965   +          %if "&prescore" = "Y" %then %do;
3031966   +              (obs=1)
3031967   +          %end;
3031969   +          ;
3031971   +          %inc &scoreref;
3031973   +          %if "&prescore" eq "Y" %then %do;
3031974   +              drop I_: R_:;
3031975   +          %end;
3031977   +       run;
3031978   +   %end;
3031980   +%mend scoretables;
3031982   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3031983   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3031984   +   data _null_;
3031985   +      retain index 0;
3031986   +      set &infoDs;
3031987   +      call symput('targetname', strip(_target_));
3031988   +      call symput('endloopnum', strip(_loop_));
3031989   +   run;
3031991   +   %let endgrp_decmeta=;
3031992   +   %let endgrp_decdata=;
3031994   +   data _null_;
3031995   +      set &em_import_data_eminfo;
3031996   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3031997   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3031998   +      else
3031999   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3032000   +      else call symput('MODELID', strip(data));
3032001   +   run;
3032003   +   %let headerString= Boosting;
3032004   +   %let prefixString= _BoostVar;
3032006   +   %if "&type" = "BAGINFO" %then %do;
3032007   +        %let headerString = Bagging;
3032008   +        %let prefixString= _BagVar;
3032009   +   %end;
3032011   +   %let targetType=;
3032012   +   %let predictedVars=;
3032013   +   data _null_;
3032014   +      retain index;
3032015   +      set &endgrp_decmeta end=eof;
3032016   +      length tempvar $200;
3032017   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3032018   +      else
3032019   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3032020   +      else
3032021   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3032022   +      else
3032023   +      if _TYPE_ = 'PREDICTED' then do;
3032024   +         index+1;
3032025   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3032026   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3032027   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3032028   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3032029   +      end;
3032030   +      if eof then
3032031   +         call symput('prednum', strip(put(index, best.)));
3032032   +   run;
3032034   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3032035   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3032037   +   filename loopflow "&em_user_loopflowcode";
3032038   +   filename looppub "&em_user_looppubcode";
3032040   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3032041   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3032043   +   %if "&emloopnumber" = "1" %then %do;
3032044   +       data _null_;
3032045   +          rc = fdelete('loopflow');
3032046   +          rc = fdelete('looppub');
3032047   +       run;
3032048   +       data _null_;
3032049   +          file loopflow;
3032050   +          put "&em_codebar;";
3032051   +          put "* &em_nodeid: ;" ;
3032052   +          put "* User: &sysuserid;";
3032053   +          put "* Date: &sysdate: &systime;";
3032054   +          put "&em_codebar ;";
3032055   +          put "* Ensemble Code;";
3032056   +          put "&em_codebar ;";
3032057   +          put "* &headerString: Loop=1;";
3032058   +          put "* Temporary Variables;";
3032059   +          %do i= 1 %to &prednum;
3032060   +              put "drop &&tempvars&i;";
3032061   +              put "&&tempvars&i = 0;";
3032062   +          %end;
3032063   +       run;
3032064   +       %em_copyfile(infref=loopflow, outfref=looppub);
3032065   +   %end;
3032067   +   %let j=&emloopnumber;
3032068   +   %do i = 1 %to &loopcodenum;
3032069   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3032070   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3032072   +       %if (&&loopnode&i eq &em_nodeid ) or
3032073   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3032074   +           data _null_;
3032075   +              file loopflow mod;
3032076   +              put "&em_codebar;";
3032077   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3032078   +              put "* User: &sysuserid;";
3032079   +              put "* Date: &sysdate: &systime;";
3032080   +              put "* &headerString: Loop=&j;";
3032081   +              put "&em_codebar;";
3032082   +           run;
3032083   +           data _null_;
3032084   +              file looppub mod;
3032085   +              put "&em_codebar;";
3032086   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3032087   +              put "* User: &sysuserid;";
3032088   +              put "* Date: &sysdate: &systime;";
3032089   +              put "* &headerString: Loop=&j;";
3032090   +              put "&em_codebar;";
3032091   +           run;
3032092   +       %end;
3032094   +       %if &&loopnode&i ne &em_nodeid %then %do;
3032095   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3032096   +               filename x catalog "&fsourceEntry";
3032097   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3032098   +               filename x;
3032100   +               filename y catalog "&psourceEntry";
3032101   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3032102   +               filename y;
3032103   +           %end;
3032104   +       %end;
3032105   +       %else %do;
3032106   +           %if "&j" ne "1" %then %do;
3032107   +               %let weight = %eval(&j-1);
3032108   +               data _null_;
3032109   +                  file loopflow mod;
3032110   +                  put "&em_codebar;";
3032111   +                  %if "&j" ne "&endloopnum" %then %do;
3032112   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3032113   +                  %end;
3032114   +                  %else %do;
3032115   +                      put "* &headerString: accumulate final probabilities;";
3032116   +                  %end;
3032117   +                  put "&em_codebar;";
3032118   +                  %do k=1 %to &prednum;
3032119   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3032120   +                  %end;
3032121   +               run;
3032122   +               data _null_;
3032123   +                  file looppub mod;
3032124   +                  put "&em_codebar;";
3032125   +                  %if "&j" ne "&endloopnum" %then %do;
3032126   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3032127   +                  %end;
3032128   +                  %else %do;
3032129   +                      put "* &headerString: accumulate final probabilities;";
3032130   +                  %end;
3032131   +                  %do k=1 %to &prednum;
3032132   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3032133   +                  %end;
3032134   +               run;
3032135   +           %end;
3032136   +           %if "&j" ne "&endloopnum" %then %do;
3032137   +               data _null_;
3032138   +                  file loopflow mod;
3032139   +                  put "&em_codebar;";
3032140   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3032141   +                  put "&em_codebar;";
3032142   +               %do k=1 %to &prednum;
3032143   +                  put "&&tempvars&k = &&predvars&k;";
3032144   +               %end;
3032145   +               run;
3032146   +               data _null_;
3032147   +                  file looppub mod;
3032148   +                  put "&em_codebar;";
3032149   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3032150   +                  put "&em_codebar;";
3032151   +               %do k=1 %to &prednum;
3032152   +                   put "&&tempvars&k = &&predvars&k;";
3032153   +               %end;
3032154   +               run;
3032155   +           %end;
3032157   +       %end;
3032158   +   %end;
3032160   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3032161   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3032163   +   filename loopflow;
3032164   +   filename looppub;
3032165   +   filename empub;
3032167   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3032168   +   %let gpTrain=;
3032169   +   %let gpValidate=;
3032170   +   %let gpTest=;
3032172   +   data _null_;
3032173   +      set &groupImportDs;
3032174   +      select(upcase(port));
3032175   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3032176   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3032177   +          when('TEST')     call symput('gpTest',     strip(dataset));
3032178   +       otherwise;
3032179   +      end;
3032180   +   run;
3032182   +   %if "&gpTrain" ne "" %then %do;
3032184   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3032186   +       %if &targetType ne INTERVAL %then %do;
3032187   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3032188   +       %end;
3032190   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3032192   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3032194   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3032195   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3032197   +       filename _decflow "&decflow";
3032198   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3032199   +       filename _decflow;
3032201   +   %end;
3032203   +   %if "&gpTrain" ne "" %then
3032204   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3032205   +   %if "&gpValidate" ne "" %then
3032206   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3032207   +   %if "&gpTest" ne "" %then
3032208   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3032210   +   filename emflow;
3032212   +%mend boostbagcode;
3032214   +%macro score;
3032216   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3032217   +   %inc _dec;
3032218   +   filename _dec;
3032220   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3032222   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3032223   +       %let emexceptionstring = nomodeltarget;
3032224   +       %goto doendpl;
3032225   +   %end;
3032227   +   %LET GROUPID=;
3032228   +   %let LOOPTYPE=;
3032229   +   data _null_;
3032230   +      set &em_import_data_eminfo;
3032231   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3032232   +      call symput('GROUPID',   strip(data));
3032233   +      call symput('LOOPTYPE', strip(key));
3032234   +   run;
3032236   +   %em_getname(key=PATH, type=DATA);
3032238   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3032239   +   %include temp;
3032240   +   filename temp;
3032242   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3032244   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3032245   +       %let deleteString = &em_nodeid._path;
3032246   +       proc datasets lib=&em_lib nolist;
3032247   +          delete &deleteString;
3032248   +       run;
3032249   +       quit;
3032250   +   %end;
3032252   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3032254   +   data score_path;
3032255   +      retain LOOPID &emloopnumber;
3032256   +      set score_path;
3032257   +   run;
3032259   +   proc append base=&em_user_path  data=score_path;
3032260   +   run;
3032262   +   %let EnsembleIndex=0;
3032263   +   data _null_;
3032264   +      retain index 0 ensembleIndex 0;
3032265   +      set score_Path end=eof;
3032266   +      if nodelabel = "&groupid" or index then do;
3032267   +         index + 1;
3032268   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3032269   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3032270   +      end;
3032271   +      if component='Ensemble' then ensembleIndex = index;
3032272   +      if eof then do;
3032273   +         call symput('loopcodenum', strip(put(index, best.)));
3032274   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3032275   +      end;
3032276   +   run;
3032278   +   proc datasets lib=work nolist;
3032279   +      delete score_Path;
3032280   +   run;
3032281   +   quit;
3032283   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3032284   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3032286   +   %doendpl:
3032288   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3032289   +/*
3032290   +       MACRO: EM_DECIDECODE
3032291   +
3032292   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3032293   +       SUPPORT: Taiyeong Lee
3032294   +
3032295   +       HISTORY: 01OCT04 Initial code
3032296   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3032297   +                to add the corresponding decision code
3032298   +
3032299   +*/
3032300   +
3032301   +
3032302   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3032303   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3032304   +
3032305   +    %do;
3032306   +    %let m_data      = &data;
3032307   +    %let m_decdata   = &decdata;
3032308   +    %let m_decmeta   = &decmeta;
3032309   +    %let m_noresfile = &noresfile;
3032310   +    %let m_resfile   = &resfile;
3032311   +    dm "afa c=sashelp.emutil.decidecode.scl";
3032312   +  %end;
3032313   +%mend EM_DECIDECODE;
3032314   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3032315   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3032316   +   proc display c=sashelp.emcore.pathscorecode.scl;
3032317   +   run;
3032318   +%mend EM_GETTRAINPATH;
3032319   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3032320    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3032321    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3032322    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3032323    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3032324    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3032325    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3032326    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3032327    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032328    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032329    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032330    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032331    output;
MPRINT(EM_GETTRAINPATH):   output;
3032332    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3032333    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3032334    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3032335    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3032336    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3032337    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032338    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032339    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032340    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032341    output;
MPRINT(EM_GETTRAINPATH):   output;
3032342    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3032343    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3032344    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3032345    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3032346    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3032347    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032348    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032349    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032350    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032351    output;
MPRINT(EM_GETTRAINPATH):   output;
3032352    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3032353    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3032354    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3032355    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3032356    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3032357    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032358    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032359    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032360    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032361    output;
MPRINT(EM_GETTRAINPATH):   output;
3032362    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3032363    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3032364    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3032365    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3032366    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3032367    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032368    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032369    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032370    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032371    output;
MPRINT(EM_GETTRAINPATH):   output;
3032372    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3032373    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3032374    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3032375    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3032376    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3032377    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032378    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032379    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032380    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032381    output;
MPRINT(EM_GETTRAINPATH):   output;
3032382    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3032383    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3032384    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3032385    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3032386    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3032387    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032388    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032389    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032390    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032391    output;
MPRINT(EM_GETTRAINPATH):   output;
3032392    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3032393    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3032394    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3032395    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3032396    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3032397    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032398    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032399    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032400    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032401    output;
MPRINT(EM_GETTRAINPATH):   output;
3032402    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3032403    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3032404    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3032405    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3032406    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3032407    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032408    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032409    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032410    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032411    output;
MPRINT(EM_GETTRAINPATH):   output;
3032412    nodelabel="Grp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp3";
3032413    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3032414    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3032415    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3032416    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3032417    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032418    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032419    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032420    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032421    output;
MPRINT(EM_GETTRAINPATH):   output;
3032422    nodelabel="Tree3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree3";
3032423    parent="Grp3";
MPRINT(EM_GETTRAINPATH):   parent="Grp3";
3032424    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3032425    component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
3032426    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3032427    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032428    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032429    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032430    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032431    output;
MPRINT(EM_GETTRAINPATH):   output;
3032432    nodelabel="EndGrp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp3";
3032433    parent="Tree3";
MPRINT(EM_GETTRAINPATH):   parent="Tree3";
3032434    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3032435    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3032436    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3032437    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3032438    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3032439    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3032440    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3032441    output;
MPRINT(EM_GETTRAINPATH):   output;
3032442    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 9;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp3_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP3_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP3_PATH has 108 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp3" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3032443    *------------------------------------------------------------*;
3032444    * End SCORE: EndGrp3;
3032445    *------------------------------------------------------------*;
3032446
 
3032447    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3032448    * EndGrp3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp3: Scoring DATA data;
3032449    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3032450    data EMWS1.EndGrp3_TRAIN
3032451    / view=EMWS1.EndGrp3_TRAIN
3032452    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_TRAIN / view=EMWS1.EndGrp3_TRAIN ;
3032453    set EMWS1.Tree3_TRAIN
3032454    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_TRAIN ;
3032455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3032456    quit;
 
3032458    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3032459    * EndGrp3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp3: Computing metadata for TRAIN data;
3032460    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp3_TRAIN out=WORK.M28T3A70 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28T3A70;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M28T3A70(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28T3A70;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M28T3A70;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2C8_SYN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MWG3ZB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   set WORK.M2C8_SYN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3032806    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3032807    set EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO;
3032808    where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3032809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMINFO.
      WHERE (DATA='EndGrp3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3032810    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMINFO;
3032811    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3032812    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3032813    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3032817    run;
3032818    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
3032819    set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
3032820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3032821    proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
3032822    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3032823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3032824    proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3032825    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3032826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3032827    proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3032828    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3032829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3032830    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
3032831    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3032832    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3032833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3032834    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3032835    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3032836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3032837    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:00:02 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:00:02 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O13U0VNG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O13U0VNG new;
MPRINT(EM_DIAGRAM):   run;
3032861    data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT;
3032862    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3032863    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3032864    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3032865    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3032866    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3032867    proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
3032868    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3032869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3032870    %let _EMwarndup = 0;
3032871    %let _EMtargetdup =;
3032872    %let _EMASEtargetdup =;
3032873    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3032874    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3032875    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3032876    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3032877    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3032878    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3032879    end;
MPRINT(EM_DIAGRAM):   end;
3032880    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3032881    proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
3032882    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3032883    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3032884    proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3032885    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3032886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3032887    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3032888    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3032889    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3032890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3032891    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3032892    set EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_CMeta_TRAIN;
3032893    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3032894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3032895    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3032896    set EMWS1.EndGrp3_TRAIN(keep=
3032897    F_DepVar
3032898    I_DepVar
3032899    P_DepVar0
3032900    P_DepVar1
3032901    Q_DepVar0
3032902    Q_DepVar1
3032903    R_DepVar0
3032904    R_DepVar1
3032905    U_DepVar
3032906    _WARN_
3032907    DepVar
3032908    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3032909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2188 observations read from the data set EMWS1.GRP3_TRAIN.
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2188 observations read from the data set EMWS1.TREE3_TRAIN.
NOTE: There were 2188 observations read from the data set EMWS1.ENDGRP3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2188 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3037096    %let _cn = %sysfunc(getoption(CENTER));
3037097    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3037098    proc print data=EMWS1.EndGrp3_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMREPORTFIT noobs label;
3037099    var STAT LABEL TRAIN
3037100    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3037101    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3037102    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3037103    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3037104    run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2041.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3037105    title10;
MPRINT(EM_DIAGRAM):   title10;
3037106    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3037107    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION nothreads;
3037108    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3037109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3037110    %let _cn = %sysfunc(getoption(CENTER));
3037111    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3037112    proc print data=EMWS1.EndGrp3_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMCLASSIFICATION noobs label;
3037113    var from into pct_row pct_col count percent
3037114    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3037115    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3037116    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3037117    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3037118    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3037119    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3037120    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3037121    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3037122    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3037123    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3037124    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3037125    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2042.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3037126    title9;
MPRINT(EM_DIAGRAM):   title9;
3037127    title10;
MPRINT(EM_DIAGRAM):   title10;
3037128    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3037129    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3037130    modify EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3037131    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3037132    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3037133    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMRANK.DATA.
3037134    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3037135    %let _cn = %sysfunc(getoption(CENTER));
3037136    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3037137    proc print data=EMWS1.EndGrp3_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMRANK label noobs;
3037138    var
3037139    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3037140    by
3037141    notsorted DATAROLE
3037142    notsorted TARGET
3037143    notsorted TARGETLABEL
3037144    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3037145    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3037146    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3037147    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2043.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3037148    title10;
MPRINT(EM_DIAGRAM):   title10;
3037149    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3037150    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3037151    modify EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3037152    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3037153    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3037154    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMSCOREDIST.DATA.
3037155    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3037156    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3037157    set EMWS1.Grp3_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp3_GROUPINFO;
3037158    where _LOOP_=9;
MPRINT(EM_DIAGRAM):   where _LOOP_=9;
3037159    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3037160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP3_GROUPINFO.
      WHERE _LOOP_=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3037161    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3037162    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3037163    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3037164    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3037165    set EMWS1.EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK;
3037166    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
3037167    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
3037168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3037169    data EMWS1.EndGrp3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMRANK_LOOP;
3037170    set EMWS1.EndGrp3_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK_LOOP temp;
3037171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.ENDGRP3_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMRANK_LOOP has 180 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3037172    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3037173    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3037174    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3037175    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3037176    set EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST;
3037177    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
3037178    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
3037179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 12 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3037180    data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
3037181    set EMWS1.EndGrp3_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST_LOOP temp;
3037182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 108 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP.
NOTE: There were 12 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP has 120 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3037183    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3037184    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3037185    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3037186    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3037187    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3037188    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
3037189    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
3037190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3037191    data EMWS1.EndGrp3_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT_LOOP;
3037192    set EMWS1.EndGrp3_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT_LOOP temp;
3037193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT_LOOP has 9 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3037194    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3037195    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3037196    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3037197    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3037198    set EMWS1.EndGrp3_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT;
3037199    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
3037200    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
3037201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3037202    data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
3037203    set EMWS1.EndGrp3_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT_LOOP temp;
3037204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP has 72 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3037205    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3037206    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3037207    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3037208    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3037209    set EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION;
3037210    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
3037211    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
3037212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3037213    data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
3037214    set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP temp;
3037215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP has 36 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
