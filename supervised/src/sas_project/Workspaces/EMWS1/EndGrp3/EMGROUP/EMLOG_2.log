*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:33:00 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:32:55 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:32:55 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GUH905 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GUH905 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMGROUP\EMLOG_2.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:32:55 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMGROUP\EMOUTPUT_2.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:32:55 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
693614     proc freq data=EMWS1.EndGrp3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp3_VariableSet noprint;
693615     table ROLE*LEVEL/out=WORK.EndGrp3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp3META;
693616     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP3_VARIABLESET.
NOTE: The data set WORK.ENDGRP3META has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
693617     proc print data=WORK.EndGrp3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp3META label noobs;
693618     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
693619     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
693620     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
693621     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
693622     run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRP3META.
NOTE: The PROCEDURE PRINT printed page 449.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
693623     title10;
MPRINT(EM_DIAGRAM):   title10;
693624     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
693653     data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
693654     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
693655     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
693656        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
693657     set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
693658     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
693659     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
693660     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
693661     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
693662     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
693663     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
693664     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
693665     end;
MPRINT(EM_DIAGRAM):   end;
693666     output;
MPRINT(EM_DIAGRAM):   output;
693667     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
693668     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
693669     proc print data=WORK.EndGrp3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp3_EVENT noobs label;
693670     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
693671     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
693672     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
693673     run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP3_EVENT.
NOTE: The PROCEDURE PRINT printed page 450.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
693674     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
693675     proc print data = EMWS1.Tree3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree3_DepVar_DM noobs label;
693676     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
693677     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
693678     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
693679     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
693680     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
693681     run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 451.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
693682     title10;
MPRINT(EM_DIAGRAM):   title10;
693683     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=304;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13706041478809;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1914;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.8629395852119;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
694162     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
694163     * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
694164     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
694165     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
694166     %let EMEXCEPTIONSTRING=;
694167     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
694168     * TRAIN: EndGrp3;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp3;
694169     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694170     %let EM_ACTION = TRAIN;
694171     %let syscc = 0;
694172     %macro main;
694173        %if %upcase(&EM_ACTION) = TRAIN %then %do;
694174
694175            filename temp catalog 'sashelp.emutil.endgp_train.source';
694176            %include temp;
694177            filename temp;
694178
694179            %train;
694180
694181        %end;
694182        %else
694183           %if %upcase(&EM_ACTION) = SCORE %then %do;
694184
694185            filename temp catalog 'sashelp.emutil.endgp_score.source';
694186            %include temp;
694187            filename temp;
694188
694189            %score;
694190        %end;
694191        %else
694192        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
694193
694194            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
694195            %include temp;
694196            filename temp;
694197
694198            %postloop;
694199
694200        %end;
694201
694202        %doendm:
694203     %mend main;
694204
694205     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
694206    +%macro copyModelDs(model=, key=);
694207    +   %let modelDs  = &em_lib..&model._&key;
694208    +   %let reportDs = &em_lib..&em_nodeid._&key;
694209    +   %if %sysfunc(exist(&modelDs)) %then %do;
694210    +       data &reportDs;
694211    +          length ModelId $16;
694212    +          retain ModelId "&model";
694213    +          set &modelDs;
694214    +       run;
694215    +   %end;
694216    +%mend copyModelDs;
694217    +
694218    +%macro traintarget(groupid=);
694219    +   %em_getname(key=emoutfit, type=DATA);
694220    +   %let targetname=;
694221    +   data _null_;
694222    +     set &em_lib..&groupid._&looptype;
694223    +     where _LOOP_ = &EMLOOPNUMBER;
694224    +     call symput('targetname', strip(_TARGET_));
694225    +   run;
694226    +   %let modelId =;
694227    +   data _null_;
694228    +      set &em_import_data_eminfo;
694229    +      where key = 'MODEL' and TARGET = "&targetname";
694230    +      call symput('modelId',   strip(data));
694231    +   run;
694232    +   %if "&modelId" ne "" %then %do;
694233    +       %copyModelDs(model=&modelid, key=EMRANK);
694234    +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
694235    +       %copyModelDs(model=&modelid, key=EMOUTFIT);
694236    +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
694237    +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
694238    +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
694239    +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
694240    +   %end;
694241    +
694242    +   %doendtgp:
694243    +%mend;
694244    +
694245    +%macro trainboost(groupid=);
694246    +
694247    +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
694248    +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
694249    +
694250    +   data _null_;
694251    +      retain index 0;
694252    +      set &boostinfoDs;
694253    +      call symput('targetname', strip(_target_));
694254    +   run;
694255    +
694256    +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
694257    +       %let decmeta = ;
694258    +       data _null_;
694259    +          set &em_import_data_eminfo;
694260    +          where (key='DECMETA' and TARGET="&targetname");
694261    +          call symput('DECMETA', strip(data));
694262    +       run;
694263    +       %if "&decmeta" eq "" %then %do;
694264    +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
694265    +           %goto doendtb;
694266    +       %end;
694267    +
694268    +       %let predictedVars=;
694269    +       data _null_;
694270    +          set &decmeta;
694271    +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
694272    +          else
694273    +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
694274    +          else
694275    +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
694276    +       run;
694277    +       %if %index(&EM_DEBUG, _ALL_) %then %do;
694278    +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
694279    +       %end;
694280    +   %end;
694281    +
694282    +   * ;
694283    +   * ENDGROUP &NODEID : Boosting scoring ;
694284    +   * ;
694285    +   data &em_lib..&groupid._boostscore;
694286    +      set &em_import_data;
694287    +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
694288    +      %if "%em_freq" ne "" %then %do ;
694289    +          keep %em_freq ;
694290    +      %end ;
694291    +   run;
694292    +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
694293    +
694294    +   %doendtb:
694295    +
694296    +%mend trainboost;
694297    +
694298    +%macro trainbag(groupid=);
694299    +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
694300    +   data _null_;
694301    +      retain index 0;
694302    +      set &baginfoDs;
694303    +      call symput('targetname', strip(_target_));
694304    +   run;
694305    +
694306    +   %let decmeta = ;
694307    +   data _null_;
694308    +       set &em_import_data_eminfo;
694309    +       where (key='DECMETA' and TARGET="&targetname");
694310    +       call symput('DECMETA', strip(data));
694311    +   run;
694312    +   %if "&decmeta" eq "" %then %do;
694313    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
694314    +       %goto doendtg;
694315    +   %end;
694316    +
694317    +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
694318    +
694319    +   %doendtg:
694320    +%mend trainbag;
694321    +
694322    +%macro traingroup(groupid=);
694323    +   %let targetNum = 0;
694324    +
694325    +   data _temp1;
694326    +      set &em_lib..&groupid._eminfo;
694327    +      where key='MODEL';
694328    +   run;
694329    +   data _temp2;
694330    +      set &em_import_data_eminfo;
694331    +      where key='MODEL';
694332    +   run;
694333    +   proc sort data=_temp1; by TARGET DATA;
694334    +   proc sort data=_temp2; by TARGET DATA;
694335    +   data _temp2;
694336    +      merge _temp1(in=_a) _temp2(in=_b);
694337    +      by TARGET DATA;
694338    +      if ^_a and _b then output;
694339    +   run;
694340    +   data _null_;
694341    +      retain index 0;
694342    +      set _temp2 end=eof;
694343    +      index +1;
694344    +      where key ='MODEL';
694345    +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
694346    +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
694347    +      if eof then
694348    +         call symput('targetnum', strip(put(index, best.)));
694349    +   run;
694350    +   proc datasets lib=work nolist;
694351    +      delete _temp1 _temp2;
694352    +   run;
694353    +   %if "&targetNum" eq "0" %then %goto doendtgp;
694354    +
694355    +   %let modelString =;
694356    +   %do i=1 %to &targetnum;
694357    +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
694358    +            %copyModelDs(model=&&modelid&i, key=EMRANK);
694359    +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
694360    +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
694361    +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
694362    +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
694363    +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
694364    +            %let modelString = &modelString &&modelid&i;
694365    +       %end;
694366    +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
694367    +   %end;
694368    +
694369    +   %doendtgp:
694370    +
694371    +%mend traingroup;
694372    +
694373    +%macro getSize(data=, nobsvar=);
694374    +
694375    +   %if %sysfunc(exist(&data, DATA)) %then %do;
694376    +       %let dsid = %sysfunc(open(&data));
694377    +       %if &dsid %then %do;
694378    +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
694379    +           %let dsid = %sysfunc(close(&dsid));
694380    +       %end;
694381    +   %end;
694382    +    %if %sysfunc(exist(&data, VIEW)) %then %do;
694383    +        proc sql;
694384    +           reset noprint;
694385    +           select count(*) into :&nobsvar from &data;
694386    +        quit;
694387    +   %end;
694388    +
694389    +%mend getsize;
694390    +
694391    +%macro train;
694392    +
694393    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
694394    +      %let EM_TOOLTYPE=UTILITY;
694395    +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
694396    +          proc delete data=&em_data_eminfo;
694397    +          run;
694398    +      %end;
694399    +      %goto doendtr;
694400    +   %end;
694401    +
694402    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
694403    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
694404    +       %goto doendtr;
694405    +   %end;
694406    +
694407    +   %let xgroupid = ;
694408    +   data _null_;
694409    +      set &em_import_data_eminfo;
694410    +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
694411    +      call symput('XGROUPID',  strip(data));
694412    +      call symput('LOOPTYPE', strip(key));
694413    +   run;
694414    +
694415    +   %if "&looptype" eq "BOOSTINFO" %then %do;
694416    +       %let nDataObs=0;
694417    +       %getSize(data=&em_import_data, nobsvar=nDataObs);
694418    +
694419    +       %let nStartObs=0;
694420    +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
694421    +
694422    +       %if &nDataObs ne &nStartObs %then %do;
694423    +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
694424    +           %goto doendtr;
694425    +       %end;
694426    +
694427    +       %trainboost(groupid=&xgroupid);
694428    +   %end;
694429    +   %else
694430    +   %if "&looptype" eq "BAGINFO" %then %do;
694431    +       %trainbag(groupid=&xgroupid);
694432    +   %end;
694433    +   %else
694434    +   %if "&looptype" eq "GROUPINFO" %then %do;
694435    +       %traingroup(groupid=&xgroupid);
694436    +   %end;
694437    +   %else
694438    +   %if "&looptype" eq "TARGETINFO" %then %do;
694439    +       %traintarget(groupid=&xgroupid);
694440    +   %end;
694441    +
694442    +   data &em_data_eminfo;
694443    +      length TARGET KEY $32  DATA $43;
694444    +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
694445    +   run;
694446    +
694447    +   %let EM_TOOLTYPE=MODEL;
694448    +
694449    +   %doendtr:
694450    +
694451    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp3_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE3_EMRANK.
NOTE: The data set EMWS1.ENDGRP3_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.TREE3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP3_EMSCOREDIST has 15 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree3";
MPRINT(COPYMODELDS):   set EMWS1.Tree3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp3_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp3";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694452     *------------------------------------------------------------*;
694453     * End TRAIN: EndGrp3;
694454     *------------------------------------------------------------*;
694455
 
694456     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
694457     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
694458     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694459     ;
MPRINT(EM_DIAGRAM):   ;
694460     ;
MPRINT(EM_DIAGRAM):   ;
694461     ;
MPRINT(EM_DIAGRAM):   ;
694462     ;
MPRINT(EM_DIAGRAM):   ;
694463     quit;
MPRINT(EM_DIAGRAM):   quit;
694464     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694465     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
694466     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694467     /*; *"; *'; */
694468     ;
MPRINT(EM_DIAGRAM):   ;
694469     run;
MPRINT(EM_DIAGRAM):   run;
694470     quit;
MPRINT(EM_DIAGRAM):   quit;
694471     /* Reset EM Options */
694472     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
694473     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
694474     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:32:57 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:32:57 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O174ZVKU "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O174ZVKU new;
MPRINT(EM_DIAGRAM):   run;
694576     %let EMEXCEPTIONSTRING=;
694577     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
694578     * SCORE: EndGrp3;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp3;
694579     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
694580     %let EM_ACTION = SCORE;
694581     %let syscc = 0;
694582     %macro main;
694583        %if %upcase(&EM_ACTION) = TRAIN %then %do;
694584
694585            filename temp catalog 'sashelp.emutil.endgp_train.source';
694586            %include temp;
694587            filename temp;
694588
694589            %train;
694590
694591        %end;
694592        %else
694593           %if %upcase(&EM_ACTION) = SCORE %then %do;
694594
694595            filename temp catalog 'sashelp.emutil.endgp_score.source';
694596            %include temp;
694597            filename temp;
694598
694599            %score;
694600        %end;
694601        %else
694602        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
694603
694604            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
694605            %include temp;
694606            filename temp;
694607
694608            %postloop;
694609
694610        %end;
694611
694612        %doendm:
694613     %mend main;
694614
694615     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
694616    +%macro scoreTables(data=, out=, scoreref=, prescore=);
694618    +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
694619    +       data &out / view=&out;
694620    +          set &data
694622    +          %if "&prescore" = "Y" %then %do;
694623    +              (obs=1)
694624    +          %end;
694626    +          ;
694628    +          %inc &scoreref;
694630    +          %if "&prescore" eq "Y" %then %do;
694631    +              drop I_: R_:;
694632    +          %end;
694634    +       run;
694635    +   %end;
694637    +%mend scoretables;
694639    +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
694640    +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
694641    +   data _null_;
694642    +      retain index 0;
694643    +      set &infoDs;
694644    +      call symput('targetname', strip(_target_));
694645    +      call symput('endloopnum', strip(_loop_));
694646    +   run;
694648    +   %let endgrp_decmeta=;
694649    +   %let endgrp_decdata=;
694651    +   data _null_;
694652    +      set &em_import_data_eminfo;
694653    +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
694654    +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
694655    +      else
694656    +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
694657    +      else call symput('MODELID', strip(data));
694658    +   run;
694660    +   %let headerString= Boosting;
694661    +   %let prefixString= _BoostVar;
694663    +   %if "&type" = "BAGINFO" %then %do;
694664    +        %let headerString = Bagging;
694665    +        %let prefixString= _BagVar;
694666    +   %end;
694668    +   %let targetType=;
694669    +   %let predictedVars=;
694670    +   data _null_;
694671    +      retain index;
694672    +      set &endgrp_decmeta end=eof;
694673    +      length tempvar $200;
694674    +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
694675    +      else
694676    +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
694677    +      else
694678    +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
694679    +      else
694680    +      if _TYPE_ = 'PREDICTED' then do;
694681    +         index+1;
694682    +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
694683    +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
694684    +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
694685    +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
694686    +      end;
694687    +      if eof then
694688    +         call symput('prednum', strip(put(index, best.)));
694689    +   run;
694691    +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
694692    +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
694694    +   filename loopflow "&em_user_loopflowcode";
694695    +   filename looppub "&em_user_looppubcode";
694697    +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
694698    +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
694700    +   %if "&emloopnumber" = "1" %then %do;
694701    +       data _null_;
694702    +          rc = fdelete('loopflow');
694703    +          rc = fdelete('looppub');
694704    +       run;
694705    +       data _null_;
694706    +          file loopflow;
694707    +          put "&em_codebar;";
694708    +          put "* &em_nodeid: ;" ;
694709    +          put "* User: &sysuserid;";
694710    +          put "* Date: &sysdate: &systime;";
694711    +          put "&em_codebar ;";
694712    +          put "* Ensemble Code;";
694713    +          put "&em_codebar ;";
694714    +          put "* &headerString: Loop=1;";
694715    +          put "* Temporary Variables;";
694716    +          %do i= 1 %to &prednum;
694717    +              put "drop &&tempvars&i;";
694718    +              put "&&tempvars&i = 0;";
694719    +          %end;
694720    +       run;
694721    +       %em_copyfile(infref=loopflow, outfref=looppub);
694722    +   %end;
694724    +   %let j=&emloopnumber;
694725    +   %do i = 1 %to &loopcodenum;
694726    +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
694727    +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
694729    +       %if (&&loopnode&i eq &em_nodeid ) or
694730    +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
694731    +           data _null_;
694732    +              file loopflow mod;
694733    +              put "&em_codebar;";
694734    +              put "* &&loopnode&i: &&loopdesc&i;" ;
694735    +              put "* User: &sysuserid;";
694736    +              put "* Date: &sysdate: &systime;";
694737    +              put "* &headerString: Loop=&j;";
694738    +              put "&em_codebar;";
694739    +           run;
694740    +           data _null_;
694741    +              file looppub mod;
694742    +              put "&em_codebar;";
694743    +              put "* &&loopnode&i: &&loopdesc&i;" ;
694744    +              put "* User: &sysuserid;";
694745    +              put "* Date: &sysdate: &systime;";
694746    +              put "* &headerString: Loop=&j;";
694747    +              put "&em_codebar;";
694748    +           run;
694749    +       %end;
694751    +       %if &&loopnode&i ne &em_nodeid %then %do;
694752    +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
694753    +               filename x catalog "&fsourceEntry";
694754    +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
694755    +               filename x;
694757    +               filename y catalog "&psourceEntry";
694758    +               %em_copyfile(infref=y, outfref=looppub, append=Y);
694759    +               filename y;
694760    +           %end;
694761    +       %end;
694762    +       %else %do;
694763    +           %if "&j" ne "1" %then %do;
694764    +               %let weight = %eval(&j-1);
694765    +               data _null_;
694766    +                  file loopflow mod;
694767    +                  put "&em_codebar;";
694768    +                  %if "&j" ne "&endloopnum" %then %do;
694769    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
694770    +                  %end;
694771    +                  %else %do;
694772    +                      put "* &headerString: accumulate final probabilities;";
694773    +                  %end;
694774    +                  put "&em_codebar;";
694775    +                  %do k=1 %to &prednum;
694776    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
694777    +                  %end;
694778    +               run;
694779    +               data _null_;
694780    +                  file looppub mod;
694781    +                  put "&em_codebar;";
694782    +                  %if "&j" ne "&endloopnum" %then %do;
694783    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
694784    +                  %end;
694785    +                  %else %do;
694786    +                      put "* &headerString: accumulate final probabilities;";
694787    +                  %end;
694788    +                  %do k=1 %to &prednum;
694789    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
694790    +                  %end;
694791    +               run;
694792    +           %end;
694793    +           %if "&j" ne "&endloopnum" %then %do;
694794    +               data _null_;
694795    +                  file loopflow mod;
694796    +                  put "&em_codebar;";
694797    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
694798    +                  put "&em_codebar;";
694799    +               %do k=1 %to &prednum;
694800    +                  put "&&tempvars&k = &&predvars&k;";
694801    +               %end;
694802    +               run;
694803    +               data _null_;
694804    +                  file looppub mod;
694805    +                  put "&em_codebar;";
694806    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
694807    +                  put "&em_codebar;";
694808    +               %do k=1 %to &prednum;
694809    +                   put "&&tempvars&k = &&predvars&k;";
694810    +               %end;
694811    +               run;
694812    +           %end;
694814    +       %end;
694815    +   %end;
694817    +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
694818    +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
694820    +   filename loopflow;
694821    +   filename looppub;
694822    +   filename empub;
694824    +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
694825    +   %let gpTrain=;
694826    +   %let gpValidate=;
694827    +   %let gpTest=;
694829    +   data _null_;
694830    +      set &groupImportDs;
694831    +      select(upcase(port));
694832    +          when('DATA')     call symput('gpTrain',    strip(dataset));
694833    +          when('VALIDATE') call symput('gpValidate', strip(dataset));
694834    +          when('TEST')     call symput('gpTest',     strip(dataset));
694835    +       otherwise;
694836    +      end;
694837    +   run;
694839    +   %if "&gpTrain" ne "" %then %do;
694841    +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
694843    +       %if &targetType ne INTERVAL %then %do;
694844    +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
694845    +       %end;
694847    +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
694849    +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
694851    +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
694852    +                                                           noresfile=, resfile=%nrbquote(&decflow));
694854    +       filename _decflow "&decflow";
694855    +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
694856    +       filename _decflow;
694858    +   %end;
694860    +   %if "&gpTrain" ne "" %then
694861    +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
694862    +   %if "&gpValidate" ne "" %then
694863    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
694864    +   %if "&gpTest" ne "" %then
694865    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
694867    +   filename emflow;
694869    +%mend boostbagcode;
694871    +%macro score;
694873    +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
694874    +   %inc _dec;
694875    +   filename _dec;
694877    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
694879    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
694880    +       %let emexceptionstring = nomodeltarget;
694881    +       %goto doendpl;
694882    +   %end;
694884    +   %LET GROUPID=;
694885    +   %let LOOPTYPE=;
694886    +   data _null_;
694887    +      set &em_import_data_eminfo;
694888    +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
694889    +      call symput('GROUPID',   strip(data));
694890    +      call symput('LOOPTYPE', strip(key));
694891    +   run;
694893    +   %em_getname(key=PATH, type=DATA);
694895    +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
694896    +   %include temp;
694897    +   filename temp;
694899    +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
694901    +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
694902    +       %let deleteString = &em_nodeid._path;
694903    +       proc datasets lib=&em_lib nolist;
694904    +          delete &deleteString;
694905    +       run;
694906    +       quit;
694907    +   %end;
694909    +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
694911    +   data score_path;
694912    +      retain LOOPID &emloopnumber;
694913    +      set score_path;
694914    +   run;
694916    +   proc append base=&em_user_path  data=score_path;
694917    +   run;
694919    +   %let EnsembleIndex=0;
694920    +   data _null_;
694921    +      retain index 0 ensembleIndex 0;
694922    +      set score_Path end=eof;
694923    +      if nodelabel = "&groupid" or index then do;
694924    +         index + 1;
694925    +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
694926    +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
694927    +      end;
694928    +      if component='Ensemble' then ensembleIndex = index;
694929    +      if eof then do;
694930    +         call symput('loopcodenum', strip(put(index, best.)));
694931    +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
694932    +      end;
694933    +   run;
694935    +   proc datasets lib=work nolist;
694936    +      delete score_Path;
694937    +   run;
694938    +   quit;
694940    +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
694941    +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
694943    +   %doendpl:
694945    +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
694946    +/*
694947    +       MACRO: EM_DECIDECODE
694948    +
694949    +       PURPOSE: Generate EM Decide Score Code for non-interval target.
694950    +       SUPPORT: Taiyeong Lee
694951    +
694952    +       HISTORY: 01OCT04 Initial code
694953    +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
694954    +                to add the corresponding decision code
694955    +
694956    +*/
694957    +
694958    +
694959    +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
694960    + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
694961    +
694962    +    %do;
694963    +    %let m_data      = &data;
694964    +    %let m_decdata   = &decdata;
694965    +    %let m_decmeta   = &decmeta;
694966    +    %let m_noresfile = &noresfile;
694967    +    %let m_resfile   = &resfile;
694968    +    dm "afa c=sashelp.emutil.decidecode.scl";
694969    +  %end;
694970    +%mend EM_DECIDECODE;
694971    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
694972    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
694973    +   proc display c=sashelp.emcore.pathscorecode.scl;
694974    +   run;
694975    +%mend EM_GETTRAINPATH;
694976    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
694977     data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
694978     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
694979     nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
694980     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
694981     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
694982     component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
694983     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
694984     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
694985     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
694986     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
694987     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
694988     output;
MPRINT(EM_GETTRAINPATH):   output;
694989     nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
694990     parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
694991     description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
694992     component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
694993     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
694994     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
694995     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
694996     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
694997     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
694998     output;
MPRINT(EM_GETTRAINPATH):   output;
694999     nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
695000     parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
695001     description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
695002     component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
695003     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
695004     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695005     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695006     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695007     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695008     output;
MPRINT(EM_GETTRAINPATH):   output;
695009     nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
695010     parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
695011     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
695012     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
695013     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
695014     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695015     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695016     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695017     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695018     output;
MPRINT(EM_GETTRAINPATH):   output;
695019     nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
695020     parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
695021     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
695022     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
695023     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
695024     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695025     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695026     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695027     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695028     output;
MPRINT(EM_GETTRAINPATH):   output;
695029     nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
695030     parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
695031     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
695032     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
695033     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
695034     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695035     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695036     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695037     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695038     output;
MPRINT(EM_GETTRAINPATH):   output;
695039     nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
695040     parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
695041     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
695042     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
695043     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
695044     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695045     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695046     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695047     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695048     output;
MPRINT(EM_GETTRAINPATH):   output;
695049     nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
695050     parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
695051     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
695052     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
695053     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
695054     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695055     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695056     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695057     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695058     output;
MPRINT(EM_GETTRAINPATH):   output;
695059     nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
695060     parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
695061     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
695062     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
695063     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
695064     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695065     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695066     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695067     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695068     output;
MPRINT(EM_GETTRAINPATH):   output;
695069     nodelabel="Grp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp3";
695070     parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
695071     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
695072     component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
695073     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
695074     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695075     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695076     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695077     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695078     output;
MPRINT(EM_GETTRAINPATH):   output;
695079     nodelabel="Tree3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree3";
695080     parent="Grp3";
MPRINT(EM_GETTRAINPATH):   parent="Grp3";
695081     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
695082     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
695083     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
695084     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695085     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695086     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695087     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695088     output;
MPRINT(EM_GETTRAINPATH):   output;
695089     nodelabel="EndGrp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp3";
695090     parent="Tree3";
MPRINT(EM_GETTRAINPATH):   parent="Tree3";
695091     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
695092     component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
695093     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
695094     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
695095     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
695096     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
695097     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
695098     output;
MPRINT(EM_GETTRAINPATH):   output;
695099     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 2;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp3_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP3_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP3_PATH has 24 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp3" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
695100     *------------------------------------------------------------*;
695101     * End SCORE: EndGrp3;
695102     *------------------------------------------------------------*;
695103
 
695104     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
695105     * EndGrp3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp3: Scoring DATA data;
695106     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
695107     data EMWS1.EndGrp3_TRAIN
695108     / view=EMWS1.EndGrp3_TRAIN
695109     ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_TRAIN / view=EMWS1.EndGrp3_TRAIN ;
695110     set EMWS1.Tree3_TRAIN
695111     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_TRAIN ;
695112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
695113     quit;
 
695115     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
695116     * EndGrp3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp3: Computing metadata for TRAIN data;
695117     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp3_TRAIN out=WORK.M0LG20C6 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LG20C6;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LG20C6(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LG20C6;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LG20C6;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0T0R9VL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1XQT4MF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   set WORK.M0T0R9VL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
695463     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
695464     set EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO;
695465     where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
695466     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMINFO.
      WHERE (DATA='EndGrp3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
695467     data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMINFO;
695468     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
695469     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
695470     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
695474     run;
695475     data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
695476     set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
695477     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695478     proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
695479     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
695480     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695481     proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
695482     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
695483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695484     proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
695485     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
695486     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
695487     data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
695488     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
695489     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
695490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695491     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
695492     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
695493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
695494     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:32:59 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:32:59 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O00F5H_3 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O00F5H_3 new;
MPRINT(EM_DIAGRAM):   run;
695518     data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT;
695519     set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
695520     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
695521     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
695522     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
695523     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
695524     proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
695525     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
695526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695527     %let _EMwarndup = 0;
695528     %let _EMtargetdup =;
695529     %let _EMASEtargetdup =;
695530     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
695531     set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
695532     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
695533     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
695534     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
695535     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
695536     end;
MPRINT(EM_DIAGRAM):   end;
695537     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
695538     proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
695539     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
695540     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
695541     proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
695542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
695543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
695544     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
695545     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
695546     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
695547     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
695548     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
695549     set EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_CMeta_TRAIN;
695550     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
695551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
695552     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
695553     set EMWS1.EndGrp3_TRAIN(keep=
695554     F_DepVar
695555     I_DepVar
695556     P_DepVar0
695557     P_DepVar1
695558     Q_DepVar0
695559     Q_DepVar1
695560     R_DepVar0
695561     R_DepVar1
695562     U_DepVar
695563     _WARN_
695564     DepVar
695565     );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
695566     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2218 observations read from the data set EMWS1.GRP3_TRAIN.
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2218 observations read from the data set EMWS1.TREE3_TRAIN.
NOTE: There were 2218 observations read from the data set EMWS1.ENDGRP3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2218 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
699753     %let _cn = %sysfunc(getoption(CENTER));
699754     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
699755     proc print data=EMWS1.EndGrp3_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMREPORTFIT noobs label;
699756     var STAT LABEL TRAIN
699757     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
699758     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
699759     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
699760     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
699761     run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 452.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
699762     title10;
MPRINT(EM_DIAGRAM):   title10;
699763     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
699764     proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION nothreads;
699765     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
699766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699767     %let _cn = %sysfunc(getoption(CENTER));
699768     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
699769     proc print data=EMWS1.EndGrp3_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMCLASSIFICATION noobs label;
699770     var from into pct_row pct_col count percent
699771     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
699772     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
699773     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
699774     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
699775     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
699776     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
699777     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
699778     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
699779     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
699780     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
699781     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
699782     run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 453.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
699783     title9;
MPRINT(EM_DIAGRAM):   title9;
699784     title10;
MPRINT(EM_DIAGRAM):   title10;
699785     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
699786     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
699787     modify EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
699788     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
699789     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
699790     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMRANK.DATA.
699791     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
699792     %let _cn = %sysfunc(getoption(CENTER));
699793     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
699794     proc print data=EMWS1.EndGrp3_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMRANK label noobs;
699795     var
699796     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
699797     by
699798     notsorted DATAROLE
699799     notsorted TARGET
699800     notsorted TARGETLABEL
699801     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
699802     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
699803     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
699804     run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK.
NOTE: The PROCEDURE PRINT printed page 454.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
699805     title10;
MPRINT(EM_DIAGRAM):   title10;
699806     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
699807     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
699808     modify EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
699809     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
699810     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
699811     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMSCOREDIST.DATA.
699812     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
699813     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
699814     set EMWS1.Grp3_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp3_GROUPINFO;
699815     where _LOOP_=2;
MPRINT(EM_DIAGRAM):   where _LOOP_=2;
699816     call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
699817     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP3_GROUPINFO.
      WHERE _LOOP_=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
699818     data temp;
MPRINT(EM_DIAGRAM):    data temp;
699819     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
699820     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
699821     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
699822     set EMWS1.EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK;
699823     _LOOP_ =2;
MPRINT(EM_DIAGRAM):   _LOOP_ =2;
699824     _WHERE_ ="^(cv_var =2)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =2)";
699825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
699826     data EMWS1.EndGrp3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMRANK_LOOP;
699827     set EMWS1.EndGrp3_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK_LOOP temp;
699828     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMRANK_LOOP has 40 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
699829     data temp;
MPRINT(EM_DIAGRAM):    data temp;
699830     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
699831     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
699832     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
699833     set EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST;
699834     _LOOP_ =2;
MPRINT(EM_DIAGRAM):   _LOOP_ =2;
699835     _WHERE_ ="^(cv_var =2)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =2)";
699836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 15 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699837     data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
699838     set EMWS1.EndGrp3_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST_LOOP temp;
699839     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP.
NOTE: There were 15 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP has 26 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699840     data temp;
MPRINT(EM_DIAGRAM):    data temp;
699841     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
699842     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
699843     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
699844     set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
699845     _LOOP_ =2;
MPRINT(EM_DIAGRAM):   _LOOP_ =2;
699846     _WHERE_ ="^(cv_var =2)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =2)";
699847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699848     data EMWS1.EndGrp3_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT_LOOP;
699849     set EMWS1.EndGrp3_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT_LOOP temp;
699850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT_LOOP has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
699851     data temp;
MPRINT(EM_DIAGRAM):    data temp;
699852     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
699853     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
699854     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
699855     set EMWS1.EndGrp3_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT;
699856     _LOOP_ =2;
MPRINT(EM_DIAGRAM):   _LOOP_ =2;
699857     _WHERE_ ="^(cv_var =2)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =2)";
699858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699859     data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
699860     set EMWS1.EndGrp3_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT_LOOP temp;
699861     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
699862     data temp;
MPRINT(EM_DIAGRAM):    data temp;
699863     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
699864     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
699865     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
699866     set EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION;
699867     _LOOP_ =2;
MPRINT(EM_DIAGRAM):   _LOOP_ =2;
699868     _WHERE_ ="^(cv_var =2)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =2)";
699869     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
699870     data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
699871     set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP temp;
699872     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP has 8 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
