MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:47 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:09:47 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32WQT9E "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32WQT9E new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:47 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:47 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
3765767    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3765768    set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
3765769    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3765770    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3765771    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3765772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3765773    data WORK.M26ZZBJ7;
MPRINT(EM_DIAGRAM):    data WORK.M26ZZBJ7;
3765774    set WORK.M26ZZBJ7;
MPRINT(EM_DIAGRAM):   set WORK.M26ZZBJ7;
3765775    where upcase(NAME) in(
3765776    "DEPVAR"
3765777    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3765778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M26ZZBJ7.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M26ZZBJ7 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3765779    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN 
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN 
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN 
EMWS1.Tree3_TRAIN EMWS1.Tree3_TRAIN EMWS1 Tree3_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree3_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3765808    data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS 
ORDER);
3765809    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3765810    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3765810  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3765810  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3765811       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3765811  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3765811  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3765812    set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3765813    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3765814    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3765815    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3765816    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3765817    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3765818    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3765819    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3765820    end;
MPRINT(EM_DIAGRAM):   end;
3765821    output;
MPRINT(EM_DIAGRAM):   output;
3765822    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3765823    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3765824    proc print data=WORK.EndGrp3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp3_EVENT noobs label;
3765825    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3765826    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3765827    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3765828    run;

NOTE: There were 1 observations read from the data set WORK.ENDGRP3_EVENT.
NOTE: The PROCEDURE PRINT printed page 2458.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3765829    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3765830    proc print data = EMWS1.Tree3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree3_DepVar_DM noobs label;
3765831    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3765832    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
3765833    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3765833  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3765833  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3765834    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3765835    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3765836    run;

NOTE: There were 7 observations read from the data set EMWS1.TREE3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2459.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3765837    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3766300    %let EMEXCEPTIONSTRING=;
3766301    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3766302    * POSTLOOP: EndGrp3;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp3;
3766303    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3766304    %let EM_ACTION = POSTLOOP;
3766305    %let syscc = 0;
3766306    %macro main;
3766307       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3766308    
3766309           filename temp catalog 'sashelp.emutil.endgp_train.source';
3766310           %include temp;
3766311           filename temp;
3766312    
3766313           %train;
3766314    
3766315       %end;
3766316       %else
3766317          %if %upcase(&EM_ACTION) = SCORE %then %do;
3766318    
3766319           filename temp catalog 'sashelp.emutil.endgp_score.source';
3766320           %include temp;
3766321           filename temp;
3766322    
3766323           %score;
3766324       %end;
3766325       %else
3766326       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3766327    
3766328           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3766329           %include temp;
3766330           filename temp;
3766331    
3766332           %postloop;
3766333    
3766334       %end;
3766335    
3766336       %doendm:
3766337    %mend main;
3766338    
3766339    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3766340   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3766342   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3766342  !+%then %do;
3766343   +       data &out / view=&out;
3766344   +          set &data
3766347   +          %if "&prescore" = "Y" %then %do;
3766348   +              (obs=1)
3766349   +          %end;
3766351   +          ;
3766353   +       %let fexist = %sysfunc(fexist(&scoreref));
3766354   +       %if &fexist %then %do;
3766355   +          %inc &scoreref;
3766356   +       %end;
3766358   +       %if "&prescore" eq "Y" %then %do;
3766359   +          drop I_: R_:;
3766360   +       %end;
3766362   +       run;
3766363   +   %end;
3766365   +%mend scoretables;
3766367   +%macro postboostbag(groupid=, type=);
3766368   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3766369   +   data _null_;
3766370   +      retain index 0;
3766371   +      set &infoDs;
3766372   +      call symput('targetname', strip(_target_));
3766373   +   run;
3766375   +   data _null_;
3766376   +      set &em_import_data_eminfo;
3766377   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3766378   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3766379   +      else call symput('MODELID', strip(data));
3766380   +   run;
3766382   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3766383   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3766385   +   filename loopflow "&em_user_loopflowcode";
3766386   +   filename looppub "&em_user_looppubcode";
3766388   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3766389   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3766391   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3766392   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3766394   +   filename loopflow;
3766395   +   filename looppub;
3766396   +   filename emflow;
3766397   +   filename empub;
3766399   +   %let EMGROUPASSMT = Y;
3766401   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3766401  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3766403   +   %em_getname(key=emoutfit, type=DATA);
3766404   +   %em_getname(key=emoutfit_loop, type=DATA);
3766406   +   data &em_user_emoutfit;
3766407   +      set &em_user_emoutfit_loop end=eof;
3766408   +      drop _LOOP_ _WHERE_;
3766409   +      if eof then output;
3766410   +   run;
3766412   +%mend postboostbag;
3766414   +%macro postgroup(groupid=, type=);
3766415   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3766416   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3766418   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3766419   +   %let _XValidation = 0;
3766421   +   data _null_;
3766422   +      retain index 0;
3766423   +      set &infoDs end=eof;
3766424   +      index + 1;
3766425   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3766425  !+ '"', '""'));
3766426   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3766427   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3766428   +         call symput('_XValidation', '1');
3766429   +   run;
3766431   +   %let grouptarget=;
3766432   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3766433   +   %if "&looptarget1" eq "" %then %do;
3766434   +      data _null_;
3766435   +         set &em_import_data_eminfo;
3766436   +         where key in('MODEL');
3766437   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3766437  !+'!!strip(target));
3766438   +      run;
3766439   +   %end;
3766441   +   %do j=1 %to &emloopnumber;
3766442   +       %let EnsembleIndex=0;
3766443   +       data _null_;
3766444   +          retain index 0 ensembleIndex 0;
3766445   +          set &em_user_path end=eof;
3766446   +          where LOOPID=&j;
3766447   +          if nodelabel = "&groupid" or index then do;
3766448   +             index + 1;
3766449   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3766450   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3766451   +             call symput('loopaccum'!!strip(put(index, best.)),
3766451  !+strip(accumulatedScoreCode));
3766452   +          end;
3766453   +          if component='Ensemble' then ensembleIndex = index;
3766454   +          if eof then do;
3766455   +             call symput('loopcodenum', strip(put(index, best.)));
3766456   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3766457   +          end;
3766458   +       run;
3766460   +       %do i = 1 %to &loopcodenum;
3766461   +           %let fsourceEntry =
3766461  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3766462   +           %let psourceEntry =
3766462  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3766464   +           %if (&&loopnode&i eq &em_nodeid ) or
3766465   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3766465  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3766467   +               data _null_;
3766468   +                  file emflow mod;
3766469   +                  put "&em_codebar;";
3766470   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3766471   +                  put "* User: &sysuserid;";
3766472   +                  put "* Date: &sysdate: &systime;";
3766473   +                  %if "&&loopwhere&j" ne "" %then %do;
3766474   +                      put "* Group: &&loopwhere&j;";
3766475   +                  %end;
3766476   +                  %if "&&looptarget&j" ne "" %then %do;
3766477   +                       put "* Target: &&looptarget&j;";
3766478   +                  %end;
3766479   +                  put "&em_codebar ;";
3766480   +               run;
3766481   +               data _null_;
3766482   +                   file empub mod;
3766483   +                   put "&em_codebar ;";
3766484   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3766485   +                   put "* User: &sysuserid;";
3766486   +                   put "* Date: &sysdate: &systime;";
3766487   +                   %if "&&loopwhere&j" ne "" %then %do;
3766488   +                       put "* Group: &&loopwhere&j;";
3766489   +                   %end;
3766490   +                   %if "&&looptarget&j" ne "" %then %do;
3766491   +                       put "* Target: &&looptarget&j;";
3766492   +                   %end;
3766493   +                   put "&em_codebar;";
3766494   +               run;
3766495   +           %end;
3766497   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3766498   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3766498  !+&i=&ensembleIndex) %then %do;
3766499   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3766499  !+ %do;
3766500   +                       filename y catalog "&psourceEntry";
3766501   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3766502   +                       filename y;
3766503   +                   %end;
3766504   +                   %else %do;
3766505   +                       filename x catalog "&fsourceEntry";
3766506   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3766507   +                       filename x;
3766508   +                   %end;
3766510   +                   filename y catalog "&psourceEntry";
3766511   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3766512   +                   filename y;
3766513   +               %end;
3766514   +           %end;
3766515   +           %else %do;
3766516   +              %if "&&loopwhere&j" ne "" %then %do;
3766517   +                  data _null_;
3766518   +                     file emflow mod;
3766519   +                     put 'end;';
3766520   +                  run;
3766521   +                  data _null_;
3766522   +                     file empub mod;
3766523   +                     put 'end;';
3766524   +                  run;
3766525   +               %end;
3766526   +           %end;
3766527   +       %end;
3766528   +   %end;
3766529   +   filename emflow;
3766530   +   filename empub;
3766532   +   /* Stratify Model Need to Recompute All Assessment Reports */
3766533   +   %if "&grouptarget" eq "" %then %do;
3766534   +       %let assessTarget=;
3766535   +       %do j=1 %to &emloopnumber;
3766536   +           %let targetname = &&looptarget&j;
3766537   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3766537  !+%do;
3766538   +               %let assesstarget = &assesstarget &targetname;
3766539   +               %let index = 1;
3766540   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3766540  !+%sysfunc(strip(&targetname)));
3766541   +                   %let index = %eval(&index + 1);
3766542   +               %end;
3766543   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3766543  !+,%str( ));
3766545   +               %if "&targetlevel" ne "INTERVAL" %then
3766546   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3766546  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3766547   +               %else
3766548   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3766548  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3766549   +           %end;
3766550   +       %end;
3766551   +   %end;
3766552   +   %else %do;
3766553   +       %do i=1 %to &em_num_target;
3766554   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3766555   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3766557   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3766558   +              %if "&targetlevel" ne "INTERVAL" %then
3766559   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3766559  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3766560   +              %else
3766561   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3766561  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3766562   +           %end;
3766563   +           %else %do;
3766564   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3766564  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3766565   +           %end;
3766566   +       %end;
3766567   +   %end;
3766568   +   %let EMGROUPASSMT = N;
3766569   +%mend postgroup;
3766571   +%macro posttarget(groupid=, type=);
3766572   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3766573   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3766575   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3766576   +   data _null_;
3766577   +      retain index 0;
3766578   +      set &infoDs end=eof;
3766579   +      index + 1;
3766580   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3766581   +   run;
3766583   +   %do j=1 %to &emloopnumber;
3766584   +       %let EnsembleIndex=0;
3766585   +       data _null_;
3766586   +          retain index 0 ensembleIndex 0;
3766587   +          set &em_user_path end=eof;
3766588   +          where LOOPID=&j;
3766589   +          if nodelabel = "&groupid" or index then do;
3766590   +             index + 1;
3766591   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3766592   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3766593   +             call symput('loopaccum'!!strip(put(index, best.)),
3766593  !+strip(accumulatedScoreCode));
3766594   +          end;
3766595   +          if component='Ensemble' then ensembleIndex = index;
3766596   +          if eof then do;
3766597   +             call symput('loopcodenum', strip(put(index, best.)));
3766598   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3766599   +          end;
3766600   +       run;
3766602   +       %do i = 1 %to &loopcodenum;
3766603   +           %let fsourceEntry =
3766603  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3766604   +           %let psourceEntry =
3766604  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3766606   +           %if (&&loopnode&i ne &em_nodeid ) and
3766607   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3766608   +               data _null_;
3766609   +                  file emflow mod;
3766610   +                  put "&em_codebar;";
3766611   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3766612   +                  put "* User: &sysuserid;";
3766613   +                  put "* Date: &sysdate: &systime;";
3766614   +                  put "* Target: &&looptarget&j;";
3766615   +                  put "&em_codebar ;";
3766616   +               run;
3766617   +               data _null_;
3766618   +                  file empub mod;
3766619   +                  put "&em_codebar ;";
3766620   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3766621   +                  put "* User: &sysuserid;";
3766622   +                  put "* Date: &sysdate: &systime;";
3766623   +                  put "* Target: &&looptarget&j;";
3766624   +                  put "&em_codebar;";
3766625   +               run;
3766627   +               filename x catalog "&fsourceEntry";
3766628   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3766629   +               filename x;
3766631   +               filename y catalog "&psourceEntry";
3766632   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3766633   +               filename y;
3766634   +           %end;
3766635   +       %end;
3766636   +   %end;
3766637   +   filename emflow;
3766638   +   filename empub;
3766640   +   %do j=1 %to &emloopnumber;
3766641   +       %let targetname = &&looptarget&j;
3766642   +       %let k = 1;
3766643   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3766643  !+%sysfunc(strip(&targetname)));
3766644   +           %let k = %eval(&k + 1);
3766645   +       %end;
3766646   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3766647   +       %if "&targetlevel" ne "INTERVAL" %then
3766648   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3766648  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3766649   +       %else
3766650   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3766650  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3766651   +       %let EMGROUPASSMT = N;
3766652   +   %end;
3766654   +%mend posttarget;
3766656   +%macro postloop;
3766658   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3766660   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3766660  !+%then %do;
3766661   +       %let emexceptionstring = nomodeltarget;
3766662   +       %goto doendpl;
3766663   +   %end;
3766665   +   %let targetName=;
3766666   +   %let endgrp_decmeta=;
3766668   +   data _null_;
3766669   +      set &em_import_data_eminfo;
3766670   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3766671   +      call symput('GROUPID',   strip(data));
3766672   +      call symput('LOOPTYPE', strip(key));
3766673   +   run;
3766675   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3766676   +   %include temp;
3766677   +   filename temp;
3766679   +   %em_getname(key=PATH, type=DATA);
3766681   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3766683   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3766685   +   %let gptrain=;
3766686   +   %let gpvalidate=;
3766687   +   %let gptest=;
3766689   +   data _null_;
3766690   +      set &groupImportDs;
3766691   +      select(upcase(port));
3766692   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3766693   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3766694   +          when('TEST')     call symput('gpTest',     strip(dataset));
3766695   +       otherwise;
3766696   +      end;
3766697   +   run;
3766698   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3766700   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3766700  !+%postboostbag(groupid=&groupid, type=&looptype);
3766701   +   %else
3766702   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3766702  !+type=&looptype);
3766703   +   %else
3766704   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3766704  !+type=&looptype);
3766706   +   %let deleteString = &em_nodeid._path;
3766708   +   proc sort data=&em_user_path nodupkey;
3766709   +      by nodelabel;
3766710   +   run;
3766711   +   %let loopnodenum=0;
3766712   +   data _null_;
3766713   +      retain index 0;
3766714   +      set &em_user_path end=eof;
3766715   +      if nodelabel = "&groupid" or index then do;
3766716   +         index + 1;
3766717   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3766718   +      end;
3766719   +      if eof then do;
3766720   +         call symput('loopnodenum', strip(put(index, best.)));
3766721   +      end;
3766722   +   run;
3766723   +   proc datasets lib=&em_lib nolist;
3766724   +      delete &deleteString;
3766725   +      delete
3766726   +      %do i = 1 %to &loopnodenum;
3766727   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3766728   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3766728  !+%do;
3766730   +              &loopcatalog
3766731   +          %end;
3766732   +          %if &i = &loopnodenum %then %do;
3766733   +              / mt=catalog;
3766734   +          %end;
3766735   +      %end;
3766736   +   run;
3766737   +   quit;
3766739   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3766741   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3766741  !+"BAGINFO")) %then %do;
3766743   +       %let targetType = ;
3766744   +       data _null_;
3766745   +          set &endgrp_decmeta;
3766746   +          where _TYPE_='TARGET';
3766747   +          call symput('TARGETTYPE', strip(level));
3766748   +       run;
3766750   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3766752   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3766752  !+prescore=Y);
3766754   +       %if &targetType ne 'INTERVAL' %then %do;
3766755   +           %makeClassificationVars(target=&target, data=&em_export_train,
3766755  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3766756   +       %end;
3766758   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3766760   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3766760  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3766762   +       filename empub;
3766764   +   %end;
3766766   +   %if "&gpTrain" ne "" %then
3766767   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3766768   +   %if "&gpValidate" ne "" %then
3766769   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3766769  !+out=&em_export_validate, scoreref=emflow);
3766770   +   %if "&gpTest" ne "" %then
3766771   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3766771  !+out=&em_export_test,     scoreref=emflow);
3766773   +   filename emflow;
3766775   +   %doendpl:
3766777   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Tree3_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3766778   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3766779   +   proc display c=sashelp.emcore.pathscorecode.scl;
3766780   +   run;
3766781   +%mend EM_GETTRAINPATH;
3766782   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp3_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 15 observations read from the data set EMWS1.GRP3_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp3_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)), 
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation', 
'1');
MPRINT(POSTGROUP):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP3_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Tree3_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!' 
'!!strip(target));
MPRINT(POSTGROUP):   run;

NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=474,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 365 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=474,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 343 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13717,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13112,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13935,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13330,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13941,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13336,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14158,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13553,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14195,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13590,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14415,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 490 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13810,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 468 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32566,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31356,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32784,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31574,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32790,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31580,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33007,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=31797,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33044,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31834,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33264,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 409 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
The SAS System

MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32054,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 387 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48142,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46327,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48360,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46545,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48366,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46551,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=48583,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46768,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48620,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46805,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=48840,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 373 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47025,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 351 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62356,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59936,
      Last Modified=02 June 2018 17:09:50 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62574,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60154,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62580,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60160,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=62797,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=60377,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62834,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=60414,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63054,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 484 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=60634,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 462 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=80940,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=77915,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=81158,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=78133,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=81164,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=78139,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=81381,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=78356,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=81418,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=78393,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=81638,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 488 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=78613,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 466 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=99853,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96223,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=100071,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96441,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=100077,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96447,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=100294,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96664,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=100331,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96701,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=100551,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 528 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96921,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 506 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=120250,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116015,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=120468,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116233,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=120474,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116239,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=120691,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=116456,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=120728,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116493,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=120948,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 571 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=116713,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 549 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=142572,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=137732,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=142790,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=137950,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=142796,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=137956,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=143013,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=138173,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=143050,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=138210,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=143270,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 470 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=138430,
      Last Modified=02 June 2018 17:09:51 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 448 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=160499,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=155054,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=160717,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=155272,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=160723,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp3: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=155278,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=160941,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155496,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=160980,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Tree3: DecisionTree;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=155535,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Tree3_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=161201,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 369 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Tree3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155756,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 347 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=174570,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp3: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=168520,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=174789,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=168739,
      Last Modified=02 June 2018 17:09:52 o'clock,
      Create Time=02 June 2018 17:09:50 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;

NOTE: There were 8 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp3_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;

NOTE: There were 120 observations read from the data set EMWS1.ENDGRP3_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP3_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp3_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp3" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP3_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp3_path;
MPRINT(POSTLOOP):   delete Grp3_LOOP Tree3_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;

NOTE: Deleting EMWS1.ENDGRP3_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP3_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.TREE3_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp3_TRAIN / view=EMWS1.EndGrp3_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMFLOWSCORE.sas.
3766783   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3766784   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3766785   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3766786   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3766787   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3766788   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3766789   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3766790   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3766791   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3766792   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3766793   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3766794   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3766795   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3766796   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3766797   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3766798   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3766799   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3766800   +
3766801   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3766802   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3766803   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3766804   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3766805   +
3766806   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3766807   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3766808   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3766809   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3766810   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3766811   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3766812   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3766813   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3766814   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3766815   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3766816   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3766817   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3766818   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3766819   +
3766820   +
3766821   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3766822   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3766823   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3766824   +
3766825   +
3766826   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3766827   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3766828   +
3766829   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3766830   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3766831   +                 0.125 <= RANGE_campaign_acceptance  AND
3766832   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3766833   +  IF  NOT MISSING(RANGE_Recency ) AND
3766834   +    RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181 
THEN DO;
3766835   +    IF  NOT MISSING(MntCard_Games ) AND
3766836   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3766837   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3766838   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <= 
NumCatalogPurchases THEN DO;
3766839   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3766840   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3766841   +        P_DepVar0  =     0.26666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.26666666666666;
3766842   +        P_DepVar1  =     0.73333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.73333333333333;
3766843   +        Q_DepVar0  =     0.26666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.26666666666666;
3766844   +        Q_DepVar1  =     0.73333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.73333333333333;
3766845   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766846   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766847   +        END;
MPRINT(SCORETABLES):   END;
3766848   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766849   +        IF  NOT MISSING(NumWebPurchases ) AND
3766850   +          NumWebPurchases  <     0.34848484848484 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.34848484848484 
THEN DO;
3766851   +          _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3766852   +          _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3766853   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3766854   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3766855   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3766856   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3766857   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766858   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766859   +          END;
MPRINT(SCORETABLES):   END;
3766860   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766861   +          _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3766862   +          _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3766863   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3766864   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3766865   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3766866   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3766867   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3766868   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3766869   +          END;
MPRINT(SCORETABLES):   END;
3766870   +        END;
MPRINT(SCORETABLES):   END;
3766871   +      END;
MPRINT(SCORETABLES):   END;
3766872   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766873   +      _NODE_  =                   26;
MPRINT(SCORETABLES):   _NODE_ = 26;
3766874   +      _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3766875   +      P_DepVar0  =                0.175;
MPRINT(SCORETABLES):   P_DepVar0 = 0.175;
3766876   +      P_DepVar1  =                0.825;
MPRINT(SCORETABLES):   P_DepVar1 = 0.825;
3766877   +      Q_DepVar0  =                0.175;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.175;
3766878   +      Q_DepVar1  =                0.825;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.825;
3766879   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766880   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766881   +      END;
MPRINT(SCORETABLES):   END;
3766882   +    END;
MPRINT(SCORETABLES):   END;
3766883   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3766884   +        0.31818181818181 <= RANGE_Recency  AND
3766885   +    RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.31818181818181 <= 
RANGE_Recency AND RANGE_Recency < 0.48989898989899 THEN DO;
3766886   +    IF  NOT MISSING(MntCard_Games ) AND
3766887   +          0.41369842925112 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.41369842925112 <= MntCard_Games 
THEN DO;
3766888   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3766889   +      _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3766890   +      P_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23529411764705;
3766891   +      P_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76470588235294;
3766892   +      Q_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23529411764705;
3766893   +      Q_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76470588235294;
3766894   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766895   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766896   +      END;
MPRINT(SCORETABLES):   END;
3766897   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766898   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3766899   +      _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3766900   +      P_DepVar0  =     0.96774193548387;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96774193548387;
3766901   +      P_DepVar1  =     0.03225806451612;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03225806451612;
3766902   +      Q_DepVar0  =     0.96774193548387;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96774193548387;
3766903   +      Q_DepVar1  =     0.03225806451612;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03225806451612;
3766904   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3766905   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3766906   +      END;
MPRINT(SCORETABLES):   END;
3766907   +    END;
MPRINT(SCORETABLES):   END;
3766908   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766909   +    IF  NOT MISSING(NumDealsPurchases ) AND
3766910   +          0.28285714285714 <= NumDealsPurchases  AND
3766911   +      NumDealsPurchases  <     0.37626262626262 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.28285714285714 <= 
NumDealsPurchases AND NumDealsPurchases < 0.37626262626262 THEN DO;
3766912   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3766913   +      _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3766914   +      P_DepVar0  =     0.76923076923076;
MPRINT(SCORETABLES):   P_DepVar0 = 0.76923076923076;
3766915   +      P_DepVar1  =     0.23076923076923;
MPRINT(SCORETABLES):   P_DepVar1 = 0.23076923076923;
3766916   +      Q_DepVar0  =     0.76923076923076;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.76923076923076;
3766917   +      Q_DepVar1  =     0.23076923076923;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.23076923076923;
3766918   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3766919   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3766920   +      END;
MPRINT(SCORETABLES):   END;
3766921   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3766922   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <= 
NumDealsPurchases THEN DO;
3766923   +      _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3766924   +      _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3766925   +      P_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.22222222222222;
3766926   +      P_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77777777777777;
3766927   +      Q_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.22222222222222;
3766928   +      Q_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77777777777777;
3766929   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766930   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766931   +      END;
MPRINT(SCORETABLES):   END;
3766932   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766933   +      IF  NOT MISSING(MntCard_Games ) AND
3766934   +            0.61026789380447 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.61026789380447 <= MntCard_Games 
THEN DO;
3766935   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3766936   +        _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3766937   +        P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3766938   +        P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3766939   +        Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3766940   +        Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3766941   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766942   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766943   +        END;
MPRINT(SCORETABLES):   END;
3766944   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766945   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3766946   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3766947   +        P_DepVar0  =     0.99390243902439;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99390243902439;
3766948   +        P_DepVar1  =      0.0060975609756;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0060975609756;
3766949   +        Q_DepVar0  =     0.99390243902439;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99390243902439;
3766950   +        Q_DepVar1  =      0.0060975609756;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0060975609756;
3766951   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3766952   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3766953   +        END;
MPRINT(SCORETABLES):   END;
3766954   +      END;
MPRINT(SCORETABLES):   END;
3766955   +    END;
MPRINT(SCORETABLES):   END;
3766956   +  END;
MPRINT(SCORETABLES):   END;
3766957   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3766958   +                 0.375 <= RANGE_campaign_acceptance  AND
3766959   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3766960   +  IF  NOT MISSING(RANGE_Recency ) AND
3766961   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3766962   +    _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3766963   +    _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3766964   +    P_DepVar0  =     0.16216216216216;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16216216216216;
3766965   +    P_DepVar1  =     0.83783783783783;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83783783783783;
3766966   +    Q_DepVar0  =     0.16216216216216;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16216216216216;
3766967   +    Q_DepVar1  =     0.83783783783783;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83783783783783;
3766968   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766969   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766970   +    END;
MPRINT(SCORETABLES):   END;
3766971   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766972   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3766973   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <= 
NumCatalogPurchases THEN DO;
3766974   +      _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3766975   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3766976   +      P_DepVar0  =                  0.3;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3;
3766977   +      P_DepVar1  =                  0.7;
MPRINT(SCORETABLES):   P_DepVar1 = 0.7;
3766978   +      Q_DepVar0  =                  0.3;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3;
3766979   +      Q_DepVar1  =                  0.7;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.7;
3766980   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3766981   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3766982   +      END;
MPRINT(SCORETABLES):   END;
3766983   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3766984   +      _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3766985   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3766986   +      P_DepVar0  =     0.89583333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89583333333333;
3766987   +      P_DepVar1  =     0.10416666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10416666666666;
3766988   +      Q_DepVar0  =     0.89583333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89583333333333;
3766989   +      Q_DepVar1  =     0.10416666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10416666666666;
3766990   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3766991   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3766992   +      END;
MPRINT(SCORETABLES):   END;
3766993   +    END;
MPRINT(SCORETABLES):   END;
3766994   +  END;
MPRINT(SCORETABLES):   END;
3766995   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3766996   +                 0.625 <= RANGE_campaign_acceptance  AND
3766997   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3766998   +  IF  NOT MISSING(RANGE_Recency ) AND
3766999   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3767000   +    _NODE_  =                   16;
MPRINT(SCORETABLES):   _NODE_ = 16;
3767001   +    _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3767002   +    P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3767003   +    P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3767004   +    Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3767005   +    Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3767006   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767007   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767008   +    END;
MPRINT(SCORETABLES):   END;
3767009   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767010   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3767011   +    _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3767012   +    P_DepVar0  =     0.08695652173913;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08695652173913;
3767013   +    P_DepVar1  =     0.91304347826086;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91304347826086;
3767014   +    Q_DepVar0  =     0.08695652173913;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08695652173913;
3767015   +    Q_DepVar1  =     0.91304347826086;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91304347826086;
3767016   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767017   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767018   +    END;
MPRINT(SCORETABLES):   END;
3767019   +  END;
MPRINT(SCORETABLES):   END;
3767020   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767021   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3767022   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3767023   +  _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3767024   +  P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3767025   +  P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3767026   +  Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3767027   +  Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3767028   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767029   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767030   +  END;
MPRINT(SCORETABLES):   END;
3767031   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767032   +  IF  NOT MISSING(RANGE_Recency ) AND
3767033   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3767034   +    IF  NOT MISSING(MntCard_Games ) AND
3767035   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games 
THEN DO;
3767036   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3767037   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3767038   +      P_DepVar0  =     0.28301886792452;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28301886792452;
3767039   +      P_DepVar1  =     0.71698113207547;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71698113207547;
3767040   +      Q_DepVar0  =     0.28301886792452;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28301886792452;
3767041   +      Q_DepVar1  =     0.71698113207547;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71698113207547;
3767042   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767043   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767044   +      END;
MPRINT(SCORETABLES):   END;
3767045   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767046   +      IF  NOT MISSING(NumDealsPurchases ) AND
3767047   +            0.15192307692307 <= NumDealsPurchases  AND
3767048   +        NumDealsPurchases  <     0.32575757575757 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.32575757575757 THEN DO;
3767049   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3767050   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3767051   +        P_DepVar0  =      0.8095238095238;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8095238095238;
3767052   +        P_DepVar1  =     0.19047619047619;
MPRINT(SCORETABLES):   P_DepVar1 = 0.19047619047619;
3767053   +        Q_DepVar0  =      0.8095238095238;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8095238095238;
3767054   +        Q_DepVar1  =     0.19047619047619;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.19047619047619;
3767055   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767056   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767057   +        END;
MPRINT(SCORETABLES):   END;
3767058   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3767059   +            0.32575757575757 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32575757575757 <= 
NumDealsPurchases THEN DO;
3767060   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3767061   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3767062   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767063   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767064   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767065   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767066   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767067   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767068   +        END;
MPRINT(SCORETABLES):   END;
3767069   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767070   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3767071   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3767072   +        P_DepVar0  =                0.976;
MPRINT(SCORETABLES):   P_DepVar0 = 0.976;
3767073   +        P_DepVar1  =                0.024;
MPRINT(SCORETABLES):   P_DepVar1 = 0.024;
3767074   +        Q_DepVar0  =                0.976;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.976;
3767075   +        Q_DepVar1  =                0.024;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.024;
3767076   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767077   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767078   +        END;
MPRINT(SCORETABLES):   END;
3767079   +      END;
MPRINT(SCORETABLES):   END;
3767080   +    END;
MPRINT(SCORETABLES):   END;
3767081   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3767082   +        0.58080808080808 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.58080808080808 <= 
RANGE_Recency THEN DO;
3767083   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3767084   +    _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3767085   +    P_DepVar0  =      0.9985632183908;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9985632183908;
3767086   +    P_DepVar1  =     0.00143678160919;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00143678160919;
3767087   +    Q_DepVar0  =      0.9985632183908;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9985632183908;
3767088   +    Q_DepVar1  =     0.00143678160919;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00143678160919;
3767089   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767090   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767091   +    END;
MPRINT(SCORETABLES):   END;
3767092   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767093   +    IF  NOT MISSING(MntCard_Games ) AND
3767094   +          0.47871376811594 <= MntCard_Games  AND
3767095   +      MntCard_Games  <     0.70607816129206 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.47871376811594 <= MntCard_Games 
AND MntCard_Games < 0.70607816129206 THEN DO;
3767096   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3767097   +            0.34891304347826 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.34891304347826 <= 
NumCatalogPurchases THEN DO;
3767098   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3767099   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3767100   +        P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3767101   +        P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3767102   +        Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3767103   +        Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3767104   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767105   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767106   +        END;
MPRINT(SCORETABLES):   END;
3767107   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767108   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3767109   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3767110   +        P_DepVar0  =     0.87401574803149;
MPRINT(SCORETABLES):   P_DepVar0 = 0.87401574803149;
3767111   +        P_DepVar1  =      0.1259842519685;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1259842519685;
3767112   +        Q_DepVar0  =     0.87401574803149;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.87401574803149;
3767113   +        Q_DepVar1  =      0.1259842519685;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1259842519685;
3767114   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767115   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767116   +        END;
MPRINT(SCORETABLES):   END;
3767117   +      END;
MPRINT(SCORETABLES):   END;
3767118   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3767119   +          0.70607816129206 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.70607816129206 <= 
MntCard_Games THEN DO;
3767120   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3767121   +      _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3767122   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767123   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767124   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767125   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767126   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767127   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767128   +      END;
MPRINT(SCORETABLES):   END;
3767129   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767130   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3767131   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3767132   +      P_DepVar0  =     0.96812080536912;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96812080536912;
3767133   +      P_DepVar1  =     0.03187919463087;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03187919463087;
3767134   +      Q_DepVar0  =     0.96812080536912;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96812080536912;
3767135   +      Q_DepVar1  =     0.03187919463087;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03187919463087;
3767136   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767137   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767138   +      END;
MPRINT(SCORETABLES):   END;
3767139   +    END;
MPRINT(SCORETABLES):   END;
3767140   +  END;
MPRINT(SCORETABLES):   END;
3767141   +
3767142   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3767143   +IF  F_DepVar  NE '0'
3767144   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3767145   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3767146   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3767147   + END;
MPRINT(SCORETABLES):   END;
3767148   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767149   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3767150   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3767151   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3767152   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3767153   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3767154   +       END;
MPRINT(SCORETABLES):   END;
3767155   + END;
MPRINT(SCORETABLES):   END;
3767156   +
3767157   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767158   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3767159   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767160   +
3767161   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3767162   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767163   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3767164   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767165   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767166   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3767167   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767168   +end;
MPRINT(SCORETABLES):   end;
3767169   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767170   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3767171   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767172   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767173   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3767174   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767175   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3767176   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3767177   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767178   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3767179   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767180   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767181   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3767182   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767183   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767184   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3767185   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767186   +
3767187   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3767188   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3767189   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3767190   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3767191   +
3767192   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3767193   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3767194   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3767195   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3767196   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3767197   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3767198   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3767199   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3767200   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3767201   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3767202   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3767203   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3767204   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3767205   +
3767206   +
3767207   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3767208   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3767209   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3767210   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3767211   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3767212   +
3767213   +
3767214   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3767215   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3767216   +
3767217   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3767218   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767219   +                 0.125 <= RANGE_campaign_acceptance  AND
3767220   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3767221   +  IF  NOT MISSING(RANGE_Recency ) AND
3767222   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3767223   +    IF  NOT MISSING(MntCard_Games ) AND
3767224   +      MntCard_Games  <     0.27023787571454 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27023787571454 
THEN DO;
3767225   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3767226   +            0.27525252525252 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27525252525252 <= 
NumCatalogPurchases THEN DO;
3767227   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3767228   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3767229   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3767230   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3767231   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3767232   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3767233   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767234   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767235   +        END;
MPRINT(SCORETABLES):   END;
3767236   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767237   +        IF  NOT MISSING(NumWebPurchases ) AND
3767238   +          NumWebPurchases  <     0.34848484848484 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.34848484848484 
THEN DO;
3767239   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3767240   +          _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3767241   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3767242   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3767243   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3767244   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3767245   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767246   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767247   +          END;
MPRINT(SCORETABLES):   END;
3767248   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767249   +          _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3767250   +          _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3767251   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767252   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767253   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767254   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767255   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767256   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767257   +          END;
MPRINT(SCORETABLES):   END;
3767258   +        END;
MPRINT(SCORETABLES):   END;
3767259   +      END;
MPRINT(SCORETABLES):   END;
3767260   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767261   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3767262   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3767263   +      P_DepVar0  =     0.21590909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.21590909090909;
3767264   +      P_DepVar1  =      0.7840909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.7840909090909;
3767265   +      Q_DepVar0  =     0.21590909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.21590909090909;
3767266   +      Q_DepVar1  =      0.7840909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.7840909090909;
3767267   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767268   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767269   +      END;
MPRINT(SCORETABLES):   END;
3767270   +    END;
MPRINT(SCORETABLES):   END;
3767271   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767272   +    IF  NOT MISSING(NumDealsPurchases ) AND
3767273   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <= 
NumDealsPurchases THEN DO;
3767274   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3767275   +            0.18157578668792 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.18157578668792 <= 
RANGE_average_purchase THEN DO;
3767276   +        _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3767277   +        _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3767278   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767279   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767280   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767281   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767282   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767283   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767284   +        END;
MPRINT(SCORETABLES):   END;
3767285   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767286   +        _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3767287   +        _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3767288   +        P_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72727272727272;
3767289   +        P_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27272727272727;
3767290   +        Q_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72727272727272;
3767291   +        Q_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27272727272727;
3767292   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767293   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767294   +        END;
MPRINT(SCORETABLES):   END;
3767295   +      END;
MPRINT(SCORETABLES):   END;
3767296   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767297   +      IF  NOT MISSING(MntCard_Games ) AND
3767298   +            0.42433538343271 <= MntCard_Games  AND
3767299   +        MntCard_Games  <     0.62176016129555 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.42433538343271 <= MntCard_Games 
AND MntCard_Games < 0.62176016129555 THEN DO;
3767300   +        IF  NOT MISSING(RANGE_Recency ) AND
3767301   +          RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899 
THEN DO;
3767302   +          _NODE_  =                   73;
MPRINT(SCORETABLES):   _NODE_ = 73;
3767303   +          _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3767304   +          P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3767305   +          P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3767306   +          Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3767307   +          Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3767308   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767309   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767310   +          END;
MPRINT(SCORETABLES):   END;
3767311   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767312   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3767313   +          _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3767314   +          P_DepVar0  =     0.96078431372549;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96078431372549;
3767315   +          P_DepVar1  =      0.0392156862745;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0392156862745;
3767316   +          Q_DepVar0  =     0.96078431372549;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96078431372549;
3767317   +          Q_DepVar1  =      0.0392156862745;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0392156862745;
3767318   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767319   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767320   +          END;
MPRINT(SCORETABLES):   END;
3767321   +        END;
MPRINT(SCORETABLES):   END;
3767322   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3767323   +            0.62176016129555 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.62176016129555 <= 
MntCard_Games THEN DO;
3767324   +        _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3767325   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3767326   +        P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3767327   +        P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3767328   +        Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3767329   +        Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3767330   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767331   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767332   +        END;
MPRINT(SCORETABLES):   END;
3767333   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767334   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3767335   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3767336   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767337   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767338   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767339   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767340   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767341   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767342   +        END;
MPRINT(SCORETABLES):   END;
3767343   +      END;
MPRINT(SCORETABLES):   END;
3767344   +    END;
MPRINT(SCORETABLES):   END;
3767345   +  END;
MPRINT(SCORETABLES):   END;
3767346   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767347   +                 0.375 <= RANGE_campaign_acceptance  AND
3767348   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3767349   +  IF  NOT MISSING(RANGE_Recency ) AND
3767350   +    RANGE_Recency  <     0.42929292929292 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42929292929292 
THEN DO;
3767351   +    _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3767352   +    _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3767353   +    P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3767354   +    P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3767355   +    Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3767356   +    Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3767357   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767358   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767359   +    END;
MPRINT(SCORETABLES):   END;
3767360   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767361   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3767362   +          0.31965944272445 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31965944272445 <= 
NumCatalogPurchases THEN DO;
3767363   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3767364   +      _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3767365   +      P_DepVar0  =     0.35294117647058;
MPRINT(SCORETABLES):   P_DepVar0 = 0.35294117647058;
3767366   +      P_DepVar1  =     0.64705882352941;
MPRINT(SCORETABLES):   P_DepVar1 = 0.64705882352941;
3767367   +      Q_DepVar0  =     0.35294117647058;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.35294117647058;
3767368   +      Q_DepVar1  =     0.64705882352941;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.64705882352941;
3767369   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767370   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767371   +      END;
MPRINT(SCORETABLES):   END;
3767372   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767373   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3767374   +      _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3767375   +      P_DepVar0  =     0.91304347826086;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91304347826086;
3767376   +      P_DepVar1  =     0.08695652173913;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08695652173913;
3767377   +      Q_DepVar0  =     0.91304347826086;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91304347826086;
3767378   +      Q_DepVar1  =     0.08695652173913;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08695652173913;
3767379   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767380   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767381   +      END;
MPRINT(SCORETABLES):   END;
3767382   +    END;
MPRINT(SCORETABLES):   END;
3767383   +  END;
MPRINT(SCORETABLES):   END;
3767384   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767385   +                 0.625 <= RANGE_campaign_acceptance  AND
3767386   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3767387   +  IF  NOT MISSING(RANGE_Recency ) AND
3767388   +        0.65656565656565 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.65656565656565 <= RANGE_Recency 
THEN DO;
3767389   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3767390   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3767391   +    IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
3767392   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3767393   +      _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3767394   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767395   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767396   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767397   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767398   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767399   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767400   +      END;
MPRINT(SCORETABLES):   END;
3767401   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767402   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3767403   +      _LEAF_  =                   34;
MPRINT(SCORETABLES):   _LEAF_ = 34;
3767404   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3767405   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3767406   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3767407   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3767408   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767409   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767410   +      END;
MPRINT(SCORETABLES):   END;
3767411   +    END;
MPRINT(SCORETABLES):   END;
3767412   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767413   +    _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3767414   +    _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3767415   +    P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3767416   +    P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3767417   +    Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3767418   +    Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3767419   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767420   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767421   +    END;
MPRINT(SCORETABLES):   END;
3767422   +  END;
MPRINT(SCORETABLES):   END;
3767423   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767424   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3767425   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3767426   +  _LEAF_  =                   35;
MPRINT(SCORETABLES):   _LEAF_ = 35;
3767427   +  P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3767428   +  P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3767429   +  Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3767430   +  Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3767431   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767432   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767433   +  END;
MPRINT(SCORETABLES):   END;
3767434   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767435   +  IF  NOT MISSING(RANGE_Recency ) AND
3767436   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3767437   +    IF  NOT MISSING(MntCard_Games ) AND
3767438   +          0.45839333185644 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.45839333185644 <= MntCard_Games 
THEN DO;
3767439   +      IF  NOT MISSING(MntMagazines ) AND
3767440   +        MntMagazines  <     0.00333333333333 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntMagazines ) AND MntMagazines < 0.00333333333333 THEN 
DO;
3767441   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3767442   +        _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3767443   +        P_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar0 = 0.5;
3767444   +        P_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar1 = 0.5;
3767445   +        Q_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.5;
3767446   +        Q_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.5;
3767447   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767448   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767449   +        END;
MPRINT(SCORETABLES):   END;
3767450   +      ELSE IF  NOT MISSING(MntMagazines ) AND
3767451   +            0.03653120142127 <= MntMagazines  AND
3767452   +        MntMagazines  <     0.04186254651655 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntMagazines ) AND 0.03653120142127 <= MntMagazines 
AND MntMagazines < 0.04186254651655 THEN DO;
3767453   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3767454   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3767455   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767456   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767457   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767458   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767459   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767460   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767461   +        END;
MPRINT(SCORETABLES):   END;
3767462   +      ELSE IF  NOT MISSING(MntMagazines ) AND
3767463   +            0.04186254651655 <= MntMagazines  AND
3767464   +        MntMagazines  <     0.06543452776768 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntMagazines ) AND 0.04186254651655 <= MntMagazines 
AND MntMagazines < 0.06543452776768 THEN DO;
3767465   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3767466   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3767467   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3767468   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3767469   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3767470   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3767471   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767472   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767473   +        END;
MPRINT(SCORETABLES):   END;
3767474   +      ELSE IF  NOT MISSING(MntMagazines ) AND
3767475   +            0.06543452776768 <= MntMagazines  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntMagazines ) AND 0.06543452776768 <= MntMagazines 
THEN DO;
3767476   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3767477   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3767478   +        P_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07142857142857;
3767479   +        P_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92857142857142;
3767480   +        Q_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07142857142857;
3767481   +        Q_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92857142857142;
3767482   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767483   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767484   +        END;
MPRINT(SCORETABLES):   END;
3767485   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767486   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3767487   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3767488   +        P_DepVar0  =     0.17391304347826;
MPRINT(SCORETABLES):   P_DepVar0 = 0.17391304347826;
3767489   +        P_DepVar1  =     0.82608695652173;
MPRINT(SCORETABLES):   P_DepVar1 = 0.82608695652173;
3767490   +        Q_DepVar0  =     0.17391304347826;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.17391304347826;
3767491   +        Q_DepVar1  =     0.82608695652173;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.82608695652173;
3767492   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767493   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767494   +        END;
MPRINT(SCORETABLES):   END;
3767495   +      END;
MPRINT(SCORETABLES):   END;
3767496   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767497   +      IF  NOT MISSING(NumDealsPurchases ) AND
3767498   +            0.15192307692307 <= NumDealsPurchases  AND
3767499   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3767500   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3767501   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3767502   +        P_DepVar0  =     0.79545454545454;
MPRINT(SCORETABLES):   P_DepVar0 = 0.79545454545454;
3767503   +        P_DepVar1  =     0.20454545454545;
MPRINT(SCORETABLES):   P_DepVar1 = 0.20454545454545;
3767504   +        Q_DepVar0  =     0.79545454545454;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.79545454545454;
3767505   +        Q_DepVar1  =     0.20454545454545;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.20454545454545;
3767506   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767507   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767508   +        END;
MPRINT(SCORETABLES):   END;
3767509   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3767510   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <= 
NumDealsPurchases THEN DO;
3767511   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3767512   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3767513   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767514   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767515   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767516   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767517   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767518   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767519   +        END;
MPRINT(SCORETABLES):   END;
3767520   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767521   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3767522   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3767523   +        P_DepVar0  =     0.97560975609756;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97560975609756;
3767524   +        P_DepVar1  =     0.02439024390243;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02439024390243;
3767525   +        Q_DepVar0  =     0.97560975609756;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97560975609756;
3767526   +        Q_DepVar1  =     0.02439024390243;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02439024390243;
3767527   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767528   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767529   +        END;
MPRINT(SCORETABLES):   END;
3767530   +      END;
MPRINT(SCORETABLES):   END;
3767531   +    END;
MPRINT(SCORETABLES):   END;
3767532   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3767533   +        0.13636363636363 <= RANGE_Recency  AND
3767534   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3767535   +    IF  NOT MISSING(NumDealsPurchases ) AND
3767536   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 
0.04653679653679 THEN DO;
3767537   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3767538   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3767539   +      IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
3767540   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3767541   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3767542   +        P_DepVar0  =      0.3076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3076923076923;
3767543   +        P_DepVar1  =     0.69230769230769;
MPRINT(SCORETABLES):   P_DepVar1 = 0.69230769230769;
3767544   +        Q_DepVar0  =      0.3076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3076923076923;
3767545   +        Q_DepVar1  =     0.69230769230769;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.69230769230769;
3767546   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767547   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767548   +        END;
MPRINT(SCORETABLES):   END;
3767549   +      ELSE IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
3767550   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3767551   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3767552   +        P_DepVar0  =                0.625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.625;
3767553   +        P_DepVar1  =                0.375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.375;
3767554   +        Q_DepVar0  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.625;
3767555   +        Q_DepVar1  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.375;
3767556   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767557   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767558   +        END;
MPRINT(SCORETABLES):   END;
3767559   +      ELSE IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
3767560   +        _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3767561   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3767562   +        P_DepVar0  =     0.86666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86666666666666;
3767563   +        P_DepVar1  =     0.13333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13333333333333;
3767564   +        Q_DepVar0  =     0.86666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86666666666666;
3767565   +        Q_DepVar1  =     0.13333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13333333333333;
3767566   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767567   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767568   +        END;
MPRINT(SCORETABLES):   END;
3767569   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767570   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3767571   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3767572   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767573   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767574   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767575   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767576   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767577   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767578   +        END;
MPRINT(SCORETABLES):   END;
3767579   +      END;
MPRINT(SCORETABLES):   END;
3767580   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3767581   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <= 
NumDealsPurchases THEN DO;
3767582   +      IF  NOT MISSING(MntCard_Games ) AND
3767583   +            0.35027388922702 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.35027388922702 <= MntCard_Games 
THEN DO;
3767584   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3767585   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3767586   +        P_DepVar0  =     0.41935483870967;
MPRINT(SCORETABLES):   P_DepVar0 = 0.41935483870967;
3767587   +        P_DepVar1  =     0.58064516129032;
MPRINT(SCORETABLES):   P_DepVar1 = 0.58064516129032;
3767588   +        Q_DepVar0  =     0.41935483870967;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.41935483870967;
3767589   +        Q_DepVar1  =     0.58064516129032;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.58064516129032;
3767590   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767591   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767592   +        END;
MPRINT(SCORETABLES):   END;
3767593   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767594   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3767595   +        _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3767596   +        P_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9090909090909;
3767597   +        P_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09090909090909;
3767598   +        Q_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9090909090909;
3767599   +        Q_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09090909090909;
3767600   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767601   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767602   +        END;
MPRINT(SCORETABLES):   END;
3767603   +      END;
MPRINT(SCORETABLES):   END;
3767604   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767605   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3767606   +      _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3767607   +      P_DepVar0  =     0.97254901960784;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97254901960784;
3767608   +      P_DepVar1  =     0.02745098039215;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02745098039215;
3767609   +      Q_DepVar0  =     0.97254901960784;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97254901960784;
3767610   +      Q_DepVar1  =     0.02745098039215;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02745098039215;
3767611   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767612   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767613   +      END;
MPRINT(SCORETABLES):   END;
3767614   +    END;
MPRINT(SCORETABLES):   END;
3767615   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767616   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3767617   +           0.4068287037037 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.4068287037037 <= 
NumCatalogPurchases THEN DO;
3767618   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3767619   +            0.43739290574655 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.43739290574655 <= 
RANGE_average_purchase THEN DO;
3767620   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3767621   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3767622   +        P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3767623   +        P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3767624   +        Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3767625   +        Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3767626   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767627   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767628   +        END;
MPRINT(SCORETABLES):   END;
3767629   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767630   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3767631   +        _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3767632   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767633   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767634   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767635   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767636   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767637   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767638   +        END;
MPRINT(SCORETABLES):   END;
3767639   +      END;
MPRINT(SCORETABLES):   END;
3767640   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767641   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3767642   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3767643   +      P_DepVar0  =     0.99509322865554;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99509322865554;
3767644   +      P_DepVar1  =     0.00490677134445;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00490677134445;
3767645   +      Q_DepVar0  =     0.99509322865554;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99509322865554;
3767646   +      Q_DepVar1  =     0.00490677134445;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00490677134445;
3767647   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767648   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767649   +      END;
MPRINT(SCORETABLES):   END;
3767650   +    END;
MPRINT(SCORETABLES):   END;
3767651   +  END;
MPRINT(SCORETABLES):   END;
3767652   +
3767653   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3767654   +IF  F_DepVar  NE '0'
3767655   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3767656   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3767657   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3767658   + END;
MPRINT(SCORETABLES):   END;
3767659   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767660   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3767661   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3767662   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3767663   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3767664   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3767665   +       END;
MPRINT(SCORETABLES):   END;
3767666   + END;
MPRINT(SCORETABLES):   END;
3767667   +
3767668   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767669   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3767670   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767671   +
3767672   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3767673   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767674   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3767675   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767676   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767677   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3767678   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767679   +end;
MPRINT(SCORETABLES):   end;
3767680   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767681   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3767682   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767683   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767684   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3767685   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767686   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3767687   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3767688   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3767689   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3767690   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3767691   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3767692   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3767693   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3767694   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767695   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3767696   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3767697   +
3767698   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3767699   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3767700   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3767701   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3767702   +
3767703   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3767704   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3767705   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3767706   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3767707   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3767708   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3767709   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3767710   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3767711   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3767712   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3767713   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3767714   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3767715   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3767716   +
3767717   +
3767718   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3767719   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3767720   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3767721   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3767722   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3767723   +
3767724   +
3767725   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3767726   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3767727   +
3767728   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3767729   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767730   +                 0.125 <= RANGE_campaign_acceptance  AND
3767731   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3767732   +  IF  NOT MISSING(RANGE_Recency ) AND
3767733   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3767734   +    IF  NOT MISSING(MntCard_Games ) AND
3767735   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games 
THEN DO;
3767736   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3767737   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3767738   +      P_DepVar0  =     0.09677419354838;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09677419354838;
3767739   +      P_DepVar1  =     0.90322580645161;
MPRINT(SCORETABLES):   P_DepVar1 = 0.90322580645161;
3767740   +      Q_DepVar0  =     0.09677419354838;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09677419354838;
3767741   +      Q_DepVar1  =     0.90322580645161;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.90322580645161;
3767742   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767743   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767744   +      END;
MPRINT(SCORETABLES):   END;
3767745   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767746   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3767747   +            0.24568965517241 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.24568965517241 <= 
NumCatalogPurchases THEN DO;
3767748   +        IF  NOT MISSING(NumDealsPurchases ) AND
3767749   +              0.11896551724137 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.11896551724137 <= 
NumDealsPurchases THEN DO;
3767750   +          _NODE_  =                   75;
MPRINT(SCORETABLES):   _NODE_ = 75;
3767751   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3767752   +          P_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07142857142857;
3767753   +          P_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92857142857142;
3767754   +          Q_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07142857142857;
3767755   +          Q_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92857142857142;
3767756   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767757   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767758   +          END;
MPRINT(SCORETABLES):   END;
3767759   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767760   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3767761   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3767762   +          P_DepVar0  =     0.63636363636363;
MPRINT(SCORETABLES):   P_DepVar0 = 0.63636363636363;
3767763   +          P_DepVar1  =     0.36363636363636;
MPRINT(SCORETABLES):   P_DepVar1 = 0.36363636363636;
3767764   +          Q_DepVar0  =     0.63636363636363;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.63636363636363;
3767765   +          Q_DepVar1  =     0.36363636363636;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.36363636363636;
3767766   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767767   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767768   +          END;
MPRINT(SCORETABLES):   END;
3767769   +        END;
MPRINT(SCORETABLES):   END;
3767770   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767771   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3767772   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3767773   +        P_DepVar0  =     0.86363636363636;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86363636363636;
3767774   +        P_DepVar1  =     0.13636363636363;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13636363636363;
3767775   +        Q_DepVar0  =     0.86363636363636;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86363636363636;
3767776   +        Q_DepVar1  =     0.13636363636363;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13636363636363;
3767777   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767778   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767779   +        END;
MPRINT(SCORETABLES):   END;
3767780   +      END;
MPRINT(SCORETABLES):   END;
3767781   +    END;
MPRINT(SCORETABLES):   END;
3767782   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767783   +    IF  NOT MISSING(MntCard_Games ) AND
3767784   +          0.40010994235899 <= MntCard_Games  AND
3767785   +      MntCard_Games  <     0.59048476559757 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40010994235899 <= MntCard_Games 
AND MntCard_Games < 0.59048476559757 THEN DO;
3767786   +      IF  NOT MISSING(NumDealsPurchases ) AND
3767787   +            0.26785714285714 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.26785714285714 <= 
NumDealsPurchases THEN DO;
3767788   +        _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3767789   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3767790   +        P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3767791   +        P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3767792   +        Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3767793   +        Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3767794   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767795   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767796   +        END;
MPRINT(SCORETABLES):   END;
3767797   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767798   +        _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3767799   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3767800   +        P_DepVar0  =     0.91525423728813;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91525423728813;
3767801   +        P_DepVar1  =     0.08474576271186;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08474576271186;
3767802   +        Q_DepVar0  =     0.91525423728813;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91525423728813;
3767803   +        Q_DepVar1  =     0.08474576271186;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08474576271186;
3767804   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767805   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767806   +        END;
MPRINT(SCORETABLES):   END;
3767807   +      END;
MPRINT(SCORETABLES):   END;
3767808   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3767809   +          0.59048476559757 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.59048476559757 <= 
MntCard_Games THEN DO;
3767810   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3767811   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3767812   +      P_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.45454545454545;
3767813   +      P_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.54545454545454;
3767814   +      Q_DepVar0  =     0.45454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.45454545454545;
3767815   +      Q_DepVar1  =     0.54545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.54545454545454;
3767816   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767817   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767818   +      END;
MPRINT(SCORETABLES):   END;
3767819   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767820   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3767821   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3767822   +      P_DepVar0  =     0.99248120300751;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99248120300751;
3767823   +      P_DepVar1  =     0.00751879699248;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00751879699248;
3767824   +      Q_DepVar0  =     0.99248120300751;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99248120300751;
3767825   +      Q_DepVar1  =     0.00751879699248;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00751879699248;
3767826   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767827   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767828   +      END;
MPRINT(SCORETABLES):   END;
3767829   +    END;
MPRINT(SCORETABLES):   END;
3767830   +  END;
MPRINT(SCORETABLES):   END;
3767831   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767832   +                 0.375 <= RANGE_campaign_acceptance  AND
3767833   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3767834   +  IF  NOT MISSING(RANGE_Recency ) AND
3767835   +    RANGE_Recency  <     0.42424242424242 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42424242424242 
THEN DO;
3767836   +    _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3767837   +    _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3767838   +    P_DepVar0  =                 0.15;
MPRINT(SCORETABLES):   P_DepVar0 = 0.15;
3767839   +    P_DepVar1  =                 0.85;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85;
3767840   +    Q_DepVar0  =                 0.15;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.15;
3767841   +    Q_DepVar1  =                 0.85;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85;
3767842   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767843   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767844   +    END;
MPRINT(SCORETABLES):   END;
3767845   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767846   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3767847   +          0.31965944272445 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31965944272445 <= 
NumCatalogPurchases THEN DO;
3767848   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3767849   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3767850   +      IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
3767851   +        _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3767852   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3767853   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3767854   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3767855   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3767856   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3767857   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767858   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767859   +        END;
MPRINT(SCORETABLES):   END;
3767860   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767861   +        _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3767862   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3767863   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767864   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767865   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767866   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767867   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767868   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767869   +        END;
MPRINT(SCORETABLES):   END;
3767870   +      END;
MPRINT(SCORETABLES):   END;
3767871   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767872   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3767873   +      _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3767874   +      P_DepVar0  =     0.91836734693877;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91836734693877;
3767875   +      P_DepVar1  =     0.08163265306122;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08163265306122;
3767876   +      Q_DepVar0  =     0.91836734693877;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91836734693877;
3767877   +      Q_DepVar1  =     0.08163265306122;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08163265306122;
3767878   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767879   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767880   +      END;
MPRINT(SCORETABLES):   END;
3767881   +    END;
MPRINT(SCORETABLES):   END;
3767882   +  END;
MPRINT(SCORETABLES):   END;
3767883   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767884   +                 0.625 <= RANGE_campaign_acceptance  AND
3767885   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3767886   +  IF  NOT MISSING(RANGE_Recency ) AND
3767887   +        0.65656565656565 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.65656565656565 <= RANGE_Recency 
THEN DO;
3767888   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3767889   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3767890   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3767891   +      _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3767892   +      _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3767893   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3767894   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3767895   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3767896   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3767897   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767898   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767899   +      END;
MPRINT(SCORETABLES):   END;
3767900   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767901   +      _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3767902   +      _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3767903   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3767904   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3767905   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3767906   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3767907   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767908   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767909   +      END;
MPRINT(SCORETABLES):   END;
3767910   +    END;
MPRINT(SCORETABLES):   END;
3767911   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767912   +    _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3767913   +    _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3767914   +    P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3767915   +    P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3767916   +    Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3767917   +    Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3767918   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767919   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767920   +    END;
MPRINT(SCORETABLES):   END;
3767921   +  END;
MPRINT(SCORETABLES):   END;
3767922   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3767923   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3767924   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3767925   +  _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3767926   +  P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3767927   +  P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3767928   +  Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3767929   +  Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3767930   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767931   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767932   +  END;
MPRINT(SCORETABLES):   END;
3767933   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767934   +  IF  NOT MISSING(RANGE_Recency ) AND
3767935   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3767936   +    IF  NOT MISSING(MntCard_Games ) AND
3767937   +          0.53407239234544 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.53407239234544 <= MntCard_Games 
THEN DO;
3767938   +      _NODE_  =                   17;
MPRINT(SCORETABLES):   _NODE_ = 17;
3767939   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3767940   +      P_DepVar0  =     0.23684210526315;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23684210526315;
3767941   +      P_DepVar1  =     0.76315789473684;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76315789473684;
3767942   +      Q_DepVar0  =     0.23684210526315;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23684210526315;
3767943   +      Q_DepVar1  =     0.76315789473684;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76315789473684;
3767944   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767945   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767946   +      END;
MPRINT(SCORETABLES):   END;
3767947   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767948   +      IF  NOT MISSING(NumDealsPurchases ) AND
3767949   +            0.15192307692307 <= NumDealsPurchases  AND
3767950   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3767951   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3767952   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3767953   +        P_DepVar0  =     0.75510204081632;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75510204081632;
3767954   +        P_DepVar1  =     0.24489795918367;
MPRINT(SCORETABLES):   P_DepVar1 = 0.24489795918367;
3767955   +        Q_DepVar0  =     0.75510204081632;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75510204081632;
3767956   +        Q_DepVar1  =     0.24489795918367;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.24489795918367;
3767957   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767958   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767959   +        END;
MPRINT(SCORETABLES):   END;
3767960   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3767961   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <= 
NumDealsPurchases THEN DO;
3767962   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3767963   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3767964   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767965   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767966   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767967   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767968   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767969   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767970   +        END;
MPRINT(SCORETABLES):   END;
3767971   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3767972   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3767973   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3767974   +        P_DepVar0  =     0.95419847328244;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95419847328244;
3767975   +        P_DepVar1  =     0.04580152671755;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04580152671755;
3767976   +        Q_DepVar0  =     0.95419847328244;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95419847328244;
3767977   +        Q_DepVar1  =     0.04580152671755;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04580152671755;
3767978   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3767979   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3767980   +        END;
MPRINT(SCORETABLES):   END;
3767981   +      END;
MPRINT(SCORETABLES):   END;
3767982   +    END;
MPRINT(SCORETABLES):   END;
3767983   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3767984   +        0.13636363636363 <= RANGE_Recency  AND
3767985   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3767986   +    IF  NOT MISSING(NumDealsPurchases ) AND
3767987   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 
0.04653679653679 THEN DO;
3767988   +      IF  NOT MISSING(MntCard_Games ) AND
3767989   +            0.63883384460336 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.63883384460336 <= MntCard_Games 
THEN DO;
3767990   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3767991   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3767992   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3767993   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3767994   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3767995   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3767996   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3767997   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3767998   +        END;
MPRINT(SCORETABLES):   END;
3767999   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768000   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3768001   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3768002   +        P_DepVar0  =     0.85416666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85416666666666;
3768003   +        P_DepVar1  =     0.14583333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14583333333333;
3768004   +        Q_DepVar0  =     0.85416666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85416666666666;
3768005   +        Q_DepVar1  =     0.14583333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14583333333333;
3768006   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768007   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768008   +        END;
MPRINT(SCORETABLES):   END;
3768009   +      END;
MPRINT(SCORETABLES):   END;
3768010   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3768011   +          0.20294117647058 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.20294117647058 <= 
NumDealsPurchases THEN DO;
3768012   +      IF  NOT MISSING(MntCard_Games ) AND
3768013   +            0.35027388922702 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.35027388922702 <= MntCard_Games 
THEN DO;
3768014   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3768015   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3768016   +        P_DepVar0  =     0.39393939393939;
MPRINT(SCORETABLES):   P_DepVar0 = 0.39393939393939;
3768017   +        P_DepVar1  =      0.6060606060606;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6060606060606;
3768018   +        Q_DepVar0  =     0.39393939393939;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.39393939393939;
3768019   +        Q_DepVar1  =      0.6060606060606;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6060606060606;
3768020   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768021   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768022   +        END;
MPRINT(SCORETABLES):   END;
3768023   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768024   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3768025   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3768026   +        P_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9090909090909;
3768027   +        P_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09090909090909;
3768028   +        Q_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9090909090909;
3768029   +        Q_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09090909090909;
3768030   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768031   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768032   +        END;
MPRINT(SCORETABLES):   END;
3768033   +      END;
MPRINT(SCORETABLES):   END;
3768034   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768035   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3768036   +      _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3768037   +      P_DepVar0  =     0.97348484848484;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97348484848484;
3768038   +      P_DepVar1  =     0.02651515151515;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02651515151515;
3768039   +      Q_DepVar0  =     0.97348484848484;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97348484848484;
3768040   +      Q_DepVar1  =     0.02651515151515;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02651515151515;
3768041   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768042   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768043   +      END;
MPRINT(SCORETABLES):   END;
3768044   +    END;
MPRINT(SCORETABLES):   END;
3768045   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768046   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3768047   +           0.4068287037037 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.4068287037037 <= 
NumCatalogPurchases THEN DO;
3768048   +      IF  NOT MISSING(RANGE_Recency ) AND
3768049   +        RANGE_Recency  <     0.66161616161616 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.66161616161616 
THEN DO;
3768050   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3768051   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3768052   +        P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3768053   +        P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3768054   +        Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3768055   +        Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3768056   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768057   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768058   +        END;
MPRINT(SCORETABLES):   END;
3768059   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768060   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3768061   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3768062   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768063   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768064   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768065   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768066   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768067   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768068   +        END;
MPRINT(SCORETABLES):   END;
3768069   +      END;
MPRINT(SCORETABLES):   END;
3768070   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768071   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3768072   +      _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3768073   +      P_DepVar0  =     0.99415774099318;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99415774099318;
3768074   +      P_DepVar1  =     0.00584225900681;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00584225900681;
3768075   +      Q_DepVar0  =     0.99415774099318;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99415774099318;
3768076   +      Q_DepVar1  =     0.00584225900681;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00584225900681;
3768077   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768078   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768079   +      END;
MPRINT(SCORETABLES):   END;
3768080   +    END;
MPRINT(SCORETABLES):   END;
3768081   +  END;
MPRINT(SCORETABLES):   END;
3768082   +
3768083   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3768084   +IF  F_DepVar  NE '0'
3768085   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3768086   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3768087   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3768088   + END;
MPRINT(SCORETABLES):   END;
3768089   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768090   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3768091   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3768092   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3768093   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3768094   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3768095   +       END;
MPRINT(SCORETABLES):   END;
3768096   + END;
MPRINT(SCORETABLES):   END;
3768097   +
3768098   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768099   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3768100   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768101   +
3768102   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3768103   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768104   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3768105   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768106   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768107   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3768108   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768109   +end;
MPRINT(SCORETABLES):   end;
3768110   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768111   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3768112   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768113   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768114   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3768115   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768116   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3768117   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3768118   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768119   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3768120   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768121   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768122   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3768123   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768124   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768125   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3768126   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768127   +
3768128   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3768129   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3768130   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3768131   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3768132   +
3768133   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3768134   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3768135   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3768136   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3768137   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3768138   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3768139   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3768140   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3768141   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3768142   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3768143   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3768144   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3768145   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3768146   +
3768147   +
3768148   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3768149   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3768150   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3768151   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3768152   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3768153   +
3768154   +
3768155   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3768156   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3768157   +
3768158   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3768159   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768160   +                 0.125 <= RANGE_campaign_acceptance  AND
3768161   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3768162   +  IF  NOT MISSING(RANGE_Recency ) AND
3768163   +    RANGE_Recency  <     0.26767676767676 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.26767676767676 
THEN DO;
3768164   +    IF  NOT MISSING(MntCard_Games ) AND
3768165   +          0.33764835721522 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.33764835721522 <= MntCard_Games 
THEN DO;
3768166   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3768167   +      _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3768168   +      P_DepVar0  =     0.04081632653061;
MPRINT(SCORETABLES):   P_DepVar0 = 0.04081632653061;
3768169   +      P_DepVar1  =     0.95918367346938;
MPRINT(SCORETABLES):   P_DepVar1 = 0.95918367346938;
3768170   +      Q_DepVar0  =     0.04081632653061;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.04081632653061;
3768171   +      Q_DepVar1  =     0.95918367346938;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.95918367346938;
3768172   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768173   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768174   +      END;
MPRINT(SCORETABLES):   END;
3768175   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768176   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3768177   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <= 
NumCatalogPurchases THEN DO;
3768178   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3768179   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3768180   +        P_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23529411764705;
3768181   +        P_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76470588235294;
3768182   +        Q_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23529411764705;
3768183   +        Q_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76470588235294;
3768184   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768185   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768186   +        END;
MPRINT(SCORETABLES):   END;
3768187   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768188   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3768189   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3768190   +        P_DepVar0  =     0.80487804878048;
MPRINT(SCORETABLES):   P_DepVar0 = 0.80487804878048;
3768191   +        P_DepVar1  =     0.19512195121951;
MPRINT(SCORETABLES):   P_DepVar1 = 0.19512195121951;
3768192   +        Q_DepVar0  =     0.80487804878048;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.80487804878048;
3768193   +        Q_DepVar1  =     0.19512195121951;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.19512195121951;
3768194   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768195   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768196   +        END;
MPRINT(SCORETABLES):   END;
3768197   +      END;
MPRINT(SCORETABLES):   END;
3768198   +    END;
MPRINT(SCORETABLES):   END;
3768199   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3768200   +        0.26767676767676 <= RANGE_Recency  AND
3768201   +    RANGE_Recency  <     0.45959595959595 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.26767676767676 <= 
RANGE_Recency AND RANGE_Recency < 0.45959595959595 THEN DO;
3768202   +    IF  NOT MISSING(MntCard_Games ) AND
3768203   +          0.50237419982173 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.50237419982173 <= MntCard_Games 
THEN DO;
3768204   +      _NODE_  =                   26;
MPRINT(SCORETABLES):   _NODE_ = 26;
3768205   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3768206   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3768207   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3768208   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3768209   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3768210   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768211   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768212   +      END;
MPRINT(SCORETABLES):   END;
3768213   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768214   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3768215   +      _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3768216   +      P_DepVar0  =     0.82222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.82222222222222;
3768217   +      P_DepVar1  =     0.17777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.17777777777777;
3768218   +      Q_DepVar0  =     0.82222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.82222222222222;
3768219   +      Q_DepVar1  =     0.17777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.17777777777777;
3768220   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768221   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768222   +      END;
MPRINT(SCORETABLES):   END;
3768223   +    END;
MPRINT(SCORETABLES):   END;
3768224   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768225   +    _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3768226   +    _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3768227   +    P_DepVar0  =     0.93157894736842;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93157894736842;
3768228   +    P_DepVar1  =     0.06842105263157;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06842105263157;
3768229   +    Q_DepVar0  =     0.93157894736842;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93157894736842;
3768230   +    Q_DepVar1  =     0.06842105263157;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06842105263157;
3768231   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768232   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768233   +    END;
MPRINT(SCORETABLES):   END;
3768234   +  END;
MPRINT(SCORETABLES):   END;
3768235   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768236   +                 0.375 <= RANGE_campaign_acceptance  AND
3768237   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3768238   +  IF  NOT MISSING(RANGE_Recency ) AND
3768239   +    RANGE_Recency  <     0.42929292929292 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42929292929292 
THEN DO;
3768240   +    _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3768241   +    _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3768242   +    P_DepVar0  =     0.13636363636363;
MPRINT(SCORETABLES):   P_DepVar0 = 0.13636363636363;
3768243   +    P_DepVar1  =     0.86363636363636;
MPRINT(SCORETABLES):   P_DepVar1 = 0.86363636363636;
3768244   +    Q_DepVar0  =     0.13636363636363;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.13636363636363;
3768245   +    Q_DepVar1  =     0.86363636363636;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.86363636363636;
3768246   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768247   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768248   +    END;
MPRINT(SCORETABLES):   END;
3768249   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768250   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3768251   +          0.31965944272445 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31965944272445 <= 
NumCatalogPurchases THEN DO;
3768252   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768253   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768254   +      IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
3768255   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3768256   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3768257   +        P_DepVar0  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.66666666666666;
3768258   +        P_DepVar1  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.33333333333333;
3768259   +        Q_DepVar0  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.66666666666666;
3768260   +        Q_DepVar1  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.33333333333333;
3768261   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768262   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768263   +        END;
MPRINT(SCORETABLES):   END;
3768264   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768265   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3768266   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3768267   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3768268   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3768269   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3768270   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3768271   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768272   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768273   +        END;
MPRINT(SCORETABLES):   END;
3768274   +      END;
MPRINT(SCORETABLES):   END;
3768275   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768276   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3768277   +      _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3768278   +      P_DepVar0  =     0.95454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95454545454545;
3768279   +      P_DepVar1  =     0.04545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04545454545454;
3768280   +      Q_DepVar0  =     0.95454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95454545454545;
3768281   +      Q_DepVar1  =     0.04545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04545454545454;
3768282   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768283   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768284   +      END;
MPRINT(SCORETABLES):   END;
3768285   +    END;
MPRINT(SCORETABLES):   END;
3768286   +  END;
MPRINT(SCORETABLES):   END;
3768287   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768288   +                 0.625 <= RANGE_campaign_acceptance  AND
3768289   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3768290   +  IF  NOT MISSING(RANGE_Recency ) AND
3768291   +        0.65656565656565 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.65656565656565 <= RANGE_Recency 
THEN DO;
3768292   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768293   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768294   +    IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('TOGETHER' ,'MARRIED' ) THEN DO;
3768295   +      _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3768296   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3768297   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768298   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768299   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768300   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768301   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768302   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768303   +      END;
MPRINT(SCORETABLES):   END;
3768304   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768305   +      _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3768306   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3768307   +      P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3768308   +      P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3768309   +      Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3768310   +      Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3768311   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768312   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768313   +      END;
MPRINT(SCORETABLES):   END;
3768314   +    END;
MPRINT(SCORETABLES):   END;
3768315   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768316   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3768317   +    _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3768318   +    P_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1;
3768319   +    P_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9;
3768320   +    Q_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1;
3768321   +    Q_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9;
3768322   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768323   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768324   +    END;
MPRINT(SCORETABLES):   END;
3768325   +  END;
MPRINT(SCORETABLES):   END;
3768326   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768327   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3768328   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3768329   +  _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3768330   +  P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3768331   +  P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3768332   +  Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3768333   +  Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3768334   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768335   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768336   +  END;
MPRINT(SCORETABLES):   END;
3768337   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768338   +  IF  NOT MISSING(RANGE_Recency ) AND
3768339   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3768340   +    IF  NOT MISSING(MntCard_Games ) AND
3768341   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games 
THEN DO;
3768342   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3768343   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3768344   +      P_DepVar0  =     0.27083333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.27083333333333;
3768345   +      P_DepVar1  =     0.72916666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.72916666666666;
3768346   +      Q_DepVar0  =     0.27083333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.27083333333333;
3768347   +      Q_DepVar1  =     0.72916666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.72916666666666;
3768348   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768349   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768350   +      END;
MPRINT(SCORETABLES):   END;
3768351   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768352   +      IF  NOT MISSING(NumDealsPurchases ) AND
3768353   +            0.15192307692307 <= NumDealsPurchases  AND
3768354   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3768355   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3768356   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3768357   +        P_DepVar0  =     0.77906976744186;
MPRINT(SCORETABLES):   P_DepVar0 = 0.77906976744186;
3768358   +        P_DepVar1  =     0.22093023255813;
MPRINT(SCORETABLES):   P_DepVar1 = 0.22093023255813;
3768359   +        Q_DepVar0  =     0.77906976744186;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.77906976744186;
3768360   +        Q_DepVar1  =     0.22093023255813;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.22093023255813;
3768361   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768362   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768363   +        END;
MPRINT(SCORETABLES):   END;
3768364   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3768365   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <= 
NumDealsPurchases THEN DO;
3768366   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3768367   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3768368   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3768369   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3768370   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3768371   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3768372   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768373   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768374   +        END;
MPRINT(SCORETABLES):   END;
3768375   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768376   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3768377   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3768378   +        P_DepVar0  =                0.976;
MPRINT(SCORETABLES):   P_DepVar0 = 0.976;
3768379   +        P_DepVar1  =                0.024;
MPRINT(SCORETABLES):   P_DepVar1 = 0.024;
3768380   +        Q_DepVar0  =                0.976;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.976;
3768381   +        Q_DepVar1  =                0.024;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.024;
3768382   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768383   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768384   +        END;
MPRINT(SCORETABLES):   END;
3768385   +      END;
MPRINT(SCORETABLES):   END;
3768386   +    END;
MPRINT(SCORETABLES):   END;
3768387   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3768388   +        0.13636363636363 <= RANGE_Recency  AND
3768389   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3768390   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3768391   +          0.34891304347826 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.34891304347826 <= 
NumCatalogPurchases THEN DO;
3768392   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768393   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768394   +      IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
3768395   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3768396   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3768397   +        P_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08333333333333;
3768398   +        P_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91666666666666;
3768399   +        Q_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08333333333333;
3768400   +        Q_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91666666666666;
3768401   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768402   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768403   +        END;
MPRINT(SCORETABLES):   END;
3768404   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768405   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3768406   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3768407   +        P_DepVar0  =               0.8125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8125;
3768408   +        P_DepVar1  =               0.1875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1875;
3768409   +        Q_DepVar0  =               0.8125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8125;
3768410   +        Q_DepVar1  =               0.1875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1875;
3768411   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768412   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768413   +        END;
MPRINT(SCORETABLES):   END;
3768414   +      END;
MPRINT(SCORETABLES):   END;
3768415   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768416   +      IF  NOT MISSING(NumDealsPurchases ) AND
3768417   +            0.21059113300492 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.21059113300492 <= 
NumDealsPurchases THEN DO;
3768418   +        IF  NOT MISSING(MntCard_Games ) AND
3768419   +          MntCard_Games  <     0.35027388922702 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.35027388922702 
THEN DO;
3768420   +          _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3768421   +          _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3768422   +          P_DepVar0  =     0.96153846153846;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96153846153846;
3768423   +          P_DepVar1  =     0.03846153846153;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03846153846153;
3768424   +          Q_DepVar0  =     0.96153846153846;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96153846153846;
3768425   +          Q_DepVar1  =     0.03846153846153;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03846153846153;
3768426   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768427   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768428   +          END;
MPRINT(SCORETABLES):   END;
3768429   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768430   +          _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3768431   +          _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3768432   +          P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3768433   +          P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3768434   +          Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3768435   +          Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3768436   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768437   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768438   +          END;
MPRINT(SCORETABLES):   END;
3768439   +        END;
MPRINT(SCORETABLES):   END;
3768440   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768441   +        IF  NOT MISSING(MntCard_Games ) AND
3768442   +              0.61800440205429 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.61800440205429 <= MntCard_Games 
THEN DO;
3768443   +          _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3768444   +          _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3768445   +          P_DepVar0  =     0.44444444444444;
MPRINT(SCORETABLES):   P_DepVar0 = 0.44444444444444;
3768446   +          P_DepVar1  =     0.55555555555555;
MPRINT(SCORETABLES):   P_DepVar1 = 0.55555555555555;
3768447   +          Q_DepVar0  =     0.44444444444444;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.44444444444444;
3768448   +          Q_DepVar1  =     0.55555555555555;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.55555555555555;
3768449   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768450   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768451   +          END;
MPRINT(SCORETABLES):   END;
3768452   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768453   +          _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3768454   +          _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3768455   +          P_DepVar0  =     0.98214285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98214285714285;
3768456   +          P_DepVar1  =     0.01785714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01785714285714;
3768457   +          Q_DepVar0  =     0.98214285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98214285714285;
3768458   +          Q_DepVar1  =     0.01785714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01785714285714;
3768459   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768460   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768461   +          END;
MPRINT(SCORETABLES):   END;
3768462   +        END;
MPRINT(SCORETABLES):   END;
3768463   +      END;
MPRINT(SCORETABLES):   END;
3768464   +    END;
MPRINT(SCORETABLES):   END;
3768465   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768466   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3768467   +    _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3768468   +    P_DepVar0  =     0.99037536092396;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99037536092396;
3768469   +    P_DepVar1  =     0.00962463907603;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00962463907603;
3768470   +    Q_DepVar0  =     0.99037536092396;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99037536092396;
3768471   +    Q_DepVar1  =     0.00962463907603;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00962463907603;
3768472   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768473   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768474   +    END;
MPRINT(SCORETABLES):   END;
3768475   +  END;
MPRINT(SCORETABLES):   END;
3768476   +
3768477   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3768478   +IF  F_DepVar  NE '0'
3768479   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3768480   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3768481   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3768482   + END;
MPRINT(SCORETABLES):   END;
3768483   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768484   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3768485   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3768486   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3768487   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3768488   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3768489   +       END;
MPRINT(SCORETABLES):   END;
3768490   + END;
MPRINT(SCORETABLES):   END;
3768491   +
3768492   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768493   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3768494   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768495   +
3768496   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3768497   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768498   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3768499   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768500   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768501   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3768502   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768503   +end;
MPRINT(SCORETABLES):   end;
3768504   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768505   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3768506   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768507   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768508   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3768509   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768510   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3768511   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3768512   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3768513   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3768514   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3768515   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3768516   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3768517   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3768518   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768519   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3768520   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768521   +
3768522   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3768523   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3768524   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3768525   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3768526   +
3768527   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3768528   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3768529   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3768530   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3768531   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3768532   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3768533   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3768534   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3768535   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3768536   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3768537   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3768538   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3768539   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3768540   +
3768541   +
3768542   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3768543   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3768544   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3768545   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3768546   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3768547   +
3768548   +
3768549   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3768550   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3768551   +
3768552   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3768553   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768554   +                 0.125 <= RANGE_campaign_acceptance  AND
3768555   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3768556   +  IF  NOT MISSING(RANGE_Recency ) AND
3768557   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3768558   +    IF  NOT MISSING(MntCard_Games ) AND
3768559   +          0.37104462156395 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.37104462156395 <= MntCard_Games 
THEN DO;
3768560   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3768561   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3768562   +      P_DepVar0  =      0.1076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1076923076923;
3768563   +      P_DepVar1  =     0.89230769230769;
MPRINT(SCORETABLES):   P_DepVar1 = 0.89230769230769;
3768564   +      Q_DepVar0  =      0.1076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1076923076923;
3768565   +      Q_DepVar1  =     0.89230769230769;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.89230769230769;
3768566   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768567   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768568   +      END;
MPRINT(SCORETABLES):   END;
3768569   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768570   +      IF  NOT MISSING(NumDealsPurchases ) AND
3768571   +            0.12132352941176 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.12132352941176 <= 
NumDealsPurchases THEN DO;
3768572   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3768573   +          NumCatalogPurchases  <     0.18614718614718 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 
0.18614718614718 THEN DO;
3768574   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3768575   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3768576   +          P_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9090909090909;
3768577   +          P_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09090909090909;
3768578   +          Q_DepVar0  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9090909090909;
3768579   +          Q_DepVar1  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09090909090909;
3768580   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768581   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768582   +          END;
MPRINT(SCORETABLES):   END;
3768583   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768584   +          IF  NOT MISSING(RANGE_Frq ) AND
3768585   +            RANGE_Frq  <     0.11666666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Frq ) AND RANGE_Frq < 0.11666666666666 THEN DO;
3768586   +            _NODE_  =                   75;
MPRINT(SCORETABLES):   _NODE_ = 75;
3768587   +            _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3768588   +            P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3768589   +            P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3768590   +            Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3768591   +            Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3768592   +            I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768593   +            U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768594   +            END;
MPRINT(SCORETABLES):   END;
3768595   +          ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768596   +            _NODE_  =                   76;
MPRINT(SCORETABLES):   _NODE_ = 76;
3768597   +            _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3768598   +            P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3768599   +            P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3768600   +            Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3768601   +            Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3768602   +            I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768603   +            U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768604   +            END;
MPRINT(SCORETABLES):   END;
3768605   +          END;
MPRINT(SCORETABLES):   END;
3768606   +        END;
MPRINT(SCORETABLES):   END;
3768607   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768608   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3768609   +              0.27951388888888 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27951388888888 <= 
NumCatalogPurchases THEN DO;
3768610   +          _NODE_  =                   70;
MPRINT(SCORETABLES):   _NODE_ = 70;
3768611   +          _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3768612   +          P_DepVar0  =     0.46666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.46666666666666;
3768613   +          P_DepVar1  =     0.53333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.53333333333333;
3768614   +          Q_DepVar0  =     0.46666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.46666666666666;
3768615   +          Q_DepVar1  =     0.53333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.53333333333333;
3768616   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768617   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768618   +          END;
MPRINT(SCORETABLES):   END;
3768619   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768620   +          _NODE_  =                   69;
MPRINT(SCORETABLES):   _NODE_ = 69;
3768621   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3768622   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768623   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768624   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768625   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768626   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768627   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768628   +          END;
MPRINT(SCORETABLES):   END;
3768629   +        END;
MPRINT(SCORETABLES):   END;
3768630   +      END;
MPRINT(SCORETABLES):   END;
3768631   +    END;
MPRINT(SCORETABLES):   END;
3768632   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768633   +    IF  NOT MISSING(NumDealsPurchases ) AND
3768634   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <= 
NumDealsPurchases THEN DO;
3768635   +      IF  NOT MISSING(MntCard_Games ) AND
3768636   +        MntCard_Games  <     0.29635777126099 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.29635777126099 
THEN DO;
3768637   +        _NODE_  =                   63;
MPRINT(SCORETABLES):   _NODE_ = 63;
3768638   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3768639   +        P_DepVar0  =                0.875;
MPRINT(SCORETABLES):   P_DepVar0 = 0.875;
3768640   +        P_DepVar1  =                0.125;
MPRINT(SCORETABLES):   P_DepVar1 = 0.125;
3768641   +        Q_DepVar0  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.875;
3768642   +        Q_DepVar1  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.125;
3768643   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768644   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768645   +        END;
MPRINT(SCORETABLES):   END;
3768646   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768647   +        _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3768648   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3768649   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3768650   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3768651   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3768652   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3768653   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768654   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768655   +        END;
MPRINT(SCORETABLES):   END;
3768656   +      END;
MPRINT(SCORETABLES):   END;
3768657   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768658   +      IF  NOT MISSING(MntCard_Games ) AND
3768659   +            0.42433538343271 <= MntCard_Games  AND
3768660   +        MntCard_Games  <     0.57331821617535 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.42433538343271 <= MntCard_Games 
AND MntCard_Games < 0.57331821617535 THEN DO;
3768661   +        IF  NOT MISSING(RANGE_Recency ) AND
3768662   +          RANGE_Recency  <     0.48484848484848 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48484848484848 
THEN DO;
3768663   +          _NODE_  =                   73;
MPRINT(SCORETABLES):   _NODE_ = 73;
3768664   +          _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3768665   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3768666   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3768667   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3768668   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3768669   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768670   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768671   +          END;
MPRINT(SCORETABLES):   END;
3768672   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768673   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3768674   +          _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3768675   +          P_DepVar0  =     0.95454545454545;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95454545454545;
3768676   +          P_DepVar1  =     0.04545454545454;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04545454545454;
3768677   +          Q_DepVar0  =     0.95454545454545;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95454545454545;
3768678   +          Q_DepVar1  =     0.04545454545454;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04545454545454;
3768679   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768680   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768681   +          END;
MPRINT(SCORETABLES):   END;
3768682   +        END;
MPRINT(SCORETABLES):   END;
3768683   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3768684   +            0.57331821617535 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.57331821617535 <= 
MntCard_Games THEN DO;
3768685   +        _NODE_  =                   62;
MPRINT(SCORETABLES):   _NODE_ = 62;
3768686   +        _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3768687   +        P_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.57142857142857;
3768688   +        P_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.42857142857142;
3768689   +        Q_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.57142857142857;
3768690   +        Q_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.42857142857142;
3768691   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768692   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768693   +        END;
MPRINT(SCORETABLES):   END;
3768694   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768695   +        _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3768696   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3768697   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768698   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768699   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768700   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768701   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768702   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768703   +        END;
MPRINT(SCORETABLES):   END;
3768704   +      END;
MPRINT(SCORETABLES):   END;
3768705   +    END;
MPRINT(SCORETABLES):   END;
3768706   +  END;
MPRINT(SCORETABLES):   END;
3768707   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768708   +                 0.375 <= RANGE_campaign_acceptance  AND
3768709   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3768710   +  IF  NOT MISSING(RANGE_Recency ) AND
3768711   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3768712   +    _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3768713   +    _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3768714   +    P_DepVar0  =     0.17142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.17142857142857;
3768715   +    P_DepVar1  =     0.82857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.82857142857142;
3768716   +    Q_DepVar0  =     0.17142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.17142857142857;
3768717   +    Q_DepVar1  =     0.82857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.82857142857142;
3768718   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768719   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768720   +    END;
MPRINT(SCORETABLES):   END;
3768721   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3768722   +        0.69191919191919 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.69191919191919 <= 
RANGE_Recency THEN DO;
3768723   +    _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3768724   +    _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3768725   +    P_DepVar0  =     0.91176470588235;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91176470588235;
3768726   +    P_DepVar1  =     0.08823529411764;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08823529411764;
3768727   +    Q_DepVar0  =     0.91176470588235;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91176470588235;
3768728   +    Q_DepVar1  =     0.08823529411764;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08823529411764;
3768729   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768730   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768731   +    END;
MPRINT(SCORETABLES):   END;
3768732   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768733   +    IF  NOT MISSING(MntCard_Games ) AND
3768734   +           0.5226185334485 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.5226185334485 <= MntCard_Games 
THEN DO;
3768735   +      _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3768736   +      _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3768737   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3768738   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3768739   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3768740   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3768741   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768742   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768743   +      END;
MPRINT(SCORETABLES):   END;
3768744   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768745   +      _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3768746   +      _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3768747   +      P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3768748   +      P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3768749   +      Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3768750   +      Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3768751   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768752   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768753   +      END;
MPRINT(SCORETABLES):   END;
3768754   +    END;
MPRINT(SCORETABLES):   END;
3768755   +  END;
MPRINT(SCORETABLES):   END;
3768756   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768757   +                 0.625 <= RANGE_campaign_acceptance  AND
3768758   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3768759   +  IF  NOT MISSING(RANGE_Recency ) AND
3768760   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3768761   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768762   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768763   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3768764   +      _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3768765   +      _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3768766   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768767   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768768   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768769   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768770   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768771   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768772   +      END;
MPRINT(SCORETABLES):   END;
3768773   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768774   +      _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3768775   +      _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3768776   +      P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3768777   +      P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3768778   +      Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3768779   +      Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3768780   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768781   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768782   +      END;
MPRINT(SCORETABLES):   END;
3768783   +    END;
MPRINT(SCORETABLES):   END;
3768784   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768785   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3768786   +    _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3768787   +    P_DepVar0  =                 0.08;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08;
3768788   +    P_DepVar1  =                 0.92;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92;
3768789   +    Q_DepVar0  =                 0.08;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08;
3768790   +    Q_DepVar1  =                 0.92;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92;
3768791   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768792   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768793   +    END;
MPRINT(SCORETABLES):   END;
3768794   +  END;
MPRINT(SCORETABLES):   END;
3768795   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3768796   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3768797   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3768798   +  _LEAF_  =                   34;
MPRINT(SCORETABLES):   _LEAF_ = 34;
3768799   +  P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3768800   +  P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3768801   +  Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3768802   +  Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3768803   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768804   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768805   +  END;
MPRINT(SCORETABLES):   END;
3768806   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768807   +  IF  NOT MISSING(RANGE_Recency ) AND
3768808   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3768809   +    IF  NOT MISSING(MntCard_Games ) AND
3768810   +          0.40792761279268 <= MntCard_Games  AND
3768811   +      MntCard_Games  <     0.42497454122243 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40792761279268 <= MntCard_Games 
AND MntCard_Games < 0.42497454122243 THEN DO;
3768812   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3768813   +      _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3768814   +      P_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   P_DepVar0 = 0.38461538461538;
3768815   +      P_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   P_DepVar1 = 0.61538461538461;
3768816   +      Q_DepVar0  =     0.38461538461538;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.38461538461538;
3768817   +      Q_DepVar1  =     0.61538461538461;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.61538461538461;
3768818   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768819   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768820   +      END;
MPRINT(SCORETABLES):   END;
3768821   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3768822   +          0.42497454122243 <= MntCard_Games  AND
3768823   +      MntCard_Games  <     0.48360752021895 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.42497454122243 <= 
MntCard_Games AND MntCard_Games < 0.48360752021895 THEN DO;
3768824   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3768825   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3768826   +      P_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85714285714285;
3768827   +      P_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14285714285714;
3768828   +      Q_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85714285714285;
3768829   +      Q_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14285714285714;
3768830   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768831   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768832   +      END;
MPRINT(SCORETABLES):   END;
3768833   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3768834   +          0.48360752021895 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.48360752021895 <= 
MntCard_Games THEN DO;
3768835   +      _NODE_  =                   20;
MPRINT(SCORETABLES):   _NODE_ = 20;
3768836   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3768837   +      P_DepVar0  =     0.31914893617021;
MPRINT(SCORETABLES):   P_DepVar0 = 0.31914893617021;
3768838   +      P_DepVar1  =     0.68085106382978;
MPRINT(SCORETABLES):   P_DepVar1 = 0.68085106382978;
3768839   +      Q_DepVar0  =     0.31914893617021;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.31914893617021;
3768840   +      Q_DepVar1  =     0.68085106382978;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.68085106382978;
3768841   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768842   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768843   +      END;
MPRINT(SCORETABLES):   END;
3768844   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768845   +      IF  NOT MISSING(NumDealsPurchases ) AND
3768846   +            0.32575757575757 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.32575757575757 <= 
NumDealsPurchases THEN DO;
3768847   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3768848   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3768849   +        P_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   P_DepVar0 = 0.11111111111111;
3768850   +        P_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   P_DepVar1 = 0.88888888888888;
3768851   +        Q_DepVar0  =     0.11111111111111;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.11111111111111;
3768852   +        Q_DepVar1  =     0.88888888888888;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.88888888888888;
3768853   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768854   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768855   +        END;
MPRINT(SCORETABLES):   END;
3768856   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768857   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3768858   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3768859   +        P_DepVar0  =     0.93567251461988;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93567251461988;
3768860   +        P_DepVar1  =     0.06432748538011;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06432748538011;
3768861   +        Q_DepVar0  =     0.93567251461988;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93567251461988;
3768862   +        Q_DepVar1  =     0.06432748538011;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06432748538011;
3768863   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768864   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768865   +        END;
MPRINT(SCORETABLES):   END;
3768866   +      END;
MPRINT(SCORETABLES):   END;
3768867   +    END;
MPRINT(SCORETABLES):   END;
3768868   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3768869   +        0.13636363636363 <= RANGE_Recency  AND
3768870   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3768871   +    IF  NOT MISSING(NumDealsPurchases ) AND
3768872   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 
0.04653679653679 THEN DO;
3768873   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768874   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768875   +      IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('DIVORCED' ,'SINGLE' ) THEN DO;
3768876   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3768877   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3768878   +        P_DepVar0  =                 0.35;
MPRINT(SCORETABLES):   P_DepVar0 = 0.35;
3768879   +        P_DepVar1  =                 0.65;
MPRINT(SCORETABLES):   P_DepVar1 = 0.65;
3768880   +        Q_DepVar0  =                 0.35;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.35;
3768881   +        Q_DepVar1  =                 0.65;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.65;
3768882   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768883   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768884   +        END;
MPRINT(SCORETABLES):   END;
3768885   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768886   +        _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3768887   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3768888   +        P_DepVar0  =     0.92682926829268;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92682926829268;
3768889   +        P_DepVar1  =     0.07317073170731;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07317073170731;
3768890   +        Q_DepVar0  =     0.92682926829268;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92682926829268;
3768891   +        Q_DepVar1  =     0.07317073170731;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07317073170731;
3768892   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768893   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768894   +        END;
MPRINT(SCORETABLES):   END;
3768895   +      END;
MPRINT(SCORETABLES):   END;
3768896   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3768897   +          0.17752100840336 <= NumDealsPurchases  AND
3768898   +      NumDealsPurchases  <     0.25657894736842 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.17752100840336 <= 
NumDealsPurchases AND NumDealsPurchases < 0.25657894736842 THEN DO;
3768899   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3768900   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3768901   +      P_DepVar0  =             0.828125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.828125;
3768902   +      P_DepVar1  =             0.171875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.171875;
3768903   +      Q_DepVar0  =             0.828125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.828125;
3768904   +      Q_DepVar1  =             0.171875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.171875;
3768905   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768906   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768907   +      END;
MPRINT(SCORETABLES):   END;
3768908   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3768909   +          0.25657894736842 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.25657894736842 <= 
NumDealsPurchases THEN DO;
3768910   +      IF  NOT MISSING(RANGE_Recency ) AND
3768911   +            0.26767676767676 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.26767676767676 <= RANGE_Recency 
THEN DO;
3768912   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3768913   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3768914   +        P_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92307692307692;
3768915   +        P_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07692307692307;
3768916   +        Q_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92307692307692;
3768917   +        Q_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07692307692307;
3768918   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768919   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768920   +        END;
MPRINT(SCORETABLES):   END;
3768921   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768922   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3768923   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3768924   +        P_DepVar0  =     0.15384615384615;
MPRINT(SCORETABLES):   P_DepVar0 = 0.15384615384615;
3768925   +        P_DepVar1  =     0.84615384615384;
MPRINT(SCORETABLES):   P_DepVar1 = 0.84615384615384;
3768926   +        Q_DepVar0  =     0.15384615384615;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.15384615384615;
3768927   +        Q_DepVar1  =     0.84615384615384;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.84615384615384;
3768928   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768929   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768930   +        END;
MPRINT(SCORETABLES):   END;
3768931   +      END;
MPRINT(SCORETABLES):   END;
3768932   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768933   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3768934   +            0.28348214285714 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.28348214285714 <= 
NumCatalogPurchases THEN DO;
3768935   +        _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3768936   +         %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3768937   +        IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3768938   +          _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3768939   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3768940   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768941   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768942   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768943   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768944   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768945   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768946   +          END;
MPRINT(SCORETABLES):   END;
3768947   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768948   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3768949   +          _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3768950   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3768951   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3768952   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3768953   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3768954   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3768955   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3768956   +          END;
MPRINT(SCORETABLES):   END;
3768957   +        END;
MPRINT(SCORETABLES):   END;
3768958   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768959   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3768960   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3768961   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3768962   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3768963   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3768964   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3768965   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768966   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768967   +        END;
MPRINT(SCORETABLES):   END;
3768968   +      END;
MPRINT(SCORETABLES):   END;
3768969   +    END;
MPRINT(SCORETABLES):   END;
3768970   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768971   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3768972   +    _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3768973   +    P_DepVar0  =     0.99231508165225;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99231508165225;
3768974   +    P_DepVar1  =     0.00768491834774;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00768491834774;
3768975   +    Q_DepVar0  =     0.99231508165225;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99231508165225;
3768976   +    Q_DepVar1  =     0.00768491834774;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00768491834774;
3768977   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3768978   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3768979   +    END;
MPRINT(SCORETABLES):   END;
3768980   +  END;
MPRINT(SCORETABLES):   END;
3768981   +
3768982   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3768983   +IF  F_DepVar  NE '0'
3768984   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3768985   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3768986   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3768987   + END;
MPRINT(SCORETABLES):   END;
3768988   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3768989   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3768990   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3768991   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3768992   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3768993   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3768994   +       END;
MPRINT(SCORETABLES):   END;
3768995   + END;
MPRINT(SCORETABLES):   END;
3768996   +
3768997   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3768998   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3768999   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769000   +
3769001   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3769002   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769003   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3769004   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769005   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769006   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3769007   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769008   +end;
MPRINT(SCORETABLES):   end;
3769009   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769010   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3769011   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769012   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769013   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3769014   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769015   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3769016   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3769017   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769018   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3769019   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769020   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769021   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3769022   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769023   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769024   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3769025   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769026   +
3769027   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3769028   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3769029   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3769030   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3769031   +
3769032   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3769033   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3769034   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3769035   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3769036   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3769037   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3769038   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3769039   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3769040   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3769041   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3769042   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3769043   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3769044   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3769045   +
3769046   +
3769047   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3769048   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3769049   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3769050   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3769051   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3769052   +
3769053   +
3769054   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3769055   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3769056   +
3769057   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3769058   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769059   +                 0.125 <= RANGE_campaign_acceptance  AND
3769060   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3769061   +  IF  NOT MISSING(RANGE_Recency ) AND
3769062   +    RANGE_Recency  <     0.17676767676767 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.17676767676767 
THEN DO;
3769063   +    IF  NOT MISSING(MntCard_Games ) AND
3769064   +      MntCard_Games  <     0.30379559787031 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.30379559787031 
THEN DO;
3769065   +      IF  NOT MISSING(NumDealsPurchases ) AND
3769066   +            0.13146551724137 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.13146551724137 <= 
NumDealsPurchases THEN DO;
3769067   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3769068   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3769069   +        P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3769070   +        P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3769071   +        Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3769072   +        Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3769073   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769074   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769075   +        END;
MPRINT(SCORETABLES):   END;
3769076   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769077   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3769078   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3769079   +        P_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8695652173913;
3769080   +        P_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13043478260869;
3769081   +        Q_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8695652173913;
3769082   +        Q_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13043478260869;
3769083   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769084   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769085   +        END;
MPRINT(SCORETABLES):   END;
3769086   +      END;
MPRINT(SCORETABLES):   END;
3769087   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769088   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3769089   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3769090   +      P_DepVar0  =     0.02564102564102;
MPRINT(SCORETABLES):   P_DepVar0 = 0.02564102564102;
3769091   +      P_DepVar1  =     0.97435897435897;
MPRINT(SCORETABLES):   P_DepVar1 = 0.97435897435897;
3769092   +      Q_DepVar0  =     0.02564102564102;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.02564102564102;
3769093   +      Q_DepVar1  =     0.97435897435897;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.97435897435897;
3769094   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769095   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769096   +      END;
MPRINT(SCORETABLES):   END;
3769097   +    END;
MPRINT(SCORETABLES):   END;
3769098   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3769099   +        0.17676767676767 <= RANGE_Recency  AND
3769100   +    RANGE_Recency  <     0.45959595959595 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.17676767676767 <= 
RANGE_Recency AND RANGE_Recency < 0.45959595959595 THEN DO;
3769101   +    IF  NOT MISSING(MntCard_Games ) AND
3769102   +          0.48879444605759 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.48879444605759 <= MntCard_Games 
THEN DO;
3769103   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3769104   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3769105   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769106   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769107   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769108   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769109   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769110   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769111   +      END;
MPRINT(SCORETABLES):   END;
3769112   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769113   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3769114   +            0.26969696969696 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.26969696969696 <= 
NumCatalogPurchases THEN DO;
3769115   +        IF  NOT MISSING(MntCard_Games ) AND
3769116   +          MntCard_Games  <     0.28283900736897 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.28283900736897 
THEN DO;
3769117   +          _NODE_  =                   68;
MPRINT(SCORETABLES):   _NODE_ = 68;
3769118   +          _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3769119   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769120   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769121   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769122   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769123   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769124   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769125   +          END;
MPRINT(SCORETABLES):   END;
3769126   +        ELSE IF  NOT MISSING(MntCard_Games ) AND
3769127   +              0.40214788192414 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.40214788192414 <= 
MntCard_Games THEN DO;
3769128   +          _NODE_  =                   70;
MPRINT(SCORETABLES):   _NODE_ = 70;
3769129   +          _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3769130   +          P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3769131   +          P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3769132   +          Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3769133   +          Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3769134   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769135   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769136   +          END;
MPRINT(SCORETABLES):   END;
3769137   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769138   +          _NODE_  =                   69;
MPRINT(SCORETABLES):   _NODE_ = 69;
3769139   +          _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3769140   +          P_DepVar0  =                0.875;
MPRINT(SCORETABLES):   P_DepVar0 = 0.875;
3769141   +          P_DepVar1  =                0.125;
MPRINT(SCORETABLES):   P_DepVar1 = 0.125;
3769142   +          Q_DepVar0  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.875;
3769143   +          Q_DepVar1  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.125;
3769144   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769145   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769146   +          END;
MPRINT(SCORETABLES):   END;
3769147   +        END;
MPRINT(SCORETABLES):   END;
3769148   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769149   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3769150   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3769151   +        P_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91489361702127;
3769152   +        P_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08510638297872;
3769153   +        Q_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91489361702127;
3769154   +        Q_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08510638297872;
3769155   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769156   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769157   +        END;
MPRINT(SCORETABLES):   END;
3769158   +      END;
MPRINT(SCORETABLES):   END;
3769159   +    END;
MPRINT(SCORETABLES):   END;
3769160   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769161   +    IF  NOT MISSING(NumDealsPurchases ) AND
3769162   +          0.28285714285714 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.28285714285714 <= 
NumDealsPurchases THEN DO;
3769163   +      IF  NOT MISSING(RANGE_Frq ) AND
3769164   +        RANGE_Frq  <     0.21666666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Frq ) AND RANGE_Frq < 0.21666666666666 THEN DO;
3769165   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3769166   +        _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3769167   +        P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3769168   +        P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3769169   +        Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3769170   +        Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3769171   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769172   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769173   +        END;
MPRINT(SCORETABLES):   END;
3769174   +      ELSE IF  NOT MISSING(RANGE_Frq ) AND
3769175   +            0.41666666666666 <= RANGE_Frq  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Frq ) AND 0.41666666666666 <= RANGE_Frq THEN 
DO;
3769176   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3769177   +        _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3769178   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3769179   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3769180   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3769181   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3769182   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769183   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769184   +        END;
MPRINT(SCORETABLES):   END;
3769185   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769186   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3769187   +        _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3769188   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769189   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769190   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769191   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769192   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769193   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769194   +        END;
MPRINT(SCORETABLES):   END;
3769195   +      END;
MPRINT(SCORETABLES):   END;
3769196   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769197   +      _NODE_  =                   26;
MPRINT(SCORETABLES):   _NODE_ = 26;
3769198   +      _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3769199   +      P_DepVar0  =                0.975;
MPRINT(SCORETABLES):   P_DepVar0 = 0.975;
3769200   +      P_DepVar1  =                0.025;
MPRINT(SCORETABLES):   P_DepVar1 = 0.025;
3769201   +      Q_DepVar0  =                0.975;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.975;
3769202   +      Q_DepVar1  =                0.025;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.025;
3769203   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769204   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769205   +      END;
MPRINT(SCORETABLES):   END;
3769206   +    END;
MPRINT(SCORETABLES):   END;
3769207   +  END;
MPRINT(SCORETABLES):   END;
3769208   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769209   +                 0.375 <= RANGE_campaign_acceptance  AND
3769210   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3769211   +  IF  NOT MISSING(RANGE_Recency ) AND
3769212   +    RANGE_Recency  <     0.42929292929292 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42929292929292 
THEN DO;
3769213   +    _NODE_  =                   12;
MPRINT(SCORETABLES):   _NODE_ = 12;
3769214   +    _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3769215   +    P_DepVar0  =     0.17777777777777;
MPRINT(SCORETABLES):   P_DepVar0 = 0.17777777777777;
3769216   +    P_DepVar1  =     0.82222222222222;
MPRINT(SCORETABLES):   P_DepVar1 = 0.82222222222222;
3769217   +    Q_DepVar0  =     0.17777777777777;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.17777777777777;
3769218   +    Q_DepVar1  =     0.82222222222222;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.82222222222222;
3769219   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769220   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769221   +    END;
MPRINT(SCORETABLES):   END;
3769222   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769223   +    IF  NOT MISSING(MntCard_Games ) AND
3769224   +          0.52285865976871 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52285865976871 <= MntCard_Games 
THEN DO;
3769225   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3769226   +      _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3769227   +      P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3769228   +      P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3769229   +      Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3769230   +      Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3769231   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769232   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769233   +      END;
MPRINT(SCORETABLES):   END;
3769234   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769235   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3769236   +      _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3769237   +      P_DepVar0  =     0.86538461538461;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86538461538461;
3769238   +      P_DepVar1  =     0.13461538461538;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13461538461538;
3769239   +      Q_DepVar0  =     0.86538461538461;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86538461538461;
3769240   +      Q_DepVar1  =     0.13461538461538;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13461538461538;
3769241   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769242   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769243   +      END;
MPRINT(SCORETABLES):   END;
3769244   +    END;
MPRINT(SCORETABLES):   END;
3769245   +  END;
MPRINT(SCORETABLES):   END;
3769246   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769247   +                 0.625 <= RANGE_campaign_acceptance  AND
3769248   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3769249   +  IF  NOT MISSING(RANGE_Recency ) AND
3769250   +        0.77777777777777 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.77777777777777 <= RANGE_Recency 
THEN DO;
3769251   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3769252   +    _LEAF_  =                   34;
MPRINT(SCORETABLES):   _LEAF_ = 34;
3769253   +    P_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85714285714285;
3769254   +    P_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14285714285714;
3769255   +    Q_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85714285714285;
3769256   +    Q_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14285714285714;
3769257   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769258   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769259   +    END;
MPRINT(SCORETABLES):   END;
3769260   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769261   +    _NODE_  =                   14;
MPRINT(SCORETABLES):   _NODE_ = 14;
3769262   +    _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3769263   +    P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3769264   +    P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3769265   +    Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3769266   +    Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3769267   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769268   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769269   +    END;
MPRINT(SCORETABLES):   END;
3769270   +  END;
MPRINT(SCORETABLES):   END;
3769271   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769272   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3769273   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3769274   +  _LEAF_  =                   35;
MPRINT(SCORETABLES):   _LEAF_ = 35;
3769275   +  P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3769276   +  P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3769277   +  Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3769278   +  Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3769279   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769280   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769281   +  END;
MPRINT(SCORETABLES):   END;
3769282   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769283   +  IF  NOT MISSING(RANGE_Recency ) AND
3769284   +    RANGE_Recency  <     0.21717171717171 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.21717171717171 
THEN DO;
3769285   +    IF  NOT MISSING(MntCard_Games ) AND
3769286   +          0.41233448947554 <= MntCard_Games  AND
3769287   +      MntCard_Games  <     0.64139749505603 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.41233448947554 <= MntCard_Games 
AND MntCard_Games < 0.64139749505603 THEN DO;
3769288   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3769289   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3769290   +      IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
3769291   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3769292   +        _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3769293   +        P_DepVar0  =     0.23076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23076923076923;
3769294   +        P_DepVar1  =     0.76923076923076;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76923076923076;
3769295   +        Q_DepVar0  =     0.23076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23076923076923;
3769296   +        Q_DepVar1  =     0.76923076923076;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76923076923076;
3769297   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769298   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769299   +        END;
MPRINT(SCORETABLES):   END;
3769300   +      ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
3769301   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3769302   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3769303   +        P_DepVar0  =     0.43333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.43333333333333;
3769304   +        P_DepVar1  =     0.56666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.56666666666666;
3769305   +        Q_DepVar0  =     0.43333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.43333333333333;
3769306   +        Q_DepVar1  =     0.56666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.56666666666666;
3769307   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769308   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769309   +        END;
MPRINT(SCORETABLES):   END;
3769310   +      ELSE IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
3769311   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3769312   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3769313   +        P_DepVar0  =              0.65625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.65625;
3769314   +        P_DepVar1  =              0.34375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.34375;
3769315   +        Q_DepVar0  =              0.65625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.65625;
3769316   +        Q_DepVar1  =              0.34375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.34375;
3769317   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769318   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769319   +        END;
MPRINT(SCORETABLES):   END;
3769320   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769321   +        IF  NOT MISSING(NumDealsPurchases ) AND
3769322   +              0.20714285714285 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20714285714285 <= 
NumDealsPurchases THEN DO;
3769323   +          _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3769324   +          _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3769325   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769326   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769327   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769328   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769329   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769330   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769331   +          END;
MPRINT(SCORETABLES):   END;
3769332   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769333   +          _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3769334   +          _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3769335   +          P_DepVar0  =     0.86842105263157;
MPRINT(SCORETABLES):   P_DepVar0 = 0.86842105263157;
3769336   +          P_DepVar1  =     0.13157894736842;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13157894736842;
3769337   +          Q_DepVar0  =     0.86842105263157;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.86842105263157;
3769338   +          Q_DepVar1  =     0.13157894736842;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13157894736842;
3769339   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769340   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769341   +          END;
MPRINT(SCORETABLES):   END;
3769342   +        END;
MPRINT(SCORETABLES):   END;
3769343   +      END;
MPRINT(SCORETABLES):   END;
3769344   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3769345   +          0.64139749505603 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.64139749505603 <= 
MntCard_Games THEN DO;
3769346   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3769347   +      _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3769348   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769349   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769350   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769351   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769352   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769353   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769354   +      END;
MPRINT(SCORETABLES):   END;
3769355   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769356   +      IF  NOT MISSING(NumDealsPurchases ) AND
3769357   +            0.16228070175438 <= NumDealsPurchases  AND
3769358   +        NumDealsPurchases  <     0.29520697167755 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.16228070175438 <= 
NumDealsPurchases AND NumDealsPurchases < 0.29520697167755 THEN DO;
3769359   +        _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3769360   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3769361   +        P_DepVar0  =     0.88461538461538;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88461538461538;
3769362   +        P_DepVar1  =     0.11538461538461;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11538461538461;
3769363   +        Q_DepVar0  =     0.88461538461538;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88461538461538;
3769364   +        Q_DepVar1  =     0.11538461538461;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11538461538461;
3769365   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769366   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769367   +        END;
MPRINT(SCORETABLES):   END;
3769368   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3769369   +            0.29520697167755 <= NumDealsPurchases  AND
3769370   +        NumDealsPurchases  <     0.34313725490196 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.29520697167755 <= 
NumDealsPurchases AND NumDealsPurchases < 0.34313725490196 THEN DO;
3769371   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3769372   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3769373   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3769374   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3769375   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3769376   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3769377   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769378   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769379   +        END;
MPRINT(SCORETABLES):   END;
3769380   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3769381   +            0.34313725490196 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.34313725490196 <= 
NumDealsPurchases THEN DO;
3769382   +        _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3769383   +        _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3769384   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769385   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769386   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769387   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769388   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769389   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769390   +        END;
MPRINT(SCORETABLES):   END;
3769391   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769392   +        _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3769393   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3769394   +        P_DepVar0  =     0.98863636363636;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98863636363636;
3769395   +        P_DepVar1  =     0.01136363636363;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01136363636363;
3769396   +        Q_DepVar0  =     0.98863636363636;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98863636363636;
3769397   +        Q_DepVar1  =     0.01136363636363;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01136363636363;
3769398   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769399   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769400   +        END;
MPRINT(SCORETABLES):   END;
3769401   +      END;
MPRINT(SCORETABLES):   END;
3769402   +    END;
MPRINT(SCORETABLES):   END;
3769403   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769404   +    IF  NOT MISSING(MntCard_Games ) AND
3769405   +          0.47877641690682 <= MntCard_Games  AND
3769406   +      MntCard_Games  <     0.75074050896954 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.47877641690682 <= MntCard_Games 
AND MntCard_Games < 0.75074050896954 THEN DO;
3769407   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3769408   +             0.4068287037037 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.4068287037037 <= 
NumCatalogPurchases THEN DO;
3769409   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3769410   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3769411   +        P_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar0 = 0.5;
3769412   +        P_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar1 = 0.5;
3769413   +        Q_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.5;
3769414   +        Q_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.5;
3769415   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769416   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769417   +        END;
MPRINT(SCORETABLES):   END;
3769418   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769419   +        IF  NOT MISSING(RANGE_Recency ) AND
3769420   +          RANGE_Recency  <     0.31818181818181 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.31818181818181 
THEN DO;
3769421   +          IF  NOT MISSING(NumDealsPurchases ) AND
3769422   +                0.21825396825396 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.21825396825396 <= 
NumDealsPurchases THEN DO;
3769423   +            _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3769424   +            _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3769425   +            P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769426   +            P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769427   +            Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769428   +            Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769429   +            I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769430   +            U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769431   +            END;
MPRINT(SCORETABLES):   END;
3769432   +          ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769433   +            _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3769434   +            _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3769435   +            P_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8695652173913;
3769436   +            P_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   P_DepVar1 = 0.13043478260869;
3769437   +            Q_DepVar0  =      0.8695652173913;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8695652173913;
3769438   +            Q_DepVar1  =     0.13043478260869;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.13043478260869;
3769439   +            I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769440   +            U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769441   +            END;
MPRINT(SCORETABLES):   END;
3769442   +          END;
MPRINT(SCORETABLES):   END;
3769443   +        ELSE IF  NOT MISSING(RANGE_Recency ) AND
3769444   +              0.31818181818181 <= RANGE_Recency  AND
3769445   +          RANGE_Recency  <     0.58080808080808 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.31818181818181 <= 
RANGE_Recency AND RANGE_Recency < 0.58080808080808 THEN DO;
3769446   +          _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3769447   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3769448   +          P_DepVar0  =     0.92771084337349;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92771084337349;
3769449   +          P_DepVar1  =      0.0722891566265;
MPRINT(SCORETABLES):   P_DepVar1 = 0.0722891566265;
3769450   +          Q_DepVar0  =     0.92771084337349;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92771084337349;
3769451   +          Q_DepVar1  =      0.0722891566265;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.0722891566265;
3769452   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769453   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769454   +          END;
MPRINT(SCORETABLES):   END;
3769455   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769456   +          _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3769457   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3769458   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769459   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769460   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769461   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769462   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769463   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769464   +          END;
MPRINT(SCORETABLES):   END;
3769465   +        END;
MPRINT(SCORETABLES):   END;
3769466   +      END;
MPRINT(SCORETABLES):   END;
3769467   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3769468   +          0.75074050896954 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.75074050896954 <= 
MntCard_Games THEN DO;
3769469   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3769470   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3769471   +      P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3769472   +      P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3769473   +      Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3769474   +      Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3769475   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769476   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769477   +      END;
MPRINT(SCORETABLES):   END;
3769478   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769479   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3769480   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3769481   +      P_DepVar0  =     0.99410609037328;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99410609037328;
3769482   +      P_DepVar1  =     0.00589390962671;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00589390962671;
3769483   +      Q_DepVar0  =     0.99410609037328;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99410609037328;
3769484   +      Q_DepVar1  =     0.00589390962671;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00589390962671;
3769485   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769486   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769487   +      END;
MPRINT(SCORETABLES):   END;
3769488   +    END;
MPRINT(SCORETABLES):   END;
3769489   +  END;
MPRINT(SCORETABLES):   END;
3769490   +
3769491   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3769492   +IF  F_DepVar  NE '0'
3769493   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3769494   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3769495   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3769496   + END;
MPRINT(SCORETABLES):   END;
3769497   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769498   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3769499   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3769500   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3769501   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3769502   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3769503   +       END;
MPRINT(SCORETABLES):   END;
3769504   + END;
MPRINT(SCORETABLES):   END;
3769505   +
3769506   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769507   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3769508   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769509   +
3769510   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3769511   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769512   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3769513   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769514   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769515   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3769516   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769517   +end;
MPRINT(SCORETABLES):   end;
3769518   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769519   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3769520   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769521   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769522   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3769523   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769524   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3769525   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3769526   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3769527   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3769528   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3769529   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3769530   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3769531   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3769532   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769533   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3769534   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3769535   +
3769536   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3769537   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3769538   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3769539   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3769540   +
3769541   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3769542   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3769543   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3769544   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3769545   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3769546   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3769547   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3769548   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3769549   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3769550   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3769551   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3769552   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3769553   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3769554   +
3769555   +
3769556   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3769557   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3769558   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3769559   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3769560   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3769561   +
3769562   +
3769563   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3769564   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3769565   +
3769566   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3769567   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769568   +                 0.125 <= RANGE_campaign_acceptance  AND
3769569   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3769570   +  IF  NOT MISSING(RANGE_Recency ) AND
3769571   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3769572   +    IF  NOT MISSING(MntCard_Games ) AND
3769573   +      MntCard_Games  <     0.27480595174713 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27480595174713 
THEN DO;
3769574   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3769575   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <= 
NumCatalogPurchases THEN DO;
3769576   +        _NODE_  =                   50;
MPRINT(SCORETABLES):   _NODE_ = 50;
3769577   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3769578   +        P_DepVar0  =               0.3125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3125;
3769579   +        P_DepVar1  =               0.6875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6875;
3769580   +        Q_DepVar0  =               0.3125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3125;
3769581   +        Q_DepVar1  =               0.6875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6875;
3769582   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769583   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769584   +        END;
MPRINT(SCORETABLES):   END;
3769585   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769586   +        _NODE_  =                   49;
MPRINT(SCORETABLES):   _NODE_ = 49;
3769587   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3769588   +        P_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92857142857142;
3769589   +        P_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07142857142857;
3769590   +        Q_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92857142857142;
3769591   +        Q_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07142857142857;
3769592   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769593   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769594   +        END;
MPRINT(SCORETABLES):   END;
3769595   +      END;
MPRINT(SCORETABLES):   END;
3769596   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769597   +      IF  NOT MISSING(RANGE_Recency ) AND
3769598   +            0.25757575757575 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.25757575757575 <= RANGE_Recency 
THEN DO;
3769599   +        IF  NOT MISSING(MntCard_Games ) AND
3769600   +              0.48949801378063 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.48949801378063 <= MntCard_Games 
THEN DO;
3769601   +          _NODE_  =                   72;
MPRINT(SCORETABLES):   _NODE_ = 72;
3769602   +          _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3769603   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769604   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769605   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769606   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769607   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769608   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769609   +          END;
MPRINT(SCORETABLES):   END;
3769610   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769611   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3769612   +          _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3769613   +          P_DepVar0  =                 0.65;
MPRINT(SCORETABLES):   P_DepVar0 = 0.65;
3769614   +          P_DepVar1  =                 0.35;
MPRINT(SCORETABLES):   P_DepVar1 = 0.35;
3769615   +          Q_DepVar0  =                 0.65;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.65;
3769616   +          Q_DepVar1  =                 0.35;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.35;
3769617   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769618   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769619   +          END;
MPRINT(SCORETABLES):   END;
3769620   +        END;
MPRINT(SCORETABLES):   END;
3769621   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769622   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3769623   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3769624   +        P_DepVar0  =     0.08771929824561;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08771929824561;
3769625   +        P_DepVar1  =     0.91228070175438;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91228070175438;
3769626   +        Q_DepVar0  =     0.08771929824561;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08771929824561;
3769627   +        Q_DepVar1  =     0.91228070175438;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91228070175438;
3769628   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769629   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769630   +        END;
MPRINT(SCORETABLES):   END;
3769631   +      END;
MPRINT(SCORETABLES):   END;
3769632   +    END;
MPRINT(SCORETABLES):   END;
3769633   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769634   +    IF  NOT MISSING(NumDealsPurchases ) AND
3769635   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <= 
NumDealsPurchases THEN DO;
3769636   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3769637   +            0.16593054977226 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.16593054977226 <= 
RANGE_average_purchase THEN DO;
3769638   +        _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3769639   +        _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3769640   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769641   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769642   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769643   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769644   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769645   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769646   +        END;
MPRINT(SCORETABLES):   END;
3769647   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769648   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3769649   +        _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3769650   +        P_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75;
3769651   +        P_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar1 = 0.25;
3769652   +        Q_DepVar0  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75;
3769653   +        Q_DepVar1  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.25;
3769654   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769655   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769656   +        END;
MPRINT(SCORETABLES):   END;
3769657   +      END;
MPRINT(SCORETABLES):   END;
3769658   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769659   +      IF  NOT MISSING(MntCard_Games ) AND
3769660   +            0.42380161502777 <= MntCard_Games  AND
3769661   +        MntCard_Games  <     0.57331821617535 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.42380161502777 <= MntCard_Games 
AND MntCard_Games < 0.57331821617535 THEN DO;
3769662   +        IF  NOT MISSING(RANGE_Recency ) AND
3769663   +          RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899 
THEN DO;
3769664   +          _NODE_  =                   73;
MPRINT(SCORETABLES):   _NODE_ = 73;
3769665   +          _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3769666   +          P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3769667   +          P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3769668   +          Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3769669   +          Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3769670   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769671   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769672   +          END;
MPRINT(SCORETABLES):   END;
3769673   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769674   +          _NODE_  =                   74;
MPRINT(SCORETABLES):   _NODE_ = 74;
3769675   +          _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3769676   +          P_DepVar0  =     0.95555555555555;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95555555555555;
3769677   +          P_DepVar1  =     0.04444444444444;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04444444444444;
3769678   +          Q_DepVar0  =     0.95555555555555;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95555555555555;
3769679   +          Q_DepVar1  =     0.04444444444444;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04444444444444;
3769680   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769681   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769682   +          END;
MPRINT(SCORETABLES):   END;
3769683   +        END;
MPRINT(SCORETABLES):   END;
3769684   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3769685   +            0.57331821617535 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.57331821617535 <= 
MntCard_Games THEN DO;
3769686   +        _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3769687   +        _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3769688   +        P_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar0 = 0.5;
3769689   +        P_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   P_DepVar1 = 0.5;
3769690   +        Q_DepVar0  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.5;
3769691   +        Q_DepVar1  =                  0.5;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.5;
3769692   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769693   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769694   +        END;
MPRINT(SCORETABLES):   END;
3769695   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769696   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3769697   +        _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3769698   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769699   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769700   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769701   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769702   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769703   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769704   +        END;
MPRINT(SCORETABLES):   END;
3769705   +      END;
MPRINT(SCORETABLES):   END;
3769706   +    END;
MPRINT(SCORETABLES):   END;
3769707   +  END;
MPRINT(SCORETABLES):   END;
3769708   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769709   +                 0.375 <= RANGE_campaign_acceptance  AND
3769710   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3769711   +  IF  NOT MISSING(RANGE_Recency ) AND
3769712   +    RANGE_Recency  <     0.42929292929292 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.42929292929292 
THEN DO;
3769713   +    _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3769714   +    _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3769715   +    P_DepVar0  =     0.17777777777777;
MPRINT(SCORETABLES):   P_DepVar0 = 0.17777777777777;
3769716   +    P_DepVar1  =     0.82222222222222;
MPRINT(SCORETABLES):   P_DepVar1 = 0.82222222222222;
3769717   +    Q_DepVar0  =     0.17777777777777;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.17777777777777;
3769718   +    Q_DepVar1  =     0.82222222222222;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.82222222222222;
3769719   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769720   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769721   +    END;
MPRINT(SCORETABLES):   END;
3769722   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769723   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3769724   +          0.31965944272445 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.31965944272445 <= 
NumCatalogPurchases THEN DO;
3769725   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3769726   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3769727   +      IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
3769728   +        _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3769729   +        _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3769730   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3769731   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3769732   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3769733   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3769734   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769735   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769736   +        END;
MPRINT(SCORETABLES):   END;
3769737   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769738   +        _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3769739   +        _LEAF_  =                   34;
MPRINT(SCORETABLES):   _LEAF_ = 34;
3769740   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3769741   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3769742   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3769743   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3769744   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769745   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769746   +        END;
MPRINT(SCORETABLES):   END;
3769747   +      END;
MPRINT(SCORETABLES):   END;
3769748   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769749   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3769750   +      _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3769751   +      P_DepVar0  =     0.88636363636363;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88636363636363;
3769752   +      P_DepVar1  =     0.11363636363636;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11363636363636;
3769753   +      Q_DepVar0  =     0.88636363636363;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88636363636363;
3769754   +      Q_DepVar1  =     0.11363636363636;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11363636363636;
3769755   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769756   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769757   +      END;
MPRINT(SCORETABLES):   END;
3769758   +    END;
MPRINT(SCORETABLES):   END;
3769759   +  END;
MPRINT(SCORETABLES):   END;
3769760   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769761   +                 0.625 <= RANGE_campaign_acceptance  AND
3769762   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3769763   +  IF  NOT MISSING(RANGE_Recency ) AND
3769764   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3769765   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3769766   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3769767   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3769768   +      _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3769769   +      _LEAF_  =                   36;
MPRINT(SCORETABLES):   _LEAF_ = 36;
3769770   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769771   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769772   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769773   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769774   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769775   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769776   +      END;
MPRINT(SCORETABLES):   END;
3769777   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769778   +      _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3769779   +      _LEAF_  =                   37;
MPRINT(SCORETABLES):   _LEAF_ = 37;
3769780   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3769781   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3769782   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3769783   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3769784   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769785   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769786   +      END;
MPRINT(SCORETABLES):   END;
3769787   +    END;
MPRINT(SCORETABLES):   END;
3769788   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769789   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3769790   +    _LEAF_  =                   35;
MPRINT(SCORETABLES):   _LEAF_ = 35;
3769791   +    P_DepVar0  =     0.04545454545454;
MPRINT(SCORETABLES):   P_DepVar0 = 0.04545454545454;
3769792   +    P_DepVar1  =     0.95454545454545;
MPRINT(SCORETABLES):   P_DepVar1 = 0.95454545454545;
3769793   +    Q_DepVar0  =     0.04545454545454;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.04545454545454;
3769794   +    Q_DepVar1  =     0.95454545454545;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.95454545454545;
3769795   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769796   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769797   +    END;
MPRINT(SCORETABLES):   END;
3769798   +  END;
MPRINT(SCORETABLES):   END;
3769799   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3769800   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3769801   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3769802   +  _LEAF_  =                   38;
MPRINT(SCORETABLES):   _LEAF_ = 38;
3769803   +  P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3769804   +  P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3769805   +  Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3769806   +  Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3769807   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769808   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769809   +  END;
MPRINT(SCORETABLES):   END;
3769810   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769811   +  IF  NOT MISSING(RANGE_Recency ) AND
3769812   +    RANGE_Recency  <     0.05555555555555 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.05555555555555 
THEN DO;
3769813   +    IF  NOT MISSING(MntCard_Games ) AND
3769814   +          0.32125307125307 <= MntCard_Games  AND
3769815   +      MntCard_Games  <     0.53295548988826 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.32125307125307 <= MntCard_Games 
AND MntCard_Games < 0.53295548988826 THEN DO;
3769816   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3769817   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3769818   +      P_DepVar0  =     0.63888888888888;
MPRINT(SCORETABLES):   P_DepVar0 = 0.63888888888888;
3769819   +      P_DepVar1  =     0.36111111111111;
MPRINT(SCORETABLES):   P_DepVar1 = 0.36111111111111;
3769820   +      Q_DepVar0  =     0.63888888888888;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.63888888888888;
3769821   +      Q_DepVar1  =     0.36111111111111;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.36111111111111;
3769822   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769823   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769824   +      END;
MPRINT(SCORETABLES):   END;
3769825   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3769826   +          0.53295548988826 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.53295548988826 <= 
MntCard_Games THEN DO;
3769827   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3769828   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3769829   +      P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3769830   +      P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3769831   +      Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3769832   +      Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3769833   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769834   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769835   +      END;
MPRINT(SCORETABLES):   END;
3769836   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769837   +      IF  NOT MISSING(MntMagazines ) AND
3769838   +        MntMagazines  <     0.00933613832422 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntMagazines ) AND MntMagazines < 0.00933613832422 THEN 
DO;
3769839   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3769840   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3769841   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769842   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769843   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769844   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769845   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769846   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769847   +        END;
MPRINT(SCORETABLES):   END;
3769848   +      ELSE IF  NOT MISSING(MntMagazines ) AND
3769849   +            0.00933613832422 <= MntMagazines  AND
3769850   +        MntMagazines  <     0.01947151424287 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntMagazines ) AND 0.00933613832422 <= MntMagazines 
AND MntMagazines < 0.01947151424287 THEN DO;
3769851   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3769852   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3769853   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3769854   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3769855   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3769856   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3769857   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769858   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769859   +        END;
MPRINT(SCORETABLES):   END;
3769860   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769861   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3769862   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3769863   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769864   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769865   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769866   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769867   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769868   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769869   +        END;
MPRINT(SCORETABLES):   END;
3769870   +      END;
MPRINT(SCORETABLES):   END;
3769871   +    END;
MPRINT(SCORETABLES):   END;
3769872   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3769873   +        0.05555555555555 <= RANGE_Recency  AND
3769874   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.05555555555555 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3769875   +    IF  NOT MISSING(MntCard_Games ) AND
3769876   +          0.35338164251207 <= MntCard_Games  AND
3769877   +      MntCard_Games  <     0.47871376811594 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.35338164251207 <= MntCard_Games 
AND MntCard_Games < 0.47871376811594 THEN DO;
3769878   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3769879   +      _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3769880   +      P_DepVar0  =     0.85620915032679;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85620915032679;
3769881   +      P_DepVar1  =      0.1437908496732;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1437908496732;
3769882   +      Q_DepVar0  =     0.85620915032679;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85620915032679;
3769883   +      Q_DepVar1  =      0.1437908496732;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1437908496732;
3769884   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769885   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769886   +      END;
MPRINT(SCORETABLES):   END;
3769887   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3769888   +          0.47871376811594 <= MntCard_Games  AND
3769889   +      MntCard_Games  <     0.64616340478409 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.47871376811594 <= 
MntCard_Games AND MntCard_Games < 0.64616340478409 THEN DO;
3769890   +      IF  NOT MISSING(NumDealsPurchases ) AND
3769891   +            0.20089285714285 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20089285714285 <= 
NumDealsPurchases THEN DO;
3769892   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3769893   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3769894   +        P_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23529411764705;
3769895   +        P_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76470588235294;
3769896   +        Q_DepVar0  =     0.23529411764705;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23529411764705;
3769897   +        Q_DepVar1  =     0.76470588235294;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76470588235294;
3769898   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769899   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769900   +        END;
MPRINT(SCORETABLES):   END;
3769901   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769902   +        _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3769903   +         %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3769904   +        IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('TOGETHER' ) THEN DO;
3769905   +          _NODE_  =                   61;
MPRINT(SCORETABLES):   _NODE_ = 61;
3769906   +          _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3769907   +          P_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92857142857142;
3769908   +          P_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07142857142857;
3769909   +          Q_DepVar0  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92857142857142;
3769910   +          Q_DepVar1  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07142857142857;
3769911   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769912   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769913   +          END;
MPRINT(SCORETABLES):   END;
3769914   +        ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
3769915   +          _NODE_  =                   62;
MPRINT(SCORETABLES):   _NODE_ = 62;
3769916   +          _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3769917   +          P_DepVar0  =                 0.65;
MPRINT(SCORETABLES):   P_DepVar0 = 0.65;
3769918   +          P_DepVar1  =                 0.35;
MPRINT(SCORETABLES):   P_DepVar1 = 0.35;
3769919   +          Q_DepVar0  =                 0.65;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.65;
3769920   +          Q_DepVar1  =                 0.35;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.35;
3769921   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769922   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769923   +          END;
MPRINT(SCORETABLES):   END;
3769924   +        ELSE IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
MPRINT(SCORETABLES):   ELSE IF _ARBFMT_8 IN ('DIVORCED' ) THEN DO;
3769925   +          _NODE_  =                   63;
MPRINT(SCORETABLES):   _NODE_ = 63;
3769926   +          _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3769927   +          P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3769928   +          P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3769929   +          Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3769930   +          Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3769931   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769932   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769933   +          END;
MPRINT(SCORETABLES):   END;
3769934   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769935   +          _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3769936   +          _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3769937   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3769938   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3769939   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3769940   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3769941   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769942   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769943   +          END;
MPRINT(SCORETABLES):   END;
3769944   +        END;
MPRINT(SCORETABLES):   END;
3769945   +      END;
MPRINT(SCORETABLES):   END;
3769946   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3769947   +          0.64616340478409 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.64616340478409 <= 
MntCard_Games THEN DO;
3769948   +      _NODE_  =                   23;
MPRINT(SCORETABLES):   _NODE_ = 23;
3769949   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3769950   +      P_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   P_DepVar0 = 0.21428571428571;
3769951   +      P_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   P_DepVar1 = 0.78571428571428;
3769952   +      Q_DepVar0  =     0.21428571428571;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.21428571428571;
3769953   +      Q_DepVar1  =     0.78571428571428;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.78571428571428;
3769954   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3769955   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3769956   +      END;
MPRINT(SCORETABLES):   END;
3769957   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3769958   +      IF  NOT MISSING(NumDealsPurchases ) AND
3769959   +        NumDealsPurchases  <     0.03774928774928 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 
0.03774928774928 THEN DO;
3769960   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3769961   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3769962   +        P_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar0 = 0.85714285714285;
3769963   +        P_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar1 = 0.14285714285714;
3769964   +        Q_DepVar0  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.85714285714285;
3769965   +        Q_DepVar1  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.14285714285714;
3769966   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769967   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769968   +        END;
MPRINT(SCORETABLES):   END;
3769969   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3769970   +            0.25657894736842 <= NumDealsPurchases  AND
3769971   +        NumDealsPurchases  <     0.29398148148148 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.25657894736842 <= 
NumDealsPurchases AND NumDealsPurchases < 0.29398148148148 THEN DO;
3769972   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3769973   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3769974   +        P_DepVar0  =     0.88888888888888;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88888888888888;
3769975   +        P_DepVar1  =     0.11111111111111;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11111111111111;
3769976   +        Q_DepVar0  =     0.88888888888888;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88888888888888;
3769977   +        Q_DepVar1  =     0.11111111111111;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11111111111111;
3769978   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769979   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769980   +        END;
MPRINT(SCORETABLES):   END;
3769981   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3769982   +            0.29398148148148 <= NumDealsPurchases  AND
3769983   +        NumDealsPurchases  <     0.32291666666666 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.29398148148148 <= 
NumDealsPurchases AND NumDealsPurchases < 0.32291666666666 THEN DO;
3769984   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3769985   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3769986   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3769987   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3769988   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3769989   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3769990   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3769991   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3769992   +        END;
MPRINT(SCORETABLES):   END;
3769993   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3769994   +            0.32291666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32291666666666 <= 
NumDealsPurchases THEN DO;
3769995   +        _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3769996   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3769997   +        P_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.28571428571428;
3769998   +        P_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.71428571428571;
3769999   +        Q_DepVar0  =     0.28571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.28571428571428;
3770000   +        Q_DepVar1  =     0.71428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.71428571428571;
3770001   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770002   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770003   +        END;
MPRINT(SCORETABLES):   END;
3770004   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770005   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3770006   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3770007   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770008   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770009   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770010   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770011   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770012   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770013   +        END;
MPRINT(SCORETABLES):   END;
3770014   +      END;
MPRINT(SCORETABLES):   END;
3770015   +    END;
MPRINT(SCORETABLES):   END;
3770016   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3770017   +        0.36868686868686 <= RANGE_Recency  AND
3770018   +    RANGE_Recency  <     0.58080808080808 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.36868686868686 <= 
RANGE_Recency AND RANGE_Recency < 0.58080808080808 THEN DO;
3770019   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3770020   +    _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3770021   +    P_DepVar0  =     0.97493036211699;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97493036211699;
3770022   +    P_DepVar1  =       0.025069637883;
MPRINT(SCORETABLES):   P_DepVar1 = 0.025069637883;
3770023   +    Q_DepVar0  =     0.97493036211699;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97493036211699;
3770024   +    Q_DepVar1  =       0.025069637883;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.025069637883;
3770025   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770026   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770027   +    END;
MPRINT(SCORETABLES):   END;
3770028   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770029   +    _NODE_  =                   10;
MPRINT(SCORETABLES):   _NODE_ = 10;
3770030   +    _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3770031   +    P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770032   +    P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770033   +    Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770034   +    Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770035   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770036   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770037   +    END;
MPRINT(SCORETABLES):   END;
3770038   +  END;
MPRINT(SCORETABLES):   END;
3770039   +
3770040   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3770041   +IF  F_DepVar  NE '0'
3770042   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3770043   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3770044   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3770045   + END;
MPRINT(SCORETABLES):   END;
3770046   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770047   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3770048   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3770049   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3770050   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3770051   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3770052   +       END;
MPRINT(SCORETABLES):   END;
3770053   + END;
MPRINT(SCORETABLES):   END;
3770054   +
3770055   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770056   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3770057   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770058   +
3770059   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3770060   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770061   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3770062   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770063   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770064   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3770065   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770066   +end;
MPRINT(SCORETABLES):   end;
3770067   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770068   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3770069   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770070   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770071   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3770072   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770073   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3770074   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3770075   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770076   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3770077   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770078   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770079   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3770080   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770081   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770082   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3770083   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770084   +
3770085   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3770086   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3770087   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3770088   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3770089   +
3770090   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3770091   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3770092   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3770093   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3770094   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3770095   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3770096   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3770097   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3770098   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3770099   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3770100   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3770101   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3770102   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3770103   +
3770104   +
3770105   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3770106   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3770107   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3770108   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3770109   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3770110   +
3770111   +
3770112   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3770113   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3770114   +
3770115   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3770116   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770117   +                 0.125 <= RANGE_campaign_acceptance  AND
3770118   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3770119   +  IF  NOT MISSING(RANGE_Recency ) AND
3770120   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3770121   +    IF  NOT MISSING(MntCard_Games ) AND
3770122   +      MntCard_Games  <     0.27058823529411 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27058823529411 
THEN DO;
3770123   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3770124   +            0.27429467084639 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27429467084639 <= 
NumCatalogPurchases THEN DO;
3770125   +        _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3770126   +        _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3770127   +        P_DepVar0  =               0.3125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.3125;
3770128   +        P_DepVar1  =               0.6875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6875;
3770129   +        Q_DepVar0  =               0.3125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.3125;
3770130   +        Q_DepVar1  =               0.6875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6875;
3770131   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770132   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770133   +        END;
MPRINT(SCORETABLES):   END;
3770134   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770135   +        IF  NOT MISSING(NumWebPurchases ) AND
3770136   +          NumWebPurchases  <     0.34848484848484 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.34848484848484 
THEN DO;
3770137   +          _NODE_  =                   77;
MPRINT(SCORETABLES):   _NODE_ = 77;
3770138   +          _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3770139   +          P_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar0 = 0.4;
3770140   +          P_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar1 = 0.6;
3770141   +          Q_DepVar0  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.4;
3770142   +          Q_DepVar1  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.6;
3770143   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770144   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770145   +          END;
MPRINT(SCORETABLES):   END;
3770146   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770147   +          _NODE_  =                   78;
MPRINT(SCORETABLES):   _NODE_ = 78;
3770148   +          _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3770149   +          P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770150   +          P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770151   +          Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770152   +          Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770153   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770154   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770155   +          END;
MPRINT(SCORETABLES):   END;
3770156   +        END;
MPRINT(SCORETABLES):   END;
3770157   +      END;
MPRINT(SCORETABLES):   END;
3770158   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770159   +      IF  NOT MISSING(MntCard_Games ) AND
3770160   +        MntCard_Games  <     0.36985866330968 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.36985866330968 
THEN DO;
3770161   +        IF  NOT MISSING(NumDealsPurchases ) AND
3770162   +              0.11422413793103 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.11422413793103 <= 
NumDealsPurchases THEN DO;
3770163   +          _NODE_  =                   80;
MPRINT(SCORETABLES):   _NODE_ = 80;
3770164   +          _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3770165   +          P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770166   +          P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770167   +          Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770168   +          Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770169   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770170   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770171   +          END;
MPRINT(SCORETABLES):   END;
3770172   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770173   +          _NODE_  =                   79;
MPRINT(SCORETABLES):   _NODE_ = 79;
3770174   +          _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3770175   +          P_DepVar0  =     0.78571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.78571428571428;
3770176   +          P_DepVar1  =     0.21428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.21428571428571;
3770177   +          Q_DepVar0  =     0.78571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.78571428571428;
3770178   +          Q_DepVar1  =     0.21428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.21428571428571;
3770179   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770180   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770181   +          END;
MPRINT(SCORETABLES):   END;
3770182   +        END;
MPRINT(SCORETABLES):   END;
3770183   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770184   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3770185   +        _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3770186   +        P_DepVar0  =     0.09523809523809;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09523809523809;
3770187   +        P_DepVar1  =      0.9047619047619;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9047619047619;
3770188   +        Q_DepVar0  =     0.09523809523809;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09523809523809;
3770189   +        Q_DepVar1  =      0.9047619047619;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9047619047619;
3770190   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770191   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770192   +        END;
MPRINT(SCORETABLES):   END;
3770193   +      END;
MPRINT(SCORETABLES):   END;
3770194   +    END;
MPRINT(SCORETABLES):   END;
3770195   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770196   +    IF  NOT MISSING(NumDealsPurchases ) AND
3770197   +          0.31009615384615 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.31009615384615 <= 
NumDealsPurchases THEN DO;
3770198   +      IF  NOT MISSING(RANGE_average_purchase ) AND
3770199   +            0.18157578668792 <= RANGE_average_purchase  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_average_purchase ) AND 0.18157578668792 <= 
RANGE_average_purchase THEN DO;
3770200   +        _NODE_  =                   61;
MPRINT(SCORETABLES):   _NODE_ = 61;
3770201   +        _LEAF_  =                   35;
MPRINT(SCORETABLES):   _LEAF_ = 35;
3770202   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770203   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770204   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770205   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770206   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770207   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770208   +        END;
MPRINT(SCORETABLES):   END;
3770209   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770210   +        _NODE_  =                   60;
MPRINT(SCORETABLES):   _NODE_ = 60;
3770211   +        _LEAF_  =                   34;
MPRINT(SCORETABLES):   _LEAF_ = 34;
3770212   +        P_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.72727272727272;
3770213   +        P_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.27272727272727;
3770214   +        Q_DepVar0  =     0.72727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.72727272727272;
3770215   +        Q_DepVar1  =     0.27272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.27272727272727;
3770216   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770217   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770218   +        END;
MPRINT(SCORETABLES):   END;
3770219   +      END;
MPRINT(SCORETABLES):   END;
3770220   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770221   +      IF  NOT MISSING(MntCard_Games ) AND
3770222   +            0.42433538343271 <= MntCard_Games  AND
3770223   +        MntCard_Games  <     0.57331821617535 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.42433538343271 <= MntCard_Games 
AND MntCard_Games < 0.57331821617535 THEN DO;
3770224   +        IF  NOT MISSING(RANGE_Recency ) AND
3770225   +          RANGE_Recency  <     0.48989898989899 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.48989898989899 
THEN DO;
3770226   +          _NODE_  =                   81;
MPRINT(SCORETABLES):   _NODE_ = 81;
3770227   +          _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3770228   +          P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3770229   +          P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3770230   +          Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3770231   +          Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3770232   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770233   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770234   +          END;
MPRINT(SCORETABLES):   END;
3770235   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770236   +          _NODE_  =                   82;
MPRINT(SCORETABLES):   _NODE_ = 82;
3770237   +          _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3770238   +          P_DepVar0  =     0.95555555555555;
MPRINT(SCORETABLES):   P_DepVar0 = 0.95555555555555;
3770239   +          P_DepVar1  =     0.04444444444444;
MPRINT(SCORETABLES):   P_DepVar1 = 0.04444444444444;
3770240   +          Q_DepVar0  =     0.95555555555555;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.95555555555555;
3770241   +          Q_DepVar1  =     0.04444444444444;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.04444444444444;
3770242   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770243   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770244   +          END;
MPRINT(SCORETABLES):   END;
3770245   +        END;
MPRINT(SCORETABLES):   END;
3770246   +      ELSE IF  NOT MISSING(MntCard_Games ) AND
3770247   +            0.57331821617535 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.57331821617535 <= 
MntCard_Games THEN DO;
3770248   +        _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3770249   +        _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3770250   +        P_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.57142857142857;
3770251   +        P_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.42857142857142;
3770252   +        Q_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.57142857142857;
3770253   +        Q_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.42857142857142;
3770254   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770255   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770256   +        END;
MPRINT(SCORETABLES):   END;
3770257   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770258   +        _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3770259   +        _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3770260   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770261   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770262   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770263   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770264   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770265   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770266   +        END;
MPRINT(SCORETABLES):   END;
3770267   +      END;
MPRINT(SCORETABLES):   END;
3770268   +    END;
MPRINT(SCORETABLES):   END;
3770269   +  END;
MPRINT(SCORETABLES):   END;
3770270   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770271   +                 0.375 <= RANGE_campaign_acceptance  AND
3770272   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3770273   +  IF  NOT MISSING(RANGE_Recency ) AND
3770274   +        0.54040404040404 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.54040404040404 <= RANGE_Recency 
THEN DO;
3770275   +    IF  NOT MISSING(MntCard_Games ) AND
3770276   +          0.52285865976871 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.52285865976871 <= MntCard_Games 
THEN DO;
3770277   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3770278   +      _LEAF_  =                   38;
MPRINT(SCORETABLES):   _LEAF_ = 38;
3770279   +      P_DepVar0  =                0.375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.375;
3770280   +      P_DepVar1  =                0.625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.625;
3770281   +      Q_DepVar0  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.375;
3770282   +      Q_DepVar1  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.625;
3770283   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770284   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770285   +      END;
MPRINT(SCORETABLES):   END;
3770286   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770287   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3770288   +      _LEAF_  =                   37;
MPRINT(SCORETABLES):   _LEAF_ = 37;
3770289   +      P_DepVar0  =     0.90243902439024;
MPRINT(SCORETABLES):   P_DepVar0 = 0.90243902439024;
3770290   +      P_DepVar1  =     0.09756097560975;
MPRINT(SCORETABLES):   P_DepVar1 = 0.09756097560975;
3770291   +      Q_DepVar0  =     0.90243902439024;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.90243902439024;
3770292   +      Q_DepVar1  =     0.09756097560975;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.09756097560975;
3770293   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770294   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770295   +      END;
MPRINT(SCORETABLES):   END;
3770296   +    END;
MPRINT(SCORETABLES):   END;
3770297   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770298   +    _NODE_  =                   11;
MPRINT(SCORETABLES):   _NODE_ = 11;
3770299   +    _LEAF_  =                   36;
MPRINT(SCORETABLES):   _LEAF_ = 36;
3770300   +    P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3770301   +    P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3770302   +    Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3770303   +    Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3770304   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770305   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770306   +    END;
MPRINT(SCORETABLES):   END;
3770307   +  END;
MPRINT(SCORETABLES):   END;
3770308   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770309   +                 0.625 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance THEN DO;
3770310   +  IF  NOT MISSING(RANGE_Recency ) AND
3770311   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3770312   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3770313   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3770314   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3770315   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3770316   +      _LEAF_  =                   40;
MPRINT(SCORETABLES):   _LEAF_ = 40;
3770317   +      P_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93333333333333;
3770318   +      P_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06666666666666;
3770319   +      Q_DepVar0  =     0.93333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93333333333333;
3770320   +      Q_DepVar1  =     0.06666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06666666666666;
3770321   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770322   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770323   +      END;
MPRINT(SCORETABLES):   END;
3770324   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770325   +      _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3770326   +      _LEAF_  =                   41;
MPRINT(SCORETABLES):   _LEAF_ = 41;
3770327   +      P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3770328   +      P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3770329   +      Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3770330   +      Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3770331   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770332   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770333   +      END;
MPRINT(SCORETABLES):   END;
3770334   +    END;
MPRINT(SCORETABLES):   END;
3770335   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770336   +    _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3770337   +    _LEAF_  =                   39;
MPRINT(SCORETABLES):   _LEAF_ = 39;
3770338   +    P_DepVar0  =     0.07407407407407;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07407407407407;
3770339   +    P_DepVar1  =     0.92592592592592;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92592592592592;
3770340   +    Q_DepVar0  =     0.07407407407407;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07407407407407;
3770341   +    Q_DepVar1  =     0.92592592592592;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92592592592592;
3770342   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770343   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770344   +    END;
MPRINT(SCORETABLES):   END;
3770345   +  END;
MPRINT(SCORETABLES):   END;
3770346   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770347   +  IF  NOT MISSING(RANGE_Recency ) AND
3770348   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3770349   +    IF  NOT MISSING(MntCard_Games ) AND
3770350   +          0.49489795918367 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.49489795918367 <= MntCard_Games 
THEN DO;
3770351   +      IF  NOT MISSING(NumWebPurchases ) AND
3770352   +        NumWebPurchases  <     0.30384615384615 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumWebPurchases ) AND NumWebPurchases < 0.30384615384615 
THEN DO;
3770353   +        _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3770354   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3770355   +        P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3770356   +        P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3770357   +        Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3770358   +        Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3770359   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770360   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770361   +        END;
MPRINT(SCORETABLES):   END;
3770362   +      ELSE IF  NOT MISSING(NumWebPurchases ) AND
3770363   +            0.30384615384615 <= NumWebPurchases  AND
3770364   +        NumWebPurchases  <     0.34698996655518 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumWebPurchases ) AND 0.30384615384615 <= 
NumWebPurchases AND NumWebPurchases < 0.34698996655518 THEN DO;
3770365   +        _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3770366   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3770367   +        P_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.83333333333333;
3770368   +        P_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.16666666666666;
3770369   +        Q_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.83333333333333;
3770370   +        Q_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.16666666666666;
3770371   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770372   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770373   +        END;
MPRINT(SCORETABLES):   END;
3770374   +      ELSE IF  NOT MISSING(NumWebPurchases ) AND
3770375   +            0.34698996655518 <= NumWebPurchases  AND
3770376   +        NumWebPurchases  <     0.44466403162055 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumWebPurchases ) AND 0.34698996655518 <= 
NumWebPurchases AND NumWebPurchases < 0.44466403162055 THEN DO;
3770377   +        _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3770378   +        _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3770379   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770380   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770381   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770382   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770383   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770384   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770385   +        END;
MPRINT(SCORETABLES):   END;
3770386   +      ELSE IF  NOT MISSING(NumWebPurchases ) AND
3770387   +            0.44466403162055 <= NumWebPurchases  AND
3770388   +        NumWebPurchases  <     0.48076923076923 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumWebPurchases ) AND 0.44466403162055 <= 
NumWebPurchases AND NumWebPurchases < 0.48076923076923 THEN DO;
3770389   +        _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3770390   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3770391   +        P_DepVar0  =     0.58333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.58333333333333;
3770392   +        P_DepVar1  =     0.41666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.41666666666666;
3770393   +        Q_DepVar0  =     0.58333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.58333333333333;
3770394   +        Q_DepVar1  =     0.41666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.41666666666666;
3770395   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770396   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770397   +        END;
MPRINT(SCORETABLES):   END;
3770398   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770399   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3770400   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3770401   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3770402   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3770403   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3770404   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3770405   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770406   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770407   +        END;
MPRINT(SCORETABLES):   END;
3770408   +      END;
MPRINT(SCORETABLES):   END;
3770409   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770410   +      IF  NOT MISSING(NumDealsPurchases ) AND
3770411   +            0.15192307692307 <= NumDealsPurchases  AND
3770412   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3770413   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3770414   +              0.28991596638655 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.28991596638655 <= 
NumCatalogPurchases THEN DO;
3770415   +          _NODE_  =                   66;
MPRINT(SCORETABLES):   _NODE_ = 66;
3770416   +          _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3770417   +          P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3770418   +          P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3770419   +          Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3770420   +          Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3770421   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770422   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770423   +          END;
MPRINT(SCORETABLES):   END;
3770424   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770425   +          IF  NOT MISSING(RANGE_Recency ) AND
3770426   +            RANGE_Recency  <     0.03535353535353 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.03535353535353 
THEN DO;
3770427   +            _NODE_  =                   83;
MPRINT(SCORETABLES):   _NODE_ = 83;
3770428   +            _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3770429   +            P_DepVar0  =     0.78260869565217;
MPRINT(SCORETABLES):   P_DepVar0 = 0.78260869565217;
3770430   +            P_DepVar1  =     0.21739130434782;
MPRINT(SCORETABLES):   P_DepVar1 = 0.21739130434782;
The SAS System

3770431   +            Q_DepVar0  =     0.78260869565217;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.78260869565217;
3770432   +            Q_DepVar1  =     0.21739130434782;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.21739130434782;
3770433   +            I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770434   +            U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770435   +            END;
MPRINT(SCORETABLES):   END;
3770436   +          ELSE IF  NOT MISSING(RANGE_Recency ) AND
3770437   +                0.03535353535353 <= RANGE_Recency  AND
3770438   +            RANGE_Recency  <     0.04545454545454 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.03535353535353 <= 
RANGE_Recency AND RANGE_Recency < 0.04545454545454 THEN DO;
3770439   +            _NODE_  =                   84;
MPRINT(SCORETABLES):   _NODE_ = 84;
3770440   +            _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3770441   +            P_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.16666666666666;
3770442   +            P_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.83333333333333;
3770443   +            Q_DepVar0  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.16666666666666;
3770444   +            Q_DepVar1  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.83333333333333;
3770445   +            I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770446   +            U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770447   +            END;
MPRINT(SCORETABLES):   END;
3770448   +          ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770449   +            _NODE_  =                   85;
MPRINT(SCORETABLES):   _NODE_ = 85;
3770450   +            _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3770451   +            P_DepVar0  =     0.92727272727272;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92727272727272;
3770452   +            P_DepVar1  =     0.07272727272727;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07272727272727;
3770453   +            Q_DepVar0  =     0.92727272727272;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92727272727272;
3770454   +            Q_DepVar1  =     0.07272727272727;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07272727272727;
3770455   +            I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770456   +            U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770457   +            END;
MPRINT(SCORETABLES):   END;
3770458   +          END;
MPRINT(SCORETABLES):   END;
3770459   +        END;
MPRINT(SCORETABLES):   END;
3770460   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3770461   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <= 
NumDealsPurchases THEN DO;
3770462   +        _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3770463   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3770464   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770465   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770466   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770467   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770468   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770469   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770470   +        END;
MPRINT(SCORETABLES):   END;
3770471   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770472   +        _NODE_  =                   32;
MPRINT(SCORETABLES):   _NODE_ = 32;
3770473   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3770474   +        P_DepVar0  =      0.9758064516129;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9758064516129;
3770475   +        P_DepVar1  =     0.02419354838709;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02419354838709;
3770476   +        Q_DepVar0  =      0.9758064516129;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9758064516129;
3770477   +        Q_DepVar1  =     0.02419354838709;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02419354838709;
3770478   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770479   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770480   +        END;
MPRINT(SCORETABLES):   END;
3770481   +      END;
MPRINT(SCORETABLES):   END;
3770482   +    END;
MPRINT(SCORETABLES):   END;
3770483   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3770484   +        0.13636363636363 <= RANGE_Recency  AND
3770485   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3770486   +    IF  NOT MISSING(MntCard_Games ) AND
3770487   +          0.47871376811594 <= MntCard_Games  AND
3770488   +      MntCard_Games  <     0.64747893420748 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.47871376811594 <= MntCard_Games 
AND MntCard_Games < 0.64747893420748 THEN DO;
3770489   +      IF  NOT MISSING(NumDealsPurchases ) AND
3770490   +            0.20089285714285 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.20089285714285 <= 
NumDealsPurchases THEN DO;
3770491   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3770492   +        _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3770493   +        P_DepVar0  =     0.23076923076923;
MPRINT(SCORETABLES):   P_DepVar0 = 0.23076923076923;
3770494   +        P_DepVar1  =     0.76923076923076;
MPRINT(SCORETABLES):   P_DepVar1 = 0.76923076923076;
3770495   +        Q_DepVar0  =     0.23076923076923;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.23076923076923;
3770496   +        Q_DepVar1  =     0.76923076923076;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.76923076923076;
3770497   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770498   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770499   +        END;
MPRINT(SCORETABLES):   END;
3770500   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770501   +        IF  NOT MISSING(NumCatalogPurchases ) AND
3770502   +              0.41153846153846 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.41153846153846 <= 
NumCatalogPurchases THEN DO;
3770503   +          _NODE_  =                   71;
MPRINT(SCORETABLES):   _NODE_ = 71;
3770504   +          _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3770505   +          P_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar0 = 0.2;
3770506   +          P_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar1 = 0.8;
3770507   +          Q_DepVar0  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.2;
3770508   +          Q_DepVar1  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.8;
3770509   +          I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770510   +          U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770511   +          END;
MPRINT(SCORETABLES):   END;
3770512   +        ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770513   +          _NODE_  =                   70;
MPRINT(SCORETABLES):   _NODE_ = 70;
3770514   +          _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3770515   +          P_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91489361702127;
3770516   +          P_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08510638297872;
3770517   +          Q_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91489361702127;
3770518   +          Q_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08510638297872;
3770519   +          I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770520   +          U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770521   +          END;
MPRINT(SCORETABLES):   END;
3770522   +        END;
MPRINT(SCORETABLES):   END;
3770523   +      END;
MPRINT(SCORETABLES):   END;
3770524   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3770525   +          0.64747893420748 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.64747893420748 <= 
MntCard_Games THEN DO;
3770526   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3770527   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3770528   +      P_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   P_DepVar0 = 0.22222222222222;
3770529   +      P_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   P_DepVar1 = 0.77777777777777;
3770530   +      Q_DepVar0  =     0.22222222222222;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.22222222222222;
3770531   +      Q_DepVar1  =     0.77777777777777;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.77777777777777;
3770532   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770533   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770534   +      END;
MPRINT(SCORETABLES):   END;
3770535   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770536   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3770537   +        NumCatalogPurchases  <     0.17444219066937 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 
0.17444219066937 THEN DO;
3770538   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3770539   +        _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3770540   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770541   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770542   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770543   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770544   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770545   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770546   +        END;
MPRINT(SCORETABLES):   END;
3770547   +      ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3770548   +            0.17444219066937 <= NumCatalogPurchases  AND
3770549   +        NumCatalogPurchases  <      0.1801948051948 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.17444219066937 <= 
NumCatalogPurchases AND NumCatalogPurchases < 0.1801948051948 THEN DO;
3770550   +        _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3770551   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3770552   +        P_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   P_DepVar0 = 0.6;
3770553   +        P_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   P_DepVar1 = 0.4;
3770554   +        Q_DepVar0  =                  0.6;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.6;
3770555   +        Q_DepVar1  =                  0.4;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.4;
3770556   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770557   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770558   +        END;
MPRINT(SCORETABLES):   END;
3770559   +      ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3770560   +            0.35133239831697 <= NumCatalogPurchases  AND
3770561   +        NumCatalogPurchases  <     0.38348416289592 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.35133239831697 <= 
NumCatalogPurchases AND NumCatalogPurchases < 0.38348416289592 THEN DO;
3770562   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3770563   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3770564   +        P_DepVar0  =                0.375;
MPRINT(SCORETABLES):   P_DepVar0 = 0.375;
3770565   +        P_DepVar1  =                0.625;
MPRINT(SCORETABLES):   P_DepVar1 = 0.625;
3770566   +        Q_DepVar0  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.375;
3770567   +        Q_DepVar1  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.625;
3770568   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770569   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770570   +        END;
MPRINT(SCORETABLES):   END;
3770571   +      ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3770572   +            0.38348416289592 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.38348416289592 <= 
NumCatalogPurchases THEN DO;
3770573   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3770574   +        _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3770575   +        P_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8;
3770576   +        P_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   P_DepVar1 = 0.2;
3770577   +        Q_DepVar0  =                  0.8;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8;
3770578   +        Q_DepVar1  =                  0.2;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.2;
3770579   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770580   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770581   +        END;
MPRINT(SCORETABLES):   END;
3770582   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770583   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3770584   +        _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3770585   +        P_DepVar0  =     0.96019900497512;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96019900497512;
3770586   +        P_DepVar1  =     0.03980099502487;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03980099502487;
3770587   +        Q_DepVar0  =     0.96019900497512;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96019900497512;
3770588   +        Q_DepVar1  =     0.03980099502487;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03980099502487;
3770589   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770590   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770591   +        END;
MPRINT(SCORETABLES):   END;
3770592   +      END;
MPRINT(SCORETABLES):   END;
3770593   +    END;
MPRINT(SCORETABLES):   END;
3770594   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770595   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3770596   +           0.4068287037037 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.4068287037037 <= 
NumCatalogPurchases THEN DO;
3770597   +      IF  NOT MISSING(RANGE_Recency ) AND
3770598   +        RANGE_Recency  <     0.66161616161616 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.66161616161616 
THEN DO;
3770599   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3770600   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3770601   +        P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3770602   +        P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3770603   +        Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3770604   +        Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3770605   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770606   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770607   +        END;
MPRINT(SCORETABLES):   END;
3770608   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770609   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3770610   +        _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3770611   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770612   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770613   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770614   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770615   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770616   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770617   +        END;
MPRINT(SCORETABLES):   END;
3770618   +      END;
MPRINT(SCORETABLES):   END;
3770619   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770620   +      _NODE_  =                   20;
MPRINT(SCORETABLES):   _NODE_ = 20;
3770621   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3770622   +      P_DepVar0  =     0.99416342412451;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99416342412451;
3770623   +      P_DepVar1  =     0.00583657587548;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00583657587548;
3770624   +      Q_DepVar0  =     0.99416342412451;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99416342412451;
3770625   +      Q_DepVar1  =     0.00583657587548;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00583657587548;
3770626   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770627   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770628   +      END;
MPRINT(SCORETABLES):   END;
3770629   +    END;
MPRINT(SCORETABLES):   END;
3770630   +  END;
MPRINT(SCORETABLES):   END;
3770631   +
3770632   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3770633   +IF  F_DepVar  NE '0'
3770634   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3770635   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3770636   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3770637   + END;
MPRINT(SCORETABLES):   END;
3770638   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770639   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3770640   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3770641   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3770642   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3770643   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3770644   +       END;
MPRINT(SCORETABLES):   END;
3770645   + END;
MPRINT(SCORETABLES):   END;
3770646   +
3770647   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770648   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3770649   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770650   +
3770651   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3770652   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770653   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3770654   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770655   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770656   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3770657   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770658   +end;
MPRINT(SCORETABLES):   end;
3770659   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770660   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3770661   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770662   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770663   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3770664   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770665   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3770666   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3770667   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3770668   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3770669   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3770670   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3770671   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3770672   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3770673   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770674   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3770675   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3770676   +
3770677   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3770678   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3770679   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3770680   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3770681   +
3770682   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3770683   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3770684   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3770685   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3770686   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3770687   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3770688   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3770689   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3770690   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3770691   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3770692   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3770693   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3770694   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3770695   +
3770696   +
3770697   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3770698   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3770699   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3770700   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3770701   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3770702   +
3770703   +
3770704   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3770705   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3770706   +
3770707   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3770708   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770709   +                 0.125 <= RANGE_campaign_acceptance  AND
3770710   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3770711   +  IF  NOT MISSING(RANGE_Recency ) AND
3770712   +    RANGE_Recency  <     0.26767676767676 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.26767676767676 
THEN DO;
3770713   +    IF  NOT MISSING(MntCard_Games ) AND
3770714   +      MntCard_Games  <     0.33764835721522 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.33764835721522 
THEN DO;
3770715   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3770716   +            0.27951388888888 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.27951388888888 <= 
NumCatalogPurchases THEN DO;
3770717   +        _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3770718   +        _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3770719   +        P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3770720   +        P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3770721   +        Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3770722   +        Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3770723   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770724   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770725   +        END;
MPRINT(SCORETABLES):   END;
3770726   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770727   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3770728   +        _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3770729   +        P_DepVar0  =     0.80555555555555;
MPRINT(SCORETABLES):   P_DepVar0 = 0.80555555555555;
3770730   +        P_DepVar1  =     0.19444444444444;
MPRINT(SCORETABLES):   P_DepVar1 = 0.19444444444444;
3770731   +        Q_DepVar0  =     0.80555555555555;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.80555555555555;
3770732   +        Q_DepVar1  =     0.19444444444444;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.19444444444444;
3770733   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770734   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770735   +        END;
MPRINT(SCORETABLES):   END;
3770736   +      END;
MPRINT(SCORETABLES):   END;
3770737   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770738   +      _NODE_  =                   31;
MPRINT(SCORETABLES):   _NODE_ = 31;
3770739   +      _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3770740   +      P_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   P_DepVar0 = 0.05882352941176;
3770741   +      P_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   P_DepVar1 = 0.94117647058823;
3770742   +      Q_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.05882352941176;
3770743   +      Q_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.94117647058823;
3770744   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770745   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770746   +      END;
MPRINT(SCORETABLES):   END;
3770747   +    END;
MPRINT(SCORETABLES):   END;
3770748   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3770749   +        0.26767676767676 <= RANGE_Recency  AND
3770750   +    RANGE_Recency  <     0.45959595959595 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.26767676767676 <= 
RANGE_Recency AND RANGE_Recency < 0.45959595959595 THEN DO;
3770751   +    IF  NOT MISSING(MntCard_Games ) AND
3770752   +            0.445523193096 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.445523193096 <= MntCard_Games THEN 
DO;
3770753   +      _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3770754   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3770755   +      P_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1;
3770756   +      P_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9;
3770757   +      Q_DepVar0  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1;
3770758   +      Q_DepVar1  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9;
3770759   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770760   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770761   +      END;
MPRINT(SCORETABLES):   END;
3770762   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770763   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3770764   +            0.26969696969696 <= NumCatalogPurchases  AND
3770765   +        NumCatalogPurchases  <     0.37089947089947 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.26969696969696 <= 
NumCatalogPurchases AND NumCatalogPurchases < 0.37089947089947 THEN DO;
3770766   +        _NODE_  =                   58;
MPRINT(SCORETABLES):   _NODE_ = 58;
3770767   +        _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3770768   +        P_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar0 = 0.42857142857142;
3770769   +        P_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar1 = 0.57142857142857;
3770770   +        Q_DepVar0  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.42857142857142;
3770771   +        Q_DepVar1  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.57142857142857;
3770772   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770773   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770774   +        END;
MPRINT(SCORETABLES):   END;
3770775   +      ELSE IF  NOT MISSING(NumCatalogPurchases ) AND
3770776   +            0.37089947089947 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumCatalogPurchases ) AND 0.37089947089947 <= 
NumCatalogPurchases THEN DO;
3770777   +        _NODE_  =                   59;
MPRINT(SCORETABLES):   _NODE_ = 59;
3770778   +        _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3770779   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3770780   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3770781   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3770782   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3770783   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770784   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770785   +        END;
MPRINT(SCORETABLES):   END;
3770786   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770787   +        _NODE_  =                   57;
MPRINT(SCORETABLES):   _NODE_ = 57;
3770788   +        _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3770789   +        P_DepVar0  =     0.96969696969696;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96969696969696;
3770790   +        P_DepVar1  =     0.03030303030303;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03030303030303;
3770791   +        Q_DepVar0  =     0.96969696969696;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96969696969696;
3770792   +        Q_DepVar1  =     0.03030303030303;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03030303030303;
3770793   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770794   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770795   +        END;
MPRINT(SCORETABLES):   END;
3770796   +      END;
MPRINT(SCORETABLES):   END;
3770797   +    END;
MPRINT(SCORETABLES):   END;
3770798   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770799   +    IF  NOT MISSING(NumDealsPurchases ) AND
3770800   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <= 
NumDealsPurchases THEN DO;
3770801   +      _NODE_  =                   35;
MPRINT(SCORETABLES):   _NODE_ = 35;
3770802   +      _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3770803   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3770804   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3770805   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3770806   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3770807   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770808   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770809   +      END;
MPRINT(SCORETABLES):   END;
3770810   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770811   +      _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3770812   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3770813   +      P_DepVar0  =     0.96739130434782;
MPRINT(SCORETABLES):   P_DepVar0 = 0.96739130434782;
3770814   +      P_DepVar1  =     0.03260869565217;
MPRINT(SCORETABLES):   P_DepVar1 = 0.03260869565217;
3770815   +      Q_DepVar0  =     0.96739130434782;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.96739130434782;
3770816   +      Q_DepVar1  =     0.03260869565217;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.03260869565217;
3770817   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770818   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770819   +      END;
MPRINT(SCORETABLES):   END;
3770820   +    END;
MPRINT(SCORETABLES):   END;
3770821   +  END;
MPRINT(SCORETABLES):   END;
3770822   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770823   +                 0.375 <= RANGE_campaign_acceptance  AND
3770824   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3770825   +  IF  NOT MISSING(RANGE_Recency ) AND
3770826   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3770827   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3770828   +      NumCatalogPurchases  <     0.19604086845466 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 
0.19604086845466 THEN DO;
3770829   +      _NODE_  =                   36;
MPRINT(SCORETABLES):   _NODE_ = 36;
3770830   +      _LEAF_  =                   26;
MPRINT(SCORETABLES):   _LEAF_ = 26;
3770831   +      P_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.57142857142857;
3770832   +      P_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.42857142857142;
3770833   +      Q_DepVar0  =     0.57142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.57142857142857;
3770834   +      Q_DepVar1  =     0.42857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.42857142857142;
3770835   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770836   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770837   +      END;
MPRINT(SCORETABLES):   END;
3770838   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770839   +      _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3770840   +      _LEAF_  =                   27;
MPRINT(SCORETABLES):   _LEAF_ = 27;
3770841   +      P_DepVar0  =     0.03448275862068;
MPRINT(SCORETABLES):   P_DepVar0 = 0.03448275862068;
3770842   +      P_DepVar1  =     0.96551724137931;
MPRINT(SCORETABLES):   P_DepVar1 = 0.96551724137931;
3770843   +      Q_DepVar0  =     0.03448275862068;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.03448275862068;
3770844   +      Q_DepVar1  =     0.96551724137931;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.96551724137931;
3770845   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770846   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770847   +      END;
MPRINT(SCORETABLES):   END;
3770848   +    END;
MPRINT(SCORETABLES):   END;
3770849   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770850   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3770851   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <= 
NumCatalogPurchases THEN DO;
3770852   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3770853   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3770854   +      IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
3770855   +        _NODE_  =                   64;
MPRINT(SCORETABLES):   _NODE_ = 64;
3770856   +        _LEAF_  =                   29;
MPRINT(SCORETABLES):   _LEAF_ = 29;
3770857   +        P_DepVar0  =                0.625;
MPRINT(SCORETABLES):   P_DepVar0 = 0.625;
3770858   +        P_DepVar1  =                0.375;
MPRINT(SCORETABLES):   P_DepVar1 = 0.375;
3770859   +        Q_DepVar0  =                0.625;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.625;
3770860   +        Q_DepVar1  =                0.375;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.375;
3770861   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770862   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770863   +        END;
MPRINT(SCORETABLES):   END;
3770864   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770865   +        _NODE_  =                   65;
MPRINT(SCORETABLES):   _NODE_ = 65;
3770866   +        _LEAF_  =                   30;
MPRINT(SCORETABLES):   _LEAF_ = 30;
3770867   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770868   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770869   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770870   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770871   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770872   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770873   +        END;
MPRINT(SCORETABLES):   END;
3770874   +      END;
MPRINT(SCORETABLES):   END;
3770875   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770876   +      _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3770877   +      _LEAF_  =                   28;
MPRINT(SCORETABLES):   _LEAF_ = 28;
3770878   +      P_DepVar0  =     0.89583333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.89583333333333;
3770879   +      P_DepVar1  =     0.10416666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.10416666666666;
3770880   +      Q_DepVar0  =     0.89583333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.89583333333333;
3770881   +      Q_DepVar1  =     0.10416666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.10416666666666;
3770882   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770883   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770884   +      END;
MPRINT(SCORETABLES):   END;
3770885   +    END;
MPRINT(SCORETABLES):   END;
3770886   +  END;
MPRINT(SCORETABLES):   END;
3770887   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3770888   +                 0.625 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance THEN DO;
3770889   +  IF  NOT MISSING(RANGE_Recency ) AND
3770890   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3770891   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3770892   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3770893   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3770894   +      _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3770895   +      _LEAF_  =                   32;
MPRINT(SCORETABLES):   _LEAF_ = 32;
3770896   +      P_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   P_DepVar0 = 0.92307692307692;
3770897   +      P_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   P_DepVar1 = 0.07692307692307;
3770898   +      Q_DepVar0  =     0.92307692307692;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.92307692307692;
3770899   +      Q_DepVar1  =     0.07692307692307;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.07692307692307;
3770900   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770901   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770902   +      END;
MPRINT(SCORETABLES):   END;
3770903   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770904   +      _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3770905   +      _LEAF_  =                   33;
MPRINT(SCORETABLES):   _LEAF_ = 33;
3770906   +      P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3770907   +      P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3770908   +      Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3770909   +      Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3770910   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770911   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770912   +      END;
MPRINT(SCORETABLES):   END;
3770913   +    END;
MPRINT(SCORETABLES):   END;
3770914   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770915   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3770916   +    _LEAF_  =                   31;
MPRINT(SCORETABLES):   _LEAF_ = 31;
3770917   +    P_DepVar0  =     0.03571428571428;
MPRINT(SCORETABLES):   P_DepVar0 = 0.03571428571428;
3770918   +    P_DepVar1  =     0.96428571428571;
MPRINT(SCORETABLES):   P_DepVar1 = 0.96428571428571;
3770919   +    Q_DepVar0  =     0.03571428571428;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.03571428571428;
3770920   +    Q_DepVar1  =     0.96428571428571;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.96428571428571;
3770921   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770922   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770923   +    END;
MPRINT(SCORETABLES):   END;
3770924   +  END;
MPRINT(SCORETABLES):   END;
3770925   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770926   +  IF  NOT MISSING(RANGE_Recency ) AND
3770927   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3770928   +    IF  NOT MISSING(MntCard_Games ) AND
3770929   +          0.40792761279268 <= MntCard_Games  AND
3770930   +      MntCard_Games  <     0.57529979144942 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40792761279268 <= MntCard_Games 
AND MntCard_Games < 0.57529979144942 THEN DO;
3770931   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3770932   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3770933   +      P_DepVar0  =     0.61643835616438;
MPRINT(SCORETABLES):   P_DepVar0 = 0.61643835616438;
3770934   +      P_DepVar1  =     0.38356164383561;
MPRINT(SCORETABLES):   P_DepVar1 = 0.38356164383561;
3770935   +      Q_DepVar0  =     0.61643835616438;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.61643835616438;
3770936   +      Q_DepVar1  =     0.38356164383561;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.38356164383561;
3770937   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770938   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770939   +      END;
MPRINT(SCORETABLES):   END;
3770940   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3770941   +          0.57529979144942 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.57529979144942 <= 
MntCard_Games THEN DO;
3770942   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3770943   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3770944   +      P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3770945   +      P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3770946   +      Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3770947   +      Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3770948   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770949   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770950   +      END;
MPRINT(SCORETABLES):   END;
3770951   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770952   +      IF  NOT MISSING(NumDealsPurchases ) AND
3770953   +            0.16228070175438 <= NumDealsPurchases  AND
3770954   +        NumDealsPurchases  <     0.35416666666666 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.16228070175438 <= 
NumDealsPurchases AND NumDealsPurchases < 0.35416666666666 THEN DO;
3770955   +        _NODE_  =                   43;
MPRINT(SCORETABLES):   _NODE_ = 43;
3770956   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3770957   +        P_DepVar0  =      0.8235294117647;
MPRINT(SCORETABLES):   P_DepVar0 = 0.8235294117647;
3770958   +        P_DepVar1  =     0.17647058823529;
MPRINT(SCORETABLES):   P_DepVar1 = 0.17647058823529;
3770959   +        Q_DepVar0  =      0.8235294117647;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.8235294117647;
3770960   +        Q_DepVar1  =     0.17647058823529;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.17647058823529;
3770961   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770962   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770963   +        END;
MPRINT(SCORETABLES):   END;
3770964   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3770965   +            0.35416666666666 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.35416666666666 <= 
NumDealsPurchases THEN DO;
3770966   +        _NODE_  =                   44;
MPRINT(SCORETABLES):   _NODE_ = 44;
3770967   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3770968   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770969   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770970   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770971   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3770972   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3770973   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3770974   +        END;
MPRINT(SCORETABLES):   END;
3770975   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3770976   +        _NODE_  =                   42;
MPRINT(SCORETABLES):   _NODE_ = 42;
3770977   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3770978   +        P_DepVar0  =     0.99038461538461;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99038461538461;
3770979   +        P_DepVar1  =     0.00961538461538;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00961538461538;
3770980   +        Q_DepVar0  =     0.99038461538461;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99038461538461;
3770981   +        Q_DepVar1  =     0.00961538461538;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00961538461538;
3770982   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3770983   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3770984   +        END;
MPRINT(SCORETABLES):   END;
3770985   +      END;
MPRINT(SCORETABLES):   END;
3770986   +    END;
MPRINT(SCORETABLES):   END;
3770987   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3770988   +        0.13636363636363 <= RANGE_Recency  AND
3770989   +    RANGE_Recency  <     0.33838383838383 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.33838383838383 THEN DO;
3770990   +    IF  NOT MISSING(NumDealsPurchases ) AND
3770991   +      NumDealsPurchases  <     0.04653679653679 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND NumDealsPurchases < 
0.04653679653679 THEN DO;
3770992   +      IF  NOT MISSING(MntCard_Games ) AND
3770993   +            0.64840525846128 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.64840525846128 <= MntCard_Games 
THEN DO;
3770994   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3770995   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3770996   +        P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3770997   +        P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3770998   +        Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3770999   +        Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3771000   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771001   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771002   +        END;
MPRINT(SCORETABLES):   END;
3771003   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771004   +        _NODE_  =                   45;
MPRINT(SCORETABLES):   _NODE_ = 45;
3771005   +        _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3771006   +        P_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.83333333333333;
3771007   +        P_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.16666666666666;
3771008   +        Q_DepVar0  =     0.83333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.83333333333333;
3771009   +        Q_DepVar1  =     0.16666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.16666666666666;
3771010   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771011   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771012   +        END;
MPRINT(SCORETABLES):   END;
3771013   +      END;
MPRINT(SCORETABLES):   END;
3771014   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3771015   +          0.04653679653679 <= NumDealsPurchases  AND
3771016   +      NumDealsPurchases  <      0.0863354037267 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.04653679653679 <= 
NumDealsPurchases AND NumDealsPurchases < 0.0863354037267 THEN DO;
3771017   +      _NODE_  =                   21;
MPRINT(SCORETABLES):   _NODE_ = 21;
3771018   +      _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3771019   +      P_DepVar0  =     0.93650793650793;
MPRINT(SCORETABLES):   P_DepVar0 = 0.93650793650793;
3771020   +      P_DepVar1  =     0.06349206349206;
MPRINT(SCORETABLES):   P_DepVar1 = 0.06349206349206;
3771021   +      Q_DepVar0  =     0.93650793650793;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.93650793650793;
3771022   +      Q_DepVar1  =     0.06349206349206;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.06349206349206;
3771023   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771024   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771025   +      END;
MPRINT(SCORETABLES):   END;
3771026   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3771027   +           0.1801948051948 <= NumDealsPurchases  AND
3771028   +      NumDealsPurchases  <     0.25657894736842 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.1801948051948 <= 
NumDealsPurchases AND NumDealsPurchases < 0.25657894736842 THEN DO;
3771029   +      IF  NOT MISSING(MntCard_Games ) AND
3771030   +            0.51407920493901 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.51407920493901 <= MntCard_Games 
THEN DO;
3771031   +        _NODE_  =                   48;
MPRINT(SCORETABLES):   _NODE_ = 48;
3771032   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3771033   +        P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3771034   +        P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3771035   +        Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3771036   +        Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3771037   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771038   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771039   +        END;
MPRINT(SCORETABLES):   END;
3771040   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771041   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3771042   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3771043   +        P_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9;
3771044   +        P_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1;
3771045   +        Q_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9;
3771046   +        Q_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1;
3771047   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771048   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771049   +        END;
MPRINT(SCORETABLES):   END;
3771050   +      END;
MPRINT(SCORETABLES):   END;
3771051   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3771052   +          0.25657894736842 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.25657894736842 <= 
NumDealsPurchases THEN DO;
3771053   +      _NODE_  =                   24;
MPRINT(SCORETABLES):   _NODE_ = 24;
3771054   +      _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3771055   +      P_DepVar0  =     0.36842105263157;
MPRINT(SCORETABLES):   P_DepVar0 = 0.36842105263157;
3771056   +      P_DepVar1  =     0.63157894736842;
MPRINT(SCORETABLES):   P_DepVar1 = 0.63157894736842;
3771057   +      Q_DepVar0  =     0.36842105263157;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.36842105263157;
3771058   +      Q_DepVar1  =     0.63157894736842;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.63157894736842;
3771059   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771060   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771061   +      END;
MPRINT(SCORETABLES):   END;
3771062   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771063   +      _NODE_  =                   22;
MPRINT(SCORETABLES):   _NODE_ = 22;
3771064   +      _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3771065   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3771066   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3771067   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3771068   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3771069   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771070   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771071   +      END;
MPRINT(SCORETABLES):   END;
3771072   +    END;
MPRINT(SCORETABLES):   END;
3771073   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3771074   +        0.33838383838383 <= RANGE_Recency  AND
3771075   +    RANGE_Recency  <     0.58080808080808 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.33838383838383 <= 
RANGE_Recency AND RANGE_Recency < 0.58080808080808 THEN DO;
3771076   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3771077   +          0.36038961038961 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.36038961038961 <= 
NumCatalogPurchases THEN DO;
3771078   +      IF  NOT MISSING(MntCard_Games ) AND
3771079   +            0.40634870480348 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.40634870480348 <= MntCard_Games 
THEN DO;
3771080   +        _NODE_  =                   52;
MPRINT(SCORETABLES):   _NODE_ = 52;
3771081   +        _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3771082   +        P_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   P_DepVar0 = 0.14285714285714;
3771083   +        P_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   P_DepVar1 = 0.85714285714285;
3771084   +        Q_DepVar0  =     0.14285714285714;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.14285714285714;
3771085   +        Q_DepVar1  =     0.85714285714285;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.85714285714285;
3771086   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771087   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771088   +        END;
MPRINT(SCORETABLES):   END;
3771089   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771090   +        _NODE_  =                   51;
MPRINT(SCORETABLES):   _NODE_ = 51;
3771091   +        _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3771092   +        P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3771093   +        P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3771094   +        Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3771095   +        Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3771096   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771097   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771098   +        END;
MPRINT(SCORETABLES):   END;
3771099   +      END;
MPRINT(SCORETABLES):   END;
3771100   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771101   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3771102   +      _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3771103   +      P_DepVar0  =     0.98477157360406;
MPRINT(SCORETABLES):   P_DepVar0 = 0.98477157360406;
3771104   +      P_DepVar1  =     0.01522842639593;
MPRINT(SCORETABLES):   P_DepVar1 = 0.01522842639593;
3771105   +      Q_DepVar0  =     0.98477157360406;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.98477157360406;
3771106   +      Q_DepVar1  =     0.01522842639593;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.01522842639593;
3771107   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771108   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771109   +      END;
MPRINT(SCORETABLES):   END;
3771110   +    END;
MPRINT(SCORETABLES):   END;
3771111   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771112   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3771113   +    _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3771114   +    P_DepVar0  =     0.99852289512555;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99852289512555;
3771115   +    P_DepVar1  =     0.00147710487444;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00147710487444;
3771116   +    Q_DepVar0  =     0.99852289512555;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99852289512555;
3771117   +    Q_DepVar1  =     0.00147710487444;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00147710487444;
3771118   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771119   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771120   +    END;
MPRINT(SCORETABLES):   END;
3771121   +  END;
MPRINT(SCORETABLES):   END;
3771122   +
3771123   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3771124   +IF  F_DepVar  NE '0'
3771125   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3771126   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3771127   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3771128   + END;
MPRINT(SCORETABLES):   END;
3771129   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771130   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3771131   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3771132   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3771133   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3771134   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3771135   +       END;
MPRINT(SCORETABLES):   END;
3771136   + END;
MPRINT(SCORETABLES):   END;
3771137   +
3771138   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771139   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3771140   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771141   +
3771142   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3771143   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3771144   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3771145   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3771146   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3771147   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3771148   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3771149   +end;
MPRINT(SCORETABLES):   end;
3771150   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3771151   +* Grp3: StartGroup;
MPRINT(SCORETABLES):   * Grp3: StartGroup;
3771152   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3771153   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3771154   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3771155   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3771156   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3771157   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3771158   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3771159   +* Tree3: DecisionTree;
MPRINT(SCORETABLES):   * Tree3: DecisionTree;
3771160   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3771161   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3771162   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3771163   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3771164   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771165   +******             DECISION TREE SCORING CODE             ******;
MPRINT(SCORETABLES):   ****** DECISION TREE SCORING CODE ******;
3771166   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771167   +
3771168   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(SCORETABLES):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
3771169   +LENGTH F_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH F_DepVar $ 12;
3771170   +LENGTH I_DepVar  $   12;
MPRINT(SCORETABLES):   LENGTH I_DepVar $ 12;
3771171   +LENGTH _WARN_  $    4;
MPRINT(SCORETABLES):   LENGTH _WARN_ $ 4;
3771172   +
3771173   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(SCORETABLES):   ****** LABELS FOR NEW VARIABLES ******;
3771174   +label _NODE_ = 'Node' ;
MPRINT(SCORETABLES):   label _NODE_ = 'Node' ;
3771175   +label _LEAF_ = 'Leaf' ;
MPRINT(SCORETABLES):   label _LEAF_ = 'Leaf' ;
3771176   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3771177   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3771178   +label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
MPRINT(SCORETABLES):   label Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
3771179   +label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
MPRINT(SCORETABLES):   label Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
3771180   +label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3771181   +label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3771182   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3771183   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3771184   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3771185   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3771186   +
3771187   +
3771188   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(SCORETABLES):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
3771189   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_12 $ 12;
MPRINT(SCORETABLES):   DROP _ARBFMT_12;
3771190   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_12 = ' ';
3771191   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(SCORETABLES):   LENGTH _ARBFMT_8 $ 8;
MPRINT(SCORETABLES):   DROP _ARBFMT_8;
3771192   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(SCORETABLES):   _ARBFMT_8 = ' ';
3771193   +
3771194   +
3771195   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(SCORETABLES):   _ARBFMT_12 = PUT( DepVar , BEST.);
3771196   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(SCORETABLES):  ;
3771197   +
3771198   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(SCORETABLES):   ****** ASSIGN OBSERVATION TO NODE ******;
3771199   +IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3771200   +                 0.125 <= RANGE_campaign_acceptance  AND
3771201   +  RANGE_campaign_acceptance  <                0.375 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.125 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.375 THEN DO;
3771202   +  IF  NOT MISSING(RANGE_Recency ) AND
3771203   +    RANGE_Recency  <     0.17676767676767 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.17676767676767 
THEN DO;
3771204   +    IF  NOT MISSING(MntCard_Games ) AND
3771205   +      MntCard_Games  <     0.27785574657911 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND MntCard_Games < 0.27785574657911 
THEN DO;
3771206   +      IF  NOT MISSING(NumDealsPurchases ) AND
3771207   +            0.19805194805194 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.19805194805194 <= 
NumDealsPurchases THEN DO;
3771208   +        _NODE_  =                   54;
MPRINT(SCORETABLES):   _NODE_ = 54;
3771209   +        _LEAF_  =                   11;
MPRINT(SCORETABLES):   _LEAF_ = 11;
3771210   +        P_DepVar0  =                0.125;
MPRINT(SCORETABLES):   P_DepVar0 = 0.125;
3771211   +        P_DepVar1  =                0.875;
MPRINT(SCORETABLES):   P_DepVar1 = 0.875;
3771212   +        Q_DepVar0  =                0.125;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.125;
3771213   +        Q_DepVar1  =                0.875;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.875;
3771214   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771215   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771216   +        END;
MPRINT(SCORETABLES):   END;
3771217   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771218   +        _NODE_  =                   53;
MPRINT(SCORETABLES):   _NODE_ = 53;
3771219   +        _LEAF_  =                   10;
MPRINT(SCORETABLES):   _LEAF_ = 10;
3771220   +        P_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   P_DepVar0 = 0.9;
3771221   +        P_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   P_DepVar1 = 0.1;
3771222   +        Q_DepVar0  =                  0.9;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.9;
3771223   +        Q_DepVar1  =                  0.1;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.1;
3771224   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771225   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771226   +        END;
MPRINT(SCORETABLES):   END;
3771227   +      END;
MPRINT(SCORETABLES):   END;
3771228   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771229   +      _NODE_  =                   25;
MPRINT(SCORETABLES):   _NODE_ = 25;
3771230   +      _LEAF_  =                   12;
MPRINT(SCORETABLES):   _LEAF_ = 12;
3771231   +      P_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   P_DepVar0 = 0.07142857142857;
3771232   +      P_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   P_DepVar1 = 0.92857142857142;
3771233   +      Q_DepVar0  =     0.07142857142857;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.07142857142857;
3771234   +      Q_DepVar1  =     0.92857142857142;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.92857142857142;
3771235   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771236   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771237   +      END;
MPRINT(SCORETABLES):   END;
3771238   +    END;
MPRINT(SCORETABLES):   END;
3771239   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3771240   +        0.17676767676767 <= RANGE_Recency  AND
3771241   +    RANGE_Recency  <     0.45959595959595 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.17676767676767 <= 
RANGE_Recency AND RANGE_Recency < 0.45959595959595 THEN DO;
3771242   +    IF  NOT MISSING(MntCard_Games ) AND
3771243   +          0.48879444605759 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.48879444605759 <= MntCard_Games 
THEN DO;
3771244   +      _NODE_  =                   27;
MPRINT(SCORETABLES):   _NODE_ = 27;
3771245   +      _LEAF_  =                   15;
MPRINT(SCORETABLES):   _LEAF_ = 15;
3771246   +      P_DepVar0  =                    0;
MPRINT(SCORETABLES):   P_DepVar0 = 0;
3771247   +      P_DepVar1  =                    1;
MPRINT(SCORETABLES):   P_DepVar1 = 1;
3771248   +      Q_DepVar0  =                    0;
MPRINT(SCORETABLES):   Q_DepVar0 = 0;
3771249   +      Q_DepVar1  =                    1;
MPRINT(SCORETABLES):   Q_DepVar1 = 1;
3771250   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771251   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771252   +      END;
MPRINT(SCORETABLES):   END;
3771253   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771254   +      IF  NOT MISSING(NumCatalogPurchases ) AND
3771255   +            0.25657894736842 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.25657894736842 <= 
NumCatalogPurchases THEN DO;
3771256   +        _NODE_  =                   56;
MPRINT(SCORETABLES):   _NODE_ = 56;
3771257   +        _LEAF_  =                   14;
MPRINT(SCORETABLES):   _LEAF_ = 14;
3771258   +        P_DepVar0  =                 0.44;
MPRINT(SCORETABLES):   P_DepVar0 = 0.44;
3771259   +        P_DepVar1  =                 0.56;
MPRINT(SCORETABLES):   P_DepVar1 = 0.56;
3771260   +        Q_DepVar0  =                 0.44;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.44;
3771261   +        Q_DepVar1  =                 0.56;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.56;
3771262   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771263   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771264   +        END;
MPRINT(SCORETABLES):   END;
3771265   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771266   +        _NODE_  =                   55;
MPRINT(SCORETABLES):   _NODE_ = 55;
3771267   +        _LEAF_  =                   13;
MPRINT(SCORETABLES):   _LEAF_ = 13;
3771268   +        P_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   P_DepVar0 = 0.91489361702127;
3771269   +        P_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   P_DepVar1 = 0.08510638297872;
3771270   +        Q_DepVar0  =     0.91489361702127;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.91489361702127;
3771271   +        Q_DepVar1  =     0.08510638297872;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.08510638297872;
3771272   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771273   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771274   +        END;
MPRINT(SCORETABLES):   END;
3771275   +      END;
MPRINT(SCORETABLES):   END;
3771276   +    END;
MPRINT(SCORETABLES):   END;
3771277   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771278   +    IF  NOT MISSING(NumDealsPurchases ) AND
3771279   +          0.22649572649572 <= NumDealsPurchases  AND
3771280   +      NumDealsPurchases  <     0.37626262626262 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.22649572649572 <= 
NumDealsPurchases AND NumDealsPurchases < 0.37626262626262 THEN DO;
3771281   +      _NODE_  =                   29;
MPRINT(SCORETABLES):   _NODE_ = 29;
3771282   +      _LEAF_  =                   17;
MPRINT(SCORETABLES):   _LEAF_ = 17;
3771283   +      P_DepVar0  =     0.84615384615384;
MPRINT(SCORETABLES):   P_DepVar0 = 0.84615384615384;
3771284   +      P_DepVar1  =     0.15384615384615;
MPRINT(SCORETABLES):   P_DepVar1 = 0.15384615384615;
3771285   +      Q_DepVar0  =     0.84615384615384;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.84615384615384;
3771286   +      Q_DepVar1  =     0.15384615384615;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.15384615384615;
3771287   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771288   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771289   +      END;
MPRINT(SCORETABLES):   END;
3771290   +    ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3771291   +          0.37626262626262 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.37626262626262 <= 
NumDealsPurchases THEN DO;
3771292   +      _NODE_  =                   30;
MPRINT(SCORETABLES):   _NODE_ = 30;
3771293   +      _LEAF_  =                   18;
MPRINT(SCORETABLES):   _LEAF_ = 18;
3771294   +      P_DepVar0  =     0.36363636363636;
MPRINT(SCORETABLES):   P_DepVar0 = 0.36363636363636;
3771295   +      P_DepVar1  =     0.63636363636363;
MPRINT(SCORETABLES):   P_DepVar1 = 0.63636363636363;
3771296   +      Q_DepVar0  =     0.36363636363636;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.36363636363636;
3771297   +      Q_DepVar1  =     0.63636363636363;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.63636363636363;
3771298   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771299   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771300   +      END;
MPRINT(SCORETABLES):   END;
3771301   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771302   +      _NODE_  =                   28;
MPRINT(SCORETABLES):   _NODE_ = 28;
3771303   +      _LEAF_  =                   16;
MPRINT(SCORETABLES):   _LEAF_ = 16;
3771304   +      P_DepVar0  =                0.975;
MPRINT(SCORETABLES):   P_DepVar0 = 0.975;
3771305   +      P_DepVar1  =                0.025;
MPRINT(SCORETABLES):   P_DepVar1 = 0.025;
3771306   +      Q_DepVar0  =                0.975;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.975;
3771307   +      Q_DepVar1  =                0.025;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.025;
3771308   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771309   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771310   +      END;
MPRINT(SCORETABLES):   END;
3771311   +    END;
MPRINT(SCORETABLES):   END;
3771312   +  END;
MPRINT(SCORETABLES):   END;
3771313   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3771314   +                 0.375 <= RANGE_campaign_acceptance  AND
3771315   +  RANGE_campaign_acceptance  <                0.625 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.375 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.625 THEN DO;
3771316   +  IF  NOT MISSING(RANGE_Recency ) AND
3771317   +    RANGE_Recency  <     0.38888888888888 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.38888888888888 
THEN DO;
3771318   +    _NODE_  =                   13;
MPRINT(SCORETABLES):   _NODE_ = 13;
3771319   +    _LEAF_  =                   19;
MPRINT(SCORETABLES):   _LEAF_ = 19;
3771320   +    P_DepVar0  =      0.1578947368421;
MPRINT(SCORETABLES):   P_DepVar0 = 0.1578947368421;
3771321   +    P_DepVar1  =     0.84210526315789;
MPRINT(SCORETABLES):   P_DepVar1 = 0.84210526315789;
3771322   +    Q_DepVar0  =      0.1578947368421;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.1578947368421;
3771323   +    Q_DepVar1  =     0.84210526315789;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.84210526315789;
3771324   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771325   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771326   +    END;
MPRINT(SCORETABLES):   END;
3771327   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771328   +    IF  NOT MISSING(NumCatalogPurchases ) AND
3771329   +          0.32085561497326 <= NumCatalogPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumCatalogPurchases ) AND 0.32085561497326 <= 
NumCatalogPurchases THEN DO;
3771330   +      _NODE_  =                   34;
MPRINT(SCORETABLES):   _NODE_ = 34;
3771331   +      _LEAF_  =                   21;
MPRINT(SCORETABLES):   _LEAF_ = 21;
3771332   +      P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3771333   +      P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3771334   +      Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3771335   +      Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3771336   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771337   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771338   +      END;
MPRINT(SCORETABLES):   END;
3771339   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771340   +      _NODE_  =                   33;
MPRINT(SCORETABLES):   _NODE_ = 33;
3771341   +      _LEAF_  =                   20;
MPRINT(SCORETABLES):   _LEAF_ = 20;
3771342   +      P_DepVar0  =     0.88636363636363;
MPRINT(SCORETABLES):   P_DepVar0 = 0.88636363636363;
3771343   +      P_DepVar1  =     0.11363636363636;
MPRINT(SCORETABLES):   P_DepVar1 = 0.11363636363636;
3771344   +      Q_DepVar0  =     0.88636363636363;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.88636363636363;
3771345   +      Q_DepVar1  =     0.11363636363636;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.11363636363636;
3771346   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771347   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771348   +      END;
MPRINT(SCORETABLES):   END;
3771349   +    END;
MPRINT(SCORETABLES):   END;
3771350   +  END;
MPRINT(SCORETABLES):   END;
3771351   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3771352   +                 0.625 <= RANGE_campaign_acceptance  AND
3771353   +  RANGE_campaign_acceptance  <                0.875 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.625 <= 
RANGE_campaign_acceptance AND RANGE_campaign_acceptance < 0.875 THEN DO;
3771354   +  IF  NOT MISSING(RANGE_Recency ) AND
3771355   +        0.66161616161616 <= RANGE_Recency  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND 0.66161616161616 <= RANGE_Recency 
THEN DO;
3771356   +    _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(SCORETABLES):   _ARBFMT_8 = PUT( Marital_Status , $8.);
3771357   +     %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(SCORETABLES):  ;
3771358   +    IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(SCORETABLES):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
3771359   +      _NODE_  =                   37;
MPRINT(SCORETABLES):   _NODE_ = 37;
3771360   +      _LEAF_  =                   23;
MPRINT(SCORETABLES):   _LEAF_ = 23;
3771361   +      P_DepVar0  =                    1;
MPRINT(SCORETABLES):   P_DepVar0 = 1;
3771362   +      P_DepVar1  =                    0;
MPRINT(SCORETABLES):   P_DepVar1 = 0;
3771363   +      Q_DepVar0  =                    1;
MPRINT(SCORETABLES):   Q_DepVar0 = 1;
3771364   +      Q_DepVar1  =                    0;
MPRINT(SCORETABLES):   Q_DepVar1 = 0;
3771365   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771366   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771367   +      END;
MPRINT(SCORETABLES):   END;
3771368   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771369   +      _NODE_  =                   38;
MPRINT(SCORETABLES):   _NODE_ = 38;
3771370   +      _LEAF_  =                   24;
MPRINT(SCORETABLES):   _LEAF_ = 24;
3771371   +      P_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.33333333333333;
3771372   +      P_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.66666666666666;
3771373   +      Q_DepVar0  =     0.33333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.33333333333333;
3771374   +      Q_DepVar1  =     0.66666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.66666666666666;
3771375   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771376   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771377   +      END;
MPRINT(SCORETABLES):   END;
3771378   +    END;
MPRINT(SCORETABLES):   END;
3771379   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771380   +    _NODE_  =                   15;
MPRINT(SCORETABLES):   _NODE_ = 15;
3771381   +    _LEAF_  =                   22;
MPRINT(SCORETABLES):   _LEAF_ = 22;
3771382   +    P_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   P_DepVar0 = 0.08333333333333;
3771383   +    P_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   P_DepVar1 = 0.91666666666666;
3771384   +    Q_DepVar0  =     0.08333333333333;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.08333333333333;
3771385   +    Q_DepVar1  =     0.91666666666666;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.91666666666666;
3771386   +    I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771387   +    U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771388   +    END;
MPRINT(SCORETABLES):   END;
3771389   +  END;
MPRINT(SCORETABLES):   END;
3771390   +ELSE IF  NOT MISSING(RANGE_campaign_acceptance ) AND
3771391   +                 0.875 <= RANGE_campaign_acceptance  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_campaign_acceptance ) AND 0.875 <= 
RANGE_campaign_acceptance THEN DO;
3771392   +  _NODE_  =                    6;
MPRINT(SCORETABLES):   _NODE_ = 6;
3771393   +  _LEAF_  =                   25;
MPRINT(SCORETABLES):   _LEAF_ = 25;
3771394   +  P_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   P_DepVar0 = 0.09090909090909;
3771395   +  P_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   P_DepVar1 = 0.9090909090909;
3771396   +  Q_DepVar0  =     0.09090909090909;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.09090909090909;
3771397   +  Q_DepVar1  =      0.9090909090909;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.9090909090909;
3771398   +  I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771399   +  U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771400   +  END;
MPRINT(SCORETABLES):   END;
3771401   +ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771402   +  IF  NOT MISSING(RANGE_Recency ) AND
3771403   +    RANGE_Recency  <     0.13636363636363 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(RANGE_Recency ) AND RANGE_Recency < 0.13636363636363 
THEN DO;
3771404   +    IF  NOT MISSING(MntCard_Games ) AND
3771405   +          0.45839333185644 <= MntCard_Games  AND
3771406   +      MntCard_Games  <     0.60768995618355 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.45839333185644 <= MntCard_Games 
AND MntCard_Games < 0.60768995618355 THEN DO;
3771407   +      _NODE_  =                   18;
MPRINT(SCORETABLES):   _NODE_ = 18;
3771408   +      _LEAF_  =                    4;
MPRINT(SCORETABLES):   _LEAF_ = 4;
3771409   +      P_DepVar0  =     0.48936170212765;
MPRINT(SCORETABLES):   P_DepVar0 = 0.48936170212765;
3771410   +      P_DepVar1  =     0.51063829787234;
MPRINT(SCORETABLES):   P_DepVar1 = 0.51063829787234;
3771411   +      Q_DepVar0  =     0.48936170212765;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.48936170212765;
3771412   +      Q_DepVar1  =     0.51063829787234;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.51063829787234;
3771413   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771414   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771415   +      END;
MPRINT(SCORETABLES):   END;
3771416   +    ELSE IF  NOT MISSING(MntCard_Games ) AND
3771417   +          0.60768995618355 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(MntCard_Games ) AND 0.60768995618355 <= 
MntCard_Games THEN DO;
3771418   +      _NODE_  =                   19;
MPRINT(SCORETABLES):   _NODE_ = 19;
3771419   +      _LEAF_  =                    5;
MPRINT(SCORETABLES):   _LEAF_ = 5;
3771420   +      P_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   P_DepVar0 = 0.05882352941176;
3771421   +      P_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   P_DepVar1 = 0.94117647058823;
3771422   +      Q_DepVar0  =     0.05882352941176;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.05882352941176;
3771423   +      Q_DepVar1  =     0.94117647058823;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.94117647058823;
3771424   +      I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771425   +      U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771426   +      END;
MPRINT(SCORETABLES):   END;
3771427   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771428   +      IF  NOT MISSING(NumDealsPurchases ) AND
3771429   +            0.15192307692307 <= NumDealsPurchases  AND
3771430   +        NumDealsPurchases  <     0.32575757575757 THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.15192307692307 <= 
NumDealsPurchases AND NumDealsPurchases < 0.32575757575757 THEN DO;
3771431   +        _NODE_  =                   40;
MPRINT(SCORETABLES):   _NODE_ = 40;
3771432   +        _LEAF_  =                    2;
MPRINT(SCORETABLES):   _LEAF_ = 2;
3771433   +        P_DepVar0  =     0.82666666666666;
MPRINT(SCORETABLES):   P_DepVar0 = 0.82666666666666;
3771434   +        P_DepVar1  =     0.17333333333333;
MPRINT(SCORETABLES):   P_DepVar1 = 0.17333333333333;
3771435   +        Q_DepVar0  =     0.82666666666666;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.82666666666666;
3771436   +        Q_DepVar1  =     0.17333333333333;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.17333333333333;
3771437   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771438   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771439   +        END;
MPRINT(SCORETABLES):   END;
3771440   +      ELSE IF  NOT MISSING(NumDealsPurchases ) AND
3771441   +            0.32575757575757 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(NumDealsPurchases ) AND 0.32575757575757 <= 
NumDealsPurchases THEN DO;
3771442   +        _NODE_  =                   41;
MPRINT(SCORETABLES):   _NODE_ = 41;
3771443   +        _LEAF_  =                    3;
MPRINT(SCORETABLES):   _LEAF_ = 3;
3771444   +        P_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   P_DepVar0 = 0.25;
3771445   +        P_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   P_DepVar1 = 0.75;
3771446   +        Q_DepVar0  =                 0.25;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.25;
3771447   +        Q_DepVar1  =                 0.75;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.75;
3771448   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771449   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771450   +        END;
MPRINT(SCORETABLES):   END;
3771451   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771452   +        _NODE_  =                   39;
MPRINT(SCORETABLES):   _NODE_ = 39;
3771453   +        _LEAF_  =                    1;
MPRINT(SCORETABLES):   _LEAF_ = 1;
3771454   +        P_DepVar0  =     0.97413793103448;
MPRINT(SCORETABLES):   P_DepVar0 = 0.97413793103448;
3771455   +        P_DepVar1  =     0.02586206896551;
MPRINT(SCORETABLES):   P_DepVar1 = 0.02586206896551;
3771456   +        Q_DepVar0  =     0.97413793103448;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.97413793103448;
3771457   +        Q_DepVar1  =     0.02586206896551;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.02586206896551;
3771458   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771459   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771460   +        END;
MPRINT(SCORETABLES):   END;
3771461   +      END;
MPRINT(SCORETABLES):   END;
3771462   +    END;
MPRINT(SCORETABLES):   END;
3771463   +  ELSE IF  NOT MISSING(RANGE_Recency ) AND
3771464   +        0.13636363636363 <= RANGE_Recency  AND
3771465   +    RANGE_Recency  <     0.36868686868686 THEN DO;
MPRINT(SCORETABLES):   ELSE IF NOT MISSING(RANGE_Recency ) AND 0.13636363636363 <= 
RANGE_Recency AND RANGE_Recency < 0.36868686868686 THEN DO;
3771466   +    IF  NOT MISSING(MntCard_Games ) AND
3771467   +          0.47871376811594 <= MntCard_Games  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(MntCard_Games ) AND 0.47871376811594 <= MntCard_Games 
THEN DO;
3771468   +      IF  NOT MISSING(NumDealsPurchases ) AND
3771469   +            0.21825396825396 <= NumDealsPurchases  THEN DO;
MPRINT(SCORETABLES):   IF NOT MISSING(NumDealsPurchases ) AND 0.21825396825396 <= 
NumDealsPurchases THEN DO;
3771470   +        _NODE_  =                   47;
MPRINT(SCORETABLES):   _NODE_ = 47;
3771471   +        _LEAF_  =                    8;
MPRINT(SCORETABLES):   _LEAF_ = 8;
3771472   +        P_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   P_DepVar0 = 0.18181818181818;
3771473   +        P_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   P_DepVar1 = 0.81818181818181;
3771474   +        Q_DepVar0  =     0.18181818181818;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.18181818181818;
3771475   +        Q_DepVar1  =     0.81818181818181;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.81818181818181;
3771476   +        I_DepVar  = '1' ;
MPRINT(SCORETABLES):   I_DepVar = '1' ;
3771477   +        U_DepVar  =                    1;
MPRINT(SCORETABLES):   U_DepVar = 1;
3771478   +        END;
MPRINT(SCORETABLES):   END;
3771479   +      ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771480   +        _NODE_  =                   46;
MPRINT(SCORETABLES):   _NODE_ = 46;
3771481   +        _LEAF_  =                    7;
MPRINT(SCORETABLES):   _LEAF_ = 7;
3771482   +        P_DepVar0  =     0.75806451612903;
MPRINT(SCORETABLES):   P_DepVar0 = 0.75806451612903;
3771483   +        P_DepVar1  =     0.24193548387096;
MPRINT(SCORETABLES):   P_DepVar1 = 0.24193548387096;
3771484   +        Q_DepVar0  =     0.75806451612903;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.75806451612903;
3771485   +        Q_DepVar1  =     0.24193548387096;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.24193548387096;
3771486   +        I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771487   +        U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771488   +        END;
MPRINT(SCORETABLES):   END;
3771489   +      END;
MPRINT(SCORETABLES):   END;
3771490   +    ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771491   +      _NODE_  =                   20;
MPRINT(SCORETABLES):   _NODE_ = 20;
3771492   +      _LEAF_  =                    6;
MPRINT(SCORETABLES):   _LEAF_ = 6;
3771493   +      P_DepVar0  =     0.94754098360655;
MPRINT(SCORETABLES):   P_DepVar0 = 0.94754098360655;
3771494   +      P_DepVar1  =     0.05245901639344;
MPRINT(SCORETABLES):   P_DepVar1 = 0.05245901639344;
3771495   +      Q_DepVar0  =     0.94754098360655;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.94754098360655;
3771496   +      Q_DepVar1  =     0.05245901639344;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.05245901639344;
3771497   +      I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771498   +      U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771499   +      END;
MPRINT(SCORETABLES):   END;
3771500   +    END;
MPRINT(SCORETABLES):   END;
3771501   +  ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771502   +    _NODE_  =                    9;
MPRINT(SCORETABLES):   _NODE_ = 9;
3771503   +    _LEAF_  =                    9;
MPRINT(SCORETABLES):   _LEAF_ = 9;
3771504   +    P_DepVar0  =     0.99324324324324;
MPRINT(SCORETABLES):   P_DepVar0 = 0.99324324324324;
3771505   +    P_DepVar1  =     0.00675675675675;
MPRINT(SCORETABLES):   P_DepVar1 = 0.00675675675675;
3771506   +    Q_DepVar0  =     0.99324324324324;
MPRINT(SCORETABLES):   Q_DepVar0 = 0.99324324324324;
3771507   +    Q_DepVar1  =     0.00675675675675;
MPRINT(SCORETABLES):   Q_DepVar1 = 0.00675675675675;
3771508   +    I_DepVar  = '0' ;
MPRINT(SCORETABLES):   I_DepVar = '0' ;
3771509   +    U_DepVar  =                    0;
MPRINT(SCORETABLES):   U_DepVar = 0;
3771510   +    END;
MPRINT(SCORETABLES):   END;
3771511   +  END;
MPRINT(SCORETABLES):   END;
3771512   +
3771513   +*****  RESIDUALS R_ *************;
MPRINT(SCORETABLES):   ***** RESIDUALS R_ *************;
3771514   +IF  F_DepVar  NE '0'
3771515   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(SCORETABLES):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
3771516   +        R_DepVar0  = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3771517   +        R_DepVar1  = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3771518   + END;
MPRINT(SCORETABLES):   END;
3771519   + ELSE DO;
MPRINT(SCORETABLES):   ELSE DO;
3771520   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(SCORETABLES):   R_DepVar0 = -P_DepVar0 ;
3771521   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(SCORETABLES):   R_DepVar1 = -P_DepVar1 ;
3771522   +       SELECT( F_DepVar  );
MPRINT(SCORETABLES):   SELECT( F_DepVar );
3771523   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(SCORETABLES):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
3771524   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(SCORETABLES):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
3771525   +       END;
MPRINT(SCORETABLES):   END;
3771526   + END;
MPRINT(SCORETABLES):   END;
3771527   +
3771528   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771529   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(SCORETABLES):   ****** END OF DECISION TREE SCORING CODE ******;
3771530   +****************************************************************;
MPRINT(SCORETABLES):   ****************************************************************;
3771531   +
3771532   +drop _LEAF_;
MPRINT(SCORETABLES):   drop _LEAF_;
3771533   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3771534   +* EndGrp3: EndGroup;
MPRINT(SCORETABLES):   * EndGrp3: EndGroup;
3771535   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3771536   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3771537   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3771538   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3771539   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;

NOTE: DATA STEP view saved on file EMWS1.ENDGRP3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
      

MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3771540    *------------------------------------------------------------*;
3771541    * End POSTLOOP: EndGrp3;
3771542    *------------------------------------------------------------*;
3771543    

NOTE: There were 10 observations read from the data set EMWS1.GRP3_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP3_EMLOOPINFO has 10 observations and 3 variables.
3771544    proc print data=EMWS1.EndGrp3_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp3_EMLOOPINFO noobs label;
3771545    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3771546    run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP3_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2460.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3771547    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3771571    data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT;
3771572    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3771573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3771574    data EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT;
3771575    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3771576    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3771577    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3771577  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3771578    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3771579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3771580    proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMREPORTFIT nothreads;
3771581    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3771582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3771583    %let _EMwarndup = 0;
3771584    %let _EMtargetdup =;
3771585    %let _EMASEtargetdup =;
3771586    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3771587    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3771588    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3771589    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3771590    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3771591    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3771592    end;
MPRINT(EM_DIAGRAM):   end;
3771593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3771594    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3771595    * EndGrp3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp3: Computing metadata for TRAIN data;
3771596    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp3_TRAIN out=WORK.M0DVAEGP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DVAEGP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DVAEGP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DVAEGP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DVAEGP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M24MBYC4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32AYCKY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   set WORK.M24MBYC4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3771947    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3771948    set EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO;
3771949    where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3771950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMINFO.
      WHERE (DATA='EndGrp3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3771951    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMINFO;
3771952    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3771953    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3771954    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.ENDGRP3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3771958    run;
3771959    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
3771960    set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMINFO WORK.MODELTEMP_INFO;
3771961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3771962    proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp3_EMINFO NOTHREADS;
3771963    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3771964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3771965    proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3771966    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3771967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.TREE3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3771968    proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3771969    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3771970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3771971    data EMWS1.EndGrp3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMINFO;
3771972    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3771973    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3771974    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP3_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3771975    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3771976    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3771977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3771978    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3772441    %let EMEXCEPTIONSTRING=;
3772442    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3772443    * POSTLOOPREPORT: EndGrp3;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp3;
3772444    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3772445    %let EM_ACTION = POSTLOOPREPORT;
3772446    %let syscc = 0;
3772447    %macro main;
3772448       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3772449    
3772450           filename temp catalog 'sashelp.emutil.endgp_train.source';
3772451           %include temp;
3772452           filename temp;
3772453    
3772454           %train;
3772455    
3772456       %end;
3772457       %else
3772458          %if %upcase(&EM_ACTION) = SCORE %then %do;
3772459    
3772460           filename temp catalog 'sashelp.emutil.endgp_score.source';
3772461           %include temp;
3772462           filename temp;
3772463    
3772464           %score;
3772465       %end;
3772466       %else
3772467       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3772468    
3772469           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3772470           %include temp;
3772471           filename temp;
3772472    
3772473           %postloop;
3772474    
3772475       %end;
3772476    
3772477       %doendm:
3772478    %mend main;
3772479    
3772480    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
3772481    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3772482    * End POSTLOOPREPORT: EndGrp3;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp3;
3772483    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3772484    

3772485    proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree3_CMeta_TRAIN out=WORK.SUBSETINMETA;
3772486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3772487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set EMWS1.TREE3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 25 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3772488    proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp3_VariableSet out=WORK.SUBSETVARSET(keep=NAME 
REPORT);
3772489    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3772490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set EMWS1.ENDGRP3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 25 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3772491    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3772492    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3772493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3772494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 25 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 25 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3772495    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3772496    set EMWS1.EndGrp3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_CMeta_TRAIN;
3772497    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3772497  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 
'ASSESS', 'COST');
3772498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3772499    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3772500    set EMWS1.EndGrp3_TRAIN(keep=
3772501    F_DepVar
3772502    I_DepVar
3772503    P_DepVar0
3772504    P_DepVar1
3772505    Q_DepVar0
3772506    Q_DepVar1
3772507    R_DepVar0
3772508    R_DepVar1
3772509    U_DepVar
3772510    _WARN_
3772511    DepVar
3772512    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 
Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3772513    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP3_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp3_1WWF2IP nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp3_1WWF2IP;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp3_1WWF2IP(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp3_1WWF2IP;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp3_1WWF2IP;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ 
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN 
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = 
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing 
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS 
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC 
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB 
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST 
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE 
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS 
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - 
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * 
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / 
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( 
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * 
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - 
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - 
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - 
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - 
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - 
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - 
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - 
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - 
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - 
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - 
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - 
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - 
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - 
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - 
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - 
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - 
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - 
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - 
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - 
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) 
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number 
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3776800    %let grouptarget=0;
3776801    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3776802    set EMWS1.Grp3_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp3_EMLOOPINFO;
3776803    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3776804    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3776805    stop;
MPRINT(EM_DIAGRAM):   stop;
3776806    end;
MPRINT(EM_DIAGRAM):   end;
3776807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP3_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3776808    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3776809    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776810    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776811    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776811  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776812    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776813    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776814    set EMWS1.EndGrp3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT;
3776815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776816    data EMWS1.EndGrp3_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMOUTFIT_LOOP;
3776817    set EMWS1.EndGrp3_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMOUTFIT_LOOP work.EMOUTFIT;
3776818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP3_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMOUTFIT_LOOP has 11 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776819    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3776820    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776821    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776822    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776822  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776823    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776824    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776825    set EMWS1.EndGrp3_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT;
3776826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776827    data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMREPORTFIT_LOOP;
3776828    set EMWS1.EndGrp3_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMREPORTFIT_LOOP work.EMREPORTFIT;
3776829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 80 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP has 89 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3776830    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3776831    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776832    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776833    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776833  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776834    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776835    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776836    set EMWS1.EndGrp3_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK;
3776837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776838    data EMWS1.EndGrp3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMRANK_LOOP;
3776839    set EMWS1.EndGrp3_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMRANK_LOOP work.EMRANK;
3776840    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP3_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP3_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776841    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3776842    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776843    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776844    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776844  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776845    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776846    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776847    set EMWS1.EndGrp3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST;
3776848    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776849    data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMSCOREDIST_LOOP;
3776850    set EMWS1.EndGrp3_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMSCOREDIST_LOOP work.EMSCOREDIST;
3776851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 134 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP has 154 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776852    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3776853    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776854    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776855    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776855  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776856    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776857    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776858    set EMWS1.EndGrp3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION;
3776859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776860    data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMCLASSIFICATION_LOOP;
3776861    set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3776862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776863    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP out=_temp;
3776864    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3776865    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3776866    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

3776867    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3776867  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
totalCount totalPercent);
3776868    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3776869    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3776870    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3776871    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3776872    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3776873    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3776874    end;
MPRINT(EM_DIAGRAM):   end;
3776875    else do;
MPRINT(EM_DIAGRAM):   else do;
3776876    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3776877    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3776878    end;
MPRINT(EM_DIAGRAM):   end;
3776879    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3776880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776881    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3776881  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
eventCount eventPercent);
3776882    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3776883    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3776884    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3776885    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3776886    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3776887    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3776888    end;
MPRINT(EM_DIAGRAM):   end;
3776889    else do;
MPRINT(EM_DIAGRAM):   else do;
3776890    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3776891    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3776892    end;
MPRINT(EM_DIAGRAM):   end;
3776893    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3776894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3776895    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3776895  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
neventCount neventPercent);
3776896    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3776897    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3776898    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3776899    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3776900    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3776901    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3776902    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3776903    end;
MPRINT(EM_DIAGRAM):   end;
3776904    else do;
MPRINT(EM_DIAGRAM):   else do;
3776905    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3776906    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3776907    end;
MPRINT(EM_DIAGRAM):   end;
3776908    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3776909    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3776910    data EMWS1.EndGrp3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMMISC_LOOP;
3776911    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3776912    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3776913    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3776913  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3776913  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3776914       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3776914  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3776914  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3776915       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3776915  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3776916    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3776917    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3776918    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3776919    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3776920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP3_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3776921    proc sort data=EMWS1.EndGrp3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp3_EMMISC_LOOP;
3776922    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3776923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.ENDGRP3_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP3_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776924    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3776925    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3776926    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3776927    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3776927  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3776928    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3776929    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3776930    set EMWS1.EndGrp3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMEVENTREPORT;
3776931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776932    data EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
3776933    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3776934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP3_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3776935    %let _cn = %sysfunc(getoption(CENTER));
3776936    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3776937    proc print data=EMWS1.EndGrp3_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMREPORTFIT_LOOP noobs label;
3776938    var STAT LABEL TRAIN
3776939    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3776940    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3776941    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3776942    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3776943    run;

NOTE: There were 89 observations read from the data set EMWS1.ENDGRP3_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2461.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3776944    title10;
MPRINT(EM_DIAGRAM):   title10;
3776945    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3776946    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP nothreads;
3776947    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3776948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3776949    %let _cn = %sysfunc(getoption(CENTER));
3776950    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3776951    proc print data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMCLASSIFICATION_LOOP noobs label;
3776952    var from into pct_row pct_col count percent
3776953    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3776954    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3776955    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3776956    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3776957    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3776958    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3776959    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3776960    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3776961    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3776962    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3776963    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3776964    run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP3_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2462.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3776965    title9;
MPRINT(EM_DIAGRAM):   title9;
3776966    title10;
MPRINT(EM_DIAGRAM):   title10;
3776967    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3776968    %let _cn = %sysfunc(getoption(CENTER));
3776969    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3776970    data EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
3776971    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3776971  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3776972    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3776972  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3776972  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3776972  ! FALSEEVENT
3776973    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3776973  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3776973  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3776974       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3776975    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3776976    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3776977    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3776978    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3776979    set EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp3_EMEVENTREPORT_LOOP;
3776980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP3_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3776981    proc print data=EMWS1.EndGrp3_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMEVENTREPORT_LOOP noobs label;
3776982    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3776983    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3776984    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3776985    run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP3_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2463.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3776986    title10;
MPRINT(EM_DIAGRAM):   title10;
3776987    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3776988    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3776989    modify EndGrp3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3776990    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3776991    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3776991  ! ;
MPRINT(EM_DIAGRAM):   run;
3776992    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMRANK_LOOP.DATA.
3776993    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

3776994    %let _cn = %sysfunc(getoption(CENTER));
3776995    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3776996    proc print data=EMWS1.EndGrp3_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMRANK_LOOP label noobs;
3776997    var
3776998    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3776999    by
3777000    notsorted DATAROLE
3777001    notsorted _WHERE_
3777002    notsorted TARGET
3777003    notsorted TARGETLABEL
3777004    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3777005    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3777006    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3777007    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP3_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2464.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3777008    title10;
MPRINT(EM_DIAGRAM):   title10;
3777009    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3777010    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3777011    modify EndGrp3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3777012    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3777012  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3777013    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3777013  ! ;
MPRINT(EM_DIAGRAM):   run;
3777014    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP3_EMSCOREDIST_LOOP.DATA.
3777015    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

3777016    %let _cn = %sysfunc(getoption(CENTER));
3777017    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3777018    proc print data=EMWS1.EndGrp3_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp3_EMSCOREDIST_LOOP label noobs;
3777019    var
3777020    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3777021    by
3777022    notsorted DATAROLE
3777023    notsorted _WHERE_
3777024    notsorted TARGET
3777025    notsorted TARGETLABEL
3777026    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3777027    where TARGET in(
3777028    "DepVar"
3777029    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3777030    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3777031    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3777032    run;

NOTE: There were 154 observations read from the data set EMWS1.ENDGRP3_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2465.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3777033    title10;
MPRINT(EM_DIAGRAM):   title10;
3777034    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3777035    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:00 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:10:00 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp3\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp3_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp3_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
