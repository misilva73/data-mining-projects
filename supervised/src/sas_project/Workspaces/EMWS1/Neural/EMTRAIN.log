MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:12 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:06:12 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O38BCSKZ "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O38BCSKZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:13 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:13 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
3536821    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536822    set EMWS1.Grp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_EMINFO;
3536823    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3536824    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3536825    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3536826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536827    data WORK.M0F09GJ8;
MPRINT(EM_DIAGRAM):    data WORK.M0F09GJ8;
3536828    set WORK.M0F09GJ8;
MPRINT(EM_DIAGRAM):   set WORK.M0F09GJ8;
3536829    where upcase(NAME) in(
3536830    "DEPVAR"
3536831    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3536832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M0F09GJ8.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M0F09GJ8 has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3536833    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Grp9_TRAIN EMWS1.Grp9_TRAIN 
EMWS1.Grp9_TRAIN EMWS1.Grp9_TRAIN EMWS1 Grp9_TRAIN 
EMWS1.Grp9_TRAIN EMWS1.Grp9_TRAIN 
EMWS1.Grp9_TRAIN EMWS1.Grp9_TRAIN EMWS1 Grp9_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp9_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR 
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_DepVar_DD 
out=EMWS1.Neural_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3536880    data WORK.Neural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3536881    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3536882    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3536882  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3536882  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3536883       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3536883  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3536883  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3536884    set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
3536885    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3536886    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3536887    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3536888    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3536889    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3536890    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3536891    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3536892    end;
MPRINT(EM_DIAGRAM):   end;
3536893    output;
MPRINT(EM_DIAGRAM):   output;
3536894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3536895    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3536896    proc print data=WORK.Neural_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural_EVENT noobs label;
3536897    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3536898    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3536899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3536900    run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_EVENT.
NOTE: The PROCEDURE PRINT printed page 2338.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536901    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3536902    proc print data = EMWS1.Neural_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural_DepVar_DM noobs label;
3536903    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3536904    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
3536905    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3536905  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3536905  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3536906    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3536907    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3536908    run;

NOTE: There were 7 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2339.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3536909    title10;
MPRINT(EM_DIAGRAM):   title10;
3536910    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536911    set EMWS1.Grp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_EMINFO;
3536912    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3536913    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3536914    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3536915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536916    filename emflow "C:\Users\misil\Desktop\DM
3536916  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
3536917    filename empub "C:\Users\misil\Desktop\DM
3536917  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas";
3536918    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536919    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3536920    set EMWS1.Grp9_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_GROUPINFO end=eof;
3536921    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3536922    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3536923    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3536924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP9_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536925    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536926    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3536927    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536928    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3536929    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536931    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_1.source";
3536932    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536933    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536934    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_1.source";
3536935    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536936    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536937    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536938    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3536939    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3536940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10734,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3536941    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536942    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3536943    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536944    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3536945    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536946    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536947    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_1.source";
3536948    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536949    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536950    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_1.source";
3536951    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536952    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536953    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536954    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3536955    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3536956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9769,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536957    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536958    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3536959    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536960    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3536961    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10740,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3536963    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_2.source";
3536964    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10894,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536965    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536966    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_2.source";
3536967    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10931,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536968    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536969    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536970    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3536971    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3536972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21474,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3536973    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536974    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3536975    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536976    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3536977    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9775,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536979    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_2.source";
3536980    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=9930,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536981    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536982    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_2.source";
3536983    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=9967,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536984    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536985    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536986    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3536987    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3536988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19544,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536989    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3536990    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3536991    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536992    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3536993    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3536994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21480,
      Last Modified=02 June 2018 17:06:13 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3536995    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_3.source";
3536996    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21634,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3536997    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3536998    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_3.source";
3536999    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21671,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537000    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537001    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537002    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537003    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32214,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3537005    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537006    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537007    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537008    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3537009    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19550,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3537011    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_3.source";
3537012    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19705,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537013    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537014    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_3.source";
3537015    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19742,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537016    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537017    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537018    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537019    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29319,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3537021    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537022    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537023    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537024    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3537025    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32220,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3537027    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_4.source";
3537028    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32374,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537029    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537030    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_4.source";
3537031    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32411,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537032    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537033    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537034    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537035    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42954,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537037    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537038    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537039    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537040    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3537041    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29325,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3537043    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_4.source";
3537044    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29480,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537045    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537046    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_4.source";
3537047    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29517,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537048    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537049    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537050    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537051    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39094,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537053    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537054    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537055    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537056    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3537057    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42960,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537059    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_5.source";
3537060    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=43114,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537061    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537062    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_5.source";
3537063    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=43151,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537064    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537065    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537066    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537067    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537068    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53694,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537069    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537070    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537071    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537072    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3537073    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39100,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3537075    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_5.source";
3537076    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39255,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537077    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537078    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_5.source";
3537079    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39292,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537080    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537081    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537082    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537083    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48869,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537085    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537086    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537087    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537088    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3537089    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537090    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53700,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537091    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_6.source";
3537092    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53854,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537093    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537094    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_6.source";
3537095    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53891,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537096    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537097    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537098    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537099    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537100    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=64434,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537101    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537102    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537103    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537104    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3537105    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537106    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=48875,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537107    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_6.source";
3537108    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=49030,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537109    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537110    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_6.source";
3537111    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=49067,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537112    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537113    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537114    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537115    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58644,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537117    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537118    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537119    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537120    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3537121    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537122    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=64440,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537123    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_7.source";
3537124    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=64594,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537125    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537126    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_7.source";
3537127    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=64631,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537128    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537129    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537130    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537131    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=75174,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537133    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537134    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537135    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537136    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3537137    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58650,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537139    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_7.source";
3537140    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=58805,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537141    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537142    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_7.source";
3537143    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=58842,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537144    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537145    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537146    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537147    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=68419,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537149    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537150    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537151    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537152    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3537153    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=75180,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537155    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_8.source";
3537156    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75334,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537157    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537158    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_8.source";
3537159    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75371,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537160    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537161    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537162    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537163    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85914,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537165    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537166    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537167    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537168    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3537169    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=68425,
      Last Modified=02 June 2018 17:06:14 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537171    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_8.source";
3537172    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=68580,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537173    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537174    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_8.source";
3537175    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=68617,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537176    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537177    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537178    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537179    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=78194,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537181    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537182    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537183    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537184    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3537185    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85920,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537187    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_9.source";
3537188    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=86074,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537189    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537190    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_9.source";
3537191    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=86111,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537192    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537193    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537194    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537195    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96654,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3537197    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537198    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537199    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537200    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3537201    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=78200,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537203    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_9.source";
3537204    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=78355,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537205    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537206    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_9.source";
3537207    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=78392,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537208    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537209    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537210    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537211    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=87969,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537213    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537214    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537215    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537216    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3537217    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=96660,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537219    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_10.source";
3537220    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96815,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537221    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537222    filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMFLOWCODE_10.source";
3537223    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96854,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 322 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537224    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537225    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537226    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3537227    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537228    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=107397,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537229    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537230    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537231    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537232    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3537233    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3537234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=87975,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537235    filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp9_LOOP.EMPUBLISHCODE_10.source";
3537236    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=88131,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537237    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537238    filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural_LOOP.EMPUBLISHCODE_10.source";
3537239    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=88170,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 283 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3537240    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3537241    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3537242    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3537243    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3537244    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=97747,
      Last Modified=02 June 2018 17:06:15 o'clock,
      Create Time=22 May 2018 22:26:35 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3537245    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3537246    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP9_EMLOOPINFO.
NOTE: The data set EMWS1.NEURAL_EMLOOPINFO has 10 observations and 3 variables.
3537247    proc print data=EMWS1.Neural_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Neural_EMLOOPINFO noobs label;
3537248    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3537249    run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2340.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3537250    title9;
MPRINT(EM_DIAGRAM):   title9;
3537251    filename emflow "C:\Users\misil\Desktop\DM
3537251  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537252    *------------------------------------------------------------*;
3537253    * Neural: Scoring DATA data;
3537254    *------------------------------------------------------------*;
3537255    data EMWS1.Neural_TRAIN
3537256    / view=EMWS1.Neural_TRAIN
3537257    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
3537258    set EMWS1.Grp9_TRAIN
3537259    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_TRAIN ;
3537260    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
3537261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537262   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3537263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537264   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3537265   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3537266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537267   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3537268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537269   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3537270   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3537271   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3537272   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3537273   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3537274   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3537275   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3537276   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3537277   +LENGTH _WARN_ $4
3537278   +      F_DepVar  $ 12
3537279   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3537280   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3537281   +
3537282   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3537283   +
3537284   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3537285   +
3537286   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3537287   +
3537288   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3537289   +
3537290   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3537291   +
3537292   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3537293   +
3537294   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3537295   +
3537296   +      label S_RANGE_campaign_acceptance =
3537297   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3537298   +
3537299   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3537300   +
3537301   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3537302   +
3537303   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3537304   +
3537305   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3537306   +
3537307   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3537308   +
3537309   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3537310   +
3537311   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3537312   +
3537313   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3537314   +
3537315   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3537316   +
3537317   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3537318   +
3537319   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3537320   +
3537321   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3537322   +
3537323   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3537324   +
3537325   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3537326   +
3537327   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3537328   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3537329   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3537330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3537331   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3537332   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3537333   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3537334   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3537335   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3537336   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3537337   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3537338   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3537339   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3537340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3537341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537342   +end;
MPRINT(EM_DIAGRAM):   end;
3537343   +else do;
MPRINT(EM_DIAGRAM):   else do;
3537344   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3537345   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3537346   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3537347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3537348   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3537349   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3537350   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3537351   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3537352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537353   +         end;
MPRINT(EM_DIAGRAM):   end;
3537354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3537355   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3537356   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3537357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537358   +            end;
MPRINT(EM_DIAGRAM):   end;
3537359   +         end;
MPRINT(EM_DIAGRAM):   end;
3537360   +      end;
MPRINT(EM_DIAGRAM):   end;
3537361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3537362   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3537363   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3537364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537365   +         end;
MPRINT(EM_DIAGRAM):   end;
3537366   +      end;
MPRINT(EM_DIAGRAM):   end;
3537367   +   end;
MPRINT(EM_DIAGRAM):   end;
3537368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3537369   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3537370   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3537371   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537372   +      end;
MPRINT(EM_DIAGRAM):   end;
3537373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3537374   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3537375   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3537376   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3537377   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3537378   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3537379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537380   +         end;
MPRINT(EM_DIAGRAM):   end;
3537381   +      end;
MPRINT(EM_DIAGRAM):   end;
3537382   +   end;
MPRINT(EM_DIAGRAM):   end;
3537383   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3537384   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3537385   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3537386   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3537387   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3537388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3537389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537390   +   end;
MPRINT(EM_DIAGRAM):   end;
3537391   +end;
MPRINT(EM_DIAGRAM):   end;
3537392   +
3537393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537394   +*** Checking missing input Interval
3537395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3537396   +
3537397   +IF NMISS(
3537398   +   MntCard_Games ,
3537399   +   MntMagazines ,
3537400   +   NumCatalogPurchases ,
3537401   +   NumDealsPurchases ,
3537402   +   NumWebPurchases ,
3537403   +   RANGE_Frq ,
3537404   +   RANGE_Recency ,
3537405   +   RANGE_average_purchase ,
3537406   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3537407   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3537408   +
3537409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537410   +END;
MPRINT(EM_DIAGRAM):   END;
3537411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537412   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3537413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537414   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537415   +   S_MntCard_Games  =    -2.31443880149645 +     6.60696044415922 *
3537416   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31443880149645 + 6.60696044415922 * MntCard_Games ;
3537417   +   S_MntMagazines  =    -0.83518699862706 +     17.5080622494492 *
3537418   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83518699862706 + 17.5080622494492 * MntMagazines ;
3537419   +   S_NumCatalogPurchases  =    -3.11517742102545 +     13.5001014849444 *
3537420   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11517742102545 + 13.5001014849444 * 
NumCatalogPurchases ;
3537421   +   S_NumDealsPurchases  =    -1.42433963721206 +     11.3005450269131 *
3537422   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42433963721206 + 11.3005450269131 * 
NumDealsPurchases ;
3537423   +   S_NumWebPurchases  =    -5.23126390248359 +      12.268030981197 *
3537424   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23126390248359 + 12.268030981197 * 
NumWebPurchases ;
3537425   +   S_RANGE_Frq  =    -1.36737264900818 +      4.2114974885657 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36737264900818 + 4.2114974885657 * RANGE_Frq ;
3537426   +   S_RANGE_Recency  =    -1.66886726105788 +     3.35597816708239 *
3537427   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66886726105788 + 3.35597816708239 * RANGE_Recency ;
3537428   +   S_RANGE_average_purchase  =    -1.03892952919331 +     5.17297242883714 *
3537429   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03892952919331 + 5.17297242883714 * 
RANGE_average_purchase ;
3537430   +   S_RANGE_campaign_acceptance
3537431   +          =    -0.47377177401348 +     5.76433307241995 *
3537432   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47377177401348 + 5.76433307241995 * 
RANGE_campaign_acceptance ;
3537433   +END;
MPRINT(EM_DIAGRAM):   END;
3537434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537435   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3537436   +   ELSE S_MntCard_Games  =    -2.31443880149645 +     6.60696044415922 *
3537437   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31443880149645 + 6.60696044415922 * 
MntCard_Games ;
3537438   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3537439   +   ELSE S_MntMagazines  =    -0.83518699862706 +     17.5080622494492 *
3537440   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83518699862706 + 17.5080622494492 * 
MntMagazines ;
3537441   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3537442   +   ELSE S_NumCatalogPurchases
3537443   +          =    -3.11517742102545 +     13.5001014849444 * NumCatalogPurchases
3537444   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11517742102545 + 13.5001014849444 * 
NumCatalogPurchases ;
3537445   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3537446   +   ELSE S_NumDealsPurchases  =    -1.42433963721206 +     11.3005450269131 *
3537447   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42433963721206 + 11.3005450269131 * 
NumDealsPurchases ;
3537448   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3537449   +   ELSE S_NumWebPurchases  =    -5.23126390248359 +      12.268030981197 *
3537450   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23126390248359 + 12.268030981197 * 
NumWebPurchases ;
3537451   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3537452   +   ELSE S_RANGE_Frq  =    -1.36737264900818 +      4.2114974885657 * RANGE_Frq
3537453   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36737264900818 + 4.2114974885657 * RANGE_Frq ;
3537454   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3537455   +   ELSE S_RANGE_Recency  =    -1.66886726105788 +     3.35597816708239 *
3537456   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66886726105788 + 3.35597816708239 * 
RANGE_Recency ;
3537457   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3537458   +   ELSE S_RANGE_average_purchase
3537459   +          =    -1.03892952919331 +     5.17297242883714 *
3537460   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03892952919331 + 5.17297242883714 * 
RANGE_average_purchase ;
3537461   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3537462   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3537463   +   ELSE S_RANGE_campaign_acceptance
3537464   +          =    -0.47377177401348 +     5.76433307241995 *
3537465   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47377177401348 + 5.76433307241995 
* RANGE_campaign_acceptance ;
3537466   +END;
MPRINT(EM_DIAGRAM):   END;
3537467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537468   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3537469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537471   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3537472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537474   +   H11  =    -0.58755238975054 * S_MntCard_Games  +     0.04614315224278 *
3537475   +        S_MntMagazines  +    -0.43183106452205 * S_NumCatalogPurchases
3537476   +          +    -0.33890443632457 * S_NumDealsPurchases
3537477   +          +    -0.62335188089036 * S_NumWebPurchases
3537478   +          +    -0.07531701266895 * S_RANGE_Frq  +      0.8725516417669 *
3537479   +        S_RANGE_Recency  +     0.27593284747391 * S_RANGE_average_purchase
3537480   +          +    -0.53305316111367 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.58755238975054 * S_MntCard_Games + 0.04614315224278 * 
S_MntMagazines + -0.43183106452205 * S_NumCatalogPurchases + -0.33890443632457 * 
S_NumDealsPurchases + -0.62335188089036 * S_NumWebPurchases + -0.07531701266895 * S_RANGE_Frq 
+ 0.8725516417669 * S_RANGE_Recency + 0.27593284747391 * S_RANGE_average_purchase + 
-0.53305316111367 * S_RANGE_campaign_acceptance ;
3537481   +   H12  =    -0.14953146902126 * S_MntCard_Games  +    -0.00591800285493 *
3537482   +        S_MntMagazines  +    -0.15720328075587 * S_NumCatalogPurchases
3537483   +          +    -0.20153933045335 * S_NumDealsPurchases
3537484   +          +     0.03112722068091 * S_NumWebPurchases
3537485   +          +    -0.09642116258376 * S_RANGE_Frq  +      0.3419049789581 *
3537486   +        S_RANGE_Recency  +    -0.15338559420915 * S_RANGE_average_purchase
3537487   +          +     -0.2102415141838 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.14953146902126 * S_MntCard_Games + -0.00591800285493 * 
S_MntMagazines + -0.15720328075587 * S_NumCatalogPurchases + -0.20153933045335 * 
S_NumDealsPurchases + 0.03112722068091 * S_NumWebPurchases + -0.09642116258376 * S_RANGE_Frq + 
0.3419049789581 * S_RANGE_Recency + -0.15338559420915 * S_RANGE_average_purchase + 
-0.2102415141838 * S_RANGE_campaign_acceptance ;
3537488   +   H11  = H11  +     0.14330939483531 * Marital_StatusDivorced
3537489   +          +    -0.07947576782069 * Marital_StatusMarried
3537490   +          +     0.40818974930925 * Marital_StatusSingle
3537491   +          +    -0.41311423696045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14330939483531 * Marital_StatusDivorced + 
-0.07947576782069 * Marital_StatusMarried + 0.40818974930925 * Marital_StatusSingle + 
-0.41311423696045 * Marital_StatusTogether ;
3537492   +   H12  = H12  +    -0.23839323195806 * Marital_StatusDivorced
3537493   +          +      0.1794935036749 * Marital_StatusMarried
3537494   +          +    -0.29305612621411 * Marital_StatusSingle
3537495   +          +      0.5384795730885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23839323195806 * Marital_StatusDivorced + 0.1794935036749 
* Marital_StatusMarried + -0.29305612621411 * Marital_StatusSingle + 0.5384795730885 * 
Marital_StatusTogether ;
3537496   +   H11  =     2.04984302012003 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.04984302012003 + H11 ;
3537497   +   H12  =     1.02557139367418 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.02557139367418 + H12 ;
3537498   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3537499   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3537500   +END;
MPRINT(EM_DIAGRAM):   END;
3537501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537502   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3537503   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3537504   +END;
MPRINT(EM_DIAGRAM):   END;
3537505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537506   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3537507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537508   +
3537509   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3537510   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3537511   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3537512   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3537513   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3537514   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3537515   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3537516   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3537517   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3537518   +end;
MPRINT(EM_DIAGRAM):   end;
3537519   +else do;
MPRINT(EM_DIAGRAM):   else do;
3537520   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3537521   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3537522   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3537523   +   end;
MPRINT(EM_DIAGRAM):   end;
3537524   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3537525   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3537526   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3537527   +   end;
MPRINT(EM_DIAGRAM):   end;
3537528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3537529   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3537530   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3537531   +   end;
MPRINT(EM_DIAGRAM):   end;
3537532   +end;
MPRINT(EM_DIAGRAM):   end;
3537533   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537534   +   P_DepVar1  =    -5.13300828292496 * H11  +    -9.70493770638732 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.13300828292496 * H11 + -9.70493770638732 * H12 ;
3537535   +   P_DepVar1  =      6.0049948649406 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.0049948649406 + P_DepVar1 ;
3537536   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3537537   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3537538   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3537539   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3537540   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3537541   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3537542   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3537543   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3537544   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3537545   +END;
MPRINT(EM_DIAGRAM):   END;
3537546   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537547   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3537548   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3537549   +END;
MPRINT(EM_DIAGRAM):   END;
3537550   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3537551   +   P_DepVar1  =     0.13214449016918;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13214449016918;
3537552   +   P_DepVar0  =     0.86785550983081;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86785550983081;
3537553   +END;
MPRINT(EM_DIAGRAM):   END;
3537554   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3537555   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3537556   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3537557   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3537558   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3537559   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3537560   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3537561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537562   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3537563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537564   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3537565   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3537566   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3537567   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3537568   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3537569   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3537570   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3537571   +END;
MPRINT(EM_DIAGRAM):   END;
3537572   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3537573   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3537574   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3537575   +drop
3537576   +S_MntCard_Games
3537577   +S_MntMagazines
3537578   +S_NumCatalogPurchases
3537579   +S_NumDealsPurchases
3537580   +S_NumWebPurchases
3537581   +S_RANGE_Frq
3537582   +S_RANGE_Recency
3537583   +S_RANGE_average_purchase
3537584   +S_RANGE_campaign_acceptance
3537585   +H11
3537586   +H12
3537587   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3537588   +end;
MPRINT(EM_DIAGRAM):   end;
3537589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537590   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3537591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537592   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3537593   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3537594   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537595   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3537596   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537597   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3537598   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3537599   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3537600   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3537601   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3537602   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3537603   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3537604   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3537605   +LENGTH _WARN_ $4
3537606   +      F_DepVar  $ 12
3537607   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3537608   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3537609   +
3537610   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3537611   +
3537612   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3537613   +
3537614   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3537615   +
3537616   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3537617   +
3537618   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3537619   +
3537620   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3537621   +
3537622   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3537623   +
3537624   +      label S_RANGE_campaign_acceptance =
3537625   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3537626   +
3537627   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3537628   +
3537629   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3537630   +
3537631   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3537632   +
3537633   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3537634   +
3537635   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3537636   +
3537637   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3537638   +
3537639   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3537640   +
3537641   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3537642   +
3537643   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3537644   +
3537645   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3537646   +
3537647   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3537648   +
3537649   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3537650   +
3537651   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3537652   +
3537653   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3537654   +
3537655   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3537656   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3537657   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3537658   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3537659   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3537660   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3537661   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3537662   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3537663   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3537664   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3537665   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3537666   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3537667   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3537668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3537669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537670   +end;
MPRINT(EM_DIAGRAM):   end;
3537671   +else do;
MPRINT(EM_DIAGRAM):   else do;
3537672   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3537673   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3537674   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3537675   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3537676   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3537677   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3537678   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3537679   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3537680   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537681   +         end;
MPRINT(EM_DIAGRAM):   end;
3537682   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3537683   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3537684   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3537685   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537686   +            end;
MPRINT(EM_DIAGRAM):   end;
3537687   +         end;
MPRINT(EM_DIAGRAM):   end;
3537688   +      end;
MPRINT(EM_DIAGRAM):   end;
3537689   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3537690   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3537691   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3537692   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537693   +         end;
MPRINT(EM_DIAGRAM):   end;
3537694   +      end;
MPRINT(EM_DIAGRAM):   end;
3537695   +   end;
MPRINT(EM_DIAGRAM):   end;
3537696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3537697   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3537698   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3537699   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537700   +      end;
MPRINT(EM_DIAGRAM):   end;
3537701   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3537702   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3537703   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3537704   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3537705   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3537706   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3537707   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3537708   +         end;
MPRINT(EM_DIAGRAM):   end;
3537709   +      end;
MPRINT(EM_DIAGRAM):   end;
3537710   +   end;
MPRINT(EM_DIAGRAM):   end;
3537711   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3537712   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3537713   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3537714   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3537715   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3537716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3537717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537718   +   end;
MPRINT(EM_DIAGRAM):   end;
3537719   +end;
MPRINT(EM_DIAGRAM):   end;
3537720   +
3537721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537722   +*** Checking missing input Interval
3537723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3537724   +
3537725   +IF NMISS(
3537726   +   MntCard_Games ,
3537727   +   MntMagazines ,
3537728   +   NumCatalogPurchases ,
3537729   +   NumDealsPurchases ,
3537730   +   NumWebPurchases ,
3537731   +   RANGE_Frq ,
3537732   +   RANGE_Recency ,
3537733   +   RANGE_average_purchase ,
3537734   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3537735   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3537736   +
3537737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537738   +END;
MPRINT(EM_DIAGRAM):   END;
3537739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537740   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3537741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537743   +   S_MntCard_Games  =    -2.34365076479701 +     6.64912228235011 *
3537744   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.34365076479701 + 6.64912228235011 * MntCard_Games ;
3537745   +   S_MntMagazines  =    -0.83185588911852 +     17.1653473128701 *
3537746   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83185588911852 + 17.1653473128701 * MntMagazines ;
3537747   +   S_NumCatalogPurchases  =    -3.09230321443129 +     13.3305220475383 *
3537748   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09230321443129 + 13.3305220475383 * 
NumCatalogPurchases ;
3537749   +   S_NumDealsPurchases  =    -1.40724633310318 +      11.190543518488 *
3537750   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40724633310318 + 11.190543518488 * 
NumDealsPurchases ;
3537751   +   S_NumWebPurchases  =    -5.18592580011552 +     12.1640913340275 *
3537752   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.18592580011552 + 12.1640913340275 * 
NumWebPurchases ;
3537753   +   S_RANGE_Frq  =    -1.36446276559599 +     4.21451721303862 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36446276559599 + 4.21451721303862 * RANGE_Frq ;
3537754   +   S_RANGE_Recency  =    -1.67035138311991 +      3.3590608274234 *
3537755   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67035138311991 + 3.3590608274234 * RANGE_Recency ;
3537756   +   S_RANGE_average_purchase  =    -1.03510184851223 +     5.11192585526914 *
3537757   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03510184851223 + 5.11192585526914 * 
RANGE_average_purchase ;
3537758   +   S_RANGE_campaign_acceptance
3537759   +          =    -0.47680111132029 +     5.72683855350182 *
3537760   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47680111132029 + 5.72683855350182 * 
RANGE_campaign_acceptance ;
3537761   +END;
MPRINT(EM_DIAGRAM):   END;
3537762   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537763   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3537764   +   ELSE S_MntCard_Games  =    -2.34365076479701 +     6.64912228235011 *
3537765   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.34365076479701 + 6.64912228235011 * 
MntCard_Games ;
3537766   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3537767   +   ELSE S_MntMagazines  =    -0.83185588911852 +     17.1653473128701 *
3537768   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83185588911852 + 17.1653473128701 * 
MntMagazines ;
3537769   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3537770   +   ELSE S_NumCatalogPurchases
3537771   +          =    -3.09230321443129 +     13.3305220475383 * NumCatalogPurchases
3537772   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09230321443129 + 13.3305220475383 * 
NumCatalogPurchases ;
3537773   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3537774   +   ELSE S_NumDealsPurchases  =    -1.40724633310318 +      11.190543518488 *
3537775   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40724633310318 + 11.190543518488 * 
NumDealsPurchases ;
3537776   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3537777   +   ELSE S_NumWebPurchases  =    -5.18592580011552 +     12.1640913340275 *
3537778   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.18592580011552 + 12.1640913340275 * 
NumWebPurchases ;
3537779   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3537780   +   ELSE S_RANGE_Frq  =    -1.36446276559599 +     4.21451721303862 * RANGE_Frq
3537781   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36446276559599 + 4.21451721303862 * RANGE_Frq ;
3537782   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3537783   +   ELSE S_RANGE_Recency  =    -1.67035138311991 +      3.3590608274234 *
3537784   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67035138311991 + 3.3590608274234 * 
RANGE_Recency ;
3537785   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3537786   +   ELSE S_RANGE_average_purchase
3537787   +          =    -1.03510184851223 +     5.11192585526914 *
3537788   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03510184851223 + 5.11192585526914 * 
RANGE_average_purchase ;
3537789   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3537790   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3537791   +   ELSE S_RANGE_campaign_acceptance
3537792   +          =    -0.47680111132029 +     5.72683855350182 *
3537793   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47680111132029 + 5.72683855350182 
* RANGE_campaign_acceptance ;
3537794   +END;
MPRINT(EM_DIAGRAM):   END;
3537795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537796   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3537797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537799   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3537800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537801   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537802   +   H11  =    -0.49207500487209 * S_MntCard_Games  +      0.0690124003468 *
3537803   +        S_MntMagazines  +    -0.44338041717767 * S_NumCatalogPurchases
3537804   +          +     -0.3189765465749 * S_NumDealsPurchases
3537805   +          +    -0.71698396342234 * S_NumWebPurchases
3537806   +          +    -0.13233632905423 * S_RANGE_Frq  +     0.69300683612471 *
3537807   +        S_RANGE_Recency  +     0.37593764023513 * S_RANGE_average_purchase
3537808   +          +    -0.46244554374221 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.49207500487209 * S_MntCard_Games + 0.0690124003468 * 
S_MntMagazines + -0.44338041717767 * S_NumCatalogPurchases + -0.3189765465749 * 
S_NumDealsPurchases + -0.71698396342234 * S_NumWebPurchases + -0.13233632905423 * S_RANGE_Frq 
+ 0.69300683612471 * S_RANGE_Recency + 0.37593764023513 * S_RANGE_average_purchase + 
-0.46244554374221 * S_RANGE_campaign_acceptance ;
3537809   +   H12  =    -0.12196746006663 * S_MntCard_Games  +      -0.003292765472 *
3537810   +        S_MntMagazines  +    -0.10510057692949 * S_NumCatalogPurchases
3537811   +          +    -0.13057006244096 * S_NumDealsPurchases
3537812   +          +     0.01481477097995 * S_NumWebPurchases
3537813   +          +    -0.04764456858931 * S_RANGE_Frq  +      0.2499989962603 *
3537814   +        S_RANGE_Recency  +    -0.09250232188074 * S_RANGE_average_purchase
3537815   +          +    -0.15149363120377 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.12196746006663 * S_MntCard_Games + -0.003292765472 * 
S_MntMagazines + -0.10510057692949 * S_NumCatalogPurchases + -0.13057006244096 * 
S_NumDealsPurchases + 0.01481477097995 * S_NumWebPurchases + -0.04764456858931 * S_RANGE_Frq + 
0.2499989962603 * S_RANGE_Recency + -0.09250232188074 * S_RANGE_average_purchase + 
-0.15149363120377 * S_RANGE_campaign_acceptance ;
3537816   +   H11  = H11  +      0.1148824277761 * Marital_StatusDivorced
3537817   +          +    -0.24531247196814 * Marital_StatusMarried
3537818   +          +     0.52999801549184 * Marital_StatusSingle
3537819   +          +    -0.57583944974265 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.1148824277761 * Marital_StatusDivorced + -0.24531247196814 
* Marital_StatusMarried + 0.52999801549184 * Marital_StatusSingle + -0.57583944974265 * 
Marital_StatusTogether ;
3537820   +   H12  = H12  +    -0.12378736674994 * Marital_StatusDivorced
3537821   +          +     0.14723002127775 * Marital_StatusMarried
3537822   +          +    -0.18493223535528 * Marital_StatusSingle
3537823   +          +     0.29776198538277 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12378736674994 * Marital_StatusDivorced + 
0.14723002127775 * Marital_StatusMarried + -0.18493223535528 * Marital_StatusSingle + 
0.29776198538277 * Marital_StatusTogether ;
3537824   +   H11  =     2.09252434279299 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.09252434279299 + H11 ;
3537825   +   H12  =     0.80126316135319 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.80126316135319 + H12 ;
3537826   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3537827   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3537828   +END;
MPRINT(EM_DIAGRAM):   END;
3537829   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537830   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3537831   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3537832   +END;
MPRINT(EM_DIAGRAM):   END;
3537833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537834   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3537835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537836   +
3537837   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3537838   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3537839   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3537840   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3537841   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3537842   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3537843   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3537844   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3537845   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3537846   +end;
MPRINT(EM_DIAGRAM):   end;
3537847   +else do;
MPRINT(EM_DIAGRAM):   else do;
3537848   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3537849   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3537850   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3537851   +   end;
MPRINT(EM_DIAGRAM):   end;
3537852   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3537853   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3537854   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3537855   +   end;
MPRINT(EM_DIAGRAM):   end;
3537856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3537857   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3537858   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3537859   +   end;
MPRINT(EM_DIAGRAM):   end;
3537860   +end;
MPRINT(EM_DIAGRAM):   end;
3537861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3537862   +   P_DepVar1  =    -5.17196565462201 * H11  +    -14.9521433638576 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.17196565462201 * H11 + -14.9521433638576 * H12 ;
3537863   +   P_DepVar1  =     8.37281739494831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.37281739494831 + P_DepVar1 ;
3537864   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3537865   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3537866   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3537867   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3537868   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3537869   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3537870   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3537871   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3537872   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3537873   +END;
MPRINT(EM_DIAGRAM):   END;
3537874   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3537875   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3537876   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3537877   +END;
MPRINT(EM_DIAGRAM):   END;
3537878   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3537879   +   P_DepVar1  =     0.13914233576642;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13914233576642;
3537880   +   P_DepVar0  =     0.86085766423357;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86085766423357;
3537881   +END;
MPRINT(EM_DIAGRAM):   END;
3537882   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3537883   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3537884   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3537885   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3537886   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3537887   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3537888   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3537889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537890   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3537891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3537892   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3537893   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3537894   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3537895   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3537896   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3537897   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3537898   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3537899   +END;
MPRINT(EM_DIAGRAM):   END;
3537900   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3537901   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3537902   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3537903   +drop
3537904   +S_MntCard_Games
3537905   +S_MntMagazines
3537906   +S_NumCatalogPurchases
3537907   +S_NumDealsPurchases
3537908   +S_NumWebPurchases
3537909   +S_RANGE_Frq
3537910   +S_RANGE_Recency
3537911   +S_RANGE_average_purchase
3537912   +S_RANGE_campaign_acceptance
3537913   +H11
3537914   +H12
3537915   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3537916   +end;
MPRINT(EM_DIAGRAM):   end;
3537917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537918   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3537919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3537920   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3537921   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3537922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537923   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3537924   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3537925   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3537926   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3537927   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3537928   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3537929   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3537930   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3537931   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3537932   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3537933   +LENGTH _WARN_ $4
3537934   +      F_DepVar  $ 12
3537935   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3537936   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3537937   +
3537938   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3537939   +
3537940   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3537941   +
3537942   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3537943   +
3537944   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3537945   +
3537946   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3537947   +
3537948   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3537949   +
3537950   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3537951   +
3537952   +      label S_RANGE_campaign_acceptance =
3537953   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3537954   +
3537955   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3537956   +
3537957   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3537958   +
3537959   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3537960   +
3537961   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3537962   +
3537963   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3537964   +
3537965   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3537966   +
3537967   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3537968   +
3537969   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3537970   +
3537971   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3537972   +
3537973   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3537974   +
3537975   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3537976   +
3537977   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3537978   +
3537979   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3537980   +
3537981   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3537982   +
3537983   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3537984   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3537985   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3537986   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3537987   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3537988   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3537989   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3537990   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3537991   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3537992   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3537993   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3537994   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3537995   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3537996   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3537997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3537998   +end;
MPRINT(EM_DIAGRAM):   end;
3537999   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538000   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3538001   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3538002   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538003   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3538004   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3538005   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3538006   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3538007   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3538008   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538009   +         end;
MPRINT(EM_DIAGRAM):   end;
3538010   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3538011   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3538012   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3538013   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538014   +            end;
MPRINT(EM_DIAGRAM):   end;
3538015   +         end;
MPRINT(EM_DIAGRAM):   end;
3538016   +      end;
MPRINT(EM_DIAGRAM):   end;
3538017   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538018   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3538019   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3538020   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538021   +         end;
MPRINT(EM_DIAGRAM):   end;
3538022   +      end;
MPRINT(EM_DIAGRAM):   end;
3538023   +   end;
MPRINT(EM_DIAGRAM):   end;
3538024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538025   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3538026   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3538027   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538028   +      end;
MPRINT(EM_DIAGRAM):   end;
3538029   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538030   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3538031   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3538032   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3538033   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3538034   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3538035   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538036   +         end;
MPRINT(EM_DIAGRAM):   end;
3538037   +      end;
MPRINT(EM_DIAGRAM):   end;
3538038   +   end;
MPRINT(EM_DIAGRAM):   end;
3538039   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3538040   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538041   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538042   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538043   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3538045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538046   +   end;
MPRINT(EM_DIAGRAM):   end;
3538047   +end;
MPRINT(EM_DIAGRAM):   end;
3538048   +
3538049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538050   +*** Checking missing input Interval
3538051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3538052   +
3538053   +IF NMISS(
3538054   +   MntCard_Games ,
3538055   +   MntMagazines ,
3538056   +   NumCatalogPurchases ,
3538057   +   NumDealsPurchases ,
3538058   +   NumWebPurchases ,
3538059   +   RANGE_Frq ,
3538060   +   RANGE_Recency ,
3538061   +   RANGE_average_purchase ,
3538062   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3538063   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3538064   +
3538065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538066   +END;
MPRINT(EM_DIAGRAM):   END;
3538067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538068   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3538069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538071   +   S_MntCard_Games  =     -2.3349533302094 +     6.63376117621091 *
3538072   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3349533302094 + 6.63376117621091 * MntCard_Games ;
3538073   +   S_MntMagazines  =    -0.84580391547708 +     17.4839342731808 *
3538074   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84580391547708 + 17.4839342731808 * MntMagazines ;
3538075   +   S_NumCatalogPurchases  =     -3.1227571204495 +     13.5382437660997 *
3538076   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.1227571204495 + 13.5382437660997 * 
NumCatalogPurchases ;
3538077   +   S_NumDealsPurchases  =    -1.41728826142801 +     11.1648224460604 *
3538078   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41728826142801 + 11.1648224460604 * 
NumDealsPurchases ;
3538079   +   S_NumWebPurchases  =    -5.23045924012296 +     12.2428241396556 *
3538080   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23045924012296 + 12.2428241396556 * 
NumWebPurchases ;
3538081   +   S_RANGE_Frq  =      -1.361191996156 +     4.21676768500113 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.361191996156 + 4.21676768500113 * RANGE_Frq ;
3538082   +   S_RANGE_Recency  =    -1.66462179593212 +     3.35606719171069 *
3538083   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66462179593212 + 3.35606719171069 * RANGE_Recency ;
3538084   +   S_RANGE_average_purchase  =    -1.03559869310558 +     5.17126986979648 *
3538085   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03559869310558 + 5.17126986979648 * 
RANGE_average_purchase ;
3538086   +   S_RANGE_campaign_acceptance
3538087   +          =    -0.48045571937783 +     5.78141737010678 *
3538088   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48045571937783 + 5.78141737010678 * 
RANGE_campaign_acceptance ;
3538089   +END;
MPRINT(EM_DIAGRAM):   END;
3538090   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538091   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3538092   +   ELSE S_MntCard_Games  =     -2.3349533302094 +     6.63376117621091 *
3538093   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3349533302094 + 6.63376117621091 * 
MntCard_Games ;
3538094   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3538095   +   ELSE S_MntMagazines  =    -0.84580391547708 +     17.4839342731808 *
3538096   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84580391547708 + 17.4839342731808 * 
MntMagazines ;
3538097   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3538098   +   ELSE S_NumCatalogPurchases
3538099   +          =     -3.1227571204495 +     13.5382437660997 * NumCatalogPurchases
3538100   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.1227571204495 + 13.5382437660997 * 
NumCatalogPurchases ;
3538101   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3538102   +   ELSE S_NumDealsPurchases  =    -1.41728826142801 +     11.1648224460604 *
3538103   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41728826142801 + 11.1648224460604 * 
NumDealsPurchases ;
3538104   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3538105   +   ELSE S_NumWebPurchases  =    -5.23045924012296 +     12.2428241396556 *
3538106   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23045924012296 + 12.2428241396556 * 
NumWebPurchases ;
3538107   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3538108   +   ELSE S_RANGE_Frq  =      -1.361191996156 +     4.21676768500113 * RANGE_Frq
3538109   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.361191996156 + 4.21676768500113 * RANGE_Frq ;
3538110   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3538111   +   ELSE S_RANGE_Recency  =    -1.66462179593212 +     3.35606719171069 *
3538112   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66462179593212 + 3.35606719171069 * 
RANGE_Recency ;
3538113   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3538114   +   ELSE S_RANGE_average_purchase
3538115   +          =    -1.03559869310558 +     5.17126986979648 *
3538116   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03559869310558 + 5.17126986979648 * 
RANGE_average_purchase ;
3538117   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3538118   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3538119   +   ELSE S_RANGE_campaign_acceptance
3538120   +          =    -0.48045571937783 +     5.78141737010678 *
3538121   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48045571937783 + 5.78141737010678 
* RANGE_campaign_acceptance ;
3538122   +END;
MPRINT(EM_DIAGRAM):   END;
3538123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538124   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3538125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538127   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3538128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538129   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538130   +   H11  =     -1.6843212525989 * S_MntCard_Games  +     0.23183980307836 *
3538131   +        S_MntMagazines  +    -1.57012601167041 * S_NumCatalogPurchases
3538132   +          +    -1.11128723645949 * S_NumDealsPurchases
3538133   +          +    -2.01870213671901 * S_NumWebPurchases
3538134   +          +    -0.61694935068701 * S_RANGE_Frq  +     2.81431308664044 *
3538135   +        S_RANGE_Recency  +     0.78527220670672 * S_RANGE_average_purchase
3538136   +          +    -1.77301200390835 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -1.6843212525989 * S_MntCard_Games + 0.23183980307836 * 
S_MntMagazines + -1.57012601167041 * S_NumCatalogPurchases + -1.11128723645949 * 
S_NumDealsPurchases + -2.01870213671901 * S_NumWebPurchases + -0.61694935068701 * S_RANGE_Frq 
+ 2.81431308664044 * S_RANGE_Recency + 0.78527220670672 * S_RANGE_average_purchase + 
-1.77301200390835 * S_RANGE_campaign_acceptance ;
3538137   +   H12  =    -0.14798780744897 * S_MntCard_Games  +    -0.01210009884989 *
3538138   +        S_MntMagazines  +    -0.12119563959557 * S_NumCatalogPurchases
3538139   +          +    -0.16489974664777 * S_NumDealsPurchases
3538140   +          +     0.02551936245602 * S_NumWebPurchases
3538141   +          +    -0.06443441940176 * S_RANGE_Frq  +     0.29059193404589 *
3538142   +        S_RANGE_Recency  +    -0.12583280278863 * S_RANGE_average_purchase
3538143   +          +    -0.17640197189034 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.14798780744897 * S_MntCard_Games + -0.01210009884989 * 
S_MntMagazines + -0.12119563959557 * S_NumCatalogPurchases + -0.16489974664777 * 
S_NumDealsPurchases + 0.02551936245602 * S_NumWebPurchases + -0.06443441940176 * S_RANGE_Frq + 
0.29059193404589 * S_RANGE_Recency + -0.12583280278863 * S_RANGE_average_purchase + 
-0.17640197189034 * S_RANGE_campaign_acceptance ;
3538144   +   H11  = H11  +     0.63525901256732 * Marital_StatusDivorced
3538145   +          +     0.52623368458153 * Marital_StatusMarried
3538146   +          +     0.96495903032869 * Marital_StatusSingle
3538147   +          +     0.02412862428083 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.63525901256732 * Marital_StatusDivorced + 0.52623368458153 
* Marital_StatusMarried + 0.96495903032869 * Marital_StatusSingle + 0.02412862428083 * 
Marital_StatusTogether ;
3538148   +   H12  = H12  +    -0.23501505510202 * Marital_StatusDivorced
3538149   +          +     0.08076135733923 * Marital_StatusMarried
3538150   +          +    -0.27440986106674 * Marital_StatusSingle
3538151   +          +      0.2755156259042 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23501505510202 * Marital_StatusDivorced + 
0.08076135733923 * Marital_StatusMarried + -0.27440986106674 * Marital_StatusSingle + 
0.2755156259042 * Marital_StatusTogether ;
3538152   +   H11  =     4.73812771671869 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 4.73812771671869 + H11 ;
3538153   +   H12  =     1.29558536219117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29558536219117 + H12 ;
3538154   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3538155   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3538156   +END;
MPRINT(EM_DIAGRAM):   END;
3538157   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538158   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3538159   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3538160   +END;
MPRINT(EM_DIAGRAM):   END;
3538161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538162   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3538163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538164   +
3538165   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3538166   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3538167   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538168   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3538169   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3538170   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538171   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3538172   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538173   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538174   +end;
MPRINT(EM_DIAGRAM):   end;
3538175   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538176   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3538177   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3538178   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3538179   +   end;
MPRINT(EM_DIAGRAM):   end;
3538180   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3538181   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3538182   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3538183   +   end;
MPRINT(EM_DIAGRAM):   end;
3538184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538185   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538186   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538187   +   end;
MPRINT(EM_DIAGRAM):   end;
3538188   +end;
MPRINT(EM_DIAGRAM):   end;
3538189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538190   +   P_DepVar1  =    -3.01881072210347 * H11  +    -14.9353443976364 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.01881072210347 * H11 + -14.9353443976364 * H12 ;
3538191   +   P_DepVar1  =     9.93027623872906 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.93027623872906 + P_DepVar1 ;
3538192   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3538193   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3538194   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3538195   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3538196   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3538197   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3538198   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3538199   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3538200   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3538201   +END;
MPRINT(EM_DIAGRAM):   END;
3538202   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538203   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3538204   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3538205   +END;
MPRINT(EM_DIAGRAM):   END;
3538206   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3538207   +   P_DepVar1  =     0.13931034482758;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13931034482758;
3538208   +   P_DepVar0  =     0.86068965517241;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86068965517241;
3538209   +END;
MPRINT(EM_DIAGRAM):   END;
3538210   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3538211   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3538212   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3538213   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3538214   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3538215   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3538216   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3538217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538218   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3538219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538220   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3538221   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3538222   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3538223   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3538224   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3538225   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3538226   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3538227   +END;
MPRINT(EM_DIAGRAM):   END;
3538228   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538229   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3538230   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538231   +drop
3538232   +S_MntCard_Games
3538233   +S_MntMagazines
3538234   +S_NumCatalogPurchases
3538235   +S_NumDealsPurchases
3538236   +S_NumWebPurchases
3538237   +S_RANGE_Frq
3538238   +S_RANGE_Recency
3538239   +S_RANGE_average_purchase
3538240   +S_RANGE_campaign_acceptance
3538241   +H11
3538242   +H12
3538243   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3538244   +end;
MPRINT(EM_DIAGRAM):   end;
3538245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538246   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3538247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538248   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3538249   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3538250   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538251   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3538252   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538253   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3538254   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3538255   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3538256   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3538257   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3538258   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3538259   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3538260   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3538261   +LENGTH _WARN_ $4
3538262   +      F_DepVar  $ 12
3538263   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3538264   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3538265   +
3538266   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3538267   +
3538268   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3538269   +
3538270   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3538271   +
3538272   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3538273   +
3538274   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3538275   +
3538276   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3538277   +
3538278   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3538279   +
3538280   +      label S_RANGE_campaign_acceptance =
3538281   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3538282   +
3538283   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3538284   +
3538285   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3538286   +
3538287   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3538288   +
3538289   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3538290   +
3538291   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3538292   +
3538293   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3538294   +
3538295   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3538296   +
3538297   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538298   +
3538299   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3538300   +
3538301   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3538302   +
3538303   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3538304   +
3538305   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3538306   +
3538307   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3538308   +
3538309   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3538310   +
3538311   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3538312   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3538313   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3538314   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3538315   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3538316   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3538317   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3538318   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3538319   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3538320   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538321   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538322   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538323   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3538325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538326   +end;
MPRINT(EM_DIAGRAM):   end;
3538327   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538328   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3538329   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3538330   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538331   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3538332   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3538333   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3538334   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3538335   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3538336   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538337   +         end;
MPRINT(EM_DIAGRAM):   end;
3538338   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3538339   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3538340   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3538341   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538342   +            end;
MPRINT(EM_DIAGRAM):   end;
3538343   +         end;
MPRINT(EM_DIAGRAM):   end;
3538344   +      end;
MPRINT(EM_DIAGRAM):   end;
3538345   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538346   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3538347   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3538348   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538349   +         end;
MPRINT(EM_DIAGRAM):   end;
3538350   +      end;
MPRINT(EM_DIAGRAM):   end;
3538351   +   end;
MPRINT(EM_DIAGRAM):   end;
3538352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538353   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3538354   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3538355   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538356   +      end;
MPRINT(EM_DIAGRAM):   end;
3538357   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538358   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3538359   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3538360   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3538361   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3538362   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3538363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538364   +         end;
MPRINT(EM_DIAGRAM):   end;
3538365   +      end;
MPRINT(EM_DIAGRAM):   end;
3538366   +   end;
MPRINT(EM_DIAGRAM):   end;
3538367   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3538368   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538369   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538370   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538371   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3538373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538374   +   end;
MPRINT(EM_DIAGRAM):   end;
3538375   +end;
MPRINT(EM_DIAGRAM):   end;
3538376   +
3538377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538378   +*** Checking missing input Interval
3538379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3538380   +
3538381   +IF NMISS(
3538382   +   MntCard_Games ,
3538383   +   MntMagazines ,
3538384   +   NumCatalogPurchases ,
3538385   +   NumDealsPurchases ,
3538386   +   NumWebPurchases ,
3538387   +   RANGE_Frq ,
3538388   +   RANGE_Recency ,
3538389   +   RANGE_average_purchase ,
3538390   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3538391   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3538392   +
3538393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538394   +END;
MPRINT(EM_DIAGRAM):   END;
3538395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538396   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3538397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538399   +   S_MntCard_Games  =    -2.32490039936768 +     6.61209049827254 *
3538400   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32490039936768 + 6.61209049827254 * MntCard_Games ;
3538401   +   S_MntMagazines  =    -0.83432449329842 +     17.5274621028707 *
3538402   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83432449329842 + 17.5274621028707 * MntMagazines ;
3538403   +   S_NumCatalogPurchases  =    -3.09377826747936 +     13.3686531025843 *
3538404   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09377826747936 + 13.3686531025843 * 
NumCatalogPurchases ;
3538405   +   S_NumDealsPurchases  =    -1.41225276435245 +     11.2255973113469 *
3538406   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41225276435245 + 11.2255973113469 * 
NumDealsPurchases ;
3538407   +   S_NumWebPurchases  =    -5.19056163351378 +     12.1819831318644 *
3538408   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.19056163351378 + 12.1819831318644 * 
NumWebPurchases ;
3538409   +   S_RANGE_Frq  =    -1.37666284591738 +     4.22656849661136 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37666284591738 + 4.22656849661136 * RANGE_Frq ;
3538410   +   S_RANGE_Recency  =    -1.66982507603222 +      3.3561864149435 *
3538411   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66982507603222 + 3.3561864149435 * RANGE_Recency ;
3538412   +   S_RANGE_average_purchase  =    -1.04534785422249 +     5.15352671987144 *
3538413   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04534785422249 + 5.15352671987144 * 
RANGE_average_purchase ;
3538414   +   S_RANGE_campaign_acceptance
3538415   +          =    -0.47730847713543 +      5.6636334736607 *
3538416   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47730847713543 + 5.6636334736607 * 
RANGE_campaign_acceptance ;
3538417   +END;
MPRINT(EM_DIAGRAM):   END;
3538418   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538419   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3538420   +   ELSE S_MntCard_Games  =    -2.32490039936768 +     6.61209049827254 *
3538421   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32490039936768 + 6.61209049827254 * 
MntCard_Games ;
3538422   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3538423   +   ELSE S_MntMagazines  =    -0.83432449329842 +     17.5274621028707 *
3538424   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83432449329842 + 17.5274621028707 * 
MntMagazines ;
3538425   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3538426   +   ELSE S_NumCatalogPurchases
3538427   +          =    -3.09377826747936 +     13.3686531025843 * NumCatalogPurchases
3538428   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09377826747936 + 13.3686531025843 * 
NumCatalogPurchases ;
3538429   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3538430   +   ELSE S_NumDealsPurchases  =    -1.41225276435245 +     11.2255973113469 *
3538431   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41225276435245 + 11.2255973113469 * 
NumDealsPurchases ;
3538432   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3538433   +   ELSE S_NumWebPurchases  =    -5.19056163351378 +     12.1819831318644 *
3538434   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.19056163351378 + 12.1819831318644 * 
NumWebPurchases ;
3538435   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3538436   +   ELSE S_RANGE_Frq  =    -1.37666284591738 +     4.22656849661136 * RANGE_Frq
3538437   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37666284591738 + 4.22656849661136 * RANGE_Frq ;
3538438   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3538439   +   ELSE S_RANGE_Recency  =    -1.66982507603222 +      3.3561864149435 *
3538440   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66982507603222 + 3.3561864149435 * 
RANGE_Recency ;
3538441   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3538442   +   ELSE S_RANGE_average_purchase
3538443   +          =    -1.04534785422249 +     5.15352671987144 *
3538444   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04534785422249 + 5.15352671987144 * 
RANGE_average_purchase ;
3538445   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3538446   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3538447   +   ELSE S_RANGE_campaign_acceptance
3538448   +          =    -0.47730847713543 +      5.6636334736607 *
3538449   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47730847713543 + 5.6636334736607 * 
RANGE_campaign_acceptance ;
3538450   +END;
MPRINT(EM_DIAGRAM):   END;
3538451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538452   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3538453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538455   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3538456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538457   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538458   +   H11  =     0.29325872472198 * S_MntCard_Games  +    -0.00545684538634 *
3538459   +        S_MntMagazines  +     0.22383681129512 * S_NumCatalogPurchases
3538460   +          +     0.20885459361526 * S_NumDealsPurchases
3538461   +          +     0.11675009158441 * S_NumWebPurchases
3538462   +          +     0.02639957366345 * S_RANGE_Frq  +      -0.438044705853 *
3538463   +        S_RANGE_Recency  +     0.14273290137235 * S_RANGE_average_purchase
3538464   +          +     0.27915415422468 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.29325872472198 * S_MntCard_Games + -0.00545684538634 * 
S_MntMagazines + 0.22383681129512 * S_NumCatalogPurchases + 0.20885459361526 * 
S_NumDealsPurchases + 0.11675009158441 * S_NumWebPurchases + 0.02639957366345 * S_RANGE_Frq + 
-0.438044705853 * S_RANGE_Recency + 0.14273290137235 * S_RANGE_average_purchase + 
0.27915415422468 * S_RANGE_campaign_acceptance ;
3538465   +   H12  =      0.7504665672974 * S_MntCard_Games  +     0.13432652819093 *
3538466   +        S_MntMagazines  +    -0.00770682406427 * S_NumCatalogPurchases
3538467   +          +    -1.07740672212966 * S_NumDealsPurchases
3538468   +          +     0.06195416147195 * S_NumWebPurchases
3538469   +          +    -0.08943901083122 * S_RANGE_Frq  +     0.23896675474776 *
3538470   +        S_RANGE_Recency  +     1.52290574485194 * S_RANGE_average_purchase
3538471   +          +    -0.27156499343868 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.7504665672974 * S_MntCard_Games + 0.13432652819093 * 
S_MntMagazines + -0.00770682406427 * S_NumCatalogPurchases + -1.07740672212966 * 
S_NumDealsPurchases + 0.06195416147195 * S_NumWebPurchases + -0.08943901083122 * S_RANGE_Frq + 
0.23896675474776 * S_RANGE_Recency + 1.52290574485194 * S_RANGE_average_purchase + 
-0.27156499343868 * S_RANGE_campaign_acceptance ;
3538472   +   H11  = H11  +     0.02931431688387 * Marital_StatusDivorced
3538473   +          +    -0.10388069139344 * Marital_StatusMarried
3538474   +          +      0.0211324102793 * Marital_StatusSingle
3538475   +          +    -0.06321341557102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02931431688387 * Marital_StatusDivorced + 
-0.10388069139344 * Marital_StatusMarried + 0.0211324102793 * Marital_StatusSingle + 
-0.06321341557102 * Marital_StatusTogether ;
3538476   +   H12  = H12  +    -0.75126689956125 * Marital_StatusDivorced
3538477   +          +     0.82335005970524 * Marital_StatusMarried
3538478   +          +    -2.02423793187419 * Marital_StatusSingle
3538479   +          +     3.28731569256715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.75126689956125 * Marital_StatusDivorced + 
0.82335005970524 * Marital_StatusMarried + -2.02423793187419 * Marital_StatusSingle + 
3.28731569256715 * Marital_StatusTogether ;
3538480   +   H11  =    -0.80379611718205 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.80379611718205 + H11 ;
3538481   +   H12  =    -4.02830550797549 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.02830550797549 + H12 ;
3538482   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3538483   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3538484   +END;
MPRINT(EM_DIAGRAM):   END;
3538485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538486   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3538487   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3538488   +END;
MPRINT(EM_DIAGRAM):   END;
3538489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538490   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3538491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538492   +
3538493   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3538494   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3538495   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538496   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3538497   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3538498   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538499   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3538500   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538501   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538502   +end;
MPRINT(EM_DIAGRAM):   end;
3538503   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538504   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3538505   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3538506   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3538507   +   end;
MPRINT(EM_DIAGRAM):   end;
3538508   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3538509   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3538510   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3538511   +   end;
MPRINT(EM_DIAGRAM):   end;
3538512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538513   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538514   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538515   +   end;
MPRINT(EM_DIAGRAM):   end;
3538516   +end;
MPRINT(EM_DIAGRAM):   end;
3538517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538518   +   P_DepVar1  =     11.6836183176269 * H11  +    -3.25226976946889 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.6836183176269 * H11 + -3.25226976946889 * H12 ;
3538519   +   P_DepVar1  =    -1.29123054778892 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.29123054778892 + P_DepVar1 ;
3538520   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3538521   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3538522   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3538523   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3538524   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3538525   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3538526   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3538527   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3538528   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3538529   +END;
MPRINT(EM_DIAGRAM):   END;
3538530   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538531   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3538532   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3538533   +END;
MPRINT(EM_DIAGRAM):   END;
3538534   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3538535   +   P_DepVar1  =     0.13891402714932;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13891402714932;
3538536   +   P_DepVar0  =     0.86108597285067;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86108597285067;
3538537   +END;
MPRINT(EM_DIAGRAM):   END;
3538538   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3538539   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3538540   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3538541   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3538542   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3538543   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3538544   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3538545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538546   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3538547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538548   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3538549   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3538550   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3538551   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3538552   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3538553   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3538554   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3538555   +END;
MPRINT(EM_DIAGRAM):   END;
3538556   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538557   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3538558   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538559   +drop
3538560   +S_MntCard_Games
3538561   +S_MntMagazines
3538562   +S_NumCatalogPurchases
3538563   +S_NumDealsPurchases
3538564   +S_NumWebPurchases
3538565   +S_RANGE_Frq
3538566   +S_RANGE_Recency
3538567   +S_RANGE_average_purchase
3538568   +S_RANGE_campaign_acceptance
3538569   +H11
3538570   +H12
3538571   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3538572   +end;
MPRINT(EM_DIAGRAM):   end;
3538573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538574   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3538575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538576   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3538577   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3538578   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538579   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3538580   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538581   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3538582   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3538583   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3538584   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3538585   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3538586   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3538587   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3538588   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3538589   +LENGTH _WARN_ $4
3538590   +      F_DepVar  $ 12
3538591   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3538592   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3538593   +
3538594   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3538595   +
3538596   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3538597   +
3538598   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3538599   +
3538600   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3538601   +
3538602   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3538603   +
3538604   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3538605   +
3538606   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3538607   +
3538608   +      label S_RANGE_campaign_acceptance =
3538609   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3538610   +
3538611   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3538612   +
3538613   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3538614   +
3538615   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3538616   +
3538617   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3538618   +
3538619   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3538620   +
3538621   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3538622   +
3538623   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3538624   +
3538625   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538626   +
3538627   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3538628   +
3538629   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3538630   +
3538631   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3538632   +
3538633   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3538634   +
3538635   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3538636   +
3538637   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3538638   +
3538639   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3538640   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3538641   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3538642   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3538643   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3538644   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3538645   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3538646   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3538647   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3538648   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538649   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538650   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538651   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3538653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538654   +end;
MPRINT(EM_DIAGRAM):   end;
3538655   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538656   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3538657   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3538658   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538659   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3538660   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3538661   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3538662   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3538663   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3538664   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538665   +         end;
MPRINT(EM_DIAGRAM):   end;
3538666   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3538667   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3538668   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3538669   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538670   +            end;
MPRINT(EM_DIAGRAM):   end;
3538671   +         end;
MPRINT(EM_DIAGRAM):   end;
3538672   +      end;
MPRINT(EM_DIAGRAM):   end;
3538673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538674   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3538675   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3538676   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538677   +         end;
MPRINT(EM_DIAGRAM):   end;
3538678   +      end;
MPRINT(EM_DIAGRAM):   end;
3538679   +   end;
MPRINT(EM_DIAGRAM):   end;
3538680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538681   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3538682   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3538683   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538684   +      end;
MPRINT(EM_DIAGRAM):   end;
3538685   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3538686   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3538687   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3538688   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3538689   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3538690   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3538691   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538692   +         end;
MPRINT(EM_DIAGRAM):   end;
3538693   +      end;
MPRINT(EM_DIAGRAM):   end;
3538694   +   end;
MPRINT(EM_DIAGRAM):   end;
3538695   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3538696   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538697   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538698   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538699   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3538701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538702   +   end;
MPRINT(EM_DIAGRAM):   end;
3538703   +end;
MPRINT(EM_DIAGRAM):   end;
3538704   +
3538705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538706   +*** Checking missing input Interval
3538707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3538708   +
3538709   +IF NMISS(
3538710   +   MntCard_Games ,
3538711   +   MntMagazines ,
3538712   +   NumCatalogPurchases ,
3538713   +   NumDealsPurchases ,
3538714   +   NumWebPurchases ,
3538715   +   RANGE_Frq ,
3538716   +   RANGE_Recency ,
3538717   +   RANGE_average_purchase ,
3538718   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3538719   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3538720   +
3538721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538722   +END;
MPRINT(EM_DIAGRAM):   END;
3538723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538724   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3538725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538726   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538727   +   S_MntCard_Games  =    -2.32339505068067 +     6.59896696738134 *
3538728   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32339505068067 + 6.59896696738134 * MntCard_Games ;
3538729   +   S_MntMagazines  =    -0.83655436198017 +     17.3922918969319 *
3538730   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83655436198017 + 17.3922918969319 * MntMagazines ;
3538731   +   S_NumCatalogPurchases  =    -3.12006597018847 +     13.4776879253306 *
3538732   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12006597018847 + 13.4776879253306 * 
NumCatalogPurchases ;
3538733   +   S_NumDealsPurchases  =    -1.40676795150454 +     11.2124645016146 *
3538734   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40676795150454 + 11.2124645016146 * 
NumDealsPurchases ;
3538735   +   S_NumWebPurchases  =    -5.19733205814994 +      12.199313605442 *
3538736   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.19733205814994 + 12.199313605442 * 
NumWebPurchases ;
3538737   +   S_RANGE_Frq  =    -1.37108994148136 +     4.20598657712966 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37108994148136 + 4.20598657712966 * RANGE_Frq ;
3538738   +   S_RANGE_Recency  =    -1.65209481761786 +     3.33924882631275 *
3538739   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65209481761786 + 3.33924882631275 * RANGE_Recency ;
3538740   +   S_RANGE_average_purchase  =    -1.04250513141757 +      5.1254724749544 *
3538741   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04250513141757 + 5.1254724749544 * 
RANGE_average_purchase ;
3538742   +   S_RANGE_campaign_acceptance
3538743   +          =     -0.4807231742579 +      5.7554895266433 *
3538744   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4807231742579 + 5.7554895266433 * 
RANGE_campaign_acceptance ;
3538745   +END;
MPRINT(EM_DIAGRAM):   END;
3538746   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538747   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3538748   +   ELSE S_MntCard_Games  =    -2.32339505068067 +     6.59896696738134 *
3538749   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32339505068067 + 6.59896696738134 * 
MntCard_Games ;
3538750   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3538751   +   ELSE S_MntMagazines  =    -0.83655436198017 +     17.3922918969319 *
3538752   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83655436198017 + 17.3922918969319 * 
MntMagazines ;
3538753   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3538754   +   ELSE S_NumCatalogPurchases
3538755   +          =    -3.12006597018847 +     13.4776879253306 * NumCatalogPurchases
3538756   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12006597018847 + 13.4776879253306 * 
NumCatalogPurchases ;
3538757   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3538758   +   ELSE S_NumDealsPurchases  =    -1.40676795150454 +     11.2124645016146 *
3538759   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40676795150454 + 11.2124645016146 * 
NumDealsPurchases ;
3538760   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3538761   +   ELSE S_NumWebPurchases  =    -5.19733205814994 +      12.199313605442 *
3538762   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.19733205814994 + 12.199313605442 * 
NumWebPurchases ;
3538763   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3538764   +   ELSE S_RANGE_Frq  =    -1.37108994148136 +     4.20598657712966 * RANGE_Frq
3538765   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37108994148136 + 4.20598657712966 * RANGE_Frq ;
3538766   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3538767   +   ELSE S_RANGE_Recency  =    -1.65209481761786 +     3.33924882631275 *
3538768   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65209481761786 + 3.33924882631275 * 
RANGE_Recency ;
3538769   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3538770   +   ELSE S_RANGE_average_purchase
3538771   +          =    -1.04250513141757 +      5.1254724749544 *
3538772   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04250513141757 + 5.1254724749544 * 
RANGE_average_purchase ;
3538773   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3538774   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3538775   +   ELSE S_RANGE_campaign_acceptance
3538776   +          =     -0.4807231742579 +      5.7554895266433 *
3538777   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4807231742579 + 5.7554895266433 * 
RANGE_campaign_acceptance ;
3538778   +END;
MPRINT(EM_DIAGRAM):   END;
3538779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538780   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3538781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538783   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3538784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538786   +   H11  =     -0.7757590428708 * S_MntCard_Games  +     0.07290234098853 *
3538787   +        S_MntMagazines  +    -0.63004303635214 * S_NumCatalogPurchases
3538788   +          +    -0.47995480948191 * S_NumDealsPurchases
3538789   +          +    -0.95697129004394 * S_NumWebPurchases
3538790   +          +    -0.19718195301227 * S_RANGE_Frq  +     1.14299222071516 *
3538791   +        S_RANGE_Recency  +     0.29490340038858 * S_RANGE_average_purchase
3538792   +          +    -0.71897339389886 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.7757590428708 * S_MntCard_Games + 0.07290234098853 * 
S_MntMagazines + -0.63004303635214 * S_NumCatalogPurchases + -0.47995480948191 * 
S_NumDealsPurchases + -0.95697129004394 * S_NumWebPurchases + -0.19718195301227 * S_RANGE_Frq 
+ 1.14299222071516 * S_RANGE_Recency + 0.29490340038858 * S_RANGE_average_purchase + 
-0.71897339389886 * S_RANGE_campaign_acceptance ;
3538793   +   H12  =    -0.14052863952027 * S_MntCard_Games  +     0.00070718270681 *
3538794   +        S_MntMagazines  +    -0.12042221725848 * S_NumCatalogPurchases
3538795   +          +     -0.1598037114017 * S_NumDealsPurchases
3538796   +          +     0.02366672250922 * S_NumWebPurchases
3538797   +          +    -0.07405710236345 * S_RANGE_Frq  +      0.2946529392088 *
3538798   +        S_RANGE_Recency  +    -0.11257365045717 * S_RANGE_average_purchase
3538799   +          +    -0.17639859942452 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.14052863952027 * S_MntCard_Games + 0.00070718270681 * 
S_MntMagazines + -0.12042221725848 * S_NumCatalogPurchases + -0.1598037114017 * 
S_NumDealsPurchases + 0.02366672250922 * S_NumWebPurchases + -0.07405710236345 * S_RANGE_Frq + 
0.2946529392088 * S_RANGE_Recency + -0.11257365045717 * S_RANGE_average_purchase + 
-0.17639859942452 * S_RANGE_campaign_acceptance ;
3538800   +   H11  = H11  +     0.17387541268518 * Marital_StatusDivorced
3538801   +          +    -0.11778247373217 * Marital_StatusMarried
3538802   +          +     0.63317172549668 * Marital_StatusSingle
3538803   +          +    -0.75955183879677 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17387541268518 * Marital_StatusDivorced + 
-0.11778247373217 * Marital_StatusMarried + 0.63317172549668 * Marital_StatusSingle + 
-0.75955183879677 * Marital_StatusTogether ;
3538804   +   H12  = H12  +    -0.18871595884611 * Marital_StatusDivorced
3538805   +          +     0.11742519159554 * Marital_StatusMarried
3538806   +          +    -0.26668319752133 * Marital_StatusSingle
3538807   +          +     0.52072665933085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18871595884611 * Marital_StatusDivorced + 
0.11742519159554 * Marital_StatusMarried + -0.26668319752133 * Marital_StatusSingle + 
0.52072665933085 * Marital_StatusTogether ;
3538808   +   H11  =     2.59489148542656 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.59489148542656 + H11 ;
3538809   +   H12  =      1.0428257552603 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.0428257552603 + H12 ;
3538810   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3538811   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3538812   +END;
MPRINT(EM_DIAGRAM):   END;
3538813   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538814   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3538815   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3538816   +END;
MPRINT(EM_DIAGRAM):   END;
3538817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538818   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3538819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538820   +
3538821   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3538822   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3538823   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538824   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3538825   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3538826   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538827   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3538828   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538829   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538830   +end;
MPRINT(EM_DIAGRAM):   end;
3538831   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538832   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3538833   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3538834   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3538835   +   end;
MPRINT(EM_DIAGRAM):   end;
3538836   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3538837   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3538838   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3538839   +   end;
MPRINT(EM_DIAGRAM):   end;
3538840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3538841   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3538842   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3538843   +   end;
MPRINT(EM_DIAGRAM):   end;
3538844   +end;
MPRINT(EM_DIAGRAM):   end;
3538845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3538846   +   P_DepVar1  =    -4.50959869947159 * H11  +    -12.9243574993666 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.50959869947159 * H11 + -12.9243574993666 * H12 ;
3538847   +   P_DepVar1  =     8.05232118677962 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.05232118677962 + P_DepVar1 ;
3538848   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3538849   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3538850   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3538851   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3538852   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3538853   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3538854   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3538855   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3538856   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3538857   +END;
MPRINT(EM_DIAGRAM):   END;
3538858   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3538859   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3538860   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3538861   +END;
MPRINT(EM_DIAGRAM):   END;
3538862   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3538863   +   P_DepVar1  =      0.1397800183318;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.1397800183318;
3538864   +   P_DepVar0  =     0.86021998166819;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86021998166819;
3538865   +END;
MPRINT(EM_DIAGRAM):   END;
3538866   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3538867   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3538868   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3538869   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3538870   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3538871   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3538872   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3538873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538874   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3538875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3538876   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3538877   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3538878   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3538879   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3538880   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3538881   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3538882   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3538883   +END;
MPRINT(EM_DIAGRAM):   END;
3538884   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538885   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3538886   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3538887   +drop
3538888   +S_MntCard_Games
3538889   +S_MntMagazines
3538890   +S_NumCatalogPurchases
3538891   +S_NumDealsPurchases
3538892   +S_NumWebPurchases
3538893   +S_RANGE_Frq
3538894   +S_RANGE_Recency
3538895   +S_RANGE_average_purchase
3538896   +S_RANGE_campaign_acceptance
3538897   +H11
3538898   +H12
3538899   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3538900   +end;
MPRINT(EM_DIAGRAM):   end;
3538901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538902   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3538903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3538904   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3538905   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3538906   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538907   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3538908   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3538909   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3538910   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3538911   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3538912   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3538913   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3538914   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3538915   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3538916   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3538917   +LENGTH _WARN_ $4
3538918   +      F_DepVar  $ 12
3538919   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3538920   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3538921   +
3538922   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3538923   +
3538924   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3538925   +
3538926   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3538927   +
3538928   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3538929   +
3538930   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3538931   +
3538932   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3538933   +
3538934   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3538935   +
3538936   +      label S_RANGE_campaign_acceptance =
3538937   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3538938   +
3538939   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3538940   +
3538941   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3538942   +
3538943   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3538944   +
3538945   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3538946   +
3538947   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3538948   +
3538949   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3538950   +
3538951   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3538952   +
3538953   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3538954   +
3538955   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3538956   +
3538957   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3538958   +
3538959   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3538960   +
3538961   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3538962   +
3538963   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3538964   +
3538965   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3538966   +
3538967   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3538968   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3538969   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3538970   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3538971   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3538972   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3538973   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3538974   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3538975   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3538976   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3538977   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3538978   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3538979   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3538980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3538981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3538982   +end;
MPRINT(EM_DIAGRAM):   end;
3538983   +else do;
MPRINT(EM_DIAGRAM):   else do;
3538984   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3538985   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3538986   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3538987   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3538988   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3538989   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3538990   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3538991   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3538992   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538993   +         end;
MPRINT(EM_DIAGRAM):   end;
3538994   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3538995   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3538996   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3538997   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3538998   +            end;
MPRINT(EM_DIAGRAM):   end;
3538999   +         end;
MPRINT(EM_DIAGRAM):   end;
3539000   +      end;
MPRINT(EM_DIAGRAM):   end;
3539001   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539002   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3539003   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3539004   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539005   +         end;
MPRINT(EM_DIAGRAM):   end;
3539006   +      end;
MPRINT(EM_DIAGRAM):   end;
3539007   +   end;
MPRINT(EM_DIAGRAM):   end;
3539008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539009   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3539010   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3539011   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539012   +      end;
MPRINT(EM_DIAGRAM):   end;
3539013   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539014   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3539015   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3539016   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3539017   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3539018   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3539019   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539020   +         end;
MPRINT(EM_DIAGRAM):   end;
3539021   +      end;
MPRINT(EM_DIAGRAM):   end;
3539022   +   end;
MPRINT(EM_DIAGRAM):   end;
3539023   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3539024   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539025   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539026   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539027   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3539029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539030   +   end;
MPRINT(EM_DIAGRAM):   end;
3539031   +end;
MPRINT(EM_DIAGRAM):   end;
3539032   +
3539033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539034   +*** Checking missing input Interval
3539035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3539036   +
3539037   +IF NMISS(
3539038   +   MntCard_Games ,
3539039   +   MntMagazines ,
3539040   +   NumCatalogPurchases ,
3539041   +   NumDealsPurchases ,
3539042   +   NumWebPurchases ,
3539043   +   RANGE_Frq ,
3539044   +   RANGE_Recency ,
3539045   +   RANGE_average_purchase ,
3539046   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3539047   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3539048   +
3539049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539050   +END;
MPRINT(EM_DIAGRAM):   END;
3539051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539052   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3539053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539054   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539055   +   S_MntCard_Games  =    -2.33814232072064 +     6.66324554145659 *
3539056   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33814232072064 + 6.66324554145659 * MntCard_Games ;
3539057   +   S_MntMagazines  =    -0.84842609569259 +     17.4325407190991 *
3539058   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84842609569259 + 17.4325407190991 * MntMagazines ;
3539059   +   S_NumCatalogPurchases  =    -3.11987334160799 +     13.4547174334176 *
3539060   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11987334160799 + 13.4547174334176 * 
NumCatalogPurchases ;
3539061   +   S_NumDealsPurchases  =    -1.40628334403692 +     11.1136095082861 *
3539062   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40628334403692 + 11.1136095082861 * 
NumDealsPurchases ;
3539063   +   S_NumWebPurchases  =    -5.23788380324221 +     12.2804390416915 *
3539064   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23788380324221 + 12.2804390416915 * 
NumWebPurchases ;
3539065   +   S_RANGE_Frq  =    -1.36262762956209 +      4.2165157659707 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36262762956209 + 4.2165157659707 * RANGE_Frq ;
3539066   +   S_RANGE_Recency  =    -1.67245321534246 +     3.36533372284425 *
3539067   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67245321534246 + 3.36533372284425 * RANGE_Recency ;
3539068   +   S_RANGE_average_purchase  =    -1.03268899138172 +     5.12639033648768 *
3539069   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03268899138172 + 5.12639033648768 * 
RANGE_average_purchase ;
3539070   +   S_RANGE_campaign_acceptance
3539071   +          =     -0.4751385065686 +     5.73602536441649 *
3539072   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4751385065686 + 5.73602536441649 * 
RANGE_campaign_acceptance ;
3539073   +END;
MPRINT(EM_DIAGRAM):   END;
3539074   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539075   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3539076   +   ELSE S_MntCard_Games  =    -2.33814232072064 +     6.66324554145659 *
3539077   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33814232072064 + 6.66324554145659 * 
MntCard_Games ;
3539078   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3539079   +   ELSE S_MntMagazines  =    -0.84842609569259 +     17.4325407190991 *
3539080   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84842609569259 + 17.4325407190991 * 
MntMagazines ;
3539081   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3539082   +   ELSE S_NumCatalogPurchases
3539083   +          =    -3.11987334160799 +     13.4547174334176 * NumCatalogPurchases
3539084   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11987334160799 + 13.4547174334176 * 
NumCatalogPurchases ;
3539085   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3539086   +   ELSE S_NumDealsPurchases  =    -1.40628334403692 +     11.1136095082861 *
3539087   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40628334403692 + 11.1136095082861 * 
NumDealsPurchases ;
3539088   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3539089   +   ELSE S_NumWebPurchases  =    -5.23788380324221 +     12.2804390416915 *
3539090   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23788380324221 + 12.2804390416915 * 
NumWebPurchases ;
3539091   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3539092   +   ELSE S_RANGE_Frq  =    -1.36262762956209 +      4.2165157659707 * RANGE_Frq
3539093   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36262762956209 + 4.2165157659707 * RANGE_Frq ;
3539094   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3539095   +   ELSE S_RANGE_Recency  =    -1.67245321534246 +     3.36533372284425 *
3539096   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67245321534246 + 3.36533372284425 * 
RANGE_Recency ;
3539097   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3539098   +   ELSE S_RANGE_average_purchase
3539099   +          =    -1.03268899138172 +     5.12639033648768 *
3539100   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03268899138172 + 5.12639033648768 * 
RANGE_average_purchase ;
3539101   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3539102   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3539103   +   ELSE S_RANGE_campaign_acceptance
3539104   +          =     -0.4751385065686 +     5.73602536441649 *
3539105   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4751385065686 + 5.73602536441649 * 
RANGE_campaign_acceptance ;
3539106   +END;
MPRINT(EM_DIAGRAM):   END;
3539107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539108   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3539109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539111   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3539112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539114   +   H11  =    -0.52675232036714 * S_MntCard_Games  +     0.09247059493771 *
3539115   +        S_MntMagazines  +    -0.39563474488434 * S_NumCatalogPurchases
3539116   +          +    -0.26338579399702 * S_NumDealsPurchases
3539117   +          +    -0.60514410670254 * S_NumWebPurchases
3539118   +          +    -0.12950197442811 * S_RANGE_Frq  +     0.72710395705661 *
3539119   +        S_RANGE_Recency  +     0.25834992550142 * S_RANGE_average_purchase
3539120   +          +    -0.45934370502848 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.52675232036714 * S_MntCard_Games + 0.09247059493771 * 
S_MntMagazines + -0.39563474488434 * S_NumCatalogPurchases + -0.26338579399702 * 
S_NumDealsPurchases + -0.60514410670254 * S_NumWebPurchases + -0.12950197442811 * S_RANGE_Frq 
+ 0.72710395705661 * S_RANGE_Recency + 0.25834992550142 * S_RANGE_average_purchase + 
-0.45934370502848 * S_RANGE_campaign_acceptance ;
3539121   +   H12  =    -0.12497345831052 * S_MntCard_Games  +    -0.01646148474329 *
3539122   +        S_MntMagazines  +    -0.14940172229878 * S_NumCatalogPurchases
3539123   +          +    -0.20863873086019 * S_NumDealsPurchases
3539124   +          +     0.06947564012649 * S_NumWebPurchases
3539125   +          +    -0.06877598937606 * S_RANGE_Frq  +     0.32742701573005 *
3539126   +        S_RANGE_Recency  +    -0.16419024867202 * S_RANGE_average_purchase
3539127   +          +    -0.19783523006832 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.12497345831052 * S_MntCard_Games + -0.01646148474329 * 
S_MntMagazines + -0.14940172229878 * S_NumCatalogPurchases + -0.20863873086019 * 
S_NumDealsPurchases + 0.06947564012649 * S_NumWebPurchases + -0.06877598937606 * S_RANGE_Frq + 
0.32742701573005 * S_RANGE_Recency + -0.16419024867202 * S_RANGE_average_purchase + 
-0.19783523006832 * S_RANGE_campaign_acceptance ;
3539128   +   H11  = H11  +     0.10258015731348 * Marital_StatusDivorced
3539129   +          +    -0.06725999714252 * Marital_StatusMarried
3539130   +          +     0.31460099227437 * Marital_StatusSingle
3539131   +          +    -0.36144802981574 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10258015731348 * Marital_StatusDivorced + 
-0.06725999714252 * Marital_StatusMarried + 0.31460099227437 * Marital_StatusSingle + 
-0.36144802981574 * Marital_StatusTogether ;
3539132   +   H12  = H12  +    -0.23509904669163 * Marital_StatusDivorced
3539133   +          +      0.1888792109479 * Marital_StatusMarried
3539134   +          +    -0.26907662140071 * Marital_StatusSingle
3539135   +          +     0.52676672125236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23509904669163 * Marital_StatusDivorced + 0.1888792109479 
* Marital_StatusMarried + -0.26907662140071 * Marital_StatusSingle + 0.52676672125236 * 
Marital_StatusTogether ;
3539136   +   H11  =     1.78513266123228 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.78513266123228 + H11 ;
3539137   +   H12  =     0.95522237749503 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.95522237749503 + H12 ;
3539138   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3539139   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3539140   +END;
MPRINT(EM_DIAGRAM):   END;
3539141   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539142   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3539143   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3539144   +END;
MPRINT(EM_DIAGRAM):   END;
3539145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539146   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3539147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539148   +
3539149   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3539150   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3539151   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539152   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3539153   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3539154   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539155   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3539156   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539157   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539158   +end;
MPRINT(EM_DIAGRAM):   end;
3539159   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539160   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3539161   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3539162   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3539163   +   end;
MPRINT(EM_DIAGRAM):   end;
3539164   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3539165   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3539166   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3539167   +   end;
MPRINT(EM_DIAGRAM):   end;
3539168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539169   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539170   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539171   +   end;
MPRINT(EM_DIAGRAM):   end;
3539172   +end;
MPRINT(EM_DIAGRAM):   end;
3539173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539174   +   P_DepVar1  =    -5.58687942767415 * H11  +    -9.43645953822448 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.58687942767415 * H11 + -9.43645953822448 * H12 ;
3539175   +   P_DepVar1  =     5.80706137266154 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.80706137266154 + P_DepVar1 ;
3539176   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3539177   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3539178   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3539179   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3539180   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3539181   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3539182   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3539183   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3539184   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3539185   +END;
MPRINT(EM_DIAGRAM):   END;
3539186   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539187   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3539188   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3539189   +END;
MPRINT(EM_DIAGRAM):   END;
3539190   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3539191   +   P_DepVar1  =     0.13548387096774;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13548387096774;
3539192   +   P_DepVar0  =     0.86451612903225;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86451612903225;
3539193   +END;
MPRINT(EM_DIAGRAM):   END;
3539194   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3539195   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3539196   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3539197   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3539198   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3539199   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3539200   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3539201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539202   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3539203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539204   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3539205   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3539206   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3539207   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3539208   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3539209   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3539210   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3539211   +END;
MPRINT(EM_DIAGRAM):   END;
3539212   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539213   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3539214   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539215   +drop
3539216   +S_MntCard_Games
3539217   +S_MntMagazines
3539218   +S_NumCatalogPurchases
3539219   +S_NumDealsPurchases
3539220   +S_NumWebPurchases
3539221   +S_RANGE_Frq
3539222   +S_RANGE_Recency
3539223   +S_RANGE_average_purchase
3539224   +S_RANGE_campaign_acceptance
3539225   +H11
3539226   +H12
3539227   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3539228   +end;
MPRINT(EM_DIAGRAM):   end;
3539229   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539230   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3539231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539232   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3539233   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3539234   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539235   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3539236   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539237   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3539238   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3539239   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3539240   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3539241   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3539242   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3539243   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3539244   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3539245   +LENGTH _WARN_ $4
3539246   +      F_DepVar  $ 12
3539247   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3539248   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3539249   +
3539250   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3539251   +
3539252   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3539253   +
3539254   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3539255   +
3539256   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3539257   +
3539258   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3539259   +
3539260   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3539261   +
3539262   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3539263   +
3539264   +      label S_RANGE_campaign_acceptance =
3539265   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3539266   +
3539267   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3539268   +
3539269   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3539270   +
3539271   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3539272   +
3539273   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3539274   +
3539275   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3539276   +
3539277   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3539278   +
3539279   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3539280   +
3539281   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539282   +
3539283   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3539284   +
3539285   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3539286   +
3539287   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3539288   +
3539289   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3539290   +
3539291   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3539292   +
3539293   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3539294   +
3539295   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3539296   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3539297   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3539298   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3539299   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3539300   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3539301   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3539302   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3539303   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3539304   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539305   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539306   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539307   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3539309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539310   +end;
MPRINT(EM_DIAGRAM):   end;
3539311   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539312   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3539313   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3539314   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539315   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3539316   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3539317   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3539318   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3539319   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3539320   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539321   +         end;
MPRINT(EM_DIAGRAM):   end;
3539322   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3539323   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3539324   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3539325   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539326   +            end;
MPRINT(EM_DIAGRAM):   end;
3539327   +         end;
MPRINT(EM_DIAGRAM):   end;
3539328   +      end;
MPRINT(EM_DIAGRAM):   end;
3539329   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539330   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3539331   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3539332   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539333   +         end;
MPRINT(EM_DIAGRAM):   end;
3539334   +      end;
MPRINT(EM_DIAGRAM):   end;
3539335   +   end;
MPRINT(EM_DIAGRAM):   end;
3539336   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539337   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3539338   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3539339   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539340   +      end;
MPRINT(EM_DIAGRAM):   end;
3539341   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539342   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3539343   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3539344   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3539345   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3539346   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3539347   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539348   +         end;
MPRINT(EM_DIAGRAM):   end;
3539349   +      end;
MPRINT(EM_DIAGRAM):   end;
3539350   +   end;
MPRINT(EM_DIAGRAM):   end;
3539351   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3539352   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539353   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539354   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539355   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3539357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539358   +   end;
MPRINT(EM_DIAGRAM):   end;
3539359   +end;
MPRINT(EM_DIAGRAM):   end;
3539360   +
3539361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539362   +*** Checking missing input Interval
3539363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3539364   +
3539365   +IF NMISS(
3539366   +   MntCard_Games ,
3539367   +   MntMagazines ,
3539368   +   NumCatalogPurchases ,
3539369   +   NumDealsPurchases ,
3539370   +   NumWebPurchases ,
3539371   +   RANGE_Frq ,
3539372   +   RANGE_Recency ,
3539373   +   RANGE_average_purchase ,
3539374   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3539375   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3539376   +
3539377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539378   +END;
MPRINT(EM_DIAGRAM):   END;
3539379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539380   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3539381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539382   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539383   +   S_MntCard_Games  =    -2.33381293024698 +     6.63619812879026 *
3539384   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33381293024698 + 6.63619812879026 * MntCard_Games ;
3539385   +   S_MntMagazines  =    -0.83452501535831 +     17.3026363710969 *
3539386   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83452501535831 + 17.3026363710969 * MntMagazines ;
3539387   +   S_NumCatalogPurchases  =    -3.10185129178993 +     13.4637286529205 *
3539388   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10185129178993 + 13.4637286529205 * 
NumCatalogPurchases ;
3539389   +   S_NumDealsPurchases  =    -1.41134775237008 +     11.1646989797343 *
3539390   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41134775237008 + 11.1646989797343 * 
NumDealsPurchases ;
3539391   +   S_NumWebPurchases  =     -5.2308461801204 +      12.235883637376 *
3539392   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.2308461801204 + 12.235883637376 * NumWebPurchases 
;
3539393   +   S_RANGE_Frq  =    -1.36043304348038 +     4.21798414848893 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36043304348038 + 4.21798414848893 * RANGE_Frq ;
3539394   +   S_RANGE_Recency  =    -1.66414586388862 +      3.3617215689746 *
3539395   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66414586388862 + 3.3617215689746 * RANGE_Recency ;
3539396   +   S_RANGE_average_purchase  =    -1.03114770259456 +     5.16342852330191 *
3539397   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03114770259456 + 5.16342852330191 * 
RANGE_average_purchase ;
3539398   +   S_RANGE_campaign_acceptance
3539399   +          =    -0.47176590852359 +     5.75843512855259 *
3539400   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47176590852359 + 5.75843512855259 * 
RANGE_campaign_acceptance ;
3539401   +END;
MPRINT(EM_DIAGRAM):   END;
3539402   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539403   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3539404   +   ELSE S_MntCard_Games  =    -2.33381293024698 +     6.63619812879026 *
3539405   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33381293024698 + 6.63619812879026 * 
MntCard_Games ;
3539406   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3539407   +   ELSE S_MntMagazines  =    -0.83452501535831 +     17.3026363710969 *
3539408   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83452501535831 + 17.3026363710969 * 
MntMagazines ;
3539409   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3539410   +   ELSE S_NumCatalogPurchases
3539411   +          =    -3.10185129178993 +     13.4637286529205 * NumCatalogPurchases
3539412   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10185129178993 + 13.4637286529205 * 
NumCatalogPurchases ;
3539413   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3539414   +   ELSE S_NumDealsPurchases  =    -1.41134775237008 +     11.1646989797343 *
3539415   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41134775237008 + 11.1646989797343 * 
NumDealsPurchases ;
3539416   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3539417   +   ELSE S_NumWebPurchases  =     -5.2308461801204 +      12.235883637376 *
3539418   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.2308461801204 + 12.235883637376 * 
NumWebPurchases ;
3539419   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3539420   +   ELSE S_RANGE_Frq  =    -1.36043304348038 +     4.21798414848893 * RANGE_Frq
3539421   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36043304348038 + 4.21798414848893 * RANGE_Frq ;
3539422   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3539423   +   ELSE S_RANGE_Recency  =    -1.66414586388862 +      3.3617215689746 *
3539424   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66414586388862 + 3.3617215689746 * 
RANGE_Recency ;
3539425   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3539426   +   ELSE S_RANGE_average_purchase
3539427   +          =    -1.03114770259456 +     5.16342852330191 *
3539428   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03114770259456 + 5.16342852330191 * 
RANGE_average_purchase ;
3539429   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3539430   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3539431   +   ELSE S_RANGE_campaign_acceptance
3539432   +          =    -0.47176590852359 +     5.75843512855259 *
3539433   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47176590852359 + 5.75843512855259 
* RANGE_campaign_acceptance ;
3539434   +END;
MPRINT(EM_DIAGRAM):   END;
3539435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539436   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3539437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539439   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3539440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539441   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539442   +   H11  =    -0.31574905646876 * S_MntCard_Games  +     0.00413800338761 *
3539443   +        S_MntMagazines  +    -0.31784037512437 * S_NumCatalogPurchases
3539444   +          +    -0.29919540861309 * S_NumDealsPurchases
3539445   +          +    -0.16369272497509 * S_NumWebPurchases
3539446   +          +    -0.02326954160078 * S_RANGE_Frq  +      0.6095266451271 *
3539447   +        S_RANGE_Recency  +      0.0082556646734 * S_RANGE_average_purchase
3539448   +          +    -0.38424657303202 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.31574905646876 * S_MntCard_Games + 0.00413800338761 * 
S_MntMagazines + -0.31784037512437 * S_NumCatalogPurchases + -0.29919540861309 * 
S_NumDealsPurchases + -0.16369272497509 * S_NumWebPurchases + -0.02326954160078 * S_RANGE_Frq 
+ 0.6095266451271 * S_RANGE_Recency + 0.0082556646734 * S_RANGE_average_purchase + 
-0.38424657303202 * S_RANGE_campaign_acceptance ;
3539449   +   H12  =     2.04890469297107 * S_MntCard_Games  +    -0.19426389865388 *
3539450   +        S_MntMagazines  +     1.05555822830309 * S_NumCatalogPurchases
3539451   +          +     1.44433183987648 * S_NumDealsPurchases
3539452   +          +     0.94269055062206 * S_NumWebPurchases
3539453   +          +     1.22691543427541 * S_RANGE_Frq  +    -2.46883994067164 *
3539454   +        S_RANGE_Recency  +     1.24070387887364 * S_RANGE_average_purchase
3539455   +          +     1.86282445686393 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.04890469297107 * S_MntCard_Games + -0.19426389865388 * 
S_MntMagazines + 1.05555822830309 * S_NumCatalogPurchases + 1.44433183987648 * 
S_NumDealsPurchases + 0.94269055062206 * S_NumWebPurchases + 1.22691543427541 * S_RANGE_Frq + 
-2.46883994067164 * S_RANGE_Recency + 1.24070387887364 * S_RANGE_average_purchase + 
1.86282445686393 * S_RANGE_campaign_acceptance ;
3539456   +   H11  = H11  +     0.15817517718488 * Marital_StatusDivorced
3539457   +          +     0.43620652832651 * Marital_StatusMarried
3539458   +          +    -1.22365817802874 * Marital_StatusSingle
3539459   +          +     0.52166351189124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.15817517718488 * Marital_StatusDivorced + 0.43620652832651 
* Marital_StatusMarried + -1.22365817802874 * Marital_StatusSingle + 0.52166351189124 * 
Marital_StatusTogether ;
3539460   +   H12  = H12  +     1.78579377297235 * Marital_StatusDivorced
3539461   +          +    -0.08643619958798 * Marital_StatusMarried
3539462   +          +    -4.45378853044641 * Marital_StatusSingle
3539463   +          +     0.54836105424745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 1.78579377297235 * Marital_StatusDivorced + 
-0.08643619958798 * Marital_StatusMarried + -4.45378853044641 * Marital_StatusSingle + 
0.54836105424745 * Marital_StatusTogether ;
3539464   +   H11  =     0.95894057010244 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.95894057010244 + H11 ;
3539465   +   H12  =    -1.17597151055178 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.17597151055178 + H12 ;
3539466   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3539467   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3539468   +END;
MPRINT(EM_DIAGRAM):   END;
3539469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539470   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3539471   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3539472   +END;
MPRINT(EM_DIAGRAM):   END;
3539473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539474   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3539475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539476   +
3539477   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3539478   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3539479   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539480   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3539481   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3539482   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539483   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3539484   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539485   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539486   +end;
MPRINT(EM_DIAGRAM):   end;
3539487   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539488   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3539489   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3539490   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3539491   +   end;
MPRINT(EM_DIAGRAM):   end;
3539492   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3539493   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3539494   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3539495   +   end;
MPRINT(EM_DIAGRAM):   end;
3539496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539497   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539498   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539499   +   end;
MPRINT(EM_DIAGRAM):   end;
3539500   +end;
MPRINT(EM_DIAGRAM):   end;
3539501   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539502   +   P_DepVar1  =    -7.65246913429393 * H11  +     4.86565784899913 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.65246913429393 * H11 + 4.86565784899913 * H12 ;
3539503   +   P_DepVar1  =    -2.49866065629667 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49866065629667 + P_DepVar1 ;
3539504   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3539505   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3539506   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3539507   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3539508   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3539509   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3539510   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3539511   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3539512   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3539513   +END;
MPRINT(EM_DIAGRAM):   END;
3539514   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539515   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3539516   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3539517   +END;
MPRINT(EM_DIAGRAM):   END;
3539518   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3539519   +   P_DepVar1  =     0.13738019169329;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13738019169329;
3539520   +   P_DepVar0  =      0.8626198083067;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8626198083067;
3539521   +END;
MPRINT(EM_DIAGRAM):   END;
3539522   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3539523   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3539524   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3539525   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3539526   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3539527   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3539528   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3539529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539530   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3539531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539532   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3539533   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3539534   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3539535   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3539536   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3539537   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3539538   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3539539   +END;
MPRINT(EM_DIAGRAM):   END;
3539540   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539541   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3539542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539543   +drop
3539544   +S_MntCard_Games
3539545   +S_MntMagazines
3539546   +S_NumCatalogPurchases
3539547   +S_NumDealsPurchases
3539548   +S_NumWebPurchases
3539549   +S_RANGE_Frq
3539550   +S_RANGE_Recency
3539551   +S_RANGE_average_purchase
3539552   +S_RANGE_campaign_acceptance
3539553   +H11
3539554   +H12
3539555   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3539556   +end;
MPRINT(EM_DIAGRAM):   end;
3539557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539558   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3539559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539560   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3539561   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3539562   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539563   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3539564   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539565   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3539566   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3539567   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3539568   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3539569   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3539570   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3539571   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3539572   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3539573   +LENGTH _WARN_ $4
3539574   +      F_DepVar  $ 12
3539575   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3539576   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3539577   +
3539578   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3539579   +
3539580   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3539581   +
3539582   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3539583   +
3539584   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3539585   +
3539586   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3539587   +
3539588   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3539589   +
3539590   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3539591   +
3539592   +      label S_RANGE_campaign_acceptance =
3539593   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3539594   +
3539595   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3539596   +
3539597   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3539598   +
3539599   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3539600   +
3539601   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3539602   +
3539603   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3539604   +
3539605   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3539606   +
3539607   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3539608   +
3539609   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539610   +
3539611   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3539612   +
3539613   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3539614   +
3539615   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3539616   +
3539617   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3539618   +
3539619   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3539620   +
3539621   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3539622   +
3539623   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3539624   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3539625   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3539626   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3539627   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3539628   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3539629   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3539630   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3539631   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3539632   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539633   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539634   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539635   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3539637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539638   +end;
MPRINT(EM_DIAGRAM):   end;
3539639   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539640   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3539641   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3539642   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539643   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3539644   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3539645   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3539646   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3539647   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3539648   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539649   +         end;
MPRINT(EM_DIAGRAM):   end;
3539650   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3539651   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3539652   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3539653   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539654   +            end;
MPRINT(EM_DIAGRAM):   end;
3539655   +         end;
MPRINT(EM_DIAGRAM):   end;
3539656   +      end;
MPRINT(EM_DIAGRAM):   end;
3539657   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539658   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3539659   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3539660   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539661   +         end;
MPRINT(EM_DIAGRAM):   end;
3539662   +      end;
MPRINT(EM_DIAGRAM):   end;
3539663   +   end;
MPRINT(EM_DIAGRAM):   end;
3539664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539665   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3539666   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3539667   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539668   +      end;
MPRINT(EM_DIAGRAM):   end;
3539669   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539670   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3539671   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3539672   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3539673   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3539674   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3539675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539676   +         end;
MPRINT(EM_DIAGRAM):   end;
3539677   +      end;
MPRINT(EM_DIAGRAM):   end;
3539678   +   end;
MPRINT(EM_DIAGRAM):   end;
3539679   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3539680   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539681   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539682   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539683   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3539685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539686   +   end;
MPRINT(EM_DIAGRAM):   end;
3539687   +end;
MPRINT(EM_DIAGRAM):   end;
3539688   +
3539689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539690   +*** Checking missing input Interval
3539691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3539692   +
3539693   +IF NMISS(
3539694   +   MntCard_Games ,
3539695   +   MntMagazines ,
3539696   +   NumCatalogPurchases ,
3539697   +   NumDealsPurchases ,
3539698   +   NumWebPurchases ,
3539699   +   RANGE_Frq ,
3539700   +   RANGE_Recency ,
3539701   +   RANGE_average_purchase ,
3539702   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3539703   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3539704   +
3539705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539706   +END;
MPRINT(EM_DIAGRAM):   END;
3539707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539708   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3539709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539711   +   S_MntCard_Games  =    -2.33950227436932 +     6.65712390385437 *
3539712   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33950227436932 + 6.65712390385437 * MntCard_Games ;
3539713   +   S_MntMagazines  =    -0.83466686251083 +     17.3698649555885 *
3539714   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83466686251083 + 17.3698649555885 * MntMagazines ;
3539715   +   S_NumCatalogPurchases  =    -3.09636695512595 +     13.4385887478015 *
3539716   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09636695512595 + 13.4385887478015 * 
NumCatalogPurchases ;
3539717   +   S_NumDealsPurchases  =    -1.41358461903555 +     11.2154452130362 *
3539718   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41358461903555 + 11.2154452130362 * 
NumDealsPurchases ;
3539719   +   S_NumWebPurchases  =    -5.24139426273934 +     12.2674503522564 *
3539720   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24139426273934 + 12.2674503522564 * 
NumWebPurchases ;
3539721   +   S_RANGE_Frq  =    -1.35883301995252 +     4.22555717598823 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35883301995252 + 4.22555717598823 * RANGE_Frq ;
3539722   +   S_RANGE_Recency  =    -1.65104270136691 +     3.33981325553982 *
3539723   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65104270136691 + 3.33981325553982 * RANGE_Recency ;
3539724   +   S_RANGE_average_purchase  =    -1.03067522130225 +     5.10790958423126 *
3539725   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03067522130225 + 5.10790958423126 * 
RANGE_average_purchase ;
3539726   +   S_RANGE_campaign_acceptance
3539727   +          =    -0.47020366980134 +     5.86120546129676 *
3539728   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47020366980134 + 5.86120546129676 * 
RANGE_campaign_acceptance ;
3539729   +END;
MPRINT(EM_DIAGRAM):   END;
3539730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539731   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3539732   +   ELSE S_MntCard_Games  =    -2.33950227436932 +     6.65712390385437 *
3539733   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33950227436932 + 6.65712390385437 * 
MntCard_Games ;
3539734   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3539735   +   ELSE S_MntMagazines  =    -0.83466686251083 +     17.3698649555885 *
3539736   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83466686251083 + 17.3698649555885 * 
MntMagazines ;
3539737   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3539738   +   ELSE S_NumCatalogPurchases
3539739   +          =    -3.09636695512595 +     13.4385887478015 * NumCatalogPurchases
3539740   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09636695512595 + 13.4385887478015 * 
NumCatalogPurchases ;
3539741   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3539742   +   ELSE S_NumDealsPurchases  =    -1.41358461903555 +     11.2154452130362 *
3539743   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41358461903555 + 11.2154452130362 * 
NumDealsPurchases ;
3539744   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3539745   +   ELSE S_NumWebPurchases  =    -5.24139426273934 +     12.2674503522564 *
3539746   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24139426273934 + 12.2674503522564 * 
NumWebPurchases ;
3539747   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3539748   +   ELSE S_RANGE_Frq  =    -1.35883301995252 +     4.22555717598823 * RANGE_Frq
3539749   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35883301995252 + 4.22555717598823 * RANGE_Frq ;
3539750   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3539751   +   ELSE S_RANGE_Recency  =    -1.65104270136691 +     3.33981325553982 *
3539752   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65104270136691 + 3.33981325553982 * 
RANGE_Recency ;
3539753   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3539754   +   ELSE S_RANGE_average_purchase
3539755   +          =    -1.03067522130225 +     5.10790958423126 *
3539756   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03067522130225 + 5.10790958423126 * 
RANGE_average_purchase ;
3539757   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3539758   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3539759   +   ELSE S_RANGE_campaign_acceptance
3539760   +          =    -0.47020366980134 +     5.86120546129676 *
3539761   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47020366980134 + 5.86120546129676 
* RANGE_campaign_acceptance ;
3539762   +END;
MPRINT(EM_DIAGRAM):   END;
3539763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539764   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3539765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539767   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3539768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539770   +   H11  =    -0.24922730400407 * S_MntCard_Games  +     0.02815075674521 *
3539771   +        S_MntMagazines  +    -0.22980775303204 * S_NumCatalogPurchases
3539772   +          +     -0.2369549179888 * S_NumDealsPurchases
3539773   +          +    -0.10433706247808 * S_NumWebPurchases
3539774   +          +      0.0236364076732 * S_RANGE_Frq  +     0.50408834965467 *
3539775   +        S_RANGE_Recency  +    -0.00779558504302 * S_RANGE_average_purchase
3539776   +          +    -0.29900719855069 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.24922730400407 * S_MntCard_Games + 0.02815075674521 * 
S_MntMagazines + -0.22980775303204 * S_NumCatalogPurchases + -0.2369549179888 * 
S_NumDealsPurchases + -0.10433706247808 * S_NumWebPurchases + 0.0236364076732 * S_RANGE_Frq + 
0.50408834965467 * S_RANGE_Recency + -0.00779558504302 * S_RANGE_average_purchase + 
-0.29900719855069 * S_RANGE_campaign_acceptance ;
3539777   +   H12  =     2.05167715866249 * S_MntCard_Games  +     0.72800483653863 *
3539778   +        S_MntMagazines  +     1.53302018836813 * S_NumCatalogPurchases
3539779   +          +     0.76812249670326 * S_NumDealsPurchases
3539780   +          +      1.7121978574676 * S_NumWebPurchases
3539781   +          +     2.79047407910644 * S_RANGE_Frq  +    -1.66056190705942 *
3539782   +        S_RANGE_Recency  +      1.3234966784806 * S_RANGE_average_purchase
3539783   +          +     1.58791041348629 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.05167715866249 * S_MntCard_Games + 0.72800483653863 * 
S_MntMagazines + 1.53302018836813 * S_NumCatalogPurchases + 0.76812249670326 * 
S_NumDealsPurchases + 1.7121978574676 * S_NumWebPurchases + 2.79047407910644 * S_RANGE_Frq + 
-1.66056190705942 * S_RANGE_Recency + 1.3234966784806 * S_RANGE_average_purchase + 
1.58791041348629 * S_RANGE_campaign_acceptance ;
3539784   +   H11  = H11  +    -0.01652849546119 * Marital_StatusDivorced
3539785   +          +     0.31759910480532 * Marital_StatusMarried
3539786   +          +    -0.27706097767685 * Marital_StatusSingle
3539787   +          +     0.39527898766418 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01652849546119 * Marital_StatusDivorced + 
0.31759910480532 * Marital_StatusMarried + -0.27706097767685 * Marital_StatusSingle + 
0.39527898766418 * Marital_StatusTogether ;
3539788   +   H12  = H12  +     1.50921410859283 * Marital_StatusDivorced
3539789   +          +     2.91948488076424 * Marital_StatusMarried
3539790   +          +    -3.09732252215406 * Marital_StatusSingle
3539791   +          +     4.96547980567187 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 1.50921410859283 * Marital_StatusDivorced + 2.91948488076424 
* Marital_StatusMarried + -3.09732252215406 * Marital_StatusSingle + 4.96547980567187 * 
Marital_StatusTogether ;
3539792   +   H11  =     0.62855547372843 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.62855547372843 + H11 ;
3539793   +   H12  =    -1.91081199099149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.91081199099149 + H12 ;
3539794   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3539795   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3539796   +END;
MPRINT(EM_DIAGRAM):   END;
3539797   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539798   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3539799   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3539800   +END;
MPRINT(EM_DIAGRAM):   END;
3539801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539802   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3539803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539804   +
3539805   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3539806   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3539807   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539808   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3539809   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3539810   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539811   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3539812   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539813   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539814   +end;
MPRINT(EM_DIAGRAM):   end;
3539815   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539816   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3539817   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3539818   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3539819   +   end;
MPRINT(EM_DIAGRAM):   end;
3539820   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3539821   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3539822   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3539823   +   end;
MPRINT(EM_DIAGRAM):   end;
3539824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539825   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3539826   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3539827   +   end;
MPRINT(EM_DIAGRAM):   end;
3539828   +end;
MPRINT(EM_DIAGRAM):   end;
3539829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3539830   +   P_DepVar1  =    -9.05664946005689 * H11  +     2.54491810655183 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.05664946005689 * H11 + 2.54491810655183 * H12 ;
3539831   +   P_DepVar1  =    -1.69735400813138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69735400813138 + P_DepVar1 ;
3539832   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3539833   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3539834   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3539835   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3539836   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3539837   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3539838   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3539839   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3539840   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3539841   +END;
MPRINT(EM_DIAGRAM):   END;
3539842   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3539843   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3539844   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3539845   +END;
MPRINT(EM_DIAGRAM):   END;
3539846   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3539847   +   P_DepVar1  =     0.13654984069185;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13654984069185;
3539848   +   P_DepVar0  =     0.86345015930814;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86345015930814;
3539849   +END;
MPRINT(EM_DIAGRAM):   END;
3539850   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3539851   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3539852   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3539853   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3539854   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3539855   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3539856   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3539857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539858   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3539859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3539860   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3539861   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3539862   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3539863   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3539864   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3539865   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3539866   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3539867   +END;
MPRINT(EM_DIAGRAM):   END;
3539868   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539869   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3539870   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3539871   +drop
3539872   +S_MntCard_Games
3539873   +S_MntMagazines
3539874   +S_NumCatalogPurchases
3539875   +S_NumDealsPurchases
3539876   +S_NumWebPurchases
3539877   +S_RANGE_Frq
3539878   +S_RANGE_Recency
3539879   +S_RANGE_average_purchase
3539880   +S_RANGE_campaign_acceptance
3539881   +H11
3539882   +H12
3539883   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3539884   +end;
MPRINT(EM_DIAGRAM):   end;
3539885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539886   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3539887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3539888   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3539889   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3539890   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539891   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3539892   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3539893   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3539894   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3539895   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3539896   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3539897   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3539898   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3539899   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3539900   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3539901   +LENGTH _WARN_ $4
3539902   +      F_DepVar  $ 12
3539903   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3539904   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3539905   +
3539906   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3539907   +
3539908   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3539909   +
3539910   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3539911   +
3539912   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3539913   +
3539914   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3539915   +
3539916   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3539917   +
3539918   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3539919   +
3539920   +      label S_RANGE_campaign_acceptance =
3539921   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3539922   +
3539923   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3539924   +
3539925   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3539926   +
3539927   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3539928   +
3539929   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3539930   +
3539931   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3539932   +
3539933   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3539934   +
3539935   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3539936   +
3539937   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3539938   +
3539939   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3539940   +
3539941   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3539942   +
3539943   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3539944   +
3539945   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3539946   +
3539947   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3539948   +
3539949   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3539950   +
3539951   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3539952   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3539953   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3539954   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3539955   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3539956   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3539957   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3539958   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3539959   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3539960   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3539961   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3539962   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3539963   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3539964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3539965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3539966   +end;
MPRINT(EM_DIAGRAM):   end;
3539967   +else do;
MPRINT(EM_DIAGRAM):   else do;
3539968   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3539969   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3539970   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3539971   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3539972   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3539973   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3539974   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3539975   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3539976   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539977   +         end;
MPRINT(EM_DIAGRAM):   end;
3539978   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3539979   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3539980   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3539981   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539982   +            end;
MPRINT(EM_DIAGRAM):   end;
3539983   +         end;
MPRINT(EM_DIAGRAM):   end;
3539984   +      end;
MPRINT(EM_DIAGRAM):   end;
3539985   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539986   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3539987   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3539988   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539989   +         end;
MPRINT(EM_DIAGRAM):   end;
3539990   +      end;
MPRINT(EM_DIAGRAM):   end;
3539991   +   end;
MPRINT(EM_DIAGRAM):   end;
3539992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3539993   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3539994   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3539995   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3539996   +      end;
MPRINT(EM_DIAGRAM):   end;
3539997   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3539998   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3539999   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3540000   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3540001   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3540002   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3540003   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540004   +         end;
MPRINT(EM_DIAGRAM):   end;
3540005   +      end;
MPRINT(EM_DIAGRAM):   end;
3540006   +   end;
MPRINT(EM_DIAGRAM):   end;
3540007   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3540008   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3540009   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3540010   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3540011   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3540012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3540013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3540014   +   end;
MPRINT(EM_DIAGRAM):   end;
3540015   +end;
MPRINT(EM_DIAGRAM):   end;
3540016   +
3540017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540018   +*** Checking missing input Interval
3540019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3540020   +
3540021   +IF NMISS(
3540022   +   MntCard_Games ,
3540023   +   MntMagazines ,
3540024   +   NumCatalogPurchases ,
3540025   +   NumDealsPurchases ,
3540026   +   NumWebPurchases ,
3540027   +   RANGE_Frq ,
3540028   +   RANGE_Recency ,
3540029   +   RANGE_average_purchase ,
3540030   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3540031   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3540032   +
3540033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3540034   +END;
MPRINT(EM_DIAGRAM):   END;
3540035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540036   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3540037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540038   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540039   +   S_MntCard_Games  =    -2.33314274769512 +     6.67179657357056 *
3540040   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33314274769512 + 6.67179657357056 * MntCard_Games ;
3540041   +   S_MntMagazines  =    -0.83238173374504 +     17.3354990423092 *
3540042   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83238173374504 + 17.3354990423092 * MntMagazines ;
3540043   +   S_NumCatalogPurchases  =    -3.11784673319478 +     13.5128642370895 *
3540044   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11784673319478 + 13.5128642370895 * 
NumCatalogPurchases ;
3540045   +   S_NumDealsPurchases  =    -1.40423934719382 +     11.0682329216304 *
3540046   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40423934719382 + 11.0682329216304 * 
NumDealsPurchases ;
3540047   +   S_NumWebPurchases  =    -5.23177621286053 +     12.2542764025054 *
3540048   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23177621286053 + 12.2542764025054 * 
NumWebPurchases ;
3540049   +   S_RANGE_Frq  =    -1.37347987881122 +     4.24549002989316 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37347987881122 + 4.24549002989316 * RANGE_Frq ;
3540050   +   S_RANGE_Recency  =    -1.65922219428802 +     3.33060375764365 *
3540051   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65922219428802 + 3.33060375764365 * RANGE_Recency ;
3540052   +   S_RANGE_average_purchase  =    -1.04145396929876 +     5.18548087847999 *
3540053   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04145396929876 + 5.18548087847999 * 
RANGE_average_purchase ;
3540054   +   S_RANGE_campaign_acceptance
3540055   +          =    -0.48208691472615 +     5.76655197176545 *
3540056   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48208691472615 + 5.76655197176545 * 
RANGE_campaign_acceptance ;
3540057   +END;
MPRINT(EM_DIAGRAM):   END;
3540058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540059   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3540060   +   ELSE S_MntCard_Games  =    -2.33314274769512 +     6.67179657357056 *
3540061   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33314274769512 + 6.67179657357056 * 
MntCard_Games ;
3540062   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3540063   +   ELSE S_MntMagazines  =    -0.83238173374504 +     17.3354990423092 *
3540064   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83238173374504 + 17.3354990423092 * 
MntMagazines ;
3540065   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3540066   +   ELSE S_NumCatalogPurchases
3540067   +          =    -3.11784673319478 +     13.5128642370895 * NumCatalogPurchases
3540068   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11784673319478 + 13.5128642370895 * 
NumCatalogPurchases ;
3540069   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3540070   +   ELSE S_NumDealsPurchases  =    -1.40423934719382 +     11.0682329216304 *
3540071   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40423934719382 + 11.0682329216304 * 
NumDealsPurchases ;
3540072   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3540073   +   ELSE S_NumWebPurchases  =    -5.23177621286053 +     12.2542764025054 *
3540074   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23177621286053 + 12.2542764025054 * 
NumWebPurchases ;
3540075   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3540076   +   ELSE S_RANGE_Frq  =    -1.37347987881122 +     4.24549002989316 * RANGE_Frq
3540077   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37347987881122 + 4.24549002989316 * RANGE_Frq ;
3540078   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3540079   +   ELSE S_RANGE_Recency  =    -1.65922219428802 +     3.33060375764365 *
3540080   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65922219428802 + 3.33060375764365 * 
RANGE_Recency ;
3540081   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3540082   +   ELSE S_RANGE_average_purchase
3540083   +          =    -1.04145396929876 +     5.18548087847999 *
3540084   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04145396929876 + 5.18548087847999 * 
RANGE_average_purchase ;
3540085   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3540086   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3540087   +   ELSE S_RANGE_campaign_acceptance
3540088   +          =    -0.48208691472615 +     5.76655197176545 *
3540089   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48208691472615 + 5.76655197176545 
* RANGE_campaign_acceptance ;
3540090   +END;
MPRINT(EM_DIAGRAM):   END;
3540091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540092   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3540093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540095   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3540096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540098   +   H11  =    -0.71120716020402 * S_MntCard_Games  +     0.08212973241532 *
3540099   +        S_MntMagazines  +    -0.61875133748213 * S_NumCatalogPurchases
3540100   +          +    -0.49368369021357 * S_NumDealsPurchases
3540101   +          +    -0.79445125853009 * S_NumWebPurchases
3540102   +          +     -0.1360008231574 * S_RANGE_Frq  +     1.08230459978838 *
3540103   +        S_RANGE_Recency  +     0.28561173662094 * S_RANGE_average_purchase
3540104   +          +    -0.69577065024142 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.71120716020402 * S_MntCard_Games + 0.08212973241532 * 
S_MntMagazines + -0.61875133748213 * S_NumCatalogPurchases + -0.49368369021357 * 
S_NumDealsPurchases + -0.79445125853009 * S_NumWebPurchases + -0.1360008231574 * S_RANGE_Frq + 
1.08230459978838 * S_RANGE_Recency + 0.28561173662094 * S_RANGE_average_purchase + 
-0.69577065024142 * S_RANGE_campaign_acceptance ;
3540105   +   H12  =    -0.15258858083861 * S_MntCard_Games  +    -0.02650815981929 *
3540106   +        S_MntMagazines  +    -0.13144634282616 * S_NumCatalogPurchases
3540107   +          +    -0.19762420124392 * S_NumDealsPurchases
3540108   +          +      0.0725529578303 * S_NumWebPurchases
3540109   +          +    -0.10127790367879 * S_RANGE_Frq  +     0.36892292336497 *
3540110   +        S_RANGE_Recency  +    -0.17443592257851 * S_RANGE_average_purchase
3540111   +          +    -0.21119456915565 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.15258858083861 * S_MntCard_Games + -0.02650815981929 * 
S_MntMagazines + -0.13144634282616 * S_NumCatalogPurchases + -0.19762420124392 * 
S_NumDealsPurchases + 0.0725529578303 * S_NumWebPurchases + -0.10127790367879 * S_RANGE_Frq + 
0.36892292336497 * S_RANGE_Recency + -0.17443592257851 * S_RANGE_average_purchase + 
-0.21119456915565 * S_RANGE_campaign_acceptance ;
3540112   +   H11  = H11  +     0.12944400789456 * Marital_StatusDivorced
3540113   +          +    -0.01774553244681 * Marital_StatusMarried
3540114   +          +      0.3692457644085 * Marital_StatusSingle
3540115   +          +    -0.29318628359981 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.12944400789456 * Marital_StatusDivorced + 
-0.01774553244681 * Marital_StatusMarried + 0.3692457644085 * Marital_StatusSingle + 
-0.29318628359981 * Marital_StatusTogether ;
3540116   +   H12  = H12  +    -0.25900800099706 * Marital_StatusDivorced
3540117   +          +     0.20753922970799 * Marital_StatusMarried
3540118   +          +     -0.3205409886965 * Marital_StatusSingle
3540119   +          +     0.55731339717143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.25900800099706 * Marital_StatusDivorced + 
0.20753922970799 * Marital_StatusMarried + -0.3205409886965 * Marital_StatusSingle + 
0.55731339717143 * Marital_StatusTogether ;
3540120   +   H11  =     2.13550206994422 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.13550206994422 + H11 ;
3540121   +   H12  =     1.20731672701986 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.20731672701986 + H12 ;
3540122   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3540123   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3540124   +END;
MPRINT(EM_DIAGRAM):   END;
3540125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540126   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3540127   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3540128   +END;
MPRINT(EM_DIAGRAM):   END;
3540129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540130   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3540131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540132   +
3540133   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3540134   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3540135   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3540136   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3540137   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3540138   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3540139   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3540140   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3540141   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3540142   +end;
MPRINT(EM_DIAGRAM):   end;
3540143   +else do;
MPRINT(EM_DIAGRAM):   else do;
3540144   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3540145   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3540146   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3540147   +   end;
MPRINT(EM_DIAGRAM):   end;
3540148   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3540149   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3540150   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3540151   +   end;
MPRINT(EM_DIAGRAM):   end;
3540152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3540153   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3540154   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3540155   +   end;
MPRINT(EM_DIAGRAM):   end;
3540156   +end;
MPRINT(EM_DIAGRAM):   end;
3540157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540158   +   P_DepVar1  =    -4.50425251535332 * H11  +    -9.74243877847253 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.50425251535332 * H11 + -9.74243877847253 * H12 ;
3540159   +   P_DepVar1  =     6.06707524711654 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.06707524711654 + P_DepVar1 ;
3540160   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3540161   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3540162   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3540163   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3540164   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3540165   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3540166   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3540167   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3540168   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3540169   +END;
MPRINT(EM_DIAGRAM):   END;
3540170   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540171   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3540172   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3540173   +END;
MPRINT(EM_DIAGRAM):   END;
3540174   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3540175   +   P_DepVar1  =     0.13696747595052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13696747595052;
3540176   +   P_DepVar0  =     0.86303252404947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86303252404947;
3540177   +END;
MPRINT(EM_DIAGRAM):   END;
3540178   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3540179   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3540180   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3540181   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3540182   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3540183   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3540184   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3540185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540186   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3540187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540188   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3540189   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3540190   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3540191   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3540192   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3540193   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3540194   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3540195   +END;
MPRINT(EM_DIAGRAM):   END;
3540196   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3540197   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3540198   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3540199   +drop
3540200   +S_MntCard_Games
3540201   +S_MntMagazines
3540202   +S_NumCatalogPurchases
3540203   +S_NumDealsPurchases
3540204   +S_NumWebPurchases
3540205   +S_RANGE_Frq
3540206   +S_RANGE_Recency
3540207   +S_RANGE_average_purchase
3540208   +S_RANGE_campaign_acceptance
3540209   +H11
3540210   +H12
3540211   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3540212   +end;
MPRINT(EM_DIAGRAM):   end;
3540213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3540214   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3540215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3540216   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3540217   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3540218   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3540219   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3540220   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3540221   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3540222   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3540223   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3540224   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3540225   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3540226   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3540227   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3540228   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3540229   +LENGTH _WARN_ $4
3540230   +      F_DepVar  $ 12
3540231   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3540232   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3540233   +
3540234   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3540235   +
3540236   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3540237   +
3540238   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3540239   +
3540240   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3540241   +
3540242   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3540243   +
3540244   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3540245   +
3540246   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3540247   +
3540248   +      label S_RANGE_campaign_acceptance =
3540249   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: 
RANGE_campaign_acceptance' ;
3540250   +
3540251   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3540252   +
3540253   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3540254   +
3540255   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3540256   +
3540257   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3540258   +
3540259   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3540260   +
3540261   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3540262   +
3540263   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3540264   +
3540265   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3540266   +
3540267   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3540268   +
3540269   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3540270   +
3540271   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3540272   +
3540273   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3540274   +
3540275   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3540276   +
3540277   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3540278   +
3540279   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3540280   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3540281   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3540282   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3540283   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3540284   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3540285   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3540286   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3540287   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3540288   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3540289   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3540290   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3540291   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3540292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3540293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3540294   +end;
MPRINT(EM_DIAGRAM):   end;
3540295   +else do;
MPRINT(EM_DIAGRAM):   else do;
3540296   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3540297   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3540298   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3540299   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3540300   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3540301   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3540302   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3540303   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3540304   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540305   +         end;
MPRINT(EM_DIAGRAM):   end;
3540306   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3540307   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3540308   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3540309   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540310   +            end;
MPRINT(EM_DIAGRAM):   end;
3540311   +         end;
MPRINT(EM_DIAGRAM):   end;
3540312   +      end;
MPRINT(EM_DIAGRAM):   end;
3540313   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3540314   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3540315   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3540316   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540317   +         end;
MPRINT(EM_DIAGRAM):   end;
3540318   +      end;
MPRINT(EM_DIAGRAM):   end;
3540319   +   end;
MPRINT(EM_DIAGRAM):   end;
3540320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3540321   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3540322   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3540323   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540324   +      end;
MPRINT(EM_DIAGRAM):   end;
3540325   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3540326   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3540327   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3540328   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3540329   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3540330   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3540331   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3540332   +         end;
MPRINT(EM_DIAGRAM):   end;
3540333   +      end;
MPRINT(EM_DIAGRAM):   end;
3540334   +   end;
MPRINT(EM_DIAGRAM):   end;
3540335   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3540336   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3540337   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3540338   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3540339   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3540340   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3540341   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3540342   +   end;
MPRINT(EM_DIAGRAM):   end;
3540343   +end;
MPRINT(EM_DIAGRAM):   end;
3540344   +
3540345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540346   +*** Checking missing input Interval
3540347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3540348   +
3540349   +IF NMISS(
3540350   +   MntCard_Games ,
3540351   +   MntMagazines ,
3540352   +   NumCatalogPurchases ,
3540353   +   NumDealsPurchases ,
3540354   +   NumWebPurchases ,
3540355   +   RANGE_Frq ,
3540356   +   RANGE_Recency ,
3540357   +   RANGE_average_purchase ,
3540358   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , 
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , 
RANGE_campaign_acceptance ) THEN DO;
3540359   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3540360   +
3540361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3540362   +END;
MPRINT(EM_DIAGRAM):   END;
3540363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540364   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3540365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540367   +   S_MntCard_Games  =     -2.3096877138354 +     6.57755840195221 *
3540368   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3096877138354 + 6.57755840195221 * MntCard_Games ;
3540369   +   S_MntMagazines  =     -0.8369737491432 +     17.2830130412148 *
3540370   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8369737491432 + 17.2830130412148 * MntMagazines ;
3540371   +   S_NumCatalogPurchases  =    -3.09985723708487 +     13.3970675683324 *
3540372   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09985723708487 + 13.3970675683324 * 
NumCatalogPurchases ;
3540373   +   S_NumDealsPurchases  =    -1.41382231764842 +     11.3441931972062 *
3540374   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41382231764842 + 11.3441931972062 * 
NumDealsPurchases ;
3540375   +   S_NumWebPurchases  =    -5.22445934389058 +     12.2515403142681 *
3540376   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22445934389058 + 12.2515403142681 * 
NumWebPurchases ;
3540377   +   S_RANGE_Frq  =    -1.36254258858387 +     4.18222572866181 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36254258858387 + 4.18222572866181 * RANGE_Frq ;
3540378   +   S_RANGE_Recency  =    -1.65033688267216 +     3.35772919633621 *
3540379   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65033688267216 + 3.35772919633621 * RANGE_Recency ;
3540380   +   S_RANGE_average_purchase  =    -1.03791953522712 +       5.142838510113 *
3540381   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03791953522712 + 5.142838510113 * 
RANGE_average_purchase ;
3540382   +   S_RANGE_campaign_acceptance
3540383   +          =    -0.47367458512777 +     5.73133126824963 *
3540384   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47367458512777 + 5.73133126824963 * 
RANGE_campaign_acceptance ;
3540385   +END;
MPRINT(EM_DIAGRAM):   END;
3540386   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540387   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3540388   +   ELSE S_MntCard_Games  =     -2.3096877138354 +     6.57755840195221 *
3540389   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3096877138354 + 6.57755840195221 * 
MntCard_Games ;
3540390   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3540391   +   ELSE S_MntMagazines  =     -0.8369737491432 +     17.2830130412148 *
3540392   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8369737491432 + 17.2830130412148 * MntMagazines 
;
3540393   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3540394   +   ELSE S_NumCatalogPurchases
3540395   +          =    -3.09985723708487 +     13.3970675683324 * NumCatalogPurchases
3540396   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09985723708487 + 13.3970675683324 * 
NumCatalogPurchases ;
3540397   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3540398   +   ELSE S_NumDealsPurchases  =    -1.41382231764842 +     11.3441931972062 *
3540399   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41382231764842 + 11.3441931972062 * 
NumDealsPurchases ;
3540400   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3540401   +   ELSE S_NumWebPurchases  =    -5.22445934389058 +     12.2515403142681 *
3540402   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22445934389058 + 12.2515403142681 * 
NumWebPurchases ;
3540403   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3540404   +   ELSE S_RANGE_Frq  =    -1.36254258858387 +     4.18222572866181 * RANGE_Frq
3540405   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36254258858387 + 4.18222572866181 * RANGE_Frq ;
3540406   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3540407   +   ELSE S_RANGE_Recency  =    -1.65033688267216 +     3.35772919633621 *
3540408   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65033688267216 + 3.35772919633621 * 
RANGE_Recency ;
3540409   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3540410   +   ELSE S_RANGE_average_purchase
3540411   +          =    -1.03791953522712 +       5.142838510113 *
3540412   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03791953522712 + 5.142838510113 * 
RANGE_average_purchase ;
3540413   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3540414   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance 
= . ;
3540415   +   ELSE S_RANGE_campaign_acceptance
3540416   +          =    -0.47367458512777 +     5.73133126824963 *
3540417   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47367458512777 + 5.73133126824963 
* RANGE_campaign_acceptance ;
3540418   +END;
MPRINT(EM_DIAGRAM):   END;
3540419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540420   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3540421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540423   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3540424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540425   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540426   +   H11  =     0.28691049469821 * S_MntCard_Games  +    -0.01257933116877 *
3540427   +        S_MntMagazines  +     0.24982243065732 * S_NumCatalogPurchases
3540428   +          +     0.19081533003078 * S_NumDealsPurchases
3540429   +          +     0.16004063752763 * S_NumWebPurchases
3540430   +          +     0.11364589575256 * S_RANGE_Frq  +    -0.47022001049759 *
3540431   +        S_RANGE_Recency  +     0.08136041426291 * S_RANGE_average_purchase
3540432   +          +     0.29860124814388 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.28691049469821 * S_MntCard_Games + -0.01257933116877 * 
S_MntMagazines + 0.24982243065732 * S_NumCatalogPurchases + 0.19081533003078 * 
S_NumDealsPurchases + 0.16004063752763 * S_NumWebPurchases + 0.11364589575256 * S_RANGE_Frq + 
-0.47022001049759 * S_RANGE_Recency + 0.08136041426291 * S_RANGE_average_purchase + 
0.29860124814388 * S_RANGE_campaign_acceptance ;
3540433   +   H12  =    -0.33233976235401 * S_MntCard_Games  +    -0.33053172330402 *
3540434   +        S_MntMagazines  +     0.62737052299262 * S_NumCatalogPurchases
3540435   +          +    -1.71578240297147 * S_NumDealsPurchases
3540436   +          +      1.8640336793256 * S_NumWebPurchases
3540437   +          +     2.93724165829982 * S_RANGE_Frq  +      1.0882176886732 *
3540438   +        S_RANGE_Recency  +      0.8845247175819 * S_RANGE_average_purchase
3540439   +          +    -0.23819199135842 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.33233976235401 * S_MntCard_Games + -0.33053172330402 * 
S_MntMagazines + 0.62737052299262 * S_NumCatalogPurchases + -1.71578240297147 * 
S_NumDealsPurchases + 1.8640336793256 * S_NumWebPurchases + 2.93724165829982 * S_RANGE_Frq + 
1.0882176886732 * S_RANGE_Recency + 0.8845247175819 * S_RANGE_average_purchase + 
-0.23819199135842 * S_RANGE_campaign_acceptance ;
3540440   +   H11  = H11  +    -0.04059364239357 * Marital_StatusDivorced
3540441   +          +      -0.110466262538 * Marital_StatusMarried
3540442   +          +    -0.05576834620038 * Marital_StatusSingle
3540443   +          +    -0.12080784518879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04059364239357 * Marital_StatusDivorced + -0.110466262538 
* Marital_StatusMarried + -0.05576834620038 * Marital_StatusSingle + -0.12080784518879 * 
Marital_StatusTogether ;
3540444   +   H12  = H12  +    -5.13102553665281 * Marital_StatusDivorced
3540445   +          +     1.82506146395071 * Marital_StatusMarried
3540446   +          +    -8.15247926755136 * Marital_StatusSingle
3540447   +          +     4.25770740100075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -5.13102553665281 * Marital_StatusDivorced + 
1.82506146395071 * Marital_StatusMarried + -8.15247926755136 * Marital_StatusSingle + 
4.25770740100075 * Marital_StatusTogether ;
3540448   +   H11  =    -0.75763695117585 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.75763695117585 + H11 ;
3540449   +   H12  =    -2.77627505623995 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.77627505623995 + H12 ;
3540450   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3540451   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3540452   +END;
MPRINT(EM_DIAGRAM):   END;
3540453   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540454   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3540455   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3540456   +END;
MPRINT(EM_DIAGRAM):   END;
3540457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540458   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3540459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540460   +
3540461   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3540462   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3540463   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3540464   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3540465   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3540466   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3540467   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3540468   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3540469   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3540470   +end;
MPRINT(EM_DIAGRAM):   end;
3540471   +else do;
MPRINT(EM_DIAGRAM):   else do;
3540472   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3540473   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3540474   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3540475   +   end;
MPRINT(EM_DIAGRAM):   end;
3540476   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3540477   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3540478   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3540479   +   end;
MPRINT(EM_DIAGRAM):   end;
3540480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3540481   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3540482   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3540483   +   end;
MPRINT(EM_DIAGRAM):   end;
3540484   +end;
MPRINT(EM_DIAGRAM):   end;
3540485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3540486   +   P_DepVar1  =     10.6266873577129 * H11  +    -2.40465010559258 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 10.6266873577129 * H11 + -2.40465010559258 * H12 ;
3540487   +   P_DepVar1  =    -0.68345592936869 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.68345592936869 + P_DepVar1 ;
3540488   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3540489   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3540490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3540491   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3540492   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3540493   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3540494   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3540495   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3540496   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3540497   +END;
MPRINT(EM_DIAGRAM):   END;
3540498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3540499   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3540500   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3540501   +END;
MPRINT(EM_DIAGRAM):   END;
3540502   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3540503   +   P_DepVar1  =     0.14010989010989;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.14010989010989;
3540504   +   P_DepVar0  =     0.85989010989011;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.85989010989011;
3540505   +END;
MPRINT(EM_DIAGRAM):   END;
3540506   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3540507   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3540508   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3540509   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3540510   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3540511   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3540512   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3540513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540514   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3540515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3540516   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3540517   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3540518   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3540519   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3540520   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3540521   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3540522   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3540523   +END;
MPRINT(EM_DIAGRAM):   END;
3540524   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3540525   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3540526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3540527   +drop
3540528   +S_MntCard_Games
3540529   +S_MntMagazines
3540530   +S_NumCatalogPurchases
3540531   +S_NumDealsPurchases
3540532   +S_NumWebPurchases
3540533   +S_RANGE_Frq
3540534   +S_RANGE_Recency
3540535   +S_RANGE_average_purchase
3540536   +S_RANGE_campaign_acceptance
3540537   +H11
3540538   +H12
3540539   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases 
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase 
S_RANGE_campaign_acceptance H11 H12 ;
3540540   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3540541    run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP9_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3540542    quit;
3540543    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Neural_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3540567    data EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMOUTFIT;
3540568    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3540569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.NEURAL_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3540570    data EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMOUTFIT;
3540571    set EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMOUTFIT;
3540572    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3540573    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3540573  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3540574    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3540575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3540576    proc sort data=EMWS1.Neural_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_EMREPORTFIT nothreads;
3540577    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3540578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540579    %let _EMwarndup = 0;
3540580    %let _EMtargetdup =;
3540581    %let _EMASEtargetdup =;
3540582    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3540583    set EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMOUTFIT;
3540584    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3540585    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3540586    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3540587    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3540588    end;
MPRINT(EM_DIAGRAM):   end;
3540589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540590    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3540591    * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
3540592    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M2JB6YX_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JB6YX_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JB6YX_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JB6YX_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JB6YX_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0IW23VY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02MG_NF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IW23VY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3540945    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3540946    set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
3540947    where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3540948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
The SAS System

      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3540949    data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
3540950    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3540951    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3540952    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3540956    run;
3540957    data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
3540958    set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
3540959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540960    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
3540961    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3540962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3540963    proc sort data = EMWS1.Grp9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3540964    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3540965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3540966    proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3540967    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3540968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540969    data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
3540970    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3540971    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3540972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3540973    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3540974    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3540975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3540976    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      
3540977    proc sort data=EMWS1.Grp9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp9_CMeta_TRAIN out=WORK.SUBSETINMETA;
3540978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3540979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set EMWS1.GRP9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

3540980    proc sort data=EMWS1.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME 
REPORT);
3540981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3540982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3540983    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3540984    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3540985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3540986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540987    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3540988    set EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_CMeta_TRAIN;
3540989    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3540989  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 
'ASSESS', 'COST');
3540990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.NEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3540991    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3540992    set EMWS1.Neural_TRAIN(keep=
3540993    F_DepVar
3540994    I_DepVar
3540995    P_DepVar0
3540996    P_DepVar1
3540997    R_DepVar0
3540998    R_DepVar1
3540999    U_DepVar
3541000    _WARN_
3541001    DepVar
3541002    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3541003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.GRP9_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.NEURAL_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural_10W7VID nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural_10W7VID;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural_10W7VID(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural_10W7VID;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural_10W7VID;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ 
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN 
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = 
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing 
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS 
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC 
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB 
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST 
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE 
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS 
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - 
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.0549268E-7 OVLMAX 0.9999999924 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * 
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / 
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( 
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * 
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - 
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - 
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - 
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - 
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - 
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - 
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - 
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - 
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - 
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - 
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - 
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - 
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - 
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - 
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - 
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - 
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - 
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - 
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - 
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) 
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number 
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3545290    %let grouptarget=0;
3545291    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3545292    set EMWS1.Grp9_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_EMLOOPINFO;
3545293    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3545294    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3545295    stop;
MPRINT(EM_DIAGRAM):   stop;
3545296    end;
MPRINT(EM_DIAGRAM):   end;
3545297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP9_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3545298    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3545299    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545300    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545301    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545301  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545302    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545303    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545304    set EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMOUTFIT;
3545305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545306    data EMWS1.Neural_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMOUTFIT_LOOP;
3545307    set EMWS1.Neural_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMOUTFIT_LOOP work.EMOUTFIT;
3545308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.NEURAL_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545309    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3545310    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545311    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545312    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545312  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545313    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545314    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545315    set EMWS1.Neural_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMREPORTFIT;
3545316    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545317    data EMWS1.Neural_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMREPORTFIT_LOOP;
3545318    set EMWS1.Neural_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMREPORTFIT_LOOP work.EMREPORTFIT;
3545319    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 210 observations read from the data set EMWS1.NEURAL_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL_EMREPORTFIT_LOOP has 219 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545320    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3545321    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545322    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545323    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545323  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545324    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545325    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545326    set EMWS1.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMRANK;
3545327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545328    data EMWS1.Neural_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMRANK_LOOP;
3545329    set EMWS1.Neural_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMRANK_LOOP work.EMRANK;
3545330    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.NEURAL_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.NEURAL_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3545331    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3545332    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545333    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545334    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545334  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545335    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545336    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545337    set EMWS1.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMSCOREDIST;
3545338    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545339    data EMWS1.Neural_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMSCOREDIST_LOOP;
3545340    set EMWS1.Neural_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMSCOREDIST_LOOP work.EMSCOREDIST;
3545341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.NEURAL_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.NEURAL_EMSCOREDIST_LOOP has 220 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545342    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3545343    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545344    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545345    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545345  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545346    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545347    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545348    set EMWS1.Neural_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMCLASSIFICATION;
3545349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545350    data EMWS1.Neural_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMCLASSIFICATION_LOOP;
3545351    set EMWS1.Neural_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3545352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545353    proc sort data=EMWS1.Neural_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_EMCLASSIFICATION_LOOP out=_temp;
3545354    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545355    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3545356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545357    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3545357  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount 
totalPercent);
3545358    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3545359    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3545360    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545361    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3545362    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3545363    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3545364    end;
MPRINT(EM_DIAGRAM):   end;
3545365    else do;
MPRINT(EM_DIAGRAM):   else do;
3545366    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3545367    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3545368    end;
MPRINT(EM_DIAGRAM):   end;
3545369    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3545370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545371    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3545371  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount 
eventPercent);
3545372    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3545373    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3545374    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545375    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3545376    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3545377    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3545378    end;
MPRINT(EM_DIAGRAM):   end;
3545379    else do;
MPRINT(EM_DIAGRAM):   else do;
3545380    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3545381    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3545382    end;
MPRINT(EM_DIAGRAM):   end;
3545383    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3545384    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545385    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3545385  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount 
neventPercent);
3545386    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3545387    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3545388    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545389    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3545390    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3545391    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3545392    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3545393    end;
MPRINT(EM_DIAGRAM):   end;
3545394    else do;
MPRINT(EM_DIAGRAM):   else do;
3545395    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3545396    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3545397    end;
MPRINT(EM_DIAGRAM):   end;
3545398    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3545399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545400    data EMWS1.Neural_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMMISC_LOOP;
3545401    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3545402    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545403    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3545403  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3545403  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3545404       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3545404  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3545404  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3545405       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3545405  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3545406    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3545407    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3545408    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3545409    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3545410    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.NEURAL_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3545411    proc sort data=EMWS1.Neural_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_EMMISC_LOOP;
3545412    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3545413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL_EMMISC_LOOP.
NOTE: The data set EMWS1.NEURAL_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3545414    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3545415    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3545416    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3545417    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3545417  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3545418    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3545419    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3545420    set EMWS1.Neural_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMEVENTREPORT;
3545421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545422    data EMWS1.Neural_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMEVENTREPORT_LOOP;
3545423    set EMWS1.Neural_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3545424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3545425    %let _cn = %sysfunc(getoption(CENTER));
3545426    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3545427    proc print data=EMWS1.Neural_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural_EMREPORTFIT_LOOP noobs label;
3545428    var STAT LABEL TRAIN
3545429    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3545430    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3545431    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3545432    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3545433    run;

NOTE: There were 219 observations read from the data set EMWS1.NEURAL_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2341.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545434    title10;
MPRINT(EM_DIAGRAM):   title10;
3545435    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3545436    proc sort data=EMWS1.Neural_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_EMCLASSIFICATION_LOOP nothreads;
3545437    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3545438    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3545439    %let _cn = %sysfunc(getoption(CENTER));
3545440    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3545441    proc print data=EMWS1.Neural_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural_EMCLASSIFICATION_LOOP noobs label;
3545442    var from into pct_row pct_col count percent
3545443    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3545444    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3545445    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3545446    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3545447    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3545448    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3545449    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3545450    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3545451    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3545452    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3545453    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3545454    run;

NOTE: There were 44 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2342.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3545455    title9;
MPRINT(EM_DIAGRAM):   title9;
3545456    title10;
MPRINT(EM_DIAGRAM):   title10;
3545457    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3545458    %let _cn = %sysfunc(getoption(CENTER));
3545459    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3545460    data EMWS1.Neural_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMEVENTREPORT_LOOP;
3545461    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3545461  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3545462    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3545462  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3545462  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3545462  ! FALSEEVENT
3545463    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3545463  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3545463  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3545464       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3545465    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3545466    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3545467    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3545468    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3545469    set EMWS1.Neural_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMEVENTREPORT_LOOP;
3545470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.NEURAL_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3545471    proc print data=EMWS1.Neural_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural_EMEVENTREPORT_LOOP noobs label;
3545472    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3545473    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3545474    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3545475    run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2343.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3545476    title10;
MPRINT(EM_DIAGRAM):   title10;
3545477    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3545478    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3545479    modify Neural_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3545480    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3545481    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3545481  ! ;
MPRINT(EM_DIAGRAM):   run;
3545482    run;

NOTE: MODIFY was successful for EMWS1.NEURAL_EMRANK_LOOP.DATA.
3545483    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

3545484    %let _cn = %sysfunc(getoption(CENTER));
3545485    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3545486    proc print data=EMWS1.Neural_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural_EMRANK_LOOP label noobs;
3545487    var
3545488    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3545489    by
3545490    notsorted DATAROLE
3545491    notsorted _WHERE_
3545492    notsorted TARGET
3545493    notsorted TARGETLABEL
3545494    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3545495    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3545496    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3545497    run;

NOTE: There were 220 observations read from the data set EMWS1.NEURAL_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2344.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545498    title10;
MPRINT(EM_DIAGRAM):   title10;
3545499    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3545500    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3545501    modify Neural_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3545502    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3545502  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3545503    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3545503  ! ;
MPRINT(EM_DIAGRAM):   run;
3545504    run;

NOTE: MODIFY was successful for EMWS1.NEURAL_EMSCOREDIST_LOOP.DATA.
3545505    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3545506    %let _cn = %sysfunc(getoption(CENTER));
3545507    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3545508    proc print data=EMWS1.Neural_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural_EMSCOREDIST_LOOP label noobs;
3545509    var
3545510    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3545511    by
3545512    notsorted DATAROLE
3545513    notsorted _WHERE_
3545514    notsorted TARGET
3545515    notsorted TARGETLABEL
3545516    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3545517    where TARGET in(
3545518    "DepVar"
3545519    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3545520    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3545521    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3545522    run;

NOTE: There were 220 observations read from the data set EMWS1.NEURAL_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2345.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3545523    title10;
MPRINT(EM_DIAGRAM):   title10;
3545524    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3545525    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:21 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:21 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ITERATIONPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_PLOTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="WEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_WEIGHTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="HISTWEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMESTIMATE_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
