*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:06:00 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:50 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:05:50 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3TTZVEQ "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3TTZVEQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:50 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:50 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3506659    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506660    set EMWS1.Grp12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_EMINFO;
3506661    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3506662    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3506663    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3506664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506665    data WORK.M0GH9_K7;
MPRINT(EM_DIAGRAM):    data WORK.M0GH9_K7;
3506666    set WORK.M0GH9_K7;
MPRINT(EM_DIAGRAM):   set WORK.M0GH9_K7;
3506667    where upcase(NAME) in(
3506668    "DEPVAR"
3506669    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3506670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0GH9_K7.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M0GH9_K7 has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3506671    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Grp12_TRAIN EMWS1.Grp12_TRAIN
EMWS1.Grp12_TRAIN EMWS1.Grp12_TRAIN EMWS1 Grp12_TRAIN
EMWS1.Grp12_TRAIN EMWS1.Grp12_TRAIN
EMWS1.Grp12_TRAIN EMWS1.Grp12_TRAIN EMWS1 Grp12_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp12_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural4_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_DepVar_DD
out=EMWS1.Neural4_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3506718    data WORK.Neural4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3506719    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3506720    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3506720  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3506720  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3506721       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3506721  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3506721  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3506722    set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL4_DEPVAR_DM( where=(_TYPE_="TARGET"));
3506723    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3506724    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3506725    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3506726    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3506727    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3506728    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3506729    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3506730    end;
MPRINT(EM_DIAGRAM):   end;
3506731    output;
MPRINT(EM_DIAGRAM):   output;
3506732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL4_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3506733    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3506734    proc print data=WORK.Neural4_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural4_EVENT noobs label;
3506735    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3506736    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3506737    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3506738    run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL4_EVENT.
NOTE: The PROCEDURE PRINT printed page 2322.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506739    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3506740    proc print data = EMWS1.Neural4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural4_DepVar_DM noobs label;
3506741    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3506742    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3506743    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3506743  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3506743  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3506744    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3506745    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3506746    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2323.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506747    title10;
MPRINT(EM_DIAGRAM):   title10;
3506748    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506749    set EMWS1.Grp12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_EMINFO;
3506750    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3506751    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3506752    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3506753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506754    filename emflow "C:\Users\misil\Desktop\DM
3506754  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
3506755    filename empub "C:\Users\misil\Desktop\DM
3506755  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas";
3506756    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506757    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3506758    set EMWS1.Grp12_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_GROUPINFO end=eof;
3506759    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3506760    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3506761    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3506762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP12_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506763    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506764    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506765    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506766    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3506767    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506769    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_1.source";
3506770    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506771    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506772    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_1.source";
3506773    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506774    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506775    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506776    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506777    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15954,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506779    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506780    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506781    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506782    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3506783    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506785    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_1.source";
3506786    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506787    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506788    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_1.source";
3506789    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506790    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506791    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506792    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506793    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14989,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506795    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506796    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506797    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506798    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3506799    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=15960,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506801    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_2.source";
3506802    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=16114,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506803    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506804    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_2.source";
3506805    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=16151,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506806    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506807    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506808    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506809    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31914,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506811    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506812    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506813    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506814    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3506815    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14995,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506817    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_2.source";
3506818    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=15150,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506819    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506820    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_2.source";
3506821    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=15187,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506822    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506823    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506824    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506825    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29984,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506827    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506828    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506829    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506830    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3506831    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31920,
      Last Modified=02 June 2018 17:05:51 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3506833    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_3.source";
3506834    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32074,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506835    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506836    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_3.source";
3506837    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32111,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506838    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506839    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506840    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506841    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47874,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506843    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506844    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506845    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506846    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3506847    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29990,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506849    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_3.source";
3506850    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=30145,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506851    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506852    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_3.source";
3506853    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=30182,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506854    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506855    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506856    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506857    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44979,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506859    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506860    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506861    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506862    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3506863    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506864    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47880,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506865    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_4.source";
3506866    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=48034,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506867    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506868    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_4.source";
3506869    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=48071,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506870    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506871    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506872    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506873    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63834,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506875    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506876    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506877    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506878    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3506879    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506880    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44985,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506881    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_4.source";
3506882    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=45140,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506883    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506884    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_4.source";
3506885    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=45177,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506886    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506887    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506888    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506889    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59974,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506891    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506892    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506893    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506894    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3506895    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63840,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3506897    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_5.source";
3506898    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63994,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506899    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506900    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_5.source";
3506901    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=64031,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506902    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506903    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506904    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506905    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=79794,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506907    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506908    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506909    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506910    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3506911    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59980,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506913    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_5.source";
3506914    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=60135,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506915    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506916    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_5.source";
3506917    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=60172,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506918    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506919    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506920    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506921    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506922    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74969,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506923    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506924    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506925    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506926    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3506927    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=79800,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3506929    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_6.source";
3506930    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=79954,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506931    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506932    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_6.source";
3506933    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=79991,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506934    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506935    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506936    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506937    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=95754,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506939    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506940    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506941    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506942    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3506943    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74975,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506945    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_6.source";
3506946    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75130,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506947    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506948    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_6.source";
3506949    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75167,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506950    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506951    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506952    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506953    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=89964,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506955    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506956    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506957    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506958    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3506959    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=95760,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506961    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_7.source";
3506962    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=95914,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506963    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506964    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_7.source";
3506965    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=95951,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506966    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506967    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506968    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506969    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=111714,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506971    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506972    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506973    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506974    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3506975    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=89970,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3506977    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_7.source";
3506978    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=90125,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506979    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506980    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_7.source";
3506981    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=90162,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506982    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506983    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506984    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3506985    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3506986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=104959,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506987    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3506988    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3506989    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506990    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3506991    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3506992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=111720,
      Last Modified=02 June 2018 17:05:52 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3506993    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_8.source";
3506994    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=111874,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506995    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506996    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_8.source";
3506997    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=111911,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3506998    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3506999    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507000    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3507001    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=127674,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3507003    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507004    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507005    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507006    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3507007    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=104965,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507009    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_8.source";
3507010    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=105120,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507011    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507012    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_8.source";
3507013    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=105157,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507014    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507015    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507016    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507017    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=119954,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507019    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507020    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3507021    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507022    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3507023    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=127680,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507025    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_9.source";
3507026    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=127834,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507027    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507028    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_9.source";
3507029    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=127871,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507030    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507031    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507032    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3507033    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=143634,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507035    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507036    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507037    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507038    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3507039    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=119960,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507041    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_9.source";
3507042    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=120115,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507043    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507044    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_9.source";
3507045    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=120152,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507046    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507047    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507048    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507049    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=134949,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507051    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507052    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3507053    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507054    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3507055    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=143640,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3507057    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_10.source";
3507058    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=143795,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507059    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507060    filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMFLOWCODE_10.source";
3507061    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=143834,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 427 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507062    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507063    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507064    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3507065    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=159597,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3507067    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507068    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507069    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507070    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3507071    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3507072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=134955,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3507073    filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp12_LOOP.EMPUBLISHCODE_10.source";
3507074    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=135111,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507075    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507076    filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural4_LOOP.EMPUBLISHCODE_10.source";
3507077    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=135150,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 388 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3507078    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3507079    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3507080    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3507081    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3507082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=149947,
      Last Modified=02 June 2018 17:05:53 o'clock,
      Create Time=22 May 2018 22:35:51 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3507083    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3507084    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP12_EMLOOPINFO.
NOTE: The data set EMWS1.NEURAL4_EMLOOPINFO has 10 observations and 3 variables.
3507085    proc print data=EMWS1.Neural4_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Neural4_EMLOOPINFO noobs label;
3507086    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3507087    run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL4_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2324.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3507088    title9;
MPRINT(EM_DIAGRAM):   title9;
3507089    filename emflow "C:\Users\misil\Desktop\DM
3507089  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507090    *------------------------------------------------------------*;
3507091    * Neural4: Scoring DATA data;
3507092    *------------------------------------------------------------*;
3507093    data EMWS1.Neural4_TRAIN
3507094    / view=EMWS1.Neural4_TRAIN
3507095    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_TRAIN / view=EMWS1.Neural4_TRAIN ;
3507096    set EMWS1.Grp12_TRAIN
3507097    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_TRAIN ;
3507098    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMFLOWSCORE.sas.
3507099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507100   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3507101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507102   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3507103   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3507104   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507105   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3507106   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507107   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3507108   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3507109   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3507110   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3507111   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3507112   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3507113   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3507114   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3507115   +LENGTH _WARN_ $4
3507116   +      F_DepVar  $ 12
3507117   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3507118   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3507119   +
3507120   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3507121   +
3507122   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3507123   +
3507124   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3507125   +
3507126   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3507127   +
3507128   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3507129   +
3507130   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3507131   +
3507132   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3507133   +
3507134   +      label S_RANGE_campaign_acceptance =
3507135   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3507136   +
3507137   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3507138   +
3507139   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3507140   +
3507141   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3507142   +
3507143   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3507144   +
3507145   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3507146   +
3507147   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3507148   +
3507149   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3507150   +
3507151   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3507152   +
3507153   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3507154   +
3507155   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3507156   +
3507157   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3507158   +
3507159   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3507160   +
3507161   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3507162   +
3507163   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3507164   +
3507165   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3507166   +
3507167   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3507168   +
3507169   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3507170   +
3507171   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3507172   +
3507173   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3507174   +
3507175   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3507176   +
3507177   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3507178   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3507179   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3507180   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3507181   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3507182   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3507183   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3507184   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3507185   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3507186   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3507187   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3507188   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3507189   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3507190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3507191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507192   +end;
MPRINT(EM_DIAGRAM):   end;
3507193   +else do;
MPRINT(EM_DIAGRAM):   else do;
3507194   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3507195   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3507196   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3507197   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3507198   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3507199   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3507200   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3507201   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3507202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507203   +         end;
MPRINT(EM_DIAGRAM):   end;
3507204   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3507205   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3507206   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3507207   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507208   +            end;
MPRINT(EM_DIAGRAM):   end;
3507209   +         end;
MPRINT(EM_DIAGRAM):   end;
3507210   +      end;
MPRINT(EM_DIAGRAM):   end;
3507211   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3507212   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3507213   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3507214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507215   +         end;
MPRINT(EM_DIAGRAM):   end;
3507216   +      end;
MPRINT(EM_DIAGRAM):   end;
3507217   +   end;
MPRINT(EM_DIAGRAM):   end;
3507218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3507219   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3507220   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3507221   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507222   +      end;
MPRINT(EM_DIAGRAM):   end;
3507223   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3507224   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3507225   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3507226   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3507227   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3507228   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3507229   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507230   +         end;
MPRINT(EM_DIAGRAM):   end;
3507231   +      end;
MPRINT(EM_DIAGRAM):   end;
3507232   +   end;
MPRINT(EM_DIAGRAM):   end;
3507233   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3507234   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3507235   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3507236   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3507237   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3507238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3507239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507240   +   end;
MPRINT(EM_DIAGRAM):   end;
3507241   +end;
MPRINT(EM_DIAGRAM):   end;
3507242   +
3507243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507244   +*** Checking missing input Interval
3507245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3507246   +
3507247   +IF NMISS(
3507248   +   MntCard_Games ,
3507249   +   MntMagazines ,
3507250   +   NumCatalogPurchases ,
3507251   +   NumDealsPurchases ,
3507252   +   NumWebPurchases ,
3507253   +   RANGE_Frq ,
3507254   +   RANGE_Recency ,
3507255   +   RANGE_average_purchase ,
3507256   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3507257   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3507258   +
3507259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507260   +END;
MPRINT(EM_DIAGRAM):   END;
3507261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507262   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3507263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507264   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507265   +   S_MntCard_Games  =    -2.32158995038862 +     6.64121458421225 *
3507266   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32158995038862 + 6.64121458421225 * MntCard_Games ;
3507267   +   S_MntMagazines  =    -0.83537353117501 +     17.3108808931593 *
3507268   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83537353117501 + 17.3108808931593 * MntMagazines ;
3507269   +   S_NumCatalogPurchases  =    -3.12357871086055 +     13.5202672669706 *
3507270   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12357871086055 + 13.5202672669706 *
NumCatalogPurchases ;
3507271   +   S_NumDealsPurchases  =    -1.41780479317678 +     11.2440893303082 *
3507272   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41780479317678 + 11.2440893303082 *
NumDealsPurchases ;
3507273   +   S_NumWebPurchases  =    -5.18358312919826 +     12.1697437005332 *
3507274   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.18358312919826 + 12.1697437005332 *
NumWebPurchases ;
3507275   +   S_RANGE_Frq  =    -1.36749907896913 +     4.22287702686988 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36749907896913 + 4.22287702686988 * RANGE_Frq ;
3507276   +   S_RANGE_Recency  =    -1.66587101163314 +     3.35148857096611 *
3507277   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66587101163314 + 3.35148857096611 * RANGE_Recency ;
3507278   +   S_RANGE_average_purchase  =    -1.04341611930738 +      5.1645310509114 *
3507279   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04341611930738 + 5.1645310509114 *
RANGE_average_purchase ;
3507280   +   S_RANGE_campaign_acceptance
3507281   +          =    -0.47463154918021 +     5.74512803760441 *
3507282   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47463154918021 + 5.74512803760441 *
RANGE_campaign_acceptance ;
3507283   +END;
MPRINT(EM_DIAGRAM):   END;
3507284   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507285   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3507286   +   ELSE S_MntCard_Games  =    -2.32158995038862 +     6.64121458421225 *
3507287   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32158995038862 + 6.64121458421225 *
MntCard_Games ;
3507288   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3507289   +   ELSE S_MntMagazines  =    -0.83537353117501 +     17.3108808931593 *
3507290   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83537353117501 + 17.3108808931593 *
MntMagazines ;
3507291   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3507292   +   ELSE S_NumCatalogPurchases
3507293   +          =    -3.12357871086055 +     13.5202672669706 * NumCatalogPurchases
3507294   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12357871086055 + 13.5202672669706 *
NumCatalogPurchases ;
3507295   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3507296   +   ELSE S_NumDealsPurchases  =    -1.41780479317678 +     11.2440893303082 *
3507297   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41780479317678 + 11.2440893303082 *
NumDealsPurchases ;
3507298   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3507299   +   ELSE S_NumWebPurchases  =    -5.18358312919826 +     12.1697437005332 *
3507300   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.18358312919826 + 12.1697437005332 *
NumWebPurchases ;
3507301   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3507302   +   ELSE S_RANGE_Frq  =    -1.36749907896913 +     4.22287702686988 * RANGE_Frq
3507303   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36749907896913 + 4.22287702686988 * RANGE_Frq ;
3507304   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3507305   +   ELSE S_RANGE_Recency  =    -1.66587101163314 +     3.35148857096611 *
3507306   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66587101163314 + 3.35148857096611 *
RANGE_Recency ;
3507307   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3507308   +   ELSE S_RANGE_average_purchase
3507309   +          =    -1.04341611930738 +      5.1645310509114 *
3507310   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04341611930738 + 5.1645310509114 *
RANGE_average_purchase ;
3507311   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3507312   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3507313   +   ELSE S_RANGE_campaign_acceptance
3507314   +          =    -0.47463154918021 +     5.74512803760441 *
3507315   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47463154918021 + 5.74512803760441
* RANGE_campaign_acceptance ;
3507316   +END;
MPRINT(EM_DIAGRAM):   END;
3507317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507318   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3507319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507321   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3507322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507323   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507324   +   H11  =     0.80576447742642 * S_MntCard_Games  +    -1.35457147304872 *
3507325   +        S_MntMagazines  +     0.35218158554069 * S_NumCatalogPurchases
3507326   +          +      2.6917843303321 * S_NumDealsPurchases
3507327   +          +     0.10694094449806 * S_NumWebPurchases
3507328   +          +    -0.26411587698141 * S_RANGE_Frq  +    -3.89455917519443 *
3507329   +        S_RANGE_Recency  +     0.03220879020743 * S_RANGE_average_purchase
3507330   +          +     0.88916200760373 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.80576447742642 * S_MntCard_Games + -1.35457147304872 *
S_MntMagazines + 0.35218158554069 * S_NumCatalogPurchases + 2.6917843303321 *
S_NumDealsPurchases + 0.10694094449806 * S_NumWebPurchases + -0.26411587698141 * S_RANGE_Frq +
-3.89455917519443 * S_RANGE_Recency + 0.03220879020743 * S_RANGE_average_purchase +
0.88916200760373 * S_RANGE_campaign_acceptance ;
3507331   +   H12  =     1.36526961146596 * S_MntCard_Games  +    -0.29383406957632 *
3507332   +        S_MntMagazines  +     0.87396260869998 * S_NumCatalogPurchases
3507333   +          +    -0.67586558030577 * S_NumDealsPurchases
3507334   +          +     1.25282510601775 * S_NumWebPurchases
3507335   +          +     0.11996368318406 * S_RANGE_Frq  +     0.02456253711424 *
3507336   +        S_RANGE_Recency  +     2.77446647220359 * S_RANGE_average_purchase
3507337   +          +     0.49759696402306 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.36526961146596 * S_MntCard_Games + -0.29383406957632 *
S_MntMagazines + 0.87396260869998 * S_NumCatalogPurchases + -0.67586558030577 *
S_NumDealsPurchases + 1.25282510601775 * S_NumWebPurchases + 0.11996368318406 * S_RANGE_Frq +
0.02456253711424 * S_RANGE_Recency + 2.77446647220359 * S_RANGE_average_purchase +
0.49759696402306 * S_RANGE_campaign_acceptance ;
3507338   +   H13  =     1.76993818523586 * S_MntCard_Games  +     0.07671546432538 *
3507339   +        S_MntMagazines  +    -0.65924080183409 * S_NumCatalogPurchases
3507340   +          +     0.03672063839352 * S_NumDealsPurchases
3507341   +          +     -0.5607404707598 * S_NumWebPurchases
3507342   +          +     1.64295687294151 * S_RANGE_Frq  +     1.72231219092298 *
3507343   +        S_RANGE_Recency  +     2.75738897743958 * S_RANGE_average_purchase
3507344   +          +     1.48077549719556 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 1.76993818523586 * S_MntCard_Games + 0.07671546432538 *
S_MntMagazines + -0.65924080183409 * S_NumCatalogPurchases + 0.03672063839352 *
S_NumDealsPurchases + -0.5607404707598 * S_NumWebPurchases + 1.64295687294151 * S_RANGE_Frq +
1.72231219092298 * S_RANGE_Recency + 2.75738897743958 * S_RANGE_average_purchase +
1.48077549719556 * S_RANGE_campaign_acceptance ;
3507345   +   H14  =    -0.83808113655998 * S_MntCard_Games  +    -1.18102279779449 *
3507346   +        S_MntMagazines  +    -3.00417863513758 * S_NumCatalogPurchases
3507347   +          +    -1.38026865729183 * S_NumDealsPurchases
3507348   +          +    -2.08311550808261 * S_NumWebPurchases
3507349   +          +     0.74467771591758 * S_RANGE_Frq  +      2.2526203958792 *
3507350   +        S_RANGE_Recency  +    -2.02872294176561 * S_RANGE_average_purchase
3507351   +          +    -1.69782888990197 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.83808113655998 * S_MntCard_Games + -1.18102279779449 *
S_MntMagazines + -3.00417863513758 * S_NumCatalogPurchases + -1.38026865729183 *
S_NumDealsPurchases + -2.08311550808261 * S_NumWebPurchases + 0.74467771591758 * S_RANGE_Frq +
2.2526203958792 * S_RANGE_Recency + -2.02872294176561 * S_RANGE_average_purchase +
-1.69782888990197 * S_RANGE_campaign_acceptance ;
3507352   +   H15  =     1.24050599188407 * S_MntCard_Games  +     0.30620053052458 *
3507353   +        S_MntMagazines  +     1.26072053241866 * S_NumCatalogPurchases
3507354   +          +     0.80364251906053 * S_NumDealsPurchases
3507355   +          +    -0.88243749551443 * S_NumWebPurchases
3507356   +          +    -1.04786104922245 * S_RANGE_Frq  +     0.18201126503282 *
3507357   +        S_RANGE_Recency  +     1.00954737159995 * S_RANGE_average_purchase
3507358   +          +     1.90299996531116 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 1.24050599188407 * S_MntCard_Games + 0.30620053052458 *
S_MntMagazines + 1.26072053241866 * S_NumCatalogPurchases + 0.80364251906053 *
S_NumDealsPurchases + -0.88243749551443 * S_NumWebPurchases + -1.04786104922245 * S_RANGE_Frq
+ 0.18201126503282 * S_RANGE_Recency + 1.00954737159995 * S_RANGE_average_purchase +
1.90299996531116 * S_RANGE_campaign_acceptance ;
3507359   +   H16  =       -2.22887166717 * S_MntCard_Games  +     0.49102368438131 *
3507360   +        S_MntMagazines  +    -0.69782041997387 * S_NumCatalogPurchases
3507361   +          +    -1.71786850048814 * S_NumDealsPurchases
3507362   +          +    -1.13965228587366 * S_NumWebPurchases
3507363   +          +    -0.48468186953053 * S_RANGE_Frq  +     3.41349666158838 *
3507364   +        S_RANGE_Recency  +    -0.05067611634858 * S_RANGE_average_purchase
3507365   +          +    -1.77354356314709 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.22887166717 * S_MntCard_Games + 0.49102368438131 *
S_MntMagazines + -0.69782041997387 * S_NumCatalogPurchases + -1.71786850048814 *
S_NumDealsPurchases + -1.13965228587366 * S_NumWebPurchases + -0.48468186953053 * S_RANGE_Frq
+ 3.41349666158838 * S_RANGE_Recency + -0.05067611634858 * S_RANGE_average_purchase +
-1.77354356314709 * S_RANGE_campaign_acceptance ;
3507366   +   H17  =     1.21331094636484 * S_MntCard_Games  +      1.6576967882863 *
3507367   +        S_MntMagazines  +     0.77924888279639 * S_NumCatalogPurchases
3507368   +          +    -3.59930830396134 * S_NumDealsPurchases
3507369   +          +      0.5875252071535 * S_NumWebPurchases
3507370   +          +      0.5637641308047 * S_RANGE_Frq  +    -0.29376987598858 *
3507371   +        S_RANGE_Recency  +    -0.37854770541401 * S_RANGE_average_purchase
3507372   +          +     0.45927773902461 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.21331094636484 * S_MntCard_Games + 1.6576967882863 *
S_MntMagazines + 0.77924888279639 * S_NumCatalogPurchases + -3.59930830396134 *
S_NumDealsPurchases + 0.5875252071535 * S_NumWebPurchases + 0.5637641308047 * S_RANGE_Frq +
-0.29376987598858 * S_RANGE_Recency + -0.37854770541401 * S_RANGE_average_purchase +
0.45927773902461 * S_RANGE_campaign_acceptance ;
3507373   +   H18  =    -0.79856913796006 * S_MntCard_Games  +    -0.36354034752909 *
3507374   +        S_MntMagazines  +     -0.6027135915373 * S_NumCatalogPurchases
3507375   +          +      0.8588261478081 * S_NumDealsPurchases
3507376   +          +    -1.25022991106658 * S_NumWebPurchases
3507377   +          +     1.09522773351835 * S_RANGE_Frq  +     0.45268492372094 *
3507378   +        S_RANGE_Recency  +     0.56583674153212 * S_RANGE_average_purchase
3507379   +          +    -0.27621518108586 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -0.79856913796006 * S_MntCard_Games + -0.36354034752909 *
S_MntMagazines + -0.6027135915373 * S_NumCatalogPurchases + 0.8588261478081 *
S_NumDealsPurchases + -1.25022991106658 * S_NumWebPurchases + 1.09522773351835 * S_RANGE_Frq +
0.45268492372094 * S_RANGE_Recency + 0.56583674153212 * S_RANGE_average_purchase +
-0.27621518108586 * S_RANGE_campaign_acceptance ;
3507380   +   H11  = H11  +    -0.59592397594998 * Marital_StatusDivorced
3507381   +          +    -0.99181346828724 * Marital_StatusMarried
3507382   +          +     1.78518851015998 * Marital_StatusSingle
3507383   +          +    -1.28204155071452 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.59592397594998 * Marital_StatusDivorced +
-0.99181346828724 * Marital_StatusMarried + 1.78518851015998 * Marital_StatusSingle +
-1.28204155071452 * Marital_StatusTogether ;
3507384   +   H12  = H12  +    -0.87976795343943 * Marital_StatusDivorced
3507385   +          +    -0.81699174808825 * Marital_StatusMarried
3507386   +          +      -0.420673453835 * Marital_StatusSingle
3507387   +          +    -1.01312240229347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.87976795343943 * Marital_StatusDivorced +
-0.81699174808825 * Marital_StatusMarried + -0.420673453835 * Marital_StatusSingle +
-1.01312240229347 * Marital_StatusTogether ;
3507388   +   H13  = H13  +     0.36265928725449 * Marital_StatusDivorced
3507389   +          +    -0.70183278240755 * Marital_StatusMarried
3507390   +          +     1.66197322493248 * Marital_StatusSingle
3507391   +          +     0.09776695363865 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.36265928725449 * Marital_StatusDivorced +
-0.70183278240755 * Marital_StatusMarried + 1.66197322493248 * Marital_StatusSingle +
0.09776695363865 * Marital_StatusTogether ;
3507392   +   H14  = H14  +     0.39086532185327 * Marital_StatusDivorced
3507393   +          +     0.31670124145102 * Marital_StatusMarried
3507394   +          +     1.22201646850428 * Marital_StatusSingle
3507395   +          +     0.02859020147883 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.39086532185327 * Marital_StatusDivorced + 0.31670124145102
* Marital_StatusMarried + 1.22201646850428 * Marital_StatusSingle + 0.02859020147883 *
Marital_StatusTogether ;
3507396   +   H15  = H15  +     1.22476748872775 * Marital_StatusDivorced
3507397   +          +     0.31258910389387 * Marital_StatusMarried
3507398   +          +    -2.37908758176686 * Marital_StatusSingle
3507399   +          +      0.3061511900017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.22476748872775 * Marital_StatusDivorced + 0.31258910389387
* Marital_StatusMarried + -2.37908758176686 * Marital_StatusSingle + 0.3061511900017 *
Marital_StatusTogether ;
3507400   +   H16  = H16  +    -0.14426401759108 * Marital_StatusDivorced
3507401   +          +     0.60358647444286 * Marital_StatusMarried
3507402   +          +    -0.39939888307411 * Marital_StatusSingle
3507403   +          +      0.1106989376483 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.14426401759108 * Marital_StatusDivorced +
0.60358647444286 * Marital_StatusMarried + -0.39939888307411 * Marital_StatusSingle +
0.1106989376483 * Marital_StatusTogether ;
3507404   +   H17  = H17  +     3.62922640689884 * Marital_StatusDivorced
3507405   +          +    -1.58346503236298 * Marital_StatusMarried
3507406   +          +     0.81076355743056 * Marital_StatusSingle
3507407   +          +    -3.27911968871886 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 3.62922640689884 * Marital_StatusDivorced +
-1.58346503236298 * Marital_StatusMarried + 0.81076355743056 * Marital_StatusSingle +
-3.27911968871886 * Marital_StatusTogether ;
3507408   +   H18  = H18  +    -0.00102233027897 * Marital_StatusDivorced
3507409   +          +    -0.09434650628152 * Marital_StatusMarried
3507410   +          +     2.48303989443063 * Marital_StatusSingle
3507411   +          +    -2.58925053257948 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + -0.00102233027897 * Marital_StatusDivorced +
-0.09434650628152 * Marital_StatusMarried + 2.48303989443063 * Marital_StatusSingle +
-2.58925053257948 * Marital_StatusTogether ;
3507412   +   H11  =     1.71815420702989 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.71815420702989 + H11 ;
3507413   +   H12  =      2.8088069036768 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.8088069036768 + H12 ;
3507414   +   H13  =     1.94747896127441 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.94747896127441 + H13 ;
3507415   +   H14  =     1.22463507943939 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.22463507943939 + H14 ;
3507416   +   H15  =    -3.37918141755026 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -3.37918141755026 + H15 ;
3507417   +   H16  =     4.75953150279443 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.75953150279443 + H16 ;
3507418   +   H17  =    -5.14236164764026 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -5.14236164764026 + H17 ;
3507419   +   H18  =    -2.48034152998133 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -2.48034152998133 + H18 ;
3507420   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3507421   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3507422   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3507423   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3507424   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3507425   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3507426   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3507427   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3507428   +END;
MPRINT(EM_DIAGRAM):   END;
3507429   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507430   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3507431   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3507432   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3507433   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3507434   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3507435   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3507436   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3507437   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3507438   +END;
MPRINT(EM_DIAGRAM):   END;
3507439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507440   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3507441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507442   +
3507443   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3507444   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3507445   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3507446   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3507447   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3507448   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3507449   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3507450   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3507451   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3507452   +end;
MPRINT(EM_DIAGRAM):   end;
3507453   +else do;
MPRINT(EM_DIAGRAM):   else do;
3507454   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3507455   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3507456   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3507457   +   end;
MPRINT(EM_DIAGRAM):   end;
3507458   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3507459   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3507460   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3507461   +   end;
MPRINT(EM_DIAGRAM):   end;
3507462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3507463   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3507464   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3507465   +   end;
MPRINT(EM_DIAGRAM):   end;
3507466   +end;
MPRINT(EM_DIAGRAM):   end;
3507467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507468   +   P_DepVar1  =     5.49854447270409 * H11  +     3.01682818161719 * H12
3507469   +          +     -2.7559139537414 * H13  +    -3.00000863833896 * H14
3507470   +          +     3.81327888856657 * H15  +    -5.25472435383228 * H16
3507471   +          +      5.2332553255765 * H17  +     4.33261180486614 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.49854447270409 * H11 + 3.01682818161719 * H12 +
-2.7559139537414 * H13 + -3.00000863833896 * H14 + 3.81327888856657 * H15 + -5.25472435383228
* H16 + 5.2332553255765 * H17 + 4.33261180486614 * H18 ;
3507472   +   P_DepVar1  =    -1.24334717109242 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.24334717109242 + P_DepVar1 ;
3507473   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3507474   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3507475   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3507476   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3507477   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3507478   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3507479   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3507480   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3507481   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3507482   +END;
MPRINT(EM_DIAGRAM):   END;
3507483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507484   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3507485   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3507486   +END;
MPRINT(EM_DIAGRAM):   END;
3507487   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3507488   +   P_DepVar1  =     0.13481615978211;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13481615978211;
3507489   +   P_DepVar0  =     0.86518384021788;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86518384021788;
3507490   +END;
MPRINT(EM_DIAGRAM):   END;
3507491   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3507492   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3507493   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3507494   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3507495   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3507496   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3507497   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3507498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507499   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3507500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507501   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3507502   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3507503   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3507504   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3507505   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3507506   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3507507   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3507508   +END;
MPRINT(EM_DIAGRAM):   END;
3507509   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3507510   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3507511   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3507512   +drop
3507513   +S_MntCard_Games
3507514   +S_MntMagazines
3507515   +S_NumCatalogPurchases
3507516   +S_NumDealsPurchases
3507517   +S_NumWebPurchases
3507518   +S_RANGE_Frq
3507519   +S_RANGE_Recency
3507520   +S_RANGE_average_purchase
3507521   +S_RANGE_campaign_acceptance
3507522   +H11
3507523   +H12
3507524   +H13
3507525   +H14
3507526   +H15
3507527   +H16
3507528   +H17
3507529   +H18
3507530   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3507531   +end;
MPRINT(EM_DIAGRAM):   end;
3507532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507533   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3507534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507535   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3507536   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3507537   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507538   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3507539   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507540   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3507541   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3507542   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3507543   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3507544   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3507545   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3507546   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3507547   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3507548   +LENGTH _WARN_ $4
3507549   +      F_DepVar  $ 12
3507550   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3507551   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3507552   +
3507553   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3507554   +
3507555   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3507556   +
3507557   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3507558   +
3507559   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3507560   +
3507561   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3507562   +
3507563   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3507564   +
3507565   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3507566   +
3507567   +      label S_RANGE_campaign_acceptance =
3507568   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3507569   +
3507570   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3507571   +
3507572   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3507573   +
3507574   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3507575   +
3507576   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3507577   +
3507578   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3507579   +
3507580   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3507581   +
3507582   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3507583   +
3507584   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3507585   +
3507586   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3507587   +
3507588   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3507589   +
3507590   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3507591   +
3507592   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3507593   +
3507594   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3507595   +
3507596   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3507597   +
3507598   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3507599   +
3507600   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3507601   +
3507602   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3507603   +
3507604   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3507605   +
3507606   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3507607   +
3507608   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3507609   +
3507610   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3507611   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3507612   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3507613   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3507614   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3507615   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3507616   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3507617   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3507618   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3507619   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3507620   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3507621   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3507622   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3507623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3507624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507625   +end;
MPRINT(EM_DIAGRAM):   end;
3507626   +else do;
MPRINT(EM_DIAGRAM):   else do;
3507627   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3507628   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3507629   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3507630   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3507631   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3507632   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3507633   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3507634   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3507635   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507636   +         end;
MPRINT(EM_DIAGRAM):   end;
3507637   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3507638   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3507639   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3507640   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507641   +            end;
MPRINT(EM_DIAGRAM):   end;
3507642   +         end;
MPRINT(EM_DIAGRAM):   end;
3507643   +      end;
MPRINT(EM_DIAGRAM):   end;
3507644   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3507645   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3507646   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3507647   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507648   +         end;
MPRINT(EM_DIAGRAM):   end;
3507649   +      end;
MPRINT(EM_DIAGRAM):   end;
3507650   +   end;
MPRINT(EM_DIAGRAM):   end;
3507651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3507652   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3507653   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3507654   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507655   +      end;
MPRINT(EM_DIAGRAM):   end;
3507656   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3507657   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3507658   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3507659   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3507660   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3507661   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3507662   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3507663   +         end;
MPRINT(EM_DIAGRAM):   end;
3507664   +      end;
MPRINT(EM_DIAGRAM):   end;
3507665   +   end;
MPRINT(EM_DIAGRAM):   end;
3507666   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3507667   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3507668   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3507669   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3507670   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3507671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3507672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507673   +   end;
MPRINT(EM_DIAGRAM):   end;
3507674   +end;
MPRINT(EM_DIAGRAM):   end;
3507675   +
3507676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507677   +*** Checking missing input Interval
3507678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3507679   +
3507680   +IF NMISS(
3507681   +   MntCard_Games ,
3507682   +   MntMagazines ,
3507683   +   NumCatalogPurchases ,
3507684   +   NumDealsPurchases ,
3507685   +   NumWebPurchases ,
3507686   +   RANGE_Frq ,
3507687   +   RANGE_Recency ,
3507688   +   RANGE_average_purchase ,
3507689   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3507690   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3507691   +
3507692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3507693   +END;
MPRINT(EM_DIAGRAM):   END;
3507694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507695   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3507696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507697   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507698   +   S_MntCard_Games  =     -2.3063560069152 +     6.62416950216796 *
3507699   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3063560069152 + 6.62416950216796 * MntCard_Games ;
3507700   +   S_MntMagazines  =    -0.84169834173248 +     17.6417751108648 *
3507701   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84169834173248 + 17.6417751108648 * MntMagazines ;
3507702   +   S_NumCatalogPurchases  =    -3.11011256166134 +     13.4898542129399 *
3507703   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11011256166134 + 13.4898542129399 *
NumCatalogPurchases ;
3507704   +   S_NumDealsPurchases  =    -1.41128624775244 +     11.1349959321211 *
3507705   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41128624775244 + 11.1349959321211 *
NumDealsPurchases ;
3507706   +   S_NumWebPurchases  =    -5.27035729619396 +     12.3347494448517 *
3507707   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.27035729619396 + 12.3347494448517 *
NumWebPurchases ;
3507708   +   S_RANGE_Frq  =    -1.36427086122772 +     4.23029226870147 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36427086122772 + 4.23029226870147 * RANGE_Frq ;
3507709   +   S_RANGE_Recency  =    -1.67522852341756 +     3.36507752684168 *
3507710   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67522852341756 + 3.36507752684168 * RANGE_Recency ;
3507711   +   S_RANGE_average_purchase  =    -1.03709862959284 +     5.14678120415437 *
3507712   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03709862959284 + 5.14678120415437 *
RANGE_average_purchase ;
3507713   +   S_RANGE_campaign_acceptance
3507714   +          =    -0.47658047626349 +     5.79279284288184 *
3507715   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47658047626349 + 5.79279284288184 *
RANGE_campaign_acceptance ;
3507716   +END;
MPRINT(EM_DIAGRAM):   END;
3507717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507718   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3507719   +   ELSE S_MntCard_Games  =     -2.3063560069152 +     6.62416950216796 *
3507720   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3063560069152 + 6.62416950216796 *
MntCard_Games ;
3507721   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3507722   +   ELSE S_MntMagazines  =    -0.84169834173248 +     17.6417751108648 *
3507723   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84169834173248 + 17.6417751108648 *
MntMagazines ;
3507724   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3507725   +   ELSE S_NumCatalogPurchases
3507726   +          =    -3.11011256166134 +     13.4898542129399 * NumCatalogPurchases
3507727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11011256166134 + 13.4898542129399 *
NumCatalogPurchases ;
3507728   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3507729   +   ELSE S_NumDealsPurchases  =    -1.41128624775244 +     11.1349959321211 *
3507730   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41128624775244 + 11.1349959321211 *
NumDealsPurchases ;
3507731   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3507732   +   ELSE S_NumWebPurchases  =    -5.27035729619396 +     12.3347494448517 *
3507733   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.27035729619396 + 12.3347494448517 *
NumWebPurchases ;
3507734   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3507735   +   ELSE S_RANGE_Frq  =    -1.36427086122772 +     4.23029226870147 * RANGE_Frq
3507736   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36427086122772 + 4.23029226870147 * RANGE_Frq ;
3507737   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3507738   +   ELSE S_RANGE_Recency  =    -1.67522852341756 +     3.36507752684168 *
3507739   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67522852341756 + 3.36507752684168 *
RANGE_Recency ;
3507740   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3507741   +   ELSE S_RANGE_average_purchase
3507742   +          =    -1.03709862959284 +     5.14678120415437 *
3507743   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03709862959284 + 5.14678120415437 *
RANGE_average_purchase ;
3507744   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3507745   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3507746   +   ELSE S_RANGE_campaign_acceptance
3507747   +          =    -0.47658047626349 +     5.79279284288184 *
3507748   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47658047626349 + 5.79279284288184
* RANGE_campaign_acceptance ;
3507749   +END;
MPRINT(EM_DIAGRAM):   END;
3507750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507751   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3507752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507754   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3507755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507756   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507757   +   H11  =     1.06872425081828 * S_MntCard_Games  +    -1.69756334816622 *
3507758   +        S_MntMagazines  +     1.53208960867325 * S_NumCatalogPurchases
3507759   +          +     3.44292727544114 * S_NumDealsPurchases
3507760   +          +     1.33192442115421 * S_NumWebPurchases
3507761   +          +    -1.35143476551573 * S_RANGE_Frq  +    -5.58840023248086 *
3507762   +        S_RANGE_Recency  +     1.00577636583058 * S_RANGE_average_purchase
3507763   +          +      1.6509431362054 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.06872425081828 * S_MntCard_Games + -1.69756334816622 *
S_MntMagazines + 1.53208960867325 * S_NumCatalogPurchases + 3.44292727544114 *
S_NumDealsPurchases + 1.33192442115421 * S_NumWebPurchases + -1.35143476551573 * S_RANGE_Frq +
-5.58840023248086 * S_RANGE_Recency + 1.00577636583058 * S_RANGE_average_purchase +
1.6509431362054 * S_RANGE_campaign_acceptance ;
3507764   +   H12  =     2.25877853220999 * S_MntCard_Games  +    -0.81085273427265 *
3507765   +        S_MntMagazines  +     2.12096777159388 * S_NumCatalogPurchases
3507766   +          +    -0.39846912895335 * S_NumDealsPurchases
3507767   +          +     1.56492982854452 * S_NumWebPurchases
3507768   +          +    -0.05573861568193 * S_RANGE_Frq  +    -0.24559686063366 *
3507769   +        S_RANGE_Recency  +     1.97782342625951 * S_RANGE_average_purchase
3507770   +          +     0.17117316402053 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.25877853220999 * S_MntCard_Games + -0.81085273427265 *
S_MntMagazines + 2.12096777159388 * S_NumCatalogPurchases + -0.39846912895335 *
S_NumDealsPurchases + 1.56492982854452 * S_NumWebPurchases + -0.05573861568193 * S_RANGE_Frq +
-0.24559686063366 * S_RANGE_Recency + 1.97782342625951 * S_RANGE_average_purchase +
0.17117316402053 * S_RANGE_campaign_acceptance ;
3507771   +   H13  =    -1.16799872489828 * S_MntCard_Games  +    -0.50209336337088 *
3507772   +        S_MntMagazines  +     0.21146163370697 * S_NumCatalogPurchases
3507773   +          +    -0.49525982350876 * S_NumDealsPurchases
3507774   +          +    -1.45216899717025 * S_NumWebPurchases
3507775   +          +    -3.11397600906276 * S_RANGE_Frq  +     0.78732061680889 *
3507776   +        S_RANGE_Recency  +     1.51671446299595 * S_RANGE_average_purchase
3507777   +          +     1.02919843930597 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.16799872489828 * S_MntCard_Games + -0.50209336337088 *
S_MntMagazines + 0.21146163370697 * S_NumCatalogPurchases + -0.49525982350876 *
S_NumDealsPurchases + -1.45216899717025 * S_NumWebPurchases + -3.11397600906276 * S_RANGE_Frq
+ 0.78732061680889 * S_RANGE_Recency + 1.51671446299595 * S_RANGE_average_purchase +
1.02919843930597 * S_RANGE_campaign_acceptance ;
3507778   +   H14  =    -1.71060481943118 * S_MntCard_Games  +    -0.04400777191739 *
3507779   +        S_MntMagazines  +    -2.66178565356974 * S_NumCatalogPurchases
3507780   +          +     -1.5609388836264 * S_NumDealsPurchases
3507781   +          +    -1.33984174195977 * S_NumWebPurchases
3507782   +          +     4.18897316969988 * S_RANGE_Frq  +     4.33787212210179 *
3507783   +        S_RANGE_Recency  +    -8.76927165547739 * S_RANGE_average_purchase
3507784   +          +    -2.05798168761449 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -1.71060481943118 * S_MntCard_Games + -0.04400777191739 *
S_MntMagazines + -2.66178565356974 * S_NumCatalogPurchases + -1.5609388836264 *
S_NumDealsPurchases + -1.33984174195977 * S_NumWebPurchases + 4.18897316969988 * S_RANGE_Frq +
4.33787212210179 * S_RANGE_Recency + -8.76927165547739 * S_RANGE_average_purchase +
-2.05798168761449 * S_RANGE_campaign_acceptance ;
3507785   +   H15  =     2.29675886502878 * S_MntCard_Games  +      1.0067757647335 *
3507786   +        S_MntMagazines  +     1.49566864729483 * S_NumCatalogPurchases
3507787   +          +     1.67090258752372 * S_NumDealsPurchases
3507788   +          +    -2.30563474261713 * S_NumWebPurchases
3507789   +          +     -1.9559412205393 * S_RANGE_Frq  +     0.49746968375869 *
3507790   +        S_RANGE_Recency  +     3.42682491040292 * S_RANGE_average_purchase
3507791   +          +     4.04069474273956 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 2.29675886502878 * S_MntCard_Games + 1.0067757647335 *
S_MntMagazines + 1.49566864729483 * S_NumCatalogPurchases + 1.67090258752372 *
S_NumDealsPurchases + -2.30563474261713 * S_NumWebPurchases + -1.9559412205393 * S_RANGE_Frq +
0.49746968375869 * S_RANGE_Recency + 3.42682491040292 * S_RANGE_average_purchase +
4.04069474273956 * S_RANGE_campaign_acceptance ;
3507792   +   H16  =    -3.19345328654988 * S_MntCard_Games  +     1.34422778064519 *
3507793   +        S_MntMagazines  +    -1.33371680548985 * S_NumCatalogPurchases
3507794   +          +     -2.6396760970557 * S_NumDealsPurchases
3507795   +          +    -1.98572805510277 * S_NumWebPurchases
3507796   +          +     0.55452648578999 * S_RANGE_Frq  +     4.05098683749668 *
3507797   +        S_RANGE_Recency  +     0.27895562652407 * S_RANGE_average_purchase
3507798   +          +    -2.53317010349368 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -3.19345328654988 * S_MntCard_Games + 1.34422778064519 *
S_MntMagazines + -1.33371680548985 * S_NumCatalogPurchases + -2.6396760970557 *
S_NumDealsPurchases + -1.98572805510277 * S_NumWebPurchases + 0.55452648578999 * S_RANGE_Frq +
4.05098683749668 * S_RANGE_Recency + 0.27895562652407 * S_RANGE_average_purchase +
-2.53317010349368 * S_RANGE_campaign_acceptance ;
3507799   +   H17  =     1.79730759338383 * S_MntCard_Games  +     1.82440721766096 *
3507800   +        S_MntMagazines  +     1.78830569560485 * S_NumCatalogPurchases
3507801   +          +    -3.98590819789344 * S_NumDealsPurchases
3507802   +          +     1.89990476412564 * S_NumWebPurchases
3507803   +          +     3.43573727762451 * S_RANGE_Frq  +    -0.98741787969498 *
3507804   +        S_RANGE_Recency  +    -0.49926615924858 * S_RANGE_average_purchase
3507805   +          +     0.25531979883756 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.79730759338383 * S_MntCard_Games + 1.82440721766096 *
S_MntMagazines + 1.78830569560485 * S_NumCatalogPurchases + -3.98590819789344 *
S_NumDealsPurchases + 1.89990476412564 * S_NumWebPurchases + 3.43573727762451 * S_RANGE_Frq +
-0.98741787969498 * S_RANGE_Recency + -0.49926615924858 * S_RANGE_average_purchase +
0.25531979883756 * S_RANGE_campaign_acceptance ;
3507806   +   H18  =    -3.42561967196229 * S_MntCard_Games  +     1.27333696665313 *
3507807   +        S_MntMagazines  +    -0.08292836162979 * S_NumCatalogPurchases
3507808   +          +     1.60158606746744 * S_NumDealsPurchases
3507809   +          +    -2.87033435927584 * S_NumWebPurchases
3507810   +          +     1.33411237078854 * S_RANGE_Frq  +    -0.78619769600546 *
3507811   +        S_RANGE_Recency  +     0.59519734896788 * S_RANGE_average_purchase
3507812   +          +     1.56875225497046 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -3.42561967196229 * S_MntCard_Games + 1.27333696665313 *
S_MntMagazines + -0.08292836162979 * S_NumCatalogPurchases + 1.60158606746744 *
S_NumDealsPurchases + -2.87033435927584 * S_NumWebPurchases + 1.33411237078854 * S_RANGE_Frq +
-0.78619769600546 * S_RANGE_Recency + 0.59519734896788 * S_RANGE_average_purchase +
1.56875225497046 * S_RANGE_campaign_acceptance ;
3507813   +   H11  = H11  +    -3.19112682327416 * Marital_StatusDivorced
3507814   +          +    -1.99592856361111 * Marital_StatusMarried
3507815   +          +      1.6851179229142 * Marital_StatusSingle
3507816   +          +    -4.06494718526604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -3.19112682327416 * Marital_StatusDivorced +
-1.99592856361111 * Marital_StatusMarried + 1.6851179229142 * Marital_StatusSingle +
-4.06494718526604 * Marital_StatusTogether ;
3507817   +   H12  = H12  +    -0.93154261839155 * Marital_StatusDivorced
3507818   +          +    -1.84423577751012 * Marital_StatusMarried
3507819   +          +     0.19788004318521 * Marital_StatusSingle
3507820   +          +     0.28393896588415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.93154261839155 * Marital_StatusDivorced +
-1.84423577751012 * Marital_StatusMarried + 0.19788004318521 * Marital_StatusSingle +
0.28393896588415 * Marital_StatusTogether ;
3507821   +   H13  = H13  +    -0.12276534577898 * Marital_StatusDivorced
3507822   +          +     0.17032341587436 * Marital_StatusMarried
3507823   +          +     0.82859931587127 * Marital_StatusSingle
3507824   +          +     2.10702343843002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.12276534577898 * Marital_StatusDivorced +
0.17032341587436 * Marital_StatusMarried + 0.82859931587127 * Marital_StatusSingle +
2.10702343843002 * Marital_StatusTogether ;
3507825   +   H14  = H14  +    -0.31092579627974 * Marital_StatusDivorced
3507826   +          +     1.03585233348264 * Marital_StatusMarried
3507827   +          +     0.03449224905668 * Marital_StatusSingle
3507828   +          +     0.23624395362825 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.31092579627974 * Marital_StatusDivorced +
1.03585233348264 * Marital_StatusMarried + 0.03449224905668 * Marital_StatusSingle +
0.23624395362825 * Marital_StatusTogether ;
3507829   +   H15  = H15  +     2.31595147576561 * Marital_StatusDivorced
3507830   +          +    -1.28148725704748 * Marital_StatusMarried
3507831   +          +    -1.35365468586708 * Marital_StatusSingle
3507832   +          +    -1.94896075656268 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 2.31595147576561 * Marital_StatusDivorced +
-1.28148725704748 * Marital_StatusMarried + -1.35365468586708 * Marital_StatusSingle +
-1.94896075656268 * Marital_StatusTogether ;
3507833   +   H16  = H16  +      0.0913131143307 * Marital_StatusDivorced
3507834   +          +     1.05488641252162 * Marital_StatusMarried
3507835   +          +    -1.92288978579906 * Marital_StatusSingle
3507836   +          +     0.59220341534154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.0913131143307 * Marital_StatusDivorced + 1.05488641252162
* Marital_StatusMarried + -1.92288978579906 * Marital_StatusSingle + 0.59220341534154 *
Marital_StatusTogether ;
3507837   +   H17  = H17  +     4.39602764556567 * Marital_StatusDivorced
3507838   +          +    -2.74235193033458 * Marital_StatusMarried
3507839   +          +      1.5354504198187 * Marital_StatusSingle
3507840   +          +    -4.56025113235954 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 4.39602764556567 * Marital_StatusDivorced +
-2.74235193033458 * Marital_StatusMarried + 1.5354504198187 * Marital_StatusSingle +
-4.56025113235954 * Marital_StatusTogether ;
3507841   +   H18  = H18  +     1.54722708107151 * Marital_StatusDivorced
3507842   +          +     1.34941655349342 * Marital_StatusMarried
3507843   +          +     1.31151316100857 * Marital_StatusSingle
3507844   +          +    -2.49802971799109 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 1.54722708107151 * Marital_StatusDivorced + 1.34941655349342
* Marital_StatusMarried + 1.31151316100857 * Marital_StatusSingle + -2.49802971799109 *
Marital_StatusTogether ;
3507845   +   H11  =      1.2452494805381 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.2452494805381 + H11 ;
3507846   +   H12  =     3.85373820207069 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.85373820207069 + H12 ;
3507847   +   H13  =     2.84207622254752 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.84207622254752 + H13 ;
3507848   +   H14  =     1.36475181691342 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.36475181691342 + H14 ;
3507849   +   H15  =    -5.31177669994247 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -5.31177669994247 + H15 ;
3507850   +   H16  =      4.9756032171456 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.9756032171456 + H16 ;
3507851   +   H17  =    -9.37088827177256 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -9.37088827177256 + H17 ;
3507852   +   H18  =    -7.30874469087501 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -7.30874469087501 + H18 ;
3507853   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3507854   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3507855   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3507856   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3507857   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3507858   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3507859   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3507860   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3507861   +END;
MPRINT(EM_DIAGRAM):   END;
3507862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507863   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3507864   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3507865   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3507866   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3507867   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3507868   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3507869   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3507870   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3507871   +END;
MPRINT(EM_DIAGRAM):   END;
3507872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507873   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3507874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507875   +
3507876   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3507877   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3507878   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3507879   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3507880   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3507881   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3507882   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3507883   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3507884   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3507885   +end;
MPRINT(EM_DIAGRAM):   end;
3507886   +else do;
MPRINT(EM_DIAGRAM):   else do;
3507887   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3507888   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3507889   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3507890   +   end;
MPRINT(EM_DIAGRAM):   end;
3507891   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3507892   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3507893   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3507894   +   end;
MPRINT(EM_DIAGRAM):   end;
3507895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3507896   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3507897   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3507898   +   end;
MPRINT(EM_DIAGRAM):   end;
3507899   +end;
MPRINT(EM_DIAGRAM):   end;
3507900   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3507901   +   P_DepVar1  =     7.39261319169792 * H11  +     3.53452214711161 * H12
3507902   +          +    -3.02190741428114 * H13  +    -5.38872594544035 * H14
3507903   +          +      5.3262605766228 * H15  +    -8.86920682846347 * H16
3507904   +          +      9.2148807973194 * H17  +      5.9525204889752 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.39261319169792 * H11 + 3.53452214711161 * H12 +
-3.02190741428114 * H13 + -5.38872594544035 * H14 + 5.3262605766228 * H15 + -8.86920682846347
* H16 + 9.2148807973194 * H17 + 5.9525204889752 * H18 ;
3507905   +   P_DepVar1  =     -1.5916596336252 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5916596336252 + P_DepVar1 ;
3507906   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3507907   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3507908   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3507909   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3507910   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3507911   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3507912   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3507913   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3507914   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3507915   +END;
MPRINT(EM_DIAGRAM):   END;
3507916   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3507917   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3507918   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3507919   +END;
MPRINT(EM_DIAGRAM):   END;
3507920   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3507921   +   P_DepVar1  =     0.13563950842057;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13563950842057;
3507922   +   P_DepVar0  =     0.86436049157942;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86436049157942;
3507923   +END;
MPRINT(EM_DIAGRAM):   END;
3507924   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3507925   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3507926   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3507927   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3507928   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3507929   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3507930   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3507931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507932   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3507933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3507934   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3507935   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3507936   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3507937   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3507938   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3507939   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3507940   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3507941   +END;
MPRINT(EM_DIAGRAM):   END;
3507942   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3507943   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3507944   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3507945   +drop
3507946   +S_MntCard_Games
3507947   +S_MntMagazines
3507948   +S_NumCatalogPurchases
3507949   +S_NumDealsPurchases
3507950   +S_NumWebPurchases
3507951   +S_RANGE_Frq
3507952   +S_RANGE_Recency
3507953   +S_RANGE_average_purchase
3507954   +S_RANGE_campaign_acceptance
3507955   +H11
3507956   +H12
3507957   +H13
3507958   +H14
3507959   +H15
3507960   +H16
3507961   +H17
3507962   +H18
3507963   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3507964   +end;
MPRINT(EM_DIAGRAM):   end;
3507965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507966   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3507967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3507968   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3507969   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3507970   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507971   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3507972   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3507973   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3507974   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3507975   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3507976   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3507977   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3507978   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3507979   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3507980   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3507981   +LENGTH _WARN_ $4
3507982   +      F_DepVar  $ 12
3507983   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3507984   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3507985   +
3507986   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3507987   +
3507988   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3507989   +
3507990   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3507991   +
3507992   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3507993   +
3507994   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3507995   +
3507996   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3507997   +
3507998   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3507999   +
3508000   +      label S_RANGE_campaign_acceptance =
3508001   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3508002   +
3508003   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3508004   +
3508005   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3508006   +
3508007   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3508008   +
3508009   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3508010   +
3508011   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3508012   +
3508013   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3508014   +
3508015   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3508016   +
3508017   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3508018   +
3508019   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3508020   +
3508021   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3508022   +
3508023   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3508024   +
3508025   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3508026   +
3508027   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3508028   +
3508029   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3508030   +
3508031   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3508032   +
3508033   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3508034   +
3508035   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3508036   +
3508037   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3508038   +
3508039   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3508040   +
3508041   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3508042   +
3508043   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3508044   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3508045   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3508046   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3508047   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3508048   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3508049   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3508050   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3508051   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3508052   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508053   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508054   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508055   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3508057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508058   +end;
MPRINT(EM_DIAGRAM):   end;
3508059   +else do;
MPRINT(EM_DIAGRAM):   else do;
3508060   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3508061   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3508062   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3508063   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3508064   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3508065   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3508066   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3508067   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3508068   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508069   +         end;
MPRINT(EM_DIAGRAM):   end;
3508070   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3508071   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3508072   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3508073   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508074   +            end;
MPRINT(EM_DIAGRAM):   end;
3508075   +         end;
MPRINT(EM_DIAGRAM):   end;
3508076   +      end;
MPRINT(EM_DIAGRAM):   end;
3508077   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508078   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3508079   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3508080   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508081   +         end;
MPRINT(EM_DIAGRAM):   end;
3508082   +      end;
MPRINT(EM_DIAGRAM):   end;
3508083   +   end;
MPRINT(EM_DIAGRAM):   end;
3508084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3508085   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3508086   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3508087   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508088   +      end;
MPRINT(EM_DIAGRAM):   end;
3508089   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508090   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3508091   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3508092   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3508093   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3508094   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3508095   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508096   +         end;
MPRINT(EM_DIAGRAM):   end;
3508097   +      end;
MPRINT(EM_DIAGRAM):   end;
3508098   +   end;
MPRINT(EM_DIAGRAM):   end;
3508099   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3508100   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508101   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508102   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508103   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3508105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508106   +   end;
MPRINT(EM_DIAGRAM):   end;
3508107   +end;
MPRINT(EM_DIAGRAM):   end;
3508108   +
3508109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508110   +*** Checking missing input Interval
3508111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3508112   +
3508113   +IF NMISS(
3508114   +   MntCard_Games ,
3508115   +   MntMagazines ,
3508116   +   NumCatalogPurchases ,
3508117   +   NumDealsPurchases ,
3508118   +   NumWebPurchases ,
3508119   +   RANGE_Frq ,
3508120   +   RANGE_Recency ,
3508121   +   RANGE_average_purchase ,
3508122   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3508123   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3508124   +
3508125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508126   +END;
MPRINT(EM_DIAGRAM):   END;
3508127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508128   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3508129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508130   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508131   +   S_MntCard_Games  =    -2.31514649004199 +      6.6532228413433 *
3508132   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31514649004199 + 6.6532228413433 * MntCard_Games ;
3508133   +   S_MntMagazines  =    -0.83154791264541 +     17.2415686188637 *
3508134   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83154791264541 + 17.2415686188637 * MntMagazines ;
3508135   +   S_NumCatalogPurchases  =      -3.134223008341 +     13.5487064865442 *
3508136   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.134223008341 + 13.5487064865442 *
NumCatalogPurchases ;
3508137   +   S_NumDealsPurchases  =    -1.40802726930571 +     11.1694349367982 *
3508138   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40802726930571 + 11.1694349367982 *
NumDealsPurchases ;
3508139   +   S_NumWebPurchases  =    -5.22419305760626 +     12.2397192605138 *
3508140   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22419305760626 + 12.2397192605138 *
NumWebPurchases ;
3508141   +   S_RANGE_Frq  =    -1.37360429233802 +     4.21268737204252 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37360429233802 + 4.21268737204252 * RANGE_Frq ;
3508142   +   S_RANGE_Recency  =    -1.64691637678589 +     3.35096112212854 *
3508143   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.64691637678589 + 3.35096112212854 * RANGE_Recency ;
3508144   +   S_RANGE_average_purchase  =     -1.0439849455479 +     5.14919209802399 *
3508145   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0439849455479 + 5.14919209802399 *
RANGE_average_purchase ;
3508146   +   S_RANGE_campaign_acceptance
3508147   +          =    -0.47516022318265 +     5.77349492938252 *
3508148   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47516022318265 + 5.77349492938252 *
RANGE_campaign_acceptance ;
3508149   +END;
MPRINT(EM_DIAGRAM):   END;
3508150   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508151   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3508152   +   ELSE S_MntCard_Games  =    -2.31514649004199 +      6.6532228413433 *
3508153   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31514649004199 + 6.6532228413433 *
MntCard_Games ;
3508154   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3508155   +   ELSE S_MntMagazines  =    -0.83154791264541 +     17.2415686188637 *
3508156   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83154791264541 + 17.2415686188637 *
MntMagazines ;
3508157   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3508158   +   ELSE S_NumCatalogPurchases
3508159   +          =      -3.134223008341 +     13.5487064865442 * NumCatalogPurchases
3508160   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.134223008341 + 13.5487064865442 *
NumCatalogPurchases ;
3508161   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3508162   +   ELSE S_NumDealsPurchases  =    -1.40802726930571 +     11.1694349367982 *
3508163   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40802726930571 + 11.1694349367982 *
NumDealsPurchases ;
3508164   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3508165   +   ELSE S_NumWebPurchases  =    -5.22419305760626 +     12.2397192605138 *
3508166   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22419305760626 + 12.2397192605138 *
NumWebPurchases ;
3508167   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3508168   +   ELSE S_RANGE_Frq  =    -1.37360429233802 +     4.21268737204252 * RANGE_Frq
3508169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37360429233802 + 4.21268737204252 * RANGE_Frq ;
3508170   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3508171   +   ELSE S_RANGE_Recency  =    -1.64691637678589 +     3.35096112212854 *
3508172   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.64691637678589 + 3.35096112212854 *
RANGE_Recency ;
3508173   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3508174   +   ELSE S_RANGE_average_purchase
3508175   +          =     -1.0439849455479 +     5.14919209802399 *
3508176   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0439849455479 + 5.14919209802399 *
RANGE_average_purchase ;
3508177   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3508178   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3508179   +   ELSE S_RANGE_campaign_acceptance
3508180   +          =    -0.47516022318265 +     5.77349492938252 *
3508181   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47516022318265 + 5.77349492938252
* RANGE_campaign_acceptance ;
3508182   +END;
MPRINT(EM_DIAGRAM):   END;
3508183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508184   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3508185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508187   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3508188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508190   +   H11  =     0.89321088747531 * S_MntCard_Games  +    -2.08872654289586 *
3508191   +        S_MntMagazines  +     0.06212122570469 * S_NumCatalogPurchases
3508192   +          +     2.28613072426842 * S_NumDealsPurchases
3508193   +          +    -0.04480442603564 * S_NumWebPurchases
3508194   +          +     1.40075633054252 * S_RANGE_Frq  +    -4.30714917499127 *
3508195   +        S_RANGE_Recency  +    -0.10457887824031 * S_RANGE_average_purchase
3508196   +          +     0.90897188542897 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.89321088747531 * S_MntCard_Games + -2.08872654289586 *
S_MntMagazines + 0.06212122570469 * S_NumCatalogPurchases + 2.28613072426842 *
S_NumDealsPurchases + -0.04480442603564 * S_NumWebPurchases + 1.40075633054252 * S_RANGE_Frq +
-4.30714917499127 * S_RANGE_Recency + -0.10457887824031 * S_RANGE_average_purchase +
0.90897188542897 * S_RANGE_campaign_acceptance ;
3508197   +   H12  =     1.51621432744129 * S_MntCard_Games  +    -0.36042494186579 *
3508198   +        S_MntMagazines  +    -0.38987842145625 * S_NumCatalogPurchases
3508199   +          +      0.0314891061895 * S_NumDealsPurchases
3508200   +          +     0.94476362624485 * S_NumWebPurchases
3508201   +          +    -0.74011250584734 * S_RANGE_Frq  +     0.43029160289201 *
3508202   +        S_RANGE_Recency  +     0.71526001594248 * S_RANGE_average_purchase
3508203   +          +     0.98425096610805 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.51621432744129 * S_MntCard_Games + -0.36042494186579 *
S_MntMagazines + -0.38987842145625 * S_NumCatalogPurchases + 0.0314891061895 *
S_NumDealsPurchases + 0.94476362624485 * S_NumWebPurchases + -0.74011250584734 * S_RANGE_Frq +
0.43029160289201 * S_RANGE_Recency + 0.71526001594248 * S_RANGE_average_purchase +
0.98425096610805 * S_RANGE_campaign_acceptance ;
3508204   +   H13  =     0.07421507678256 * S_MntCard_Games  +    -0.38312650686061 *
3508205   +        S_MntMagazines  +    -0.89958842674819 * S_NumCatalogPurchases
3508206   +          +    -0.06479170288653 * S_NumDealsPurchases
3508207   +          +    -2.39736148937601 * S_NumWebPurchases
3508208   +          +    -1.81328806535718 * S_RANGE_Frq  +      0.2860012183176 *
3508209   +        S_RANGE_Recency  +     0.93053784935775 * S_RANGE_average_purchase
3508210   +          +     1.41078970297904 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.07421507678256 * S_MntCard_Games + -0.38312650686061 *
S_MntMagazines + -0.89958842674819 * S_NumCatalogPurchases + -0.06479170288653 *
S_NumDealsPurchases + -2.39736148937601 * S_NumWebPurchases + -1.81328806535718 * S_RANGE_Frq
+ 0.2860012183176 * S_RANGE_Recency + 0.93053784935775 * S_RANGE_average_purchase +
1.41078970297904 * S_RANGE_campaign_acceptance ;
3508211   +   H14  =     -1.6796622491032 * S_MntCard_Games  +    -0.93597625837649 *
3508212   +        S_MntMagazines  +    -2.78377272174853 * S_NumCatalogPurchases
3508213   +          +    -1.10460257640235 * S_NumDealsPurchases
3508214   +          +    -0.74788453717295 * S_NumWebPurchases
3508215   +          +     2.98419068364418 * S_RANGE_Frq  +      3.6699660711196 *
3508216   +        S_RANGE_Recency  +     -5.5240418886797 * S_RANGE_average_purchase
3508217   +          +    -2.26318970675121 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -1.6796622491032 * S_MntCard_Games + -0.93597625837649 *
S_MntMagazines + -2.78377272174853 * S_NumCatalogPurchases + -1.10460257640235 *
S_NumDealsPurchases + -0.74788453717295 * S_NumWebPurchases + 2.98419068364418 * S_RANGE_Frq +
3.6699660711196 * S_RANGE_Recency + -5.5240418886797 * S_RANGE_average_purchase +
-2.26318970675121 * S_RANGE_campaign_acceptance ;
3508218   +   H15  =     1.49156560744133 * S_MntCard_Games  +     0.74314544285963 *
3508219   +        S_MntMagazines  +     1.59316241264431 * S_NumCatalogPurchases
3508220   +          +     0.98367036151113 * S_NumDealsPurchases
3508221   +          +    -2.13778766170523 * S_NumWebPurchases
3508222   +          +     -4.0392328537529 * S_RANGE_Frq  +     0.27841478863978 *
3508223   +        S_RANGE_Recency  +     2.50842299696427 * S_RANGE_average_purchase
3508224   +          +     2.83571435787211 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 1.49156560744133 * S_MntCard_Games + 0.74314544285963 *
S_MntMagazines + 1.59316241264431 * S_NumCatalogPurchases + 0.98367036151113 *
S_NumDealsPurchases + -2.13778766170523 * S_NumWebPurchases + -4.0392328537529 * S_RANGE_Frq +
0.27841478863978 * S_RANGE_Recency + 2.50842299696427 * S_RANGE_average_purchase +
2.83571435787211 * S_RANGE_campaign_acceptance ;
3508225   +   H16  =    -2.43197022204625 * S_MntCard_Games  +      1.0121976438418 *
3508226   +        S_MntMagazines  +    -0.68406508271641 * S_NumCatalogPurchases
3508227   +          +    -2.04139292042227 * S_NumDealsPurchases
3508228   +          +    -1.05449127353909 * S_NumWebPurchases
3508229   +          +    -0.69196800451119 * S_RANGE_Frq  +     3.42404713748286 *
3508230   +        S_RANGE_Recency  +     0.21610542550839 * S_RANGE_average_purchase
3508231   +          +    -1.98232192827778 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.43197022204625 * S_MntCard_Games + 1.0121976438418 *
S_MntMagazines + -0.68406508271641 * S_NumCatalogPurchases + -2.04139292042227 *
S_NumDealsPurchases + -1.05449127353909 * S_NumWebPurchases + -0.69196800451119 * S_RANGE_Frq
+ 3.42404713748286 * S_RANGE_Recency + 0.21610542550839 * S_RANGE_average_purchase +
-1.98232192827778 * S_RANGE_campaign_acceptance ;
3508232   +   H17  =     1.08396654145154 * S_MntCard_Games  +     2.30335235101185 *
3508233   +        S_MntMagazines  +     1.05568322943167 * S_NumCatalogPurchases
3508234   +          +    -2.76714358566798 * S_NumDealsPurchases
3508235   +          +      0.7576208759835 * S_NumWebPurchases
3508236   +          +     1.31076931412148 * S_RANGE_Frq  +    -0.70116274739142 *
3508237   +        S_RANGE_Recency  +    -0.52296007412057 * S_RANGE_average_purchase
3508238   +          +      0.2976710928676 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.08396654145154 * S_MntCard_Games + 2.30335235101185 *
S_MntMagazines + 1.05568322943167 * S_NumCatalogPurchases + -2.76714358566798 *
S_NumDealsPurchases + 0.7576208759835 * S_NumWebPurchases + 1.31076931412148 * S_RANGE_Frq +
-0.70116274739142 * S_RANGE_Recency + -0.52296007412057 * S_RANGE_average_purchase +
0.2976710928676 * S_RANGE_campaign_acceptance ;
3508239   +   H18  =    -2.37656087264098 * S_MntCard_Games  +     0.20725688064261 *
3508240   +        S_MntMagazines  +    -0.14559329957546 * S_NumCatalogPurchases
3508241   +          +      0.5418585926009 * S_NumDealsPurchases
3508242   +          +    -1.89660962562731 * S_NumWebPurchases
3508243   +          +     0.48296239789963 * S_RANGE_Frq  +    -0.35656890786285 *
3508244   +        S_RANGE_Recency  +     0.23176191005312 * S_RANGE_average_purchase
3508245   +          +     0.05463231643327 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -2.37656087264098 * S_MntCard_Games + 0.20725688064261 *
S_MntMagazines + -0.14559329957546 * S_NumCatalogPurchases + 0.5418585926009 *
S_NumDealsPurchases + -1.89660962562731 * S_NumWebPurchases + 0.48296239789963 * S_RANGE_Frq +
-0.35656890786285 * S_RANGE_Recency + 0.23176191005312 * S_RANGE_average_purchase +
0.05463231643327 * S_RANGE_campaign_acceptance ;
3508246   +   H11  = H11  +    -0.57085946103816 * Marital_StatusDivorced
3508247   +          +    -0.42193882939579 * Marital_StatusMarried
3508248   +          +     1.28820604294872 * Marital_StatusSingle
3508249   +          +    -0.76607047730413 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.57085946103816 * Marital_StatusDivorced +
-0.42193882939579 * Marital_StatusMarried + 1.28820604294872 * Marital_StatusSingle +
-0.76607047730413 * Marital_StatusTogether ;
3508250   +   H12  = H12  +    -0.84309009779633 * Marital_StatusDivorced
3508251   +          +    -0.32166703816635 * Marital_StatusMarried
3508252   +          +     0.51106739834164 * Marital_StatusSingle
3508253   +          +     0.03216854044482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.84309009779633 * Marital_StatusDivorced +
-0.32166703816635 * Marital_StatusMarried + 0.51106739834164 * Marital_StatusSingle +
0.03216854044482 * Marital_StatusTogether ;
3508254   +   H13  = H13  +     0.24245266611282 * Marital_StatusDivorced
3508255   +          +     -0.7929024829732 * Marital_StatusMarried
3508256   +          +      0.8540458634708 * Marital_StatusSingle
3508257   +          +     0.81333588625976 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24245266611282 * Marital_StatusDivorced + -0.7929024829732
* Marital_StatusMarried + 0.8540458634708 * Marital_StatusSingle + 0.81333588625976 *
Marital_StatusTogether ;
3508258   +   H14  = H14  +    -0.66681695573992 * Marital_StatusDivorced
3508259   +          +     0.85775900094991 * Marital_StatusMarried
3508260   +          +    -0.61234477388997 * Marital_StatusSingle
3508261   +          +    -0.91093175062309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.66681695573992 * Marital_StatusDivorced +
0.85775900094991 * Marital_StatusMarried + -0.61234477388997 * Marital_StatusSingle +
-0.91093175062309 * Marital_StatusTogether ;
3508262   +   H15  = H15  +     1.96413013618151 * Marital_StatusDivorced
3508263   +          +     0.01118844754531 * Marital_StatusMarried
3508264   +          +    -0.04684017832001 * Marital_StatusSingle
3508265   +          +    -1.23315395996402 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.96413013618151 * Marital_StatusDivorced + 0.01118844754531
* Marital_StatusMarried + -0.04684017832001 * Marital_StatusSingle + -1.23315395996402 *
Marital_StatusTogether ;
3508266   +   H16  = H16  +     0.65856079645199 * Marital_StatusDivorced
3508267   +          +      0.5365080060256 * Marital_StatusMarried
3508268   +          +    -1.17175164436602 * Marital_StatusSingle
3508269   +          +     0.40700701483164 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.65856079645199 * Marital_StatusDivorced + 0.5365080060256
* Marital_StatusMarried + -1.17175164436602 * Marital_StatusSingle + 0.40700701483164 *
Marital_StatusTogether ;
3508270   +   H17  = H17  +     2.91247720305509 * Marital_StatusDivorced
3508271   +          +    -2.22495556295559 * Marital_StatusMarried
3508272   +          +       0.891254576235 * Marital_StatusSingle
3508273   +          +    -3.16289295921009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 2.91247720305509 * Marital_StatusDivorced +
-2.22495556295559 * Marital_StatusMarried + 0.891254576235 * Marital_StatusSingle +
-3.16289295921009 * Marital_StatusTogether ;
3508274   +   H18  = H18  +     1.56773701082907 * Marital_StatusDivorced
3508275   +          +     0.36634915286269 * Marital_StatusMarried
3508276   +          +     1.00362085444016 * Marital_StatusSingle
3508277   +          +    -1.85251195185097 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 1.56773701082907 * Marital_StatusDivorced + 0.36634915286269
* Marital_StatusMarried + 1.00362085444016 * Marital_StatusSingle + -1.85251195185097 *
Marital_StatusTogether ;
3508278   +   H11  =      1.3213345418984 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3213345418984 + H11 ;
3508279   +   H12  =     2.36262062636643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.36262062636643 + H12 ;
3508280   +   H13  =     1.96973381651288 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.96973381651288 + H13 ;
3508281   +   H14  =      0.8431366246468 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.8431366246468 + H14 ;
3508282   +   H15  =    -3.84265172698809 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -3.84265172698809 + H15 ;
3508283   +   H16  =     4.86174139429274 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.86174139429274 + H16 ;
3508284   +   H17  =    -5.33919374584213 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -5.33919374584213 + H17 ;
3508285   +   H18  =    -3.66382676948781 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -3.66382676948781 + H18 ;
3508286   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3508287   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3508288   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3508289   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3508290   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3508291   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3508292   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3508293   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3508294   +END;
MPRINT(EM_DIAGRAM):   END;
3508295   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508296   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3508297   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3508298   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3508299   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3508300   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3508301   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3508302   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3508303   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3508304   +END;
MPRINT(EM_DIAGRAM):   END;
3508305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508306   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3508307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508308   +
3508309   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3508310   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3508311   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3508312   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3508313   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3508314   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3508315   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3508316   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3508317   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3508318   +end;
MPRINT(EM_DIAGRAM):   end;
3508319   +else do;
MPRINT(EM_DIAGRAM):   else do;
3508320   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3508321   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3508322   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3508323   +   end;
MPRINT(EM_DIAGRAM):   end;
3508324   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3508325   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3508326   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3508327   +   end;
MPRINT(EM_DIAGRAM):   end;
3508328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3508329   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3508330   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3508331   +   end;
MPRINT(EM_DIAGRAM):   end;
3508332   +end;
MPRINT(EM_DIAGRAM):   end;
3508333   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508334   +   P_DepVar1  =     5.12884092062654 * H11  +     2.08895409239077 * H12
3508335   +          +    -3.42030698638166 * H13  +    -5.02970958207346 * H14
3508336   +          +     4.46954041510857 * H15  +    -6.58978392663941 * H16
3508337   +          +     5.05559258011412 * H17  +     4.54662923540155 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.12884092062654 * H11 + 2.08895409239077 * H12 +
-3.42030698638166 * H13 + -5.02970958207346 * H14 + 4.46954041510857 * H15 + -6.58978392663941
* H16 + 5.05559258011412 * H17 + 4.54662923540155 * H18 ;
3508338   +   P_DepVar1  =    -1.75494292514785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.75494292514785 + P_DepVar1 ;
3508339   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3508340   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3508341   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3508342   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3508343   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3508344   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3508345   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3508346   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3508347   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3508348   +END;
MPRINT(EM_DIAGRAM):   END;
3508349   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508350   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3508351   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3508352   +END;
MPRINT(EM_DIAGRAM):   END;
3508353   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3508354   +   P_DepVar1  =     0.13636363636363;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13636363636363;
3508355   +   P_DepVar0  =     0.86363636363636;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86363636363636;
3508356   +END;
MPRINT(EM_DIAGRAM):   END;
3508357   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3508358   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3508359   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3508360   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3508361   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3508362   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3508363   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3508364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508365   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3508366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508367   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3508368   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3508369   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3508370   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3508371   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3508372   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3508373   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3508374   +END;
MPRINT(EM_DIAGRAM):   END;
3508375   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3508376   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3508377   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3508378   +drop
3508379   +S_MntCard_Games
3508380   +S_MntMagazines
3508381   +S_NumCatalogPurchases
3508382   +S_NumDealsPurchases
3508383   +S_NumWebPurchases
3508384   +S_RANGE_Frq
3508385   +S_RANGE_Recency
3508386   +S_RANGE_average_purchase
3508387   +S_RANGE_campaign_acceptance
3508388   +H11
3508389   +H12
3508390   +H13
3508391   +H14
3508392   +H15
3508393   +H16
3508394   +H17
3508395   +H18
3508396   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3508397   +end;
MPRINT(EM_DIAGRAM):   end;
3508398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3508399   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3508400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3508401   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3508402   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3508403   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3508404   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3508405   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3508406   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3508407   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3508408   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3508409   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3508410   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3508411   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3508412   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3508413   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3508414   +LENGTH _WARN_ $4
3508415   +      F_DepVar  $ 12
3508416   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3508417   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3508418   +
3508419   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3508420   +
3508421   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3508422   +
3508423   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3508424   +
3508425   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3508426   +
3508427   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3508428   +
3508429   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3508430   +
3508431   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3508432   +
3508433   +      label S_RANGE_campaign_acceptance =
3508434   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3508435   +
3508436   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3508437   +
3508438   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3508439   +
3508440   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3508441   +
3508442   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3508443   +
3508444   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3508445   +
3508446   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3508447   +
3508448   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3508449   +
3508450   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3508451   +
3508452   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3508453   +
3508454   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3508455   +
3508456   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3508457   +
3508458   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3508459   +
3508460   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3508461   +
3508462   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3508463   +
3508464   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3508465   +
3508466   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3508467   +
3508468   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3508469   +
3508470   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3508471   +
3508472   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3508473   +
3508474   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3508475   +
3508476   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3508477   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3508478   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3508479   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3508480   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3508481   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3508482   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3508483   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3508484   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3508485   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508486   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508487   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508488   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3508490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508491   +end;
MPRINT(EM_DIAGRAM):   end;
3508492   +else do;
MPRINT(EM_DIAGRAM):   else do;
3508493   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3508494   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3508495   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3508496   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3508497   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3508498   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3508499   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3508500   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3508501   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508502   +         end;
MPRINT(EM_DIAGRAM):   end;
3508503   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3508504   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3508505   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3508506   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508507   +            end;
MPRINT(EM_DIAGRAM):   end;
3508508   +         end;
MPRINT(EM_DIAGRAM):   end;
3508509   +      end;
MPRINT(EM_DIAGRAM):   end;
3508510   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508511   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3508512   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3508513   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508514   +         end;
MPRINT(EM_DIAGRAM):   end;
3508515   +      end;
MPRINT(EM_DIAGRAM):   end;
3508516   +   end;
MPRINT(EM_DIAGRAM):   end;
3508517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3508518   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3508519   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3508520   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508521   +      end;
MPRINT(EM_DIAGRAM):   end;
3508522   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508523   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3508524   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3508525   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3508526   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3508527   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3508528   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508529   +         end;
MPRINT(EM_DIAGRAM):   end;
3508530   +      end;
MPRINT(EM_DIAGRAM):   end;
3508531   +   end;
MPRINT(EM_DIAGRAM):   end;
3508532   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3508533   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508534   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508535   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508536   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3508538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508539   +   end;
MPRINT(EM_DIAGRAM):   end;
3508540   +end;
MPRINT(EM_DIAGRAM):   end;
3508541   +
3508542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508543   +*** Checking missing input Interval
3508544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3508545   +
3508546   +IF NMISS(
3508547   +   MntCard_Games ,
3508548   +   MntMagazines ,
3508549   +   NumCatalogPurchases ,
3508550   +   NumDealsPurchases ,
3508551   +   NumWebPurchases ,
3508552   +   RANGE_Frq ,
3508553   +   RANGE_Recency ,
3508554   +   RANGE_average_purchase ,
3508555   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3508556   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3508557   +
3508558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508559   +END;
MPRINT(EM_DIAGRAM):   END;
3508560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508561   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3508562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508563   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508564   +   S_MntCard_Games  =    -2.31528201973847 +     6.61325886936251 *
3508565   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31528201973847 + 6.61325886936251 * MntCard_Games ;
3508566   +   S_MntMagazines  =    -0.83524541523047 +      17.387537121789 *
3508567   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83524541523047 + 17.387537121789 * MntMagazines ;
3508568   +   S_NumCatalogPurchases  =    -3.09763951967118 +     13.3986330966652 *
3508569   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09763951967118 + 13.3986330966652 *
NumCatalogPurchases ;
3508570   +   S_NumDealsPurchases  =    -1.41109660771499 +     11.2718290723012 *
3508571   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41109660771499 + 11.2718290723012 *
NumDealsPurchases ;
3508572   +   S_NumWebPurchases  =    -5.21757970240085 +     12.2300357319803 *
3508573   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21757970240085 + 12.2300357319803 *
NumWebPurchases ;
3508574   +   S_RANGE_Frq  =    -1.35684741737558 +     4.20964004147325 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35684741737558 + 4.20964004147325 * RANGE_Frq ;
3508575   +   S_RANGE_Recency  =    -1.67568414851725 +     3.36160640741631 *
3508576   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67568414851725 + 3.36160640741631 * RANGE_Recency ;
3508577   +   S_RANGE_average_purchase  =    -1.03403635216824 +     5.14007756398367 *
3508578   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03403635216824 + 5.14007756398367 *
RANGE_average_purchase ;
3508579   +   S_RANGE_campaign_acceptance
3508580   +          =    -0.47140425970592 +     5.70661045499565 *
3508581   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47140425970592 + 5.70661045499565 *
RANGE_campaign_acceptance ;
3508582   +END;
MPRINT(EM_DIAGRAM):   END;
3508583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508584   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3508585   +   ELSE S_MntCard_Games  =    -2.31528201973847 +     6.61325886936251 *
3508586   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31528201973847 + 6.61325886936251 *
MntCard_Games ;
3508587   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3508588   +   ELSE S_MntMagazines  =    -0.83524541523047 +      17.387537121789 *
3508589   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83524541523047 + 17.387537121789 * MntMagazines
;
3508590   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3508591   +   ELSE S_NumCatalogPurchases
3508592   +          =    -3.09763951967118 +     13.3986330966652 * NumCatalogPurchases
3508593   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09763951967118 + 13.3986330966652 *
NumCatalogPurchases ;
3508594   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3508595   +   ELSE S_NumDealsPurchases  =    -1.41109660771499 +     11.2718290723012 *
3508596   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41109660771499 + 11.2718290723012 *
NumDealsPurchases ;
3508597   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3508598   +   ELSE S_NumWebPurchases  =    -5.21757970240085 +     12.2300357319803 *
3508599   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21757970240085 + 12.2300357319803 *
NumWebPurchases ;
3508600   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3508601   +   ELSE S_RANGE_Frq  =    -1.35684741737558 +     4.20964004147325 * RANGE_Frq
3508602   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35684741737558 + 4.20964004147325 * RANGE_Frq ;
3508603   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3508604   +   ELSE S_RANGE_Recency  =    -1.67568414851725 +     3.36160640741631 *
3508605   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67568414851725 + 3.36160640741631 *
RANGE_Recency ;
3508606   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3508607   +   ELSE S_RANGE_average_purchase
3508608   +          =    -1.03403635216824 +     5.14007756398367 *
3508609   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03403635216824 + 5.14007756398367 *
RANGE_average_purchase ;
3508610   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3508611   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3508612   +   ELSE S_RANGE_campaign_acceptance
3508613   +          =    -0.47140425970592 +     5.70661045499565 *
3508614   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47140425970592 + 5.70661045499565
* RANGE_campaign_acceptance ;
3508615   +END;
MPRINT(EM_DIAGRAM):   END;
3508616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508617   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3508618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508620   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3508621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508622   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508623   +   H11  =     1.00306543143396 * S_MntCard_Games  +    -0.47047741188016 *
3508624   +        S_MntMagazines  +     0.91393429324321 * S_NumCatalogPurchases
3508625   +          +     2.49715847966496 * S_NumDealsPurchases
3508626   +          +    -1.34815399805846 * S_NumWebPurchases
3508627   +          +     1.33015733264434 * S_RANGE_Frq  +    -3.26507534569653 *
3508628   +        S_RANGE_Recency  +    -0.31940619590702 * S_RANGE_average_purchase
3508629   +          +     0.62250517200437 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.00306543143396 * S_MntCard_Games + -0.47047741188016 *
S_MntMagazines + 0.91393429324321 * S_NumCatalogPurchases + 2.49715847966496 *
S_NumDealsPurchases + -1.34815399805846 * S_NumWebPurchases + 1.33015733264434 * S_RANGE_Frq +
-3.26507534569653 * S_RANGE_Recency + -0.31940619590702 * S_RANGE_average_purchase +
0.62250517200437 * S_RANGE_campaign_acceptance ;
3508630   +   H12  =     2.03043862006652 * S_MntCard_Games  +    -0.29701086223507 *
3508631   +        S_MntMagazines  +     1.60501605958229 * S_NumCatalogPurchases
3508632   +          +     0.08228260337361 * S_NumDealsPurchases
3508633   +          +      1.4619029522915 * S_NumWebPurchases
3508634   +          +     0.25332722910469 * S_RANGE_Frq  +    -0.91080422899904 *
3508635   +        S_RANGE_Recency  +      2.4928900134728 * S_RANGE_average_purchase
3508636   +          +     2.06152291160149 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.03043862006652 * S_MntCard_Games + -0.29701086223507 *
S_MntMagazines + 1.60501605958229 * S_NumCatalogPurchases + 0.08228260337361 *
S_NumDealsPurchases + 1.4619029522915 * S_NumWebPurchases + 0.25332722910469 * S_RANGE_Frq +
-0.91080422899904 * S_RANGE_Recency + 2.4928900134728 * S_RANGE_average_purchase +
2.06152291160149 * S_RANGE_campaign_acceptance ;
3508637   +   H13  =    -0.99488441537033 * S_MntCard_Games  +    -0.37781053091524 *
3508638   +        S_MntMagazines  +    -2.17014997058929 * S_NumCatalogPurchases
3508639   +          +    -1.30695252833699 * S_NumDealsPurchases
3508640   +          +    -3.80588252638174 * S_NumWebPurchases
3508641   +          +    -1.42562446973297 * S_RANGE_Frq  +      3.7173276413003 *
3508642   +        S_RANGE_Recency  +    -0.09026317458822 * S_RANGE_average_purchase
3508643   +          +    -1.29662929748549 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.99488441537033 * S_MntCard_Games + -0.37781053091524 *
S_MntMagazines + -2.17014997058929 * S_NumCatalogPurchases + -1.30695252833699 *
S_NumDealsPurchases + -3.80588252638174 * S_NumWebPurchases + -1.42562446973297 * S_RANGE_Frq
+ 3.7173276413003 * S_RANGE_Recency + -0.09026317458822 * S_RANGE_average_purchase +
-1.29662929748549 * S_RANGE_campaign_acceptance ;
3508644   +   H14  =    -1.15394136033663 * S_MntCard_Games  +    -3.21507023275878 *
3508645   +        S_MntMagazines  +    -3.62368858187416 * S_NumCatalogPurchases
3508646   +          +    -1.18050112629309 * S_NumDealsPurchases
3508647   +          +     -1.3864425065002 * S_NumWebPurchases
3508648   +          +      3.2356901647445 * S_RANGE_Frq  +     3.34904198490351 *
3508649   +        S_RANGE_Recency  +    -2.54490408782048 * S_RANGE_average_purchase
3508650   +          +    -1.29976532237572 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -1.15394136033663 * S_MntCard_Games + -3.21507023275878 *
S_MntMagazines + -3.62368858187416 * S_NumCatalogPurchases + -1.18050112629309 *
S_NumDealsPurchases + -1.3864425065002 * S_NumWebPurchases + 3.2356901647445 * S_RANGE_Frq +
3.34904198490351 * S_RANGE_Recency + -2.54490408782048 * S_RANGE_average_purchase +
-1.29976532237572 * S_RANGE_campaign_acceptance ;
3508651   +   H15  =     3.06777233660922 * S_MntCard_Games  +    -0.16510365909867 *
3508652   +        S_MntMagazines  +    -0.29591614077871 * S_NumCatalogPurchases
3508653   +          +    -0.19514092290362 * S_NumDealsPurchases
3508654   +          +    -2.20301023162725 * S_NumWebPurchases
3508655   +          +    -3.57405896537059 * S_RANGE_Frq  +     1.25388712641753 *
3508656   +        S_RANGE_Recency  +     0.43701493902022 * S_RANGE_average_purchase
3508657   +          +     4.58940607053157 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 3.06777233660922 * S_MntCard_Games + -0.16510365909867 *
S_MntMagazines + -0.29591614077871 * S_NumCatalogPurchases + -0.19514092290362 *
S_NumDealsPurchases + -2.20301023162725 * S_NumWebPurchases + -3.57405896537059 * S_RANGE_Frq
+ 1.25388712641753 * S_RANGE_Recency + 0.43701493902022 * S_RANGE_average_purchase +
4.58940607053157 * S_RANGE_campaign_acceptance ;
3508658   +   H16  =     -3.6786141427312 * S_MntCard_Games  +     1.05009866167229 *
3508659   +        S_MntMagazines  +    -0.29443975184912 * S_NumCatalogPurchases
3508660   +          +    -2.48751970945434 * S_NumDealsPurchases
3508661   +          +    -1.20226266322338 * S_NumWebPurchases
3508662   +          +     0.49259498364525 * S_RANGE_Frq  +     3.67942046889444 *
3508663   +        S_RANGE_Recency  +     0.39066667527133 * S_RANGE_average_purchase
3508664   +          +    -2.20671154522402 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -3.6786141427312 * S_MntCard_Games + 1.05009866167229 *
S_MntMagazines + -0.29443975184912 * S_NumCatalogPurchases + -2.48751970945434 *
S_NumDealsPurchases + -1.20226266322338 * S_NumWebPurchases + 0.49259498364525 * S_RANGE_Frq +
3.67942046889444 * S_RANGE_Recency + 0.39066667527133 * S_RANGE_average_purchase +
-2.20671154522402 * S_RANGE_campaign_acceptance ;
3508665   +   H17  =     1.70883395044421 * S_MntCard_Games  +     0.41464915942419 *
3508666   +        S_MntMagazines  +     1.90857830763402 * S_NumCatalogPurchases
3508667   +          +    -4.50076766464388 * S_NumDealsPurchases
3508668   +          +     0.99702182002814 * S_NumWebPurchases
3508669   +          +     1.68291951045938 * S_RANGE_Frq  +    -1.26027185929592 *
3508670   +        S_RANGE_Recency  +    -0.68288461034916 * S_RANGE_average_purchase
3508671   +          +     0.85758641974899 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.70883395044421 * S_MntCard_Games + 0.41464915942419 *
S_MntMagazines + 1.90857830763402 * S_NumCatalogPurchases + -4.50076766464388 *
S_NumDealsPurchases + 0.99702182002814 * S_NumWebPurchases + 1.68291951045938 * S_RANGE_Frq +
-1.26027185929592 * S_RANGE_Recency + -0.68288461034916 * S_RANGE_average_purchase +
0.85758641974899 * S_RANGE_campaign_acceptance ;
3508672   +   H18  =    -2.22517980314586 * S_MntCard_Games  +    -0.89144361889092 *
3508673   +        S_MntMagazines  +     0.15108162953227 * S_NumCatalogPurchases
3508674   +          +     1.21843043915558 * S_NumDealsPurchases
3508675   +          +     -1.2514345748383 * S_NumWebPurchases
3508676   +          +     0.93659671722158 * S_RANGE_Frq  +    -0.09968080993778 *
3508677   +        S_RANGE_Recency  +     2.59007516773665 * S_RANGE_average_purchase
3508678   +          +     0.81237743733875 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -2.22517980314586 * S_MntCard_Games + -0.89144361889092 *
S_MntMagazines + 0.15108162953227 * S_NumCatalogPurchases + 1.21843043915558 *
S_NumDealsPurchases + -1.2514345748383 * S_NumWebPurchases + 0.93659671722158 * S_RANGE_Frq +
-0.09968080993778 * S_RANGE_Recency + 2.59007516773665 * S_RANGE_average_purchase +
0.81237743733875 * S_RANGE_campaign_acceptance ;
3508679   +   H11  = H11  +    -1.35880452563047 * Marital_StatusDivorced
3508680   +          +    -2.33128779692228 * Marital_StatusMarried
3508681   +          +     1.08645001969863 * Marital_StatusSingle
3508682   +          +     3.08763029289154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -1.35880452563047 * Marital_StatusDivorced +
-2.33128779692228 * Marital_StatusMarried + 1.08645001969863 * Marital_StatusSingle +
3.08763029289154 * Marital_StatusTogether ;
3508683   +   H12  = H12  +    -0.87514688389973 * Marital_StatusDivorced
3508684   +          +    -2.35501363519677 * Marital_StatusMarried
3508685   +          +     1.29779474982257 * Marital_StatusSingle
3508686   +          +     0.19369551283715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.87514688389973 * Marital_StatusDivorced +
-2.35501363519677 * Marital_StatusMarried + 1.29779474982257 * Marital_StatusSingle +
0.19369551283715 * Marital_StatusTogether ;
3508687   +   H13  = H13  +     1.15526317922584 * Marital_StatusDivorced
3508688   +          +     0.74905339705689 * Marital_StatusMarried
3508689   +          +     2.97599740731237 * Marital_StatusSingle
3508690   +          +     2.18989439141554 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.15526317922584 * Marital_StatusDivorced + 0.74905339705689
* Marital_StatusMarried + 2.97599740731237 * Marital_StatusSingle + 2.18989439141554 *
Marital_StatusTogether ;
3508691   +   H14  = H14  +    -0.95033994871601 * Marital_StatusDivorced
3508692   +          +    -1.78537674826898 * Marital_StatusMarried
3508693   +          +     0.79074452290459 * Marital_StatusSingle
3508694   +          +     0.95863449468823 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.95033994871601 * Marital_StatusDivorced +
-1.78537674826898 * Marital_StatusMarried + 0.79074452290459 * Marital_StatusSingle +
0.95863449468823 * Marital_StatusTogether ;
3508695   +   H15  = H15  +     1.30925475423021 * Marital_StatusDivorced
3508696   +          +     2.02941859260474 * Marital_StatusMarried
3508697   +          +     3.13013951024966 * Marital_StatusSingle
3508698   +          +     -1.0478739441224 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.30925475423021 * Marital_StatusDivorced + 2.02941859260474
* Marital_StatusMarried + 3.13013951024966 * Marital_StatusSingle + -1.0478739441224 *
Marital_StatusTogether ;
3508699   +   H16  = H16  +    -1.78620703520716 * Marital_StatusDivorced
3508700   +          +     0.55682391408658 * Marital_StatusMarried
3508701   +          +    -0.66030645244948 * Marital_StatusSingle
3508702   +          +      1.3151831492651 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -1.78620703520716 * Marital_StatusDivorced +
0.55682391408658 * Marital_StatusMarried + -0.66030645244948 * Marital_StatusSingle +
1.3151831492651 * Marital_StatusTogether ;
3508703   +   H17  = H17  +     5.08206201825413 * Marital_StatusDivorced
3508704   +          +    -3.03513209148693 * Marital_StatusMarried
3508705   +          +     1.02836286544296 * Marital_StatusSingle
3508706   +          +    -4.14201651052683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 5.08206201825413 * Marital_StatusDivorced +
-3.03513209148693 * Marital_StatusMarried + 1.02836286544296 * Marital_StatusSingle +
-4.14201651052683 * Marital_StatusTogether ;
3508707   +   H18  = H18  +    -0.27632537250078 * Marital_StatusDivorced
3508708   +          +    -1.53160997853973 * Marital_StatusMarried
3508709   +          +     2.89580420745959 * Marital_StatusSingle
3508710   +          +    -1.98021876074318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + -0.27632537250078 * Marital_StatusDivorced +
-1.53160997853973 * Marital_StatusMarried + 2.89580420745959 * Marital_StatusSingle +
-1.98021876074318 * Marital_StatusTogether ;
3508711   +   H11  =    -1.50001581488653 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.50001581488653 + H11 ;
3508712   +   H12  =     3.49737366178666 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.49737366178666 + H12 ;
3508713   +   H13  =     4.43403372434792 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 4.43403372434792 + H13 ;
3508714   +   H14  =    -0.52978296274906 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.52978296274906 + H14 ;
3508715   +   H15  =    -1.01003679283935 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.01003679283935 + H15 ;
3508716   +   H16  =     3.41524222278669 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 3.41524222278669 + H16 ;
3508717   +   H17  =    -8.42757218215095 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -8.42757218215095 + H17 ;
3508718   +   H18  =    -5.61449564180963 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -5.61449564180963 + H18 ;
3508719   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3508720   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3508721   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3508722   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3508723   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3508724   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3508725   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3508726   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3508727   +END;
MPRINT(EM_DIAGRAM):   END;
3508728   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508729   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3508730   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3508731   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3508732   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3508733   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3508734   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3508735   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3508736   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3508737   +END;
MPRINT(EM_DIAGRAM):   END;
3508738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508739   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3508740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508741   +
3508742   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3508743   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3508744   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3508745   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3508746   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3508747   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3508748   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3508749   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3508750   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3508751   +end;
MPRINT(EM_DIAGRAM):   end;
3508752   +else do;
MPRINT(EM_DIAGRAM):   else do;
3508753   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3508754   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3508755   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3508756   +   end;
MPRINT(EM_DIAGRAM):   end;
3508757   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3508758   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3508759   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3508760   +   end;
MPRINT(EM_DIAGRAM):   end;
3508761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3508762   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3508763   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3508764   +   end;
MPRINT(EM_DIAGRAM):   end;
3508765   +end;
MPRINT(EM_DIAGRAM):   end;
3508766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508767   +   P_DepVar1  =     4.38563514758549 * H11  +     2.37747457382827 * H12
3508768   +          +    -4.96823987107666 * H13  +    -6.16569478156002 * H14
3508769   +          +     3.42748104865242 * H15  +    -6.62625689485728 * H16
3508770   +          +     7.92416162490114 * H17  +     7.19604946006507 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.38563514758549 * H11 + 2.37747457382827 * H12 +
-4.96823987107666 * H13 + -6.16569478156002 * H14 + 3.42748104865242 * H15 + -6.62625689485728
* H16 + 7.92416162490114 * H17 + 7.19604946006507 * H18 ;
3508771   +   P_DepVar1  =     -3.3966509482682 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.3966509482682 + P_DepVar1 ;
3508772   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3508773   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3508774   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3508775   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3508776   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3508777   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3508778   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3508779   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3508780   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3508781   +END;
MPRINT(EM_DIAGRAM):   END;
3508782   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3508783   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3508784   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3508785   +END;
MPRINT(EM_DIAGRAM):   END;
3508786   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3508787   +   P_DepVar1  =     0.13354749885268;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13354749885268;
3508788   +   P_DepVar0  =     0.86645250114731;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86645250114731;
3508789   +END;
MPRINT(EM_DIAGRAM):   END;
3508790   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3508791   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3508792   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3508793   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3508794   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3508795   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3508796   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3508797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508798   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3508799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508800   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3508801   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3508802   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3508803   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3508804   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3508805   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3508806   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3508807   +END;
MPRINT(EM_DIAGRAM):   END;
3508808   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3508809   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3508810   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3508811   +drop
3508812   +S_MntCard_Games
3508813   +S_MntMagazines
3508814   +S_NumCatalogPurchases
3508815   +S_NumDealsPurchases
3508816   +S_NumWebPurchases
3508817   +S_RANGE_Frq
3508818   +S_RANGE_Recency
3508819   +S_RANGE_average_purchase
3508820   +S_RANGE_campaign_acceptance
3508821   +H11
3508822   +H12
3508823   +H13
3508824   +H14
3508825   +H15
3508826   +H16
3508827   +H17
3508828   +H18
3508829   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3508830   +end;
MPRINT(EM_DIAGRAM):   end;
3508831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3508832   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3508833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3508834   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3508835   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3508836   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3508837   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3508838   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3508839   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3508840   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3508841   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3508842   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3508843   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3508844   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3508845   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3508846   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3508847   +LENGTH _WARN_ $4
3508848   +      F_DepVar  $ 12
3508849   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3508850   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3508851   +
3508852   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3508853   +
3508854   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3508855   +
3508856   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3508857   +
3508858   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3508859   +
3508860   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3508861   +
3508862   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3508863   +
3508864   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3508865   +
3508866   +      label S_RANGE_campaign_acceptance =
3508867   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3508868   +
3508869   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3508870   +
3508871   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3508872   +
3508873   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3508874   +
3508875   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3508876   +
3508877   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3508878   +
3508879   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3508880   +
3508881   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3508882   +
3508883   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3508884   +
3508885   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3508886   +
3508887   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3508888   +
3508889   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3508890   +
3508891   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3508892   +
3508893   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3508894   +
3508895   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3508896   +
3508897   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3508898   +
3508899   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3508900   +
3508901   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3508902   +
3508903   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3508904   +
3508905   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3508906   +
3508907   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3508908   +
3508909   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3508910   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3508911   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3508912   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3508913   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3508914   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3508915   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3508916   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3508917   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3508918   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508919   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508920   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508921   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3508923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508924   +end;
MPRINT(EM_DIAGRAM):   end;
3508925   +else do;
MPRINT(EM_DIAGRAM):   else do;
3508926   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3508927   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3508928   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3508929   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3508930   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3508931   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3508932   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3508933   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3508934   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508935   +         end;
MPRINT(EM_DIAGRAM):   end;
3508936   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3508937   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3508938   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3508939   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508940   +            end;
MPRINT(EM_DIAGRAM):   end;
3508941   +         end;
MPRINT(EM_DIAGRAM):   end;
3508942   +      end;
MPRINT(EM_DIAGRAM):   end;
3508943   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508944   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3508945   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3508946   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508947   +         end;
MPRINT(EM_DIAGRAM):   end;
3508948   +      end;
MPRINT(EM_DIAGRAM):   end;
3508949   +   end;
MPRINT(EM_DIAGRAM):   end;
3508950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3508951   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3508952   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3508953   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508954   +      end;
MPRINT(EM_DIAGRAM):   end;
3508955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3508956   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3508957   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3508958   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3508959   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3508960   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3508961   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3508962   +         end;
MPRINT(EM_DIAGRAM):   end;
3508963   +      end;
MPRINT(EM_DIAGRAM):   end;
3508964   +   end;
MPRINT(EM_DIAGRAM):   end;
3508965   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3508966   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3508967   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3508968   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3508969   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3508970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3508971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508972   +   end;
MPRINT(EM_DIAGRAM):   end;
3508973   +end;
MPRINT(EM_DIAGRAM):   end;
3508974   +
3508975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508976   +*** Checking missing input Interval
3508977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3508978   +
3508979   +IF NMISS(
3508980   +   MntCard_Games ,
3508981   +   MntMagazines ,
3508982   +   NumCatalogPurchases ,
3508983   +   NumDealsPurchases ,
3508984   +   NumWebPurchases ,
3508985   +   RANGE_Frq ,
3508986   +   RANGE_Recency ,
3508987   +   RANGE_average_purchase ,
3508988   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3508989   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3508990   +
3508991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3508992   +END;
MPRINT(EM_DIAGRAM):   END;
3508993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508994   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3508995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3508996   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3508997   +   S_MntCard_Games  =    -2.32338283686614 +     6.66199975903611 *
3508998   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32338283686614 + 6.66199975903611 * MntCard_Games ;
3508999   +   S_MntMagazines  =     -0.8325320557042 +     17.1994741866694 *
3509000   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8325320557042 + 17.1994741866694 * MntMagazines ;
3509001   +   S_NumCatalogPurchases  =    -3.12043349474051 +     13.5225004476305 *
3509002   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12043349474051 + 13.5225004476305 *
NumCatalogPurchases ;
3509003   +   S_NumDealsPurchases  =    -1.41927585339618 +     11.2551063708879 *
3509004   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41927585339618 + 11.2551063708879 *
NumDealsPurchases ;
3509005   +   S_NumWebPurchases  =    -5.22306432027446 +     12.2561288145765 *
3509006   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22306432027446 + 12.2561288145765 *
NumWebPurchases ;
3509007   +   S_RANGE_Frq  =     -1.3631029802643 +     4.22062585846972 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3631029802643 + 4.22062585846972 * RANGE_Frq ;
3509008   +   S_RANGE_Recency  =     -1.6479341650242 +     3.35435877090359 *
3509009   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6479341650242 + 3.35435877090359 * RANGE_Recency ;
3509010   +   S_RANGE_average_purchase  =    -1.03484328828337 +     5.13992319642613 *
3509011   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03484328828337 + 5.13992319642613 *
RANGE_average_purchase ;
3509012   +   S_RANGE_campaign_acceptance
3509013   +          =    -0.47190562151159 +     5.86072023996265 *
3509014   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47190562151159 + 5.86072023996265 *
RANGE_campaign_acceptance ;
3509015   +END;
MPRINT(EM_DIAGRAM):   END;
3509016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509017   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3509018   +   ELSE S_MntCard_Games  =    -2.32338283686614 +     6.66199975903611 *
3509019   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32338283686614 + 6.66199975903611 *
MntCard_Games ;
3509020   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3509021   +   ELSE S_MntMagazines  =     -0.8325320557042 +     17.1994741866694 *
3509022   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8325320557042 + 17.1994741866694 * MntMagazines
;
3509023   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3509024   +   ELSE S_NumCatalogPurchases
3509025   +          =    -3.12043349474051 +     13.5225004476305 * NumCatalogPurchases
3509026   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12043349474051 + 13.5225004476305 *
NumCatalogPurchases ;
3509027   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3509028   +   ELSE S_NumDealsPurchases  =    -1.41927585339618 +     11.2551063708879 *
3509029   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41927585339618 + 11.2551063708879 *
NumDealsPurchases ;
3509030   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3509031   +   ELSE S_NumWebPurchases  =    -5.22306432027446 +     12.2561288145765 *
3509032   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22306432027446 + 12.2561288145765 *
NumWebPurchases ;
3509033   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3509034   +   ELSE S_RANGE_Frq  =     -1.3631029802643 +     4.22062585846972 * RANGE_Frq
3509035   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3631029802643 + 4.22062585846972 * RANGE_Frq ;
3509036   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3509037   +   ELSE S_RANGE_Recency  =     -1.6479341650242 +     3.35435877090359 *
3509038   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6479341650242 + 3.35435877090359 *
RANGE_Recency ;
3509039   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3509040   +   ELSE S_RANGE_average_purchase
3509041   +          =    -1.03484328828337 +     5.13992319642613 *
3509042   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03484328828337 + 5.13992319642613 *
RANGE_average_purchase ;
3509043   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3509044   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3509045   +   ELSE S_RANGE_campaign_acceptance
3509046   +          =    -0.47190562151159 +     5.86072023996265 *
3509047   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47190562151159 + 5.86072023996265
* RANGE_campaign_acceptance ;
3509048   +END;
MPRINT(EM_DIAGRAM):   END;
3509049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509050   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3509051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509053   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3509054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509055   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509056   +   H11  =     0.85016010991144 * S_MntCard_Games  +    -2.33628397348763 *
3509057   +        S_MntMagazines  +     0.67587845507055 * S_NumCatalogPurchases
3509058   +          +     3.48777427655107 * S_NumDealsPurchases
3509059   +          +     0.09304059809125 * S_NumWebPurchases
3509060   +          +     1.63988900073529 * S_RANGE_Frq  +    -5.57957044277302 *
3509061   +        S_RANGE_Recency  +    -1.93098956817397 * S_RANGE_average_purchase
3509062   +          +     1.14799309117859 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.85016010991144 * S_MntCard_Games + -2.33628397348763 *
S_MntMagazines + 0.67587845507055 * S_NumCatalogPurchases + 3.48777427655107 *
S_NumDealsPurchases + 0.09304059809125 * S_NumWebPurchases + 1.63988900073529 * S_RANGE_Frq +
-5.57957044277302 * S_RANGE_Recency + -1.93098956817397 * S_RANGE_average_purchase +
1.14799309117859 * S_RANGE_campaign_acceptance ;
3509063   +   H12  =     2.08197719374476 * S_MntCard_Games  +    -0.62712035228304 *
3509064   +        S_MntMagazines  +     0.76113794978781 * S_NumCatalogPurchases
3509065   +          +    -0.01702388323604 * S_NumDealsPurchases
3509066   +          +     1.79943470667019 * S_NumWebPurchases
3509067   +          +     1.22079309199997 * S_RANGE_Frq  +    -0.44251306559984 *
3509068   +        S_RANGE_Recency  +     2.76763359007971 * S_RANGE_average_purchase
3509069   +          +     1.11548869691356 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.08197719374476 * S_MntCard_Games + -0.62712035228304 *
S_MntMagazines + 0.76113794978781 * S_NumCatalogPurchases + -0.01702388323604 *
S_NumDealsPurchases + 1.79943470667019 * S_NumWebPurchases + 1.22079309199997 * S_RANGE_Frq +
-0.44251306559984 * S_RANGE_Recency + 2.76763359007971 * S_RANGE_average_purchase +
1.11548869691356 * S_RANGE_campaign_acceptance ;
3509070   +   H13  =    -0.27067627604539 * S_MntCard_Games  +    -0.76289776336595 *
3509071   +        S_MntMagazines  +    -1.35750797464844 * S_NumCatalogPurchases
3509072   +          +    -0.06829359764393 * S_NumDealsPurchases
3509073   +          +    -2.96643159566724 * S_NumWebPurchases
3509074   +          +    -1.29852738916046 * S_RANGE_Frq  +     1.38026604496824 *
3509075   +        S_RANGE_Recency  +     1.22524138103387 * S_RANGE_average_purchase
3509076   +          +    -0.36245007510665 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.27067627604539 * S_MntCard_Games + -0.76289776336595 *
S_MntMagazines + -1.35750797464844 * S_NumCatalogPurchases + -0.06829359764393 *
S_NumDealsPurchases + -2.96643159566724 * S_NumWebPurchases + -1.29852738916046 * S_RANGE_Frq
+ 1.38026604496824 * S_RANGE_Recency + 1.22524138103387 * S_RANGE_average_purchase +
-0.36245007510665 * S_RANGE_campaign_acceptance ;
3509077   +   H14  =    -2.13829903366947 * S_MntCard_Games  +     -0.6171354330778 *
3509078   +        S_MntMagazines  +    -3.63626026758689 * S_NumCatalogPurchases
3509079   +          +    -1.58788759892173 * S_NumDealsPurchases
3509080   +          +    -0.94917347911569 * S_NumWebPurchases
3509081   +          +     2.79509766432696 * S_RANGE_Frq  +     3.33518628435562 *
3509082   +        S_RANGE_Recency  +     -5.5105166946644 * S_RANGE_average_purchase
3509083   +          +    -1.91694654414825 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -2.13829903366947 * S_MntCard_Games + -0.6171354330778 *
S_MntMagazines + -3.63626026758689 * S_NumCatalogPurchases + -1.58788759892173 *
S_NumDealsPurchases + -0.94917347911569 * S_NumWebPurchases + 2.79509766432696 * S_RANGE_Frq +
3.33518628435562 * S_RANGE_Recency + -5.5105166946644 * S_RANGE_average_purchase +
-1.91694654414825 * S_RANGE_campaign_acceptance ;
3509084   +   H15  =     1.41933553014249 * S_MntCard_Games  +     1.51082255309942 *
3509085   +        S_MntMagazines  +     0.06844304399953 * S_NumCatalogPurchases
3509086   +          +     0.86457749424824 * S_NumDealsPurchases
3509087   +          +    -2.44645529754948 * S_NumWebPurchases
3509088   +          +    -0.85610920326601 * S_RANGE_Frq  +     1.23143890252432 *
3509089   +        S_RANGE_Recency  +     1.74522226737033 * S_RANGE_average_purchase
3509090   +          +     1.84217098918704 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 1.41933553014249 * S_MntCard_Games + 1.51082255309942 *
S_MntMagazines + 0.06844304399953 * S_NumCatalogPurchases + 0.86457749424824 *
S_NumDealsPurchases + -2.44645529754948 * S_NumWebPurchases + -0.85610920326601 * S_RANGE_Frq
+ 1.23143890252432 * S_RANGE_Recency + 1.74522226737033 * S_RANGE_average_purchase +
1.84217098918704 * S_RANGE_campaign_acceptance ;
3509091   +   H16  =    -3.23621944182609 * S_MntCard_Games  +     1.17674825062538 *
3509092   +        S_MntMagazines  +    -0.32955316199793 * S_NumCatalogPurchases
3509093   +          +    -2.78810137805369 * S_NumDealsPurchases
3509094   +          +    -0.84609187098241 * S_NumWebPurchases
3509095   +          +    -0.54210718242375 * S_RANGE_Frq  +     4.05259420397919 *
3509096   +        S_RANGE_Recency  +     0.13096342392868 * S_RANGE_average_purchase
3509097   +          +    -2.42962742476925 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -3.23621944182609 * S_MntCard_Games + 1.17674825062538 *
S_MntMagazines + -0.32955316199793 * S_NumCatalogPurchases + -2.78810137805369 *
S_NumDealsPurchases + -0.84609187098241 * S_NumWebPurchases + -0.54210718242375 * S_RANGE_Frq
+ 4.05259420397919 * S_RANGE_Recency + 0.13096342392868 * S_RANGE_average_purchase +
-2.42962742476925 * S_RANGE_campaign_acceptance ;
3509098   +   H17  =      1.2959707146676 * S_MntCard_Games  +     1.13377065554308 *
3509099   +        S_MntMagazines  +     2.14801110324258 * S_NumCatalogPurchases
3509100   +          +    -2.86438471581071 * S_NumDealsPurchases
3509101   +          +      2.0891928673268 * S_NumWebPurchases
3509102   +          +     0.65245765748053 * S_RANGE_Frq  +    -1.34614669195863 *
3509103   +        S_RANGE_Recency  +     1.00960934640502 * S_RANGE_average_purchase
3509104   +          +     0.23339591834082 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.2959707146676 * S_MntCard_Games + 1.13377065554308 *
S_MntMagazines + 2.14801110324258 * S_NumCatalogPurchases + -2.86438471581071 *
S_NumDealsPurchases + 2.0891928673268 * S_NumWebPurchases + 0.65245765748053 * S_RANGE_Frq +
-1.34614669195863 * S_RANGE_Recency + 1.00960934640502 * S_RANGE_average_purchase +
0.23339591834082 * S_RANGE_campaign_acceptance ;
3509105   +   H18  =     -2.6990431494054 * S_MntCard_Games  +    -0.68134313388626 *
3509106   +        S_MntMagazines  +    -0.13748705462602 * S_NumCatalogPurchases
3509107   +          +    -0.06352312183336 * S_NumDealsPurchases
3509108   +          +    -2.20438940908992 * S_NumWebPurchases
3509109   +          +    -0.49764186732548 * S_RANGE_Frq  +    -1.03540799376901 *
3509110   +        S_RANGE_Recency  +     0.44071111461477 * S_RANGE_average_purchase
3509111   +          +      -0.038622123969 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -2.6990431494054 * S_MntCard_Games + -0.68134313388626 *
S_MntMagazines + -0.13748705462602 * S_NumCatalogPurchases + -0.06352312183336 *
S_NumDealsPurchases + -2.20438940908992 * S_NumWebPurchases + -0.49764186732548 * S_RANGE_Frq
+ -1.03540799376901 * S_RANGE_Recency + 0.44071111461477 * S_RANGE_average_purchase +
-0.038622123969 * S_RANGE_campaign_acceptance ;
3509112   +   H11  = H11  +     -2.3231745562594 * Marital_StatusDivorced
3509113   +          +    -0.22573628593673 * Marital_StatusMarried
3509114   +          +     0.95689447133312 * Marital_StatusSingle
3509115   +          +    -2.03145809988948 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -2.3231745562594 * Marital_StatusDivorced +
-0.22573628593673 * Marital_StatusMarried + 0.95689447133312 * Marital_StatusSingle +
-2.03145809988948 * Marital_StatusTogether ;
3509116   +   H12  = H12  +    -0.62806558970807 * Marital_StatusDivorced
3509117   +          +    -1.85905748280115 * Marital_StatusMarried
3509118   +          +     0.34311137949726 * Marital_StatusSingle
3509119   +          +    -1.02609851596746 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.62806558970807 * Marital_StatusDivorced +
-1.85905748280115 * Marital_StatusMarried + 0.34311137949726 * Marital_StatusSingle +
-1.02609851596746 * Marital_StatusTogether ;
3509120   +   H13  = H13  +    -1.06872444108979 * Marital_StatusDivorced
3509121   +          +    -0.53313771933267 * Marital_StatusMarried
3509122   +          +     2.01788254274137 * Marital_StatusSingle
3509123   +          +     1.02590257516669 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06872444108979 * Marital_StatusDivorced +
-0.53313771933267 * Marital_StatusMarried + 2.01788254274137 * Marital_StatusSingle +
1.02590257516669 * Marital_StatusTogether ;
3509124   +   H14  = H14  +     0.49825263507453 * Marital_StatusDivorced
3509125   +          +     1.56008966029426 * Marital_StatusMarried
3509126   +          +    -1.09819379092679 * Marital_StatusSingle
3509127   +          +    -0.36774326752325 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.49825263507453 * Marital_StatusDivorced + 1.56008966029426
* Marital_StatusMarried + -1.09819379092679 * Marital_StatusSingle + -0.36774326752325 *
Marital_StatusTogether ;
3509128   +   H15  = H15  +     0.77584849879593 * Marital_StatusDivorced
3509129   +          +    -1.17910372189843 * Marital_StatusMarried
3509130   +          +     0.37392510387117 * Marital_StatusSingle
3509131   +          +    -1.94958131428449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.77584849879593 * Marital_StatusDivorced +
-1.17910372189843 * Marital_StatusMarried + 0.37392510387117 * Marital_StatusSingle +
-1.94958131428449 * Marital_StatusTogether ;
3509132   +   H16  = H16  +      0.8387684188698 * Marital_StatusDivorced
3509133   +          +     0.20586143694541 * Marital_StatusMarried
3509134   +          +    -0.61826486615538 * Marital_StatusSingle
3509135   +          +    -0.19186432387758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.8387684188698 * Marital_StatusDivorced + 0.20586143694541
* Marital_StatusMarried + -0.61826486615538 * Marital_StatusSingle + -0.19186432387758 *
Marital_StatusTogether ;
3509136   +   H17  = H17  +     2.91111537325487 * Marital_StatusDivorced
3509137   +          +    -2.47604500148329 * Marital_StatusMarried
3509138   +          +     2.16741127668313 * Marital_StatusSingle
3509139   +          +    -2.63929968404668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 2.91111537325487 * Marital_StatusDivorced +
-2.47604500148329 * Marital_StatusMarried + 2.16741127668313 * Marital_StatusSingle +
-2.63929968404668 * Marital_StatusTogether ;
3509140   +   H18  = H18  +     1.30760765976866 * Marital_StatusDivorced
3509141   +          +     0.73248424797255 * Marital_StatusMarried
3509142   +          +     1.28201617709181 * Marital_StatusSingle
3509143   +          +    -2.40160404178044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 1.30760765976866 * Marital_StatusDivorced + 0.73248424797255
* Marital_StatusMarried + 1.28201617709181 * Marital_StatusSingle + -2.40160404178044 *
Marital_StatusTogether ;
3509144   +   H11  =     1.79894058923273 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.79894058923273 + H11 ;
3509145   +   H12  =     3.32595939568436 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.32595939568436 + H12 ;
3509146   +   H13  =     1.71066051207142 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.71066051207142 + H13 ;
3509147   +   H14  =     0.23591208413096 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.23591208413096 + H14 ;
3509148   +   H15  =    -4.87179551637986 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.87179551637986 + H15 ;
3509149   +   H16  =     5.50563069025181 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 5.50563069025181 + H16 ;
3509150   +   H17  =    -7.05203808268389 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -7.05203808268389 + H17 ;
3509151   +   H18  =     -4.0702460022152 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -4.0702460022152 + H18 ;
3509152   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3509153   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3509154   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3509155   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3509156   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3509157   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3509158   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3509159   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3509160   +END;
MPRINT(EM_DIAGRAM):   END;
3509161   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509162   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3509163   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3509164   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3509165   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3509166   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3509167   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3509168   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3509169   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3509170   +END;
MPRINT(EM_DIAGRAM):   END;
3509171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509172   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3509173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509174   +
3509175   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3509176   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3509177   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3509178   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3509179   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3509180   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3509181   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3509182   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3509183   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3509184   +end;
MPRINT(EM_DIAGRAM):   end;
3509185   +else do;
MPRINT(EM_DIAGRAM):   else do;
3509186   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3509187   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3509188   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3509189   +   end;
MPRINT(EM_DIAGRAM):   end;
3509190   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3509191   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3509192   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3509193   +   end;
MPRINT(EM_DIAGRAM):   end;
3509194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3509195   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3509196   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3509197   +   end;
MPRINT(EM_DIAGRAM):   end;
3509198   +end;
MPRINT(EM_DIAGRAM):   end;
3509199   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509200   +   P_DepVar1  =     6.50914027088833 * H11  +     3.09870916784693 * H12
3509201   +          +    -2.69284389449393 * H13  +    -4.69977417095834 * H14
3509202   +          +     7.19062032738329 * H15  +    -6.52460345607419 * H16
3509203   +          +     5.89302579497646 * H17  +     4.25643904376582 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.50914027088833 * H11 + 3.09870916784693 * H12 +
-2.69284389449393 * H13 + -4.69977417095834 * H14 + 7.19062032738329 * H15 + -6.52460345607419
* H16 + 5.89302579497646 * H17 + 4.25643904376582 * H18 ;
3509204   +   P_DepVar1  =     -2.6465707854684 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.6465707854684 + P_DepVar1 ;
3509205   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3509206   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3509207   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3509208   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3509209   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3509210   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3509211   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3509212   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3509213   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3509214   +END;
MPRINT(EM_DIAGRAM):   END;
3509215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509216   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3509217   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3509218   +END;
MPRINT(EM_DIAGRAM):   END;
3509219   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3509220   +   P_DepVar1  =     0.13503649635036;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13503649635036;
3509221   +   P_DepVar0  =     0.86496350364963;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86496350364963;
3509222   +END;
MPRINT(EM_DIAGRAM):   END;
3509223   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3509224   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3509225   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3509226   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3509227   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3509228   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3509229   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3509230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509231   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3509232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509233   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3509234   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3509235   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3509236   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3509237   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3509238   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3509239   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3509240   +END;
MPRINT(EM_DIAGRAM):   END;
3509241   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3509242   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3509243   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3509244   +drop
3509245   +S_MntCard_Games
3509246   +S_MntMagazines
3509247   +S_NumCatalogPurchases
3509248   +S_NumDealsPurchases
3509249   +S_NumWebPurchases
3509250   +S_RANGE_Frq
3509251   +S_RANGE_Recency
3509252   +S_RANGE_average_purchase
3509253   +S_RANGE_campaign_acceptance
3509254   +H11
3509255   +H12
3509256   +H13
3509257   +H14
3509258   +H15
3509259   +H16
3509260   +H17
3509261   +H18
3509262   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3509263   +end;
MPRINT(EM_DIAGRAM):   end;
3509264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3509265   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3509266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3509267   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3509268   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3509269   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3509270   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3509271   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3509272   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3509273   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3509274   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3509275   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3509276   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3509277   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3509278   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3509279   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3509280   +LENGTH _WARN_ $4
3509281   +      F_DepVar  $ 12
3509282   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3509283   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3509284   +
3509285   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3509286   +
3509287   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3509288   +
3509289   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3509290   +
3509291   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3509292   +
3509293   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3509294   +
3509295   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3509296   +
3509297   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3509298   +
3509299   +      label S_RANGE_campaign_acceptance =
3509300   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3509301   +
3509302   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3509303   +
3509304   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3509305   +
3509306   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3509307   +
3509308   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3509309   +
3509310   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3509311   +
3509312   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3509313   +
3509314   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3509315   +
3509316   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3509317   +
3509318   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3509319   +
3509320   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3509321   +
3509322   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3509323   +
3509324   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3509325   +
3509326   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3509327   +
3509328   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3509329   +
3509330   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3509331   +
3509332   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3509333   +
3509334   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3509335   +
3509336   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3509337   +
3509338   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3509339   +
3509340   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3509341   +
3509342   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3509343   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3509344   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3509345   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3509346   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3509347   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3509348   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3509349   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3509350   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3509351   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3509352   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3509353   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3509354   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3509355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3509356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509357   +end;
MPRINT(EM_DIAGRAM):   end;
3509358   +else do;
MPRINT(EM_DIAGRAM):   else do;
3509359   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3509360   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3509361   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3509362   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3509363   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3509364   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3509365   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3509366   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3509367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509368   +         end;
MPRINT(EM_DIAGRAM):   end;
3509369   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3509370   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3509371   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3509372   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509373   +            end;
MPRINT(EM_DIAGRAM):   end;
3509374   +         end;
MPRINT(EM_DIAGRAM):   end;
3509375   +      end;
MPRINT(EM_DIAGRAM):   end;
3509376   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3509377   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3509378   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3509379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509380   +         end;
MPRINT(EM_DIAGRAM):   end;
3509381   +      end;
MPRINT(EM_DIAGRAM):   end;
3509382   +   end;
MPRINT(EM_DIAGRAM):   end;
3509383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3509384   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3509385   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3509386   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509387   +      end;
MPRINT(EM_DIAGRAM):   end;
3509388   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3509389   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3509390   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3509391   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3509392   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3509393   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3509394   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509395   +         end;
MPRINT(EM_DIAGRAM):   end;
3509396   +      end;
MPRINT(EM_DIAGRAM):   end;
3509397   +   end;
MPRINT(EM_DIAGRAM):   end;
3509398   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3509399   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3509400   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3509401   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3509402   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3509403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3509404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509405   +   end;
MPRINT(EM_DIAGRAM):   end;
3509406   +end;
MPRINT(EM_DIAGRAM):   end;
3509407   +
3509408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509409   +*** Checking missing input Interval
3509410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3509411   +
3509412   +IF NMISS(
3509413   +   MntCard_Games ,
3509414   +   MntMagazines ,
3509415   +   NumCatalogPurchases ,
3509416   +   NumDealsPurchases ,
3509417   +   NumWebPurchases ,
3509418   +   RANGE_Frq ,
3509419   +   RANGE_Recency ,
3509420   +   RANGE_average_purchase ,
3509421   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3509422   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3509423   +
3509424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509425   +END;
MPRINT(EM_DIAGRAM):   END;
3509426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509427   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3509428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509429   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509430   +   S_MntCard_Games  =    -2.34073404187821 +      6.7140682175756 *
3509431   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.34073404187821 + 6.7140682175756 * MntCard_Games ;
3509432   +   S_MntMagazines  =    -0.83486906669326 +     17.0223623645148 *
3509433   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83486906669326 + 17.0223623645148 * MntMagazines ;
3509434   +   S_NumCatalogPurchases  =    -3.10856619133241 +     13.4823795884925 *
3509435   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10856619133241 + 13.4823795884925 *
NumCatalogPurchases ;
3509436   +   S_NumDealsPurchases  =    -1.41580172191054 +     11.1919313184683 *
3509437   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41580172191054 + 11.1919313184683 *
NumDealsPurchases ;
3509438   +   S_NumWebPurchases  =    -5.23777786696341 +     12.2616584441589 *
3509439   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23777786696341 + 12.2616584441589 *
NumWebPurchases ;
3509440   +   S_RANGE_Frq  =    -1.35679969435174 +     4.21451957534563 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35679969435174 + 4.21451957534563 * RANGE_Frq ;
3509441   +   S_RANGE_Recency  =    -1.65258261612724 +     3.34484341773445 *
3509442   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65258261612724 + 3.34484341773445 * RANGE_Recency ;
3509443   +   S_RANGE_average_purchase  =    -1.03633360542203 +     5.21171888136895 *
3509444   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03633360542203 + 5.21171888136895 *
RANGE_average_purchase ;
3509445   +   S_RANGE_campaign_acceptance
3509446   +          =    -0.46918041399392 +     5.88681066447083 *
3509447   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.46918041399392 + 5.88681066447083 *
RANGE_campaign_acceptance ;
3509448   +END;
MPRINT(EM_DIAGRAM):   END;
3509449   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509450   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3509451   +   ELSE S_MntCard_Games  =    -2.34073404187821 +      6.7140682175756 *
3509452   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.34073404187821 + 6.7140682175756 *
MntCard_Games ;
3509453   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3509454   +   ELSE S_MntMagazines  =    -0.83486906669326 +     17.0223623645148 *
3509455   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83486906669326 + 17.0223623645148 *
MntMagazines ;
3509456   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3509457   +   ELSE S_NumCatalogPurchases
3509458   +          =    -3.10856619133241 +     13.4823795884925 * NumCatalogPurchases
3509459   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10856619133241 + 13.4823795884925 *
NumCatalogPurchases ;
3509460   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3509461   +   ELSE S_NumDealsPurchases  =    -1.41580172191054 +     11.1919313184683 *
3509462   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41580172191054 + 11.1919313184683 *
NumDealsPurchases ;
3509463   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3509464   +   ELSE S_NumWebPurchases  =    -5.23777786696341 +     12.2616584441589 *
3509465   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23777786696341 + 12.2616584441589 *
NumWebPurchases ;
3509466   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3509467   +   ELSE S_RANGE_Frq  =    -1.35679969435174 +     4.21451957534563 * RANGE_Frq
3509468   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35679969435174 + 4.21451957534563 * RANGE_Frq ;
3509469   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3509470   +   ELSE S_RANGE_Recency  =    -1.65258261612724 +     3.34484341773445 *
3509471   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65258261612724 + 3.34484341773445 *
RANGE_Recency ;
3509472   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3509473   +   ELSE S_RANGE_average_purchase
3509474   +          =    -1.03633360542203 +     5.21171888136895 *
3509475   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03633360542203 + 5.21171888136895 *
RANGE_average_purchase ;
3509476   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3509477   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3509478   +   ELSE S_RANGE_campaign_acceptance
3509479   +          =    -0.46918041399392 +     5.88681066447083 *
3509480   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.46918041399392 + 5.88681066447083
* RANGE_campaign_acceptance ;
3509481   +END;
MPRINT(EM_DIAGRAM):   END;
3509482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509483   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3509484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509486   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3509487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509488   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509489   +   H11  =     1.23964027028827 * S_MntCard_Games  +     -2.1918626441965 *
3509490   +        S_MntMagazines  +    -0.07134166518723 * S_NumCatalogPurchases
3509491   +          +     3.19949574528097 * S_NumDealsPurchases
3509492   +          +     0.61533139481655 * S_NumWebPurchases
3509493   +          +     2.55499448972156 * S_RANGE_Frq  +    -5.72471950350638 *
3509494   +        S_RANGE_Recency  +     0.17508160010943 * S_RANGE_average_purchase
3509495   +          +     1.13968426237516 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.23964027028827 * S_MntCard_Games + -2.1918626441965 *
S_MntMagazines + -0.07134166518723 * S_NumCatalogPurchases + 3.19949574528097 *
S_NumDealsPurchases + 0.61533139481655 * S_NumWebPurchases + 2.55499448972156 * S_RANGE_Frq +
-5.72471950350638 * S_RANGE_Recency + 0.17508160010943 * S_RANGE_average_purchase +
1.13968426237516 * S_RANGE_campaign_acceptance ;
3509496   +   H12  =     2.32456097227919 * S_MntCard_Games  +    -0.45648523130163 *
3509497   +        S_MntMagazines  +     0.85195680762118 * S_NumCatalogPurchases
3509498   +          +    -0.82859967711319 * S_NumDealsPurchases
3509499   +          +     1.42467987216563 * S_NumWebPurchases
3509500   +          +     0.48773478529889 * S_RANGE_Frq  +    -0.39459194764902 *
3509501   +        S_RANGE_Recency  +     1.51982774567671 * S_RANGE_average_purchase
3509502   +          +     0.51353187907656 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.32456097227919 * S_MntCard_Games + -0.45648523130163 *
S_MntMagazines + 0.85195680762118 * S_NumCatalogPurchases + -0.82859967711319 *
S_NumDealsPurchases + 1.42467987216563 * S_NumWebPurchases + 0.48773478529889 * S_RANGE_Frq +
-0.39459194764902 * S_RANGE_Recency + 1.51982774567671 * S_RANGE_average_purchase +
0.51353187907656 * S_RANGE_campaign_acceptance ;
3509503   +   H13  =    -0.20683488769972 * S_MntCard_Games  +     -0.0467368570446 *
3509504   +        S_MntMagazines  +    -0.97478056694633 * S_NumCatalogPurchases
3509505   +          +      -0.689837706182 * S_NumDealsPurchases
3509506   +          +    -2.01396291818154 * S_NumWebPurchases
3509507   +          +    -0.86383187148473 * S_RANGE_Frq  +     1.83590412245178 *
3509508   +        S_RANGE_Recency  +     1.14870475789173 * S_RANGE_average_purchase
3509509   +          +    -0.51044747391089 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.20683488769972 * S_MntCard_Games + -0.0467368570446 *
S_MntMagazines + -0.97478056694633 * S_NumCatalogPurchases + -0.689837706182 *
S_NumDealsPurchases + -2.01396291818154 * S_NumWebPurchases + -0.86383187148473 * S_RANGE_Frq
+ 1.83590412245178 * S_RANGE_Recency + 1.14870475789173 * S_RANGE_average_purchase +
-0.51044747391089 * S_RANGE_campaign_acceptance ;
3509510   +   H14  =    -3.70732407158064 * S_MntCard_Games  +     -1.8438777995423 *
3509511   +        S_MntMagazines  +    -3.48245219916883 * S_NumCatalogPurchases
3509512   +          +    -2.38496650721934 * S_NumDealsPurchases
3509513   +          +    -0.26622211148211 * S_NumWebPurchases
3509514   +          +     3.18965744723515 * S_RANGE_Frq  +     4.75220915025294 *
3509515   +        S_RANGE_Recency  +    -6.82475641630018 * S_RANGE_average_purchase
3509516   +          +     -1.8059758626538 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -3.70732407158064 * S_MntCard_Games + -1.8438777995423 *
S_MntMagazines + -3.48245219916883 * S_NumCatalogPurchases + -2.38496650721934 *
S_NumDealsPurchases + -0.26622211148211 * S_NumWebPurchases + 3.18965744723515 * S_RANGE_Frq +
4.75220915025294 * S_RANGE_Recency + -6.82475641630018 * S_RANGE_average_purchase +
-1.8059758626538 * S_RANGE_campaign_acceptance ;
3509517   +   H15  =     2.12835865359013 * S_MntCard_Games  +     1.32856905748288 *
3509518   +        S_MntMagazines  +     0.77822297815771 * S_NumCatalogPurchases
3509519   +          +     0.43793863740421 * S_NumDealsPurchases
3509520   +          +    -3.14723006336172 * S_NumWebPurchases
3509521   +          +    -4.56661779667948 * S_RANGE_Frq  +     0.07492728582657 *
3509522   +        S_RANGE_Recency  +     3.50382097147699 * S_RANGE_average_purchase
3509523   +          +     2.99275158102928 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 2.12835865359013 * S_MntCard_Games + 1.32856905748288 *
S_MntMagazines + 0.77822297815771 * S_NumCatalogPurchases + 0.43793863740421 *
S_NumDealsPurchases + -3.14723006336172 * S_NumWebPurchases + -4.56661779667948 * S_RANGE_Frq
+ 0.07492728582657 * S_RANGE_Recency + 3.50382097147699 * S_RANGE_average_purchase +
2.99275158102928 * S_RANGE_campaign_acceptance ;
3509524   +   H16  =    -2.29731399516462 * S_MntCard_Games  +     1.24457886709809 *
3509525   +        S_MntMagazines  +    -0.93744641258032 * S_NumCatalogPurchases
3509526   +          +    -1.82575691774556 * S_NumDealsPurchases
3509527   +          +    -1.54794274314523 * S_NumWebPurchases
3509528   +          +    -0.31017898498703 * S_RANGE_Frq  +     3.28499423602099 *
3509529   +        S_RANGE_Recency  +      0.5915544746976 * S_RANGE_average_purchase
3509530   +          +    -2.05785138687889 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.29731399516462 * S_MntCard_Games + 1.24457886709809 *
S_MntMagazines + -0.93744641258032 * S_NumCatalogPurchases + -1.82575691774556 *
S_NumDealsPurchases + -1.54794274314523 * S_NumWebPurchases + -0.31017898498703 * S_RANGE_Frq
+ 3.28499423602099 * S_RANGE_Recency + 0.5915544746976 * S_RANGE_average_purchase +
-2.05785138687889 * S_RANGE_campaign_acceptance ;
3509531   +   H17  =      0.7410258203257 * S_MntCard_Games  +     1.95711452007307 *
3509532   +        S_MntMagazines  +     1.81550328450953 * S_NumCatalogPurchases
3509533   +          +    -1.83722068185494 * S_NumDealsPurchases
3509534   +          +     1.46792202863609 * S_NumWebPurchases
3509535   +          +      2.2485307538409 * S_RANGE_Frq  +    -0.69754109047115 *
3509536   +        S_RANGE_Recency  +    -0.80478848833751 * S_RANGE_average_purchase
3509537   +          +    -0.66253594242999 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 0.7410258203257 * S_MntCard_Games + 1.95711452007307 *
S_MntMagazines + 1.81550328450953 * S_NumCatalogPurchases + -1.83722068185494 *
S_NumDealsPurchases + 1.46792202863609 * S_NumWebPurchases + 2.2485307538409 * S_RANGE_Frq +
-0.69754109047115 * S_RANGE_Recency + -0.80478848833751 * S_RANGE_average_purchase +
-0.66253594242999 * S_RANGE_campaign_acceptance ;
3509538   +   H18  =    -2.80287485939154 * S_MntCard_Games  +    -0.41356149394426 *
3509539   +        S_MntMagazines  +     1.14656134044288 * S_NumCatalogPurchases
3509540   +          +     1.71558478029091 * S_NumDealsPurchases
3509541   +          +    -1.67599618378786 * S_NumWebPurchases
3509542   +          +     1.89721028927749 * S_RANGE_Frq  +    -0.06572048797896 *
3509543   +        S_RANGE_Recency  +    -1.03578547623929 * S_RANGE_average_purchase
3509544   +          +      1.0506682568674 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -2.80287485939154 * S_MntCard_Games + -0.41356149394426 *
S_MntMagazines + 1.14656134044288 * S_NumCatalogPurchases + 1.71558478029091 *
S_NumDealsPurchases + -1.67599618378786 * S_NumWebPurchases + 1.89721028927749 * S_RANGE_Frq +
-0.06572048797896 * S_RANGE_Recency + -1.03578547623929 * S_RANGE_average_purchase +
1.0506682568674 * S_RANGE_campaign_acceptance ;
3509545   +   H11  = H11  +    -0.32223177146825 * Marital_StatusDivorced
3509546   +          +    -1.02135995107861 * Marital_StatusMarried
3509547   +          +     1.46027966762788 * Marital_StatusSingle
3509548   +          +    -1.06523429189963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.32223177146825 * Marital_StatusDivorced +
-1.02135995107861 * Marital_StatusMarried + 1.46027966762788 * Marital_StatusSingle +
-1.06523429189963 * Marital_StatusTogether ;
3509549   +   H12  = H12  +    -1.41256251204944 * Marital_StatusDivorced
3509550   +          +    -0.68522190914516 * Marital_StatusMarried
3509551   +          +     0.45551288144284 * Marital_StatusSingle
3509552   +          +     0.55411862585661 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.41256251204944 * Marital_StatusDivorced +
-0.68522190914516 * Marital_StatusMarried + 0.45551288144284 * Marital_StatusSingle +
0.55411862585661 * Marital_StatusTogether ;
3509553   +   H13  = H13  +     0.44231549022428 * Marital_StatusDivorced
3509554   +          +     0.37915548920208 * Marital_StatusMarried
3509555   +          +     1.16383967725772 * Marital_StatusSingle
3509556   +          +     0.73658606623814 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.44231549022428 * Marital_StatusDivorced + 0.37915548920208
* Marital_StatusMarried + 1.16383967725772 * Marital_StatusSingle + 0.73658606623814 *
Marital_StatusTogether ;
3509557   +   H14  = H14  +    -1.35632760406693 * Marital_StatusDivorced
3509558   +          +     1.89096669996592 * Marital_StatusMarried
3509559   +          +    -1.41816656293949 * Marital_StatusSingle
3509560   +          +    -0.94738776774771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.35632760406693 * Marital_StatusDivorced +
1.89096669996592 * Marital_StatusMarried + -1.41816656293949 * Marital_StatusSingle +
-0.94738776774771 * Marital_StatusTogether ;
3509561   +   H15  = H15  +     1.99341380842196 * Marital_StatusDivorced
3509562   +          +     0.94787539710388 * Marital_StatusMarried
3509563   +          +    -0.52101025726451 * Marital_StatusSingle
3509564   +          +    -0.71952329859099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.99341380842196 * Marital_StatusDivorced + 0.94787539710388
* Marital_StatusMarried + -0.52101025726451 * Marital_StatusSingle + -0.71952329859099 *
Marital_StatusTogether ;
3509565   +   H16  = H16  +     1.13283077468694 * Marital_StatusDivorced
3509566   +          +      1.0058618785042 * Marital_StatusMarried
3509567   +          +    -1.63022325534027 * Marital_StatusSingle
3509568   +          +     0.97647228176887 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 1.13283077468694 * Marital_StatusDivorced + 1.0058618785042
* Marital_StatusMarried + -1.63022325534027 * Marital_StatusSingle + 0.97647228176887 *
Marital_StatusTogether ;
3509569   +   H17  = H17  +     3.67601862417615 * Marital_StatusDivorced
3509570   +          +     -3.0903668267181 * Marital_StatusMarried
3509571   +          +     1.65025264359293 * Marital_StatusSingle
3509572   +          +    -3.12814149988638 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 3.67601862417615 * Marital_StatusDivorced + -3.0903668267181
* Marital_StatusMarried + 1.65025264359293 * Marital_StatusSingle + -3.12814149988638 *
Marital_StatusTogether ;
3509573   +   H18  = H18  +     2.74166364978704 * Marital_StatusDivorced
3509574   +          +     -0.1387129838496 * Marital_StatusMarried
3509575   +          +     0.07360142055096 * Marital_StatusSingle
3509576   +          +    -3.07581323313514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 2.74166364978704 * Marital_StatusDivorced + -0.1387129838496
* Marital_StatusMarried + 0.07360142055096 * Marital_StatusSingle + -3.07581323313514 *
Marital_StatusTogether ;
3509577   +   H11  =     2.05170857472302 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.05170857472302 + H11 ;
3509578   +   H12  =     3.03625954637926 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.03625954637926 + H12 ;
3509579   +   H13  =     3.31751909292179 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 3.31751909292179 + H13 ;
3509580   +   H14  =      0.8045871211444 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.8045871211444 + H14 ;
3509581   +   H15  =    -5.29310676958116 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -5.29310676958116 + H15 ;
3509582   +   H16  =     4.00164827407552 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.00164827407552 + H16 ;
3509583   +   H17  =    -5.76003272807099 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -5.76003272807099 + H17 ;
3509584   +   H18  =      -5.459932272518 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -5.459932272518 + H18 ;
3509585   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3509586   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3509587   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3509588   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3509589   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3509590   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3509591   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3509592   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3509593   +END;
MPRINT(EM_DIAGRAM):   END;
3509594   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509595   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3509596   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3509597   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3509598   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3509599   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3509600   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3509601   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3509602   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3509603   +END;
MPRINT(EM_DIAGRAM):   END;
3509604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509605   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3509606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509607   +
3509608   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3509609   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3509610   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3509611   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3509612   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3509613   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3509614   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3509615   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3509616   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3509617   +end;
MPRINT(EM_DIAGRAM):   end;
3509618   +else do;
MPRINT(EM_DIAGRAM):   else do;
3509619   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3509620   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3509621   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3509622   +   end;
MPRINT(EM_DIAGRAM):   end;
3509623   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3509624   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3509625   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3509626   +   end;
MPRINT(EM_DIAGRAM):   end;
3509627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3509628   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3509629   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3509630   +   end;
MPRINT(EM_DIAGRAM):   end;
3509631   +end;
MPRINT(EM_DIAGRAM):   end;
3509632   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509633   +   P_DepVar1  =     6.69084035613052 * H11  +     2.63159163103504 * H12
3509634   +          +    -3.58113215426954 * H13  +    -5.34339591770654 * H14
3509635   +          +     7.40535446875213 * H15  +    -7.57613838847558 * H16
3509636   +          +     5.48083838408418 * H17  +     5.60946218116241 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.69084035613052 * H11 + 2.63159163103504 * H12 +
-3.58113215426954 * H13 + -5.34339591770654 * H14 + 7.40535446875213 * H15 + -7.57613838847558
* H16 + 5.48083838408418 * H17 + 5.60946218116241 * H18 ;
3509637   +   P_DepVar1  =    -3.06109137466985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.06109137466985 + P_DepVar1 ;
3509638   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3509639   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3509640   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3509641   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3509642   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3509643   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3509644   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3509645   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3509646   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3509647   +END;
MPRINT(EM_DIAGRAM):   END;
3509648   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509649   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3509650   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3509651   +END;
MPRINT(EM_DIAGRAM):   END;
3509652   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3509653   +   P_DepVar1  =     0.13351498637602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13351498637602;
3509654   +   P_DepVar0  =     0.86648501362397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86648501362397;
3509655   +END;
MPRINT(EM_DIAGRAM):   END;
3509656   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3509657   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3509658   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3509659   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3509660   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3509661   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3509662   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3509663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509664   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3509665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509666   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3509667   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3509668   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3509669   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3509670   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3509671   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3509672   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3509673   +END;
MPRINT(EM_DIAGRAM):   END;
3509674   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3509675   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3509676   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3509677   +drop
3509678   +S_MntCard_Games
3509679   +S_MntMagazines
3509680   +S_NumCatalogPurchases
3509681   +S_NumDealsPurchases
3509682   +S_NumWebPurchases
3509683   +S_RANGE_Frq
3509684   +S_RANGE_Recency
3509685   +S_RANGE_average_purchase
3509686   +S_RANGE_campaign_acceptance
3509687   +H11
3509688   +H12
3509689   +H13
3509690   +H14
3509691   +H15
3509692   +H16
3509693   +H17
3509694   +H18
3509695   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3509696   +end;
MPRINT(EM_DIAGRAM):   end;
3509697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3509698   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3509699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3509700   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3509701   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3509702   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3509703   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3509704   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3509705   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3509706   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3509707   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3509708   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3509709   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3509710   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3509711   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3509712   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3509713   +LENGTH _WARN_ $4
3509714   +      F_DepVar  $ 12
3509715   +;
The SAS System
 
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3509716   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3509717   +
3509718   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3509719   +
3509720   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3509721   +
3509722   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3509723   +
3509724   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3509725   +
3509726   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3509727   +
3509728   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3509729   +
3509730   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3509731   +
3509732   +      label S_RANGE_campaign_acceptance =
3509733   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3509734   +
3509735   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3509736   +
3509737   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3509738   +
3509739   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3509740   +
3509741   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3509742   +
3509743   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3509744   +
3509745   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3509746   +
3509747   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3509748   +
3509749   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3509750   +
3509751   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3509752   +
3509753   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3509754   +
3509755   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3509756   +
3509757   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3509758   +
3509759   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3509760   +
3509761   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3509762   +
3509763   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3509764   +
3509765   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3509766   +
3509767   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3509768   +
3509769   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3509770   +
3509771   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3509772   +
3509773   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3509774   +
3509775   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3509776   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3509777   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3509778   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3509779   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3509780   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3509781   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3509782   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3509783   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3509784   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3509785   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3509786   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3509787   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3509788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3509789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509790   +end;
MPRINT(EM_DIAGRAM):   end;
3509791   +else do;
MPRINT(EM_DIAGRAM):   else do;
3509792   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3509793   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3509794   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3509795   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3509796   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3509797   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3509798   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3509799   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3509800   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509801   +         end;
MPRINT(EM_DIAGRAM):   end;
3509802   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3509803   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3509804   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3509805   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509806   +            end;
MPRINT(EM_DIAGRAM):   end;
3509807   +         end;
MPRINT(EM_DIAGRAM):   end;
3509808   +      end;
MPRINT(EM_DIAGRAM):   end;
3509809   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3509810   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3509811   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3509812   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509813   +         end;
MPRINT(EM_DIAGRAM):   end;
3509814   +      end;
MPRINT(EM_DIAGRAM):   end;
3509815   +   end;
MPRINT(EM_DIAGRAM):   end;
3509816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3509817   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3509818   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3509819   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509820   +      end;
MPRINT(EM_DIAGRAM):   end;
3509821   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3509822   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3509823   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3509824   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3509825   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3509826   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3509827   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3509828   +         end;
MPRINT(EM_DIAGRAM):   end;
3509829   +      end;
MPRINT(EM_DIAGRAM):   end;
3509830   +   end;
MPRINT(EM_DIAGRAM):   end;
3509831   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3509832   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3509833   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3509834   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3509835   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3509836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3509837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509838   +   end;
MPRINT(EM_DIAGRAM):   end;
3509839   +end;
MPRINT(EM_DIAGRAM):   end;
3509840   +
3509841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509842   +*** Checking missing input Interval
3509843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3509844   +
3509845   +IF NMISS(
3509846   +   MntCard_Games ,
3509847   +   MntMagazines ,
3509848   +   NumCatalogPurchases ,
3509849   +   NumDealsPurchases ,
3509850   +   NumWebPurchases ,
3509851   +   RANGE_Frq ,
3509852   +   RANGE_Recency ,
3509853   +   RANGE_average_purchase ,
3509854   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3509855   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3509856   +
3509857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3509858   +END;
MPRINT(EM_DIAGRAM):   END;
3509859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509860   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3509861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509863   +   S_MntCard_Games  =    -2.30966591090807 +     6.60082804482344 *
3509864   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30966591090807 + 6.60082804482344 * MntCard_Games ;
3509865   +   S_MntMagazines  =    -0.83670452959281 +     17.4403796599865 *
3509866   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83670452959281 + 17.4403796599865 * MntMagazines ;
3509867   +   S_NumCatalogPurchases  =    -3.11903852969134 +     13.4734323712903 *
3509868   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11903852969134 + 13.4734323712903 *
NumCatalogPurchases ;
3509869   +   S_NumDealsPurchases  =    -1.41326071770932 +     11.2402315421783 *
3509870   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41326071770932 + 11.2402315421783 *
NumDealsPurchases ;
3509871   +   S_NumWebPurchases  =    -5.23317346019677 +     12.2649330892737 *
3509872   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23317346019677 + 12.2649330892737 *
NumWebPurchases ;
3509873   +   S_RANGE_Frq  =    -1.35717698753855 +     4.18271463801858 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35717698753855 + 4.18271463801858 * RANGE_Frq ;
3509874   +   S_RANGE_Recency  =    -1.65875257103327 +     3.35026800068207 *
3509875   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65875257103327 + 3.35026800068207 * RANGE_Recency ;
3509876   +   S_RANGE_average_purchase  =     -1.0503698658887 +     5.27586139078335 *
3509877   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0503698658887 + 5.27586139078335 *
RANGE_average_purchase ;
3509878   +   S_RANGE_campaign_acceptance
3509879   +          =    -0.47786812216042 +     5.72920198846635 *
3509880   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47786812216042 + 5.72920198846635 *
RANGE_campaign_acceptance ;
3509881   +END;
MPRINT(EM_DIAGRAM):   END;
3509882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3509883   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3509884   +   ELSE S_MntCard_Games  =    -2.30966591090807 +     6.60082804482344 *
3509885   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30966591090807 + 6.60082804482344 *
MntCard_Games ;
3509886   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3509887   +   ELSE S_MntMagazines  =    -0.83670452959281 +     17.4403796599865 *
3509888   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83670452959281 + 17.4403796599865 *
MntMagazines ;
3509889   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3509890   +   ELSE S_NumCatalogPurchases
3509891   +          =    -3.11903852969134 +     13.4734323712903 * NumCatalogPurchases
3509892   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11903852969134 + 13.4734323712903 *
NumCatalogPurchases ;
3509893   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3509894   +   ELSE S_NumDealsPurchases  =    -1.41326071770932 +     11.2402315421783 *
3509895   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41326071770932 + 11.2402315421783 *
NumDealsPurchases ;
3509896   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3509897   +   ELSE S_NumWebPurchases  =    -5.23317346019677 +     12.2649330892737 *
3509898   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23317346019677 + 12.2649330892737 *
NumWebPurchases ;
3509899   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3509900   +   ELSE S_RANGE_Frq  =    -1.35717698753855 +     4.18271463801858 * RANGE_Frq
3509901   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35717698753855 + 4.18271463801858 * RANGE_Frq ;
3509902   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3509903   +   ELSE S_RANGE_Recency  =    -1.65875257103327 +     3.35026800068207 *
3509904   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65875257103327 + 3.35026800068207 *
RANGE_Recency ;
3509905   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3509906   +   ELSE S_RANGE_average_purchase
3509907   +          =     -1.0503698658887 +     5.27586139078335 *
3509908   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0503698658887 + 5.27586139078335 *
RANGE_average_purchase ;
3509909   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3509910   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3509911   +   ELSE S_RANGE_campaign_acceptance
3509912   +          =    -0.47786812216042 +     5.72920198846635 *
3509913   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47786812216042 + 5.72920198846635
* RANGE_campaign_acceptance ;
3509914   +END;
MPRINT(EM_DIAGRAM):   END;
3509915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509916   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3509917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509919   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3509920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3509921   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3509922   +   H11  =     1.83880071425811 * S_MntCard_Games  +    -1.16025575815117 *
3509923   +        S_MntMagazines  +     0.88038611226841 * S_NumCatalogPurchases
3509924   +          +     3.91842632677387 * S_NumDealsPurchases
3509925   +          +     0.68772535421508 * S_NumWebPurchases
3509926   +          +     1.24059471672198 * S_RANGE_Frq  +    -5.88295709357642 *
3509927   +        S_RANGE_Recency  +     0.07873371207077 * S_RANGE_average_purchase
3509928   +          +     1.90779988297633 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.83880071425811 * S_MntCard_Games + -1.16025575815117 *
S_MntMagazines + 0.88038611226841 * S_NumCatalogPurchases + 3.91842632677387 *
S_NumDealsPurchases + 0.68772535421508 * S_NumWebPurchases + 1.24059471672198 * S_RANGE_Frq +
-5.88295709357642 * S_RANGE_Recency + 0.07873371207077 * S_RANGE_average_purchase +
1.90779988297633 * S_RANGE_campaign_acceptance ;
3509929   +   H12  =     3.37115582361286 * S_MntCard_Games  +    -0.01200869260502 *
3509930   +        S_MntMagazines  +     1.53162649901846 * S_NumCatalogPurchases
3509931   +          +     -0.5532511981795 * S_NumDealsPurchases
3509932   +          +    -0.47699913217608 * S_NumWebPurchases
3509933   +          +    -0.05361247455467 * S_RANGE_Frq  +    -0.45066515690999 *
3509934   +        S_RANGE_Recency  +     3.57737232826244 * S_RANGE_average_purchase
3509935   +          +     2.69040246535784 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 3.37115582361286 * S_MntCard_Games + -0.01200869260502 *
S_MntMagazines + 1.53162649901846 * S_NumCatalogPurchases + -0.5532511981795 *
S_NumDealsPurchases + -0.47699913217608 * S_NumWebPurchases + -0.05361247455467 * S_RANGE_Frq
+ -0.45066515690999 * S_RANGE_Recency + 3.57737232826244 * S_RANGE_average_purchase +
2.69040246535784 * S_RANGE_campaign_acceptance ;
3509936   +   H13  =     3.50824887307701 * S_MntCard_Games  +    -3.00320670798604 *
3509937   +        S_MntMagazines  +    -1.61103682417184 * S_NumCatalogPurchases
3509938   +          +     0.05140503253033 * S_NumDealsPurchases
3509939   +          +    -4.80396536299679 * S_NumWebPurchases
3509940   +          +    -0.38648626093057 * S_RANGE_Frq  +     0.45467339999468 *
3509941   +        S_RANGE_Recency  +     3.98970518339627 * S_RANGE_average_purchase
3509942   +          +      1.6524887709802 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 3.50824887307701 * S_MntCard_Games + -3.00320670798604 *
S_MntMagazines + -1.61103682417184 * S_NumCatalogPurchases + 0.05140503253033 *
S_NumDealsPurchases + -4.80396536299679 * S_NumWebPurchases + -0.38648626093057 * S_RANGE_Frq
+ 0.45467339999468 * S_RANGE_Recency + 3.98970518339627 * S_RANGE_average_purchase +
1.6524887709802 * S_RANGE_campaign_acceptance ;
3509943   +   H14  =    -3.41312440972775 * S_MntCard_Games  +    -2.54042434060674 *
3509944   +        S_MntMagazines  +    -7.32457464750049 * S_NumCatalogPurchases
3509945   +          +    -2.81578199262479 * S_NumDealsPurchases
3509946   +          +    -0.49770278663807 * S_NumWebPurchases
3509947   +          +     4.08351050555067 * S_RANGE_Frq  +     3.93731312900103 *
3509948   +        S_RANGE_Recency  +     -1.8609662497168 * S_RANGE_average_purchase
3509949   +          +    -1.89895028047114 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -3.41312440972775 * S_MntCard_Games + -2.54042434060674 *
S_MntMagazines + -7.32457464750049 * S_NumCatalogPurchases + -2.81578199262479 *
S_NumDealsPurchases + -0.49770278663807 * S_NumWebPurchases + 4.08351050555067 * S_RANGE_Frq +
3.93731312900103 * S_RANGE_Recency + -1.8609662497168 * S_RANGE_average_purchase +
-1.89895028047114 * S_RANGE_campaign_acceptance ;
3509950   +   H15  =     2.01392547536871 * S_MntCard_Games  +     1.06261555537777 *
3509951   +        S_MntMagazines  +     1.70570578442813 * S_NumCatalogPurchases
3509952   +          +     1.37243859687934 * S_NumDealsPurchases
3509953   +          +    -3.13919277062032 * S_NumWebPurchases
3509954   +          +    -3.15744485062537 * S_RANGE_Frq  +     1.33813104094726 *
3509955   +        S_RANGE_Recency  +     3.81776833236325 * S_RANGE_average_purchase
3509956   +          +     4.32341998869319 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 2.01392547536871 * S_MntCard_Games + 1.06261555537777 *
S_MntMagazines + 1.70570578442813 * S_NumCatalogPurchases + 1.37243859687934 *
S_NumDealsPurchases + -3.13919277062032 * S_NumWebPurchases + -3.15744485062537 * S_RANGE_Frq
+ 1.33813104094726 * S_RANGE_Recency + 3.81776833236325 * S_RANGE_average_purchase +
4.32341998869319 * S_RANGE_campaign_acceptance ;
3509957   +   H16  =    -2.26520763777649 * S_MntCard_Games  +     0.83557888422847 *
3509958   +        S_MntMagazines  +    -0.58491501853853 * S_NumCatalogPurchases
3509959   +          +    -2.35531448560071 * S_NumDealsPurchases
3509960   +          +    -1.27413250019041 * S_NumWebPurchases
3509961   +          +    -0.75908948770129 * S_RANGE_Frq  +     4.25549401661288 *
3509962   +        S_RANGE_Recency  +    -0.48240499292673 * S_RANGE_average_purchase
3509963   +          +    -2.07709298625946 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.26520763777649 * S_MntCard_Games + 0.83557888422847 *
S_MntMagazines + -0.58491501853853 * S_NumCatalogPurchases + -2.35531448560071 *
S_NumDealsPurchases + -1.27413250019041 * S_NumWebPurchases + -0.75908948770129 * S_RANGE_Frq
+ 4.25549401661288 * S_RANGE_Recency + -0.48240499292673 * S_RANGE_average_purchase +
-2.07709298625946 * S_RANGE_campaign_acceptance ;
3509964   +   H17  =      2.1898312511092 * S_MntCard_Games  +     1.11065952392354 *
3509965   +        S_MntMagazines  +     1.72751746663347 * S_NumCatalogPurchases
3509966   +          +    -6.30339273904894 * S_NumDealsPurchases
3509967   +          +     1.49952634612409 * S_NumWebPurchases
3509968   +          +     1.18076422921414 * S_RANGE_Frq  +    -1.03080319650895 *
3509969   +        S_RANGE_Recency  +    -1.06782665651244 * S_RANGE_average_purchase
3509970   +          +     0.88887962933554 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 2.1898312511092 * S_MntCard_Games + 1.11065952392354 *
S_MntMagazines + 1.72751746663347 * S_NumCatalogPurchases + -6.30339273904894 *
S_NumDealsPurchases + 1.49952634612409 * S_NumWebPurchases + 1.18076422921414 * S_RANGE_Frq +
-1.03080319650895 * S_RANGE_Recency + -1.06782665651244 * S_RANGE_average_purchase +
0.88887962933554 * S_RANGE_campaign_acceptance ;
3509971   +   H18  =    -5.07787391306439 * S_MntCard_Games  +     0.34199678885173 *
3509972   +        S_MntMagazines  +     -1.9686470953264 * S_NumCatalogPurchases
3509973   +          +     1.08254872269782 * S_NumDealsPurchases
3509974   +          +    -3.60460500257002 * S_NumWebPurchases
3509975   +          +     0.81039326298473 * S_RANGE_Frq  +     0.44441620372698 *
3509976   +        S_RANGE_Recency  +     1.44670185691567 * S_RANGE_average_purchase
3509977   +          +     -0.0419108938606 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -5.07787391306439 * S_MntCard_Games + 0.34199678885173 *
S_MntMagazines + -1.9686470953264 * S_NumCatalogPurchases + 1.08254872269782 *
S_NumDealsPurchases + -3.60460500257002 * S_NumWebPurchases + 0.81039326298473 * S_RANGE_Frq +
0.44441620372698 * S_RANGE_Recency + 1.44670185691567 * S_RANGE_average_purchase +
-0.0419108938606 * S_RANGE_campaign_acceptance ;
3509978   +   H11  = H11  +    -1.48086488101074 * Marital_StatusDivorced
3509979   +          +    -1.48495600468007 * Marital_StatusMarried
3509980   +          +     2.57884730553408 * Marital_StatusSingle
3509981   +          +    -3.04366257463144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -1.48086488101074 * Marital_StatusDivorced +
-1.48495600468007 * Marital_StatusMarried + 2.57884730553408 * Marital_StatusSingle +
-3.04366257463144 * Marital_StatusTogether ;
3509982   +   H12  = H12  +    -0.89091233475518 * Marital_StatusDivorced
3509983   +          +    -0.37887230323347 * Marital_StatusMarried
3509984   +          +    -0.82855743940997 * Marital_StatusSingle
3509985   +          +    -2.05836654094318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.89091233475518 * Marital_StatusDivorced +
-0.37887230323347 * Marital_StatusMarried + -0.82855743940997 * Marital_StatusSingle +
-2.05836654094318 * Marital_StatusTogether ;
3509986   +   H13  = H13  +     1.09405036112781 * Marital_StatusDivorced
3509987   +          +     0.11661998211464 * Marital_StatusMarried
3509988   +          +     1.68794729382857 * Marital_StatusSingle
3509989   +          +    -0.20282016631202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.09405036112781 * Marital_StatusDivorced + 0.11661998211464
* Marital_StatusMarried + 1.68794729382857 * Marital_StatusSingle + -0.20282016631202 *
Marital_StatusTogether ;
3509990   +   H14  = H14  +    -0.07712646683919 * Marital_StatusDivorced
3509991   +          +     2.33533665448623 * Marital_StatusMarried
3509992   +          +     -0.8007507026371 * Marital_StatusSingle
3509993   +          +    -2.24570999942388 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07712646683919 * Marital_StatusDivorced +
2.33533665448623 * Marital_StatusMarried + -0.8007507026371 * Marital_StatusSingle +
-2.24570999942388 * Marital_StatusTogether ;
3509994   +   H15  = H15  +     0.74097643174489 * Marital_StatusDivorced
3509995   +          +    -0.47350235593938 * Marital_StatusMarried
3509996   +          +    -1.27503041413784 * Marital_StatusSingle
3509997   +          +    -1.53848314731295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.74097643174489 * Marital_StatusDivorced +
-0.47350235593938 * Marital_StatusMarried + -1.27503041413784 * Marital_StatusSingle +
-1.53848314731295 * Marital_StatusTogether ;
3509998   +   H16  = H16  +    -0.49998120633473 * Marital_StatusDivorced
3509999   +          +     0.74314409049267 * Marital_StatusMarried
3510000   +          +    -0.96741655055357 * Marital_StatusSingle
3510001   +          +     0.86956308642127 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.49998120633473 * Marital_StatusDivorced +
0.74314409049267 * Marital_StatusMarried + -0.96741655055357 * Marital_StatusSingle +
0.86956308642127 * Marital_StatusTogether ;
3510002   +   H17  = H17  +     6.66246742633325 * Marital_StatusDivorced
3510003   +          +    -3.93613176833284 * Marital_StatusMarried
3510004   +          +     0.57149833392004 * Marital_StatusSingle
3510005   +          +    -4.12818522544795 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 6.66246742633325 * Marital_StatusDivorced +
-3.93613176833284 * Marital_StatusMarried + 0.57149833392004 * Marital_StatusSingle +
-4.12818522544795 * Marital_StatusTogether ;
3510006   +   H18  = H18  +      1.1822504649172 * Marital_StatusDivorced
3510007   +          +     2.15341761233351 * Marital_StatusMarried
3510008   +          +      1.9011022683044 * Marital_StatusSingle
3510009   +          +    -3.50803147137301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 1.1822504649172 * Marital_StatusDivorced + 2.15341761233351
* Marital_StatusMarried + 1.9011022683044 * Marital_StatusSingle + -3.50803147137301 *
Marital_StatusTogether ;
3510010   +   H11  =    -0.56156846764434 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.56156846764434 + H11 ;
3510011   +   H12  =     3.78468923605184 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.78468923605184 + H12 ;
3510012   +   H13  =     2.77364504671195 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.77364504671195 + H13 ;
3510013   +   H14  =    -0.61477381722357 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61477381722357 + H14 ;
3510014   +   H15  =    -5.79319638153597 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -5.79319638153597 + H15 ;
3510015   +   H16  =     6.00722326667944 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 6.00722326667944 + H16 ;
3510016   +   H17  =    -8.63492231744638 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -8.63492231744638 + H17 ;
3510017   +   H18  =    -6.64413442941225 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -6.64413442941225 + H18 ;
3510018   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3510019   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3510020   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3510021   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3510022   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3510023   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3510024   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3510025   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3510026   +END;
MPRINT(EM_DIAGRAM):   END;
3510027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510028   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3510029   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3510030   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3510031   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3510032   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3510033   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3510034   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3510035   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3510036   +END;
MPRINT(EM_DIAGRAM):   END;
3510037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510038   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3510039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510040   +
3510041   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3510042   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3510043   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3510044   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3510045   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3510046   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3510047   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3510048   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510049   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510050   +end;
MPRINT(EM_DIAGRAM):   end;
3510051   +else do;
MPRINT(EM_DIAGRAM):   else do;
3510052   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3510053   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3510054   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3510055   +   end;
MPRINT(EM_DIAGRAM):   end;
3510056   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3510057   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3510058   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3510059   +   end;
MPRINT(EM_DIAGRAM):   end;
3510060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3510061   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510062   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510063   +   end;
MPRINT(EM_DIAGRAM):   end;
3510064   +end;
MPRINT(EM_DIAGRAM):   end;
3510065   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510066   +   P_DepVar1  =     8.51007954886904 * H11  +      5.3278785739102 * H12
3510067   +          +    -6.25172827950609 * H13  +    -6.84513626619443 * H14
3510068   +          +     7.85689576743072 * H15  +    -9.57803812321368 * H16
3510069   +          +     8.09114677680688 * H17  +     6.12295365977936 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.51007954886904 * H11 + 5.3278785739102 * H12 +
-6.25172827950609 * H13 + -6.84513626619443 * H14 + 7.85689576743072 * H15 + -9.57803812321368
* H16 + 8.09114677680688 * H17 + 6.12295365977936 * H18 ;
3510070   +   P_DepVar1  =    -0.61330187507121 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.61330187507121 + P_DepVar1 ;
3510071   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3510072   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3510073   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3510074   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3510075   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3510076   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3510077   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3510078   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3510079   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3510080   +END;
MPRINT(EM_DIAGRAM):   END;
3510081   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510082   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3510083   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3510084   +END;
MPRINT(EM_DIAGRAM):   END;
3510085   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3510086   +   P_DepVar1  =     0.13746017296313;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13746017296313;
3510087   +   P_DepVar0  =     0.86253982703686;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86253982703686;
3510088   +END;
MPRINT(EM_DIAGRAM):   END;
3510089   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3510090   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3510091   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3510092   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3510093   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3510094   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3510095   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3510096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510097   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3510098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510099   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3510100   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3510101   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3510102   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3510103   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3510104   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3510105   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3510106   +END;
MPRINT(EM_DIAGRAM):   END;
3510107   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510108   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3510109   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510110   +drop
3510111   +S_MntCard_Games
3510112   +S_MntMagazines
3510113   +S_NumCatalogPurchases
3510114   +S_NumDealsPurchases
3510115   +S_NumWebPurchases
3510116   +S_RANGE_Frq
3510117   +S_RANGE_Recency
3510118   +S_RANGE_average_purchase
3510119   +S_RANGE_campaign_acceptance
3510120   +H11
3510121   +H12
3510122   +H13
3510123   +H14
3510124   +H15
3510125   +H16
3510126   +H17
3510127   +H18
3510128   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3510129   +end;
MPRINT(EM_DIAGRAM):   end;
3510130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510131   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3510132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510133   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3510134   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3510135   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3510136   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3510137   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3510138   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3510139   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3510140   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3510141   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3510142   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3510143   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3510144   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3510145   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3510146   +LENGTH _WARN_ $4
3510147   +      F_DepVar  $ 12
3510148   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3510149   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3510150   +
3510151   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3510152   +
3510153   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3510154   +
3510155   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3510156   +
3510157   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3510158   +
3510159   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3510160   +
3510161   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3510162   +
3510163   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3510164   +
3510165   +      label S_RANGE_campaign_acceptance =
3510166   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3510167   +
3510168   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3510169   +
3510170   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3510171   +
3510172   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3510173   +
3510174   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3510175   +
3510176   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3510177   +
3510178   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3510179   +
3510180   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3510181   +
3510182   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3510183   +
3510184   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3510185   +
3510186   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3510187   +
3510188   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3510189   +
3510190   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3510191   +
3510192   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3510193   +
3510194   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3510195   +
3510196   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3510197   +
3510198   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3510199   +
3510200   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3510201   +
3510202   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3510203   +
3510204   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3510205   +
3510206   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3510207   +
3510208   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3510209   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3510210   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3510211   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3510212   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3510213   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3510214   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3510215   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3510216   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3510217   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3510218   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3510219   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3510220   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3510221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3510222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510223   +end;
MPRINT(EM_DIAGRAM):   end;
3510224   +else do;
MPRINT(EM_DIAGRAM):   else do;
3510225   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3510226   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3510227   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3510228   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3510229   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3510230   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3510231   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3510232   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3510233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510234   +         end;
MPRINT(EM_DIAGRAM):   end;
3510235   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3510236   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3510237   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3510238   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510239   +            end;
MPRINT(EM_DIAGRAM):   end;
3510240   +         end;
MPRINT(EM_DIAGRAM):   end;
3510241   +      end;
MPRINT(EM_DIAGRAM):   end;
3510242   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3510243   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3510244   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3510245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510246   +         end;
MPRINT(EM_DIAGRAM):   end;
3510247   +      end;
MPRINT(EM_DIAGRAM):   end;
3510248   +   end;
MPRINT(EM_DIAGRAM):   end;
3510249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3510250   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3510251   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3510252   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510253   +      end;
MPRINT(EM_DIAGRAM):   end;
3510254   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3510255   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3510256   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3510257   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3510258   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3510259   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3510260   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510261   +         end;
MPRINT(EM_DIAGRAM):   end;
3510262   +      end;
MPRINT(EM_DIAGRAM):   end;
3510263   +   end;
MPRINT(EM_DIAGRAM):   end;
3510264   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3510265   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3510266   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3510267   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3510268   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3510269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3510270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510271   +   end;
MPRINT(EM_DIAGRAM):   end;
3510272   +end;
MPRINT(EM_DIAGRAM):   end;
3510273   +
3510274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510275   +*** Checking missing input Interval
3510276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3510277   +
3510278   +IF NMISS(
3510279   +   MntCard_Games ,
3510280   +   MntMagazines ,
3510281   +   NumCatalogPurchases ,
3510282   +   NumDealsPurchases ,
3510283   +   NumWebPurchases ,
3510284   +   RANGE_Frq ,
3510285   +   RANGE_Recency ,
3510286   +   RANGE_average_purchase ,
3510287   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3510288   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3510289   +
3510290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510291   +END;
MPRINT(EM_DIAGRAM):   END;
3510292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510293   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3510294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510295   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510296   +   S_MntCard_Games  =    -2.29892041831352 +       6.601150055864 *
3510297   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.29892041831352 + 6.601150055864 * MntCard_Games ;
3510298   +   S_MntMagazines  =    -0.83317452008587 +     17.4966500173221 *
3510299   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83317452008587 + 17.4966500173221 * MntMagazines ;
3510300   +   S_NumCatalogPurchases  =    -3.09109579313305 +     13.3951051790981 *
3510301   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09109579313305 + 13.3951051790981 *
NumCatalogPurchases ;
3510302   +   S_NumDealsPurchases  =    -1.42484523600638 +       11.21156005591 *
3510303   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42484523600638 + 11.21156005591 *
NumDealsPurchases ;
3510304   +   S_NumWebPurchases  =    -5.21428956916773 +     12.2266204316724 *
3510305   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21428956916773 + 12.2266204316724 *
NumWebPurchases ;
3510306   +   S_RANGE_Frq  =    -1.36651533911444 +     4.23011453456546 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36651533911444 + 4.23011453456546 * RANGE_Frq ;
3510307   +   S_RANGE_Recency  =    -1.64986113728952 +      3.3561102628965 *
3510308   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.64986113728952 + 3.3561102628965 * RANGE_Recency ;
3510309   +   S_RANGE_average_purchase  =    -1.03579257296038 +     5.17555796614273 *
3510310   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03579257296038 + 5.17555796614273 *
RANGE_average_purchase ;
3510311   +   S_RANGE_campaign_acceptance
3510312   +          =    -0.47483336447461 +     5.77355684870099 *
3510313   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47483336447461 + 5.77355684870099 *
RANGE_campaign_acceptance ;
3510314   +END;
MPRINT(EM_DIAGRAM):   END;
3510315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510316   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3510317   +   ELSE S_MntCard_Games  =    -2.29892041831352 +       6.601150055864 *
3510318   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.29892041831352 + 6.601150055864 *
MntCard_Games ;
3510319   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3510320   +   ELSE S_MntMagazines  =    -0.83317452008587 +     17.4966500173221 *
3510321   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83317452008587 + 17.4966500173221 *
MntMagazines ;
3510322   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3510323   +   ELSE S_NumCatalogPurchases
3510324   +          =    -3.09109579313305 +     13.3951051790981 * NumCatalogPurchases
3510325   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09109579313305 + 13.3951051790981 *
NumCatalogPurchases ;
3510326   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3510327   +   ELSE S_NumDealsPurchases  =    -1.42484523600638 +       11.21156005591 *
3510328   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42484523600638 + 11.21156005591 *
NumDealsPurchases ;
3510329   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3510330   +   ELSE S_NumWebPurchases  =    -5.21428956916773 +     12.2266204316724 *
3510331   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21428956916773 + 12.2266204316724 *
NumWebPurchases ;
3510332   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3510333   +   ELSE S_RANGE_Frq  =    -1.36651533911444 +     4.23011453456546 * RANGE_Frq
3510334   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36651533911444 + 4.23011453456546 * RANGE_Frq ;
3510335   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3510336   +   ELSE S_RANGE_Recency  =    -1.64986113728952 +      3.3561102628965 *
3510337   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.64986113728952 + 3.3561102628965 *
RANGE_Recency ;
3510338   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3510339   +   ELSE S_RANGE_average_purchase
3510340   +          =    -1.03579257296038 +     5.17555796614273 *
3510341   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03579257296038 + 5.17555796614273 *
RANGE_average_purchase ;
3510342   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3510343   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3510344   +   ELSE S_RANGE_campaign_acceptance
3510345   +          =    -0.47483336447461 +     5.77355684870099 *
3510346   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47483336447461 + 5.77355684870099
* RANGE_campaign_acceptance ;
3510347   +END;
MPRINT(EM_DIAGRAM):   END;
3510348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510349   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3510350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510352   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3510353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510355   +   H11  =     2.47292110179517 * S_MntCard_Games  +    -1.78441381044061 *
3510356   +        S_MntMagazines  +     2.20238069861234 * S_NumCatalogPurchases
3510357   +          +     5.35597414878353 * S_NumDealsPurchases
3510358   +          +    -1.27412854117732 * S_NumWebPurchases
3510359   +          +    -0.08773429008875 * S_RANGE_Frq  +     -7.3504317057105 *
3510360   +        S_RANGE_Recency  +    -0.62012409705667 * S_RANGE_average_purchase
3510361   +          +     0.23560520258243 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 2.47292110179517 * S_MntCard_Games + -1.78441381044061 *
S_MntMagazines + 2.20238069861234 * S_NumCatalogPurchases + 5.35597414878353 *
S_NumDealsPurchases + -1.27412854117732 * S_NumWebPurchases + -0.08773429008875 * S_RANGE_Frq
+ -7.3504317057105 * S_RANGE_Recency + -0.62012409705667 * S_RANGE_average_purchase +
0.23560520258243 * S_RANGE_campaign_acceptance ;
3510362   +   H12  =     1.13645394686942 * S_MntCard_Games  +    -1.00967867774974 *
3510363   +        S_MntMagazines  +    -0.50036462567733 * S_NumCatalogPurchases
3510364   +          +     0.26360219064162 * S_NumDealsPurchases
3510365   +          +     2.47231965593612 * S_NumWebPurchases
3510366   +          +    -0.11067160509049 * S_RANGE_Frq  +    -0.68510837431834 *
3510367   +        S_RANGE_Recency  +     2.41723937290699 * S_RANGE_average_purchase
3510368   +          +     2.70347331526687 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.13645394686942 * S_MntCard_Games + -1.00967867774974 *
S_MntMagazines + -0.50036462567733 * S_NumCatalogPurchases + 0.26360219064162 *
S_NumDealsPurchases + 2.47231965593612 * S_NumWebPurchases + -0.11067160509049 * S_RANGE_Frq +
-0.68510837431834 * S_RANGE_Recency + 2.41723937290699 * S_RANGE_average_purchase +
2.70347331526687 * S_RANGE_campaign_acceptance ;
3510369   +   H13  =    -0.65670803796627 * S_MntCard_Games  +     0.62633052042934 *
3510370   +        S_MntMagazines  +    -2.23691282969642 * S_NumCatalogPurchases
3510371   +          +     0.50938809356791 * S_NumDealsPurchases
3510372   +          +    -4.58213967316044 * S_NumWebPurchases
3510373   +          +    -3.47851064574295 * S_RANGE_Frq  +     1.79718910975459 *
3510374   +        S_RANGE_Recency  +     2.27502310429295 * S_RANGE_average_purchase
3510375   +          +    -0.27966787857089 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.65670803796627 * S_MntCard_Games + 0.62633052042934 *
S_MntMagazines + -2.23691282969642 * S_NumCatalogPurchases + 0.50938809356791 *
S_NumDealsPurchases + -4.58213967316044 * S_NumWebPurchases + -3.47851064574295 * S_RANGE_Frq
+ 1.79718910975459 * S_RANGE_Recency + 2.27502310429295 * S_RANGE_average_purchase +
-0.27966787857089 * S_RANGE_campaign_acceptance ;
3510376   +   H14  =    -2.22935920215821 * S_MntCard_Games  +    -1.49497625340941 *
3510377   +        S_MntMagazines  +    -3.25683873998564 * S_NumCatalogPurchases
3510378   +          +    -2.27194791992766 * S_NumDealsPurchases
3510379   +          +    -0.66326969225959 * S_NumWebPurchases
3510380   +          +     4.56391475912217 * S_RANGE_Frq  +     4.78707631352893 *
3510381   +        S_RANGE_Recency  +     -8.9210017335646 * S_RANGE_average_purchase
3510382   +          +    -1.77586240330047 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -2.22935920215821 * S_MntCard_Games + -1.49497625340941 *
S_MntMagazines + -3.25683873998564 * S_NumCatalogPurchases + -2.27194791992766 *
S_NumDealsPurchases + -0.66326969225959 * S_NumWebPurchases + 4.56391475912217 * S_RANGE_Frq +
4.78707631352893 * S_RANGE_Recency + -8.9210017335646 * S_RANGE_average_purchase +
-1.77586240330047 * S_RANGE_campaign_acceptance ;
3510383   +   H15  =     1.95679673146009 * S_MntCard_Games  +     1.31603885049778 *
3510384   +        S_MntMagazines  +    -0.03133047798021 * S_NumCatalogPurchases
3510385   +          +     1.47669056475064 * S_NumDealsPurchases
3510386   +          +    -2.96848536716422 * S_NumWebPurchases
3510387   +          +    -1.42346327434654 * S_RANGE_Frq  +    -1.39654798606707 *
3510388   +        S_RANGE_Recency  +     1.57305729086136 * S_RANGE_average_purchase
3510389   +          +     3.81481757687733 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 1.95679673146009 * S_MntCard_Games + 1.31603885049778 *
S_MntMagazines + -0.03133047798021 * S_NumCatalogPurchases + 1.47669056475064 *
S_NumDealsPurchases + -2.96848536716422 * S_NumWebPurchases + -1.42346327434654 * S_RANGE_Frq
+ -1.39654798606707 * S_RANGE_Recency + 1.57305729086136 * S_RANGE_average_purchase +
3.81481757687733 * S_RANGE_campaign_acceptance ;
3510390   +   H16  =    -2.73423676072416 * S_MntCard_Games  +     0.66697429384909 *
3510391   +        S_MntMagazines  +     -1.4735594232052 * S_NumCatalogPurchases
3510392   +          +     -1.9964019556544 * S_NumDealsPurchases
3510393   +          +    -1.99409772637046 * S_NumWebPurchases
3510394   +          +    -0.03506630304618 * S_RANGE_Frq  +     3.02626383463375 *
3510395   +        S_RANGE_Recency  +     0.19593287231115 * S_RANGE_average_purchase
3510396   +          +    -2.59676702955635 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.73423676072416 * S_MntCard_Games + 0.66697429384909 *
S_MntMagazines + -1.4735594232052 * S_NumCatalogPurchases + -1.9964019556544 *
S_NumDealsPurchases + -1.99409772637046 * S_NumWebPurchases + -0.03506630304618 * S_RANGE_Frq
+ 3.02626383463375 * S_RANGE_Recency + 0.19593287231115 * S_RANGE_average_purchase +
-2.59676702955635 * S_RANGE_campaign_acceptance ;
3510397   +   H17  =     1.87957654598082 * S_MntCard_Games  +     1.52436872618213 *
3510398   +        S_MntMagazines  +     1.77466392672881 * S_NumCatalogPurchases
3510399   +          +    -6.93743501117703 * S_NumDealsPurchases
3510400   +          +     1.64013345851117 * S_NumWebPurchases
3510401   +          +      0.9313366419651 * S_RANGE_Frq  +    -0.52300062013602 *
3510402   +        S_RANGE_Recency  +    -0.87824521407413 * S_RANGE_average_purchase
3510403   +          +     0.14446785845766 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.87957654598082 * S_MntCard_Games + 1.52436872618213 *
S_MntMagazines + 1.77466392672881 * S_NumCatalogPurchases + -6.93743501117703 *
S_NumDealsPurchases + 1.64013345851117 * S_NumWebPurchases + 0.9313366419651 * S_RANGE_Frq +
-0.52300062013602 * S_RANGE_Recency + -0.87824521407413 * S_RANGE_average_purchase +
0.14446785845766 * S_RANGE_campaign_acceptance ;
3510404   +   H18  =    -3.47900612663608 * S_MntCard_Games  +    -1.12188477892221 *
3510405   +        S_MntMagazines  +     1.42156434781976 * S_NumCatalogPurchases
3510406   +          +     1.47063256185706 * S_NumDealsPurchases
3510407   +          +    -2.14658837130756 * S_NumWebPurchases
3510408   +          +     0.60830543921836 * S_RANGE_Frq  +    -0.32306546531676 *
3510409   +        S_RANGE_Recency  +    -1.32664408029774 * S_RANGE_average_purchase
3510410   +          +     1.49603915197588 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -3.47900612663608 * S_MntCard_Games + -1.12188477892221 *
S_MntMagazines + 1.42156434781976 * S_NumCatalogPurchases + 1.47063256185706 *
S_NumDealsPurchases + -2.14658837130756 * S_NumWebPurchases + 0.60830543921836 * S_RANGE_Frq +
-0.32306546531676 * S_RANGE_Recency + -1.32664408029774 * S_RANGE_average_purchase +
1.49603915197588 * S_RANGE_campaign_acceptance ;
3510411   +   H11  = H11  +    -3.52548543496113 * Marital_StatusDivorced
3510412   +          +    -1.00125729142642 * Marital_StatusMarried
3510413   +          +     2.11843331138937 * Marital_StatusSingle
3510414   +          +     2.03481012692498 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -3.52548543496113 * Marital_StatusDivorced +
-1.00125729142642 * Marital_StatusMarried + 2.11843331138937 * Marital_StatusSingle +
2.03481012692498 * Marital_StatusTogether ;
3510415   +   H12  = H12  +     -2.0461867394951 * Marital_StatusDivorced
3510416   +          +     0.25947576907003 * Marital_StatusMarried
3510417   +          +     0.71376605714923 * Marital_StatusSingle
3510418   +          +    -1.70092542498539 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -2.0461867394951 * Marital_StatusDivorced + 0.25947576907003
* Marital_StatusMarried + 0.71376605714923 * Marital_StatusSingle + -1.70092542498539 *
Marital_StatusTogether ;
3510419   +   H13  = H13  +     -0.9033434871591 * Marital_StatusDivorced
3510420   +          +     0.89309936056869 * Marital_StatusMarried
3510421   +          +     3.82154754820175 * Marital_StatusSingle
3510422   +          +     3.35137600037982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.9033434871591 * Marital_StatusDivorced + 0.89309936056869
* Marital_StatusMarried + 3.82154754820175 * Marital_StatusSingle + 3.35137600037982 *
Marital_StatusTogether ;
3510423   +   H14  = H14  +     0.84680152148618 * Marital_StatusDivorced
3510424   +          +     0.28265054118525 * Marital_StatusMarried
3510425   +          +    -1.29267483559072 * Marital_StatusSingle
3510426   +          +    -1.35037794036138 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.84680152148618 * Marital_StatusDivorced + 0.28265054118525
* Marital_StatusMarried + -1.29267483559072 * Marital_StatusSingle + -1.35037794036138 *
Marital_StatusTogether ;
3510427   +   H15  = H15  +    -0.69013601633638 * Marital_StatusDivorced
3510428   +          +     0.47034606364447 * Marital_StatusMarried
3510429   +          +     0.67338366871749 * Marital_StatusSingle
3510430   +          +    -1.84209423632958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.69013601633638 * Marital_StatusDivorced +
0.47034606364447 * Marital_StatusMarried + 0.67338366871749 * Marital_StatusSingle +
-1.84209423632958 * Marital_StatusTogether ;
3510431   +   H16  = H16  +     0.65825455718742 * Marital_StatusDivorced
3510432   +          +     1.76881557334347 * Marital_StatusMarried
3510433   +          +    -0.70078884288443 * Marital_StatusSingle
3510434   +          +     0.15175234117305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.65825455718742 * Marital_StatusDivorced + 1.76881557334347
* Marital_StatusMarried + -0.70078884288443 * Marital_StatusSingle + 0.15175234117305 *
Marital_StatusTogether ;
3510435   +   H17  = H17  +     8.01592807652734 * Marital_StatusDivorced
3510436   +          +    -3.35639922392557 * Marital_StatusMarried
3510437   +          +     0.49944662298506 * Marital_StatusSingle
3510438   +          +    -4.47257707453832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 8.01592807652734 * Marital_StatusDivorced +
-3.35639922392557 * Marital_StatusMarried + 0.49944662298506 * Marital_StatusSingle +
-4.47257707453832 * Marital_StatusTogether ;
3510439   +   H18  = H18  +     3.16230618911148 * Marital_StatusDivorced
3510440   +          +     -0.5023255396383 * Marital_StatusMarried
3510441   +          +     0.91143268077381 * Marital_StatusSingle
3510442   +          +    -4.51756977068215 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 3.16230618911148 * Marital_StatusDivorced + -0.5023255396383
* Marital_StatusMarried + 0.91143268077381 * Marital_StatusSingle + -4.51756977068215 *
Marital_StatusTogether ;
3510443   +   H11  =    -1.24011864064648 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24011864064648 + H11 ;
3510444   +   H12  =     3.47994271202805 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.47994271202805 + H12 ;
3510445   +   H13  =     2.47525968487064 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.47525968487064 + H13 ;
3510446   +   H14  =     1.75442654206808 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.75442654206808 + H14 ;
3510447   +   H15  =    -7.31358747317035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -7.31358747317035 + H15 ;
3510448   +   H16  =     4.70400847822869 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.70400847822869 + H16 ;
3510449   +   H17  =    -8.81405785800818 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -8.81405785800818 + H17 ;
3510450   +   H18  =    -6.49932125324565 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -6.49932125324565 + H18 ;
3510451   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3510452   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3510453   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3510454   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3510455   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3510456   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3510457   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3510458   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3510459   +END;
MPRINT(EM_DIAGRAM):   END;
3510460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510461   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3510462   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3510463   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3510464   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3510465   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3510466   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3510467   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3510468   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3510469   +END;
MPRINT(EM_DIAGRAM):   END;
3510470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510471   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3510472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510473   +
3510474   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3510475   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3510476   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3510477   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3510478   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3510479   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3510480   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3510481   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510482   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510483   +end;
MPRINT(EM_DIAGRAM):   end;
3510484   +else do;
MPRINT(EM_DIAGRAM):   else do;
3510485   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3510486   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3510487   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3510488   +   end;
MPRINT(EM_DIAGRAM):   end;
3510489   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3510490   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3510491   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3510492   +   end;
MPRINT(EM_DIAGRAM):   end;
3510493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3510494   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510495   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510496   +   end;
MPRINT(EM_DIAGRAM):   end;
3510497   +end;
MPRINT(EM_DIAGRAM):   end;
3510498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510499   +   P_DepVar1  =     9.50349509012999 * H11  +     5.82586357575991 * H12
3510500   +          +    -3.18579143281484 * H13  +    -5.85846764639329 * H14
3510501   +          +     9.26188380286973 * H15  +    -6.94828956689072 * H16
3510502   +          +     9.89093293561663 * H17  +      5.7091160827056 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.50349509012999 * H11 + 5.82586357575991 * H12 +
-3.18579143281484 * H13 + -5.85846764639329 * H14 + 9.26188380286973 * H15 + -6.94828956689072
* H16 + 9.89093293561663 * H17 + 5.7091160827056 * H18 ;
3510503   +   P_DepVar1  =     -0.0368141053384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0368141053384 + P_DepVar1 ;
3510504   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3510505   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3510506   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3510507   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3510508   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3510509   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3510510   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3510511   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3510512   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3510513   +END;
MPRINT(EM_DIAGRAM):   END;
3510514   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510515   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3510516   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3510517   +END;
MPRINT(EM_DIAGRAM):   END;
3510518   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3510519   +   P_DepVar1  =      0.1398916967509;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.1398916967509;
3510520   +   P_DepVar0  =     0.86010830324909;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86010830324909;
3510521   +END;
MPRINT(EM_DIAGRAM):   END;
3510522   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3510523   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3510524   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3510525   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3510526   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3510527   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3510528   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3510529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510530   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3510531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510532   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3510533   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3510534   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3510535   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3510536   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3510537   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3510538   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3510539   +END;
MPRINT(EM_DIAGRAM):   END;
3510540   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510541   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3510542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510543   +drop
3510544   +S_MntCard_Games
3510545   +S_MntMagazines
3510546   +S_NumCatalogPurchases
3510547   +S_NumDealsPurchases
3510548   +S_NumWebPurchases
3510549   +S_RANGE_Frq
3510550   +S_RANGE_Recency
3510551   +S_RANGE_average_purchase
3510552   +S_RANGE_campaign_acceptance
3510553   +H11
3510554   +H12
3510555   +H13
3510556   +H14
3510557   +H15
3510558   +H16
3510559   +H17
3510560   +H18
3510561   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3510562   +end;
MPRINT(EM_DIAGRAM):   end;
3510563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510564   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3510565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510566   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3510567   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3510568   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3510569   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3510570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3510571   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3510572   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3510573   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3510574   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3510575   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3510576   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3510577   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3510578   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3510579   +LENGTH _WARN_ $4
3510580   +      F_DepVar  $ 12
3510581   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3510582   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3510583   +
3510584   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3510585   +
3510586   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3510587   +
3510588   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3510589   +
3510590   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3510591   +
3510592   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3510593   +
3510594   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3510595   +
3510596   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3510597   +
3510598   +      label S_RANGE_campaign_acceptance =
3510599   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3510600   +
3510601   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3510602   +
3510603   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3510604   +
3510605   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3510606   +
3510607   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3510608   +
3510609   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3510610   +
3510611   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3510612   +
3510613   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3510614   +
3510615   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3510616   +
3510617   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3510618   +
3510619   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3510620   +
3510621   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3510622   +
3510623   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3510624   +
3510625   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3510626   +
3510627   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3510628   +
3510629   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3510630   +
3510631   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3510632   +
3510633   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3510634   +
3510635   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3510636   +
3510637   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3510638   +
3510639   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3510640   +
3510641   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3510642   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3510643   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3510644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3510645   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3510646   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3510647   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3510648   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3510649   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3510650   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3510651   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3510652   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3510653   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3510654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3510655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510656   +end;
MPRINT(EM_DIAGRAM):   end;
3510657   +else do;
MPRINT(EM_DIAGRAM):   else do;
3510658   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3510659   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3510660   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3510661   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3510662   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3510663   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3510664   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3510665   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3510666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510667   +         end;
MPRINT(EM_DIAGRAM):   end;
3510668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3510669   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3510670   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3510671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510672   +            end;
MPRINT(EM_DIAGRAM):   end;
3510673   +         end;
MPRINT(EM_DIAGRAM):   end;
3510674   +      end;
MPRINT(EM_DIAGRAM):   end;
3510675   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3510676   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3510677   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3510678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510679   +         end;
MPRINT(EM_DIAGRAM):   end;
3510680   +      end;
MPRINT(EM_DIAGRAM):   end;
3510681   +   end;
MPRINT(EM_DIAGRAM):   end;
3510682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3510683   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3510684   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3510685   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510686   +      end;
MPRINT(EM_DIAGRAM):   end;
3510687   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3510688   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3510689   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3510690   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3510691   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3510692   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3510693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3510694   +         end;
MPRINT(EM_DIAGRAM):   end;
3510695   +      end;
MPRINT(EM_DIAGRAM):   end;
3510696   +   end;
MPRINT(EM_DIAGRAM):   end;
3510697   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3510698   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3510699   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3510700   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3510701   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3510702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3510703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510704   +   end;
MPRINT(EM_DIAGRAM):   end;
3510705   +end;
MPRINT(EM_DIAGRAM):   end;
3510706   +
3510707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510708   +*** Checking missing input Interval
3510709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3510710   +
3510711   +IF NMISS(
3510712   +   MntCard_Games ,
3510713   +   MntMagazines ,
3510714   +   NumCatalogPurchases ,
3510715   +   NumDealsPurchases ,
3510716   +   NumWebPurchases ,
3510717   +   RANGE_Frq ,
3510718   +   RANGE_Recency ,
3510719   +   RANGE_average_purchase ,
3510720   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3510721   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3510722   +
3510723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3510724   +END;
MPRINT(EM_DIAGRAM):   END;
3510725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510726   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3510727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510729   +   S_MntCard_Games  =    -2.31107616933815 +      6.6023027290934 *
3510730   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31107616933815 + 6.6023027290934 * MntCard_Games ;
3510731   +   S_MntMagazines  =    -0.83283364648559 +     17.2986380450333 *
3510732   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83283364648559 + 17.2986380450333 * MntMagazines ;
3510733   +   S_NumCatalogPurchases  =    -3.09135973990207 +     13.3746330099817 *
3510734   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09135973990207 + 13.3746330099817 *
NumCatalogPurchases ;
3510735   +   S_NumDealsPurchases  =    -1.41005638211008 +     11.2897008061566 *
3510736   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41005638211008 + 11.2897008061566 *
NumDealsPurchases ;
3510737   +   S_NumWebPurchases  =    -5.20861695061832 +     12.2221678432784 *
3510738   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.20861695061832 + 12.2221678432784 *
NumWebPurchases ;
3510739   +   S_RANGE_Frq  =    -1.37100084974419 +     4.19717298539757 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37100084974419 + 4.19717298539757 * RANGE_Frq ;
3510740   +   S_RANGE_Recency  =    -1.68049839062161 +     3.37187920784526 *
3510741   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.68049839062161 + 3.37187920784526 * RANGE_Recency ;
3510742   +   S_RANGE_average_purchase  =    -1.04189997917491 +     5.16713940828792 *
3510743   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04189997917491 + 5.16713940828792 *
RANGE_average_purchase ;
3510744   +   S_RANGE_campaign_acceptance
3510745   +          =    -0.47866200260672 +     5.78828873996902 *
3510746   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47866200260672 + 5.78828873996902 *
RANGE_campaign_acceptance ;
3510747   +END;
MPRINT(EM_DIAGRAM):   END;
3510748   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510749   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3510750   +   ELSE S_MntCard_Games  =    -2.31107616933815 +      6.6023027290934 *
3510751   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31107616933815 + 6.6023027290934 *
MntCard_Games ;
3510752   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3510753   +   ELSE S_MntMagazines  =    -0.83283364648559 +     17.2986380450333 *
3510754   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83283364648559 + 17.2986380450333 *
MntMagazines ;
3510755   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3510756   +   ELSE S_NumCatalogPurchases
3510757   +          =    -3.09135973990207 +     13.3746330099817 * NumCatalogPurchases
3510758   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09135973990207 + 13.3746330099817 *
NumCatalogPurchases ;
3510759   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3510760   +   ELSE S_NumDealsPurchases  =    -1.41005638211008 +     11.2897008061566 *
3510761   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41005638211008 + 11.2897008061566 *
NumDealsPurchases ;
3510762   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3510763   +   ELSE S_NumWebPurchases  =    -5.20861695061832 +     12.2221678432784 *
3510764   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.20861695061832 + 12.2221678432784 *
NumWebPurchases ;
3510765   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3510766   +   ELSE S_RANGE_Frq  =    -1.37100084974419 +     4.19717298539757 * RANGE_Frq
3510767   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37100084974419 + 4.19717298539757 * RANGE_Frq ;
3510768   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3510769   +   ELSE S_RANGE_Recency  =    -1.68049839062161 +     3.37187920784526 *
3510770   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.68049839062161 + 3.37187920784526 *
RANGE_Recency ;
3510771   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3510772   +   ELSE S_RANGE_average_purchase
3510773   +          =    -1.04189997917491 +     5.16713940828792 *
3510774   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04189997917491 + 5.16713940828792 *
RANGE_average_purchase ;
3510775   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3510776   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3510777   +   ELSE S_RANGE_campaign_acceptance
3510778   +          =    -0.47866200260672 +     5.78828873996902 *
3510779   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47866200260672 + 5.78828873996902
* RANGE_campaign_acceptance ;
3510780   +END;
MPRINT(EM_DIAGRAM):   END;
3510781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510782   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3510783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510785   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3510786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510787   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510788   +   H11  =     1.31621180854848 * S_MntCard_Games  +    -0.99440268775427 *
3510789   +        S_MntMagazines  +      0.1977587899872 * S_NumCatalogPurchases
3510790   +          +     1.80141398185988 * S_NumDealsPurchases
3510791   +          +     0.20561498086954 * S_NumWebPurchases
3510792   +          +     0.31024135240663 * S_RANGE_Frq  +    -4.32099230343124 *
3510793   +        S_RANGE_Recency  +    -0.27961235649417 * S_RANGE_average_purchase
3510794   +          +      1.7763854038013 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.31621180854848 * S_MntCard_Games + -0.99440268775427 *
S_MntMagazines + 0.1977587899872 * S_NumCatalogPurchases + 1.80141398185988 *
S_NumDealsPurchases + 0.20561498086954 * S_NumWebPurchases + 0.31024135240663 * S_RANGE_Frq +
-4.32099230343124 * S_RANGE_Recency + -0.27961235649417 * S_RANGE_average_purchase +
1.7763854038013 * S_RANGE_campaign_acceptance ;
3510795   +   H12  =     1.12258468028591 * S_MntCard_Games  +     -0.2023193241554 *
3510796   +        S_MntMagazines  +     1.30675846510725 * S_NumCatalogPurchases
3510797   +          +    -0.83418352235274 * S_NumDealsPurchases
3510798   +          +     0.37757900484931 * S_NumWebPurchases
3510799   +          +     0.19524062717578 * S_RANGE_Frq  +    -1.25111312494778 *
3510800   +        S_RANGE_Recency  +     2.29075580743992 * S_RANGE_average_purchase
3510801   +          +     0.41095707971589 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.12258468028591 * S_MntCard_Games + -0.2023193241554 *
S_MntMagazines + 1.30675846510725 * S_NumCatalogPurchases + -0.83418352235274 *
S_NumDealsPurchases + 0.37757900484931 * S_NumWebPurchases + 0.19524062717578 * S_RANGE_Frq +
-1.25111312494778 * S_RANGE_Recency + 2.29075580743992 * S_RANGE_average_purchase +
0.41095707971589 * S_RANGE_campaign_acceptance ;
3510802   +   H13  =     1.42732212337811 * S_MntCard_Games  +    -1.91021482373278 *
3510803   +        S_MntMagazines  +    -0.20712399285798 * S_NumCatalogPurchases
3510804   +          +     0.10285799345431 * S_NumDealsPurchases
3510805   +          +    -2.29012761296361 * S_NumWebPurchases
3510806   +          +     0.65747917353504 * S_RANGE_Frq  +     0.15751830351236 *
3510807   +        S_RANGE_Recency  +      2.0232784966862 * S_RANGE_average_purchase
3510808   +          +     0.72337854935312 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 1.42732212337811 * S_MntCard_Games + -1.91021482373278 *
S_MntMagazines + -0.20712399285798 * S_NumCatalogPurchases + 0.10285799345431 *
S_NumDealsPurchases + -2.29012761296361 * S_NumWebPurchases + 0.65747917353504 * S_RANGE_Frq +
0.15751830351236 * S_RANGE_Recency + 2.0232784966862 * S_RANGE_average_purchase +
0.72337854935312 * S_RANGE_campaign_acceptance ;
3510809   +   H14  =    -4.20145267294191 * S_MntCard_Games  +     0.21928123043531 *
3510810   +        S_MntMagazines  +    -4.43825312140052 * S_NumCatalogPurchases
3510811   +          +    -2.39035046040134 * S_NumDealsPurchases
3510812   +          +     0.81472299504589 * S_NumWebPurchases
3510813   +          +     0.93179990233936 * S_RANGE_Frq  +     3.04530417381032 *
3510814   +        S_RANGE_Recency  +    -1.57366698504363 * S_RANGE_average_purchase
3510815   +          +     -0.9202585599624 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -4.20145267294191 * S_MntCard_Games + 0.21928123043531 *
S_MntMagazines + -4.43825312140052 * S_NumCatalogPurchases + -2.39035046040134 *
S_NumDealsPurchases + 0.81472299504589 * S_NumWebPurchases + 0.93179990233936 * S_RANGE_Frq +
3.04530417381032 * S_RANGE_Recency + -1.57366698504363 * S_RANGE_average_purchase +
-0.9202585599624 * S_RANGE_campaign_acceptance ;
3510816   +   H15  =     2.66160723097799 * S_MntCard_Games  +    -0.61434965505386 *
3510817   +        S_MntMagazines  +      1.9759906080802 * S_NumCatalogPurchases
3510818   +          +     1.86792426485148 * S_NumDealsPurchases
3510819   +          +    -1.85605709661238 * S_NumWebPurchases
3510820   +          +    -2.98470412360434 * S_RANGE_Frq  +    -0.42674583201005 *
3510821   +        S_RANGE_Recency  +     1.76678534887147 * S_RANGE_average_purchase
3510822   +          +     3.01284966189612 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 2.66160723097799 * S_MntCard_Games + -0.61434965505386 *
S_MntMagazines + 1.9759906080802 * S_NumCatalogPurchases + 1.86792426485148 *
S_NumDealsPurchases + -1.85605709661238 * S_NumWebPurchases + -2.98470412360434 * S_RANGE_Frq
+ -0.42674583201005 * S_RANGE_Recency + 1.76678534887147 * S_RANGE_average_purchase +
3.01284966189612 * S_RANGE_campaign_acceptance ;
3510823   +   H16  =     -0.8500532259568 * S_MntCard_Games  +     0.29441354537208 *
3510824   +        S_MntMagazines  +    -0.18237316089136 * S_NumCatalogPurchases
3510825   +          +    -1.09591854842211 * S_NumDealsPurchases
3510826   +          +    -2.06130364120321 * S_NumWebPurchases
3510827   +          +    -1.13469482614181 * S_RANGE_Frq  +     2.70697518306002 *
3510828   +        S_RANGE_Recency  +    -0.19256569879903 * S_RANGE_average_purchase
3510829   +          +    -1.18547526881393 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.8500532259568 * S_MntCard_Games + 0.29441354537208 *
S_MntMagazines + -0.18237316089136 * S_NumCatalogPurchases + -1.09591854842211 *
S_NumDealsPurchases + -2.06130364120321 * S_NumWebPurchases + -1.13469482614181 * S_RANGE_Frq
+ 2.70697518306002 * S_RANGE_Recency + -0.19256569879903 * S_RANGE_average_purchase +
-1.18547526881393 * S_RANGE_campaign_acceptance ;
3510830   +   H17  =     1.66502128201898 * S_MntCard_Games  +     0.66553230899134 *
3510831   +        S_MntMagazines  +     1.50481116375831 * S_NumCatalogPurchases
3510832   +          +    -2.91655912660536 * S_NumDealsPurchases
3510833   +          +     1.22518817755753 * S_NumWebPurchases
3510834   +          +     1.36582694186407 * S_RANGE_Frq  +    -1.54831955246519 *
3510835   +        S_RANGE_Recency  +    -0.35658551193312 * S_RANGE_average_purchase
3510836   +          +      0.8043595047988 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.66502128201898 * S_MntCard_Games + 0.66553230899134 *
S_MntMagazines + 1.50481116375831 * S_NumCatalogPurchases + -2.91655912660536 *
S_NumDealsPurchases + 1.22518817755753 * S_NumWebPurchases + 1.36582694186407 * S_RANGE_Frq +
-1.54831955246519 * S_RANGE_Recency + -0.35658551193312 * S_RANGE_average_purchase +
0.8043595047988 * S_RANGE_campaign_acceptance ;
3510837   +   H18  =    -2.54131886020921 * S_MntCard_Games  +     0.28491213078238 *
3510838   +        S_MntMagazines  +     0.29114994624783 * S_NumCatalogPurchases
3510839   +          +     1.42837437427771 * S_NumDealsPurchases
3510840   +          +    -1.34652844934125 * S_NumWebPurchases
3510841   +          +     1.94803548343186 * S_RANGE_Frq  +     0.22341003690456 *
3510842   +        S_RANGE_Recency  +    -0.65415284206485 * S_RANGE_average_purchase
3510843   +          +     0.76170902289133 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -2.54131886020921 * S_MntCard_Games + 0.28491213078238 *
S_MntMagazines + 0.29114994624783 * S_NumCatalogPurchases + 1.42837437427771 *
S_NumDealsPurchases + -1.34652844934125 * S_NumWebPurchases + 1.94803548343186 * S_RANGE_Frq +
0.22341003690456 * S_RANGE_Recency + -0.65415284206485 * S_RANGE_average_purchase +
0.76170902289133 * S_RANGE_campaign_acceptance ;
3510844   +   H11  = H11  +     0.81886415209084 * Marital_StatusDivorced
3510845   +          +    -1.10528185930778 * Marital_StatusMarried
3510846   +          +      0.7699856181591 * Marital_StatusSingle
3510847   +          +     -2.9466755404797 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.81886415209084 * Marital_StatusDivorced +
-1.10528185930778 * Marital_StatusMarried + 0.7699856181591 * Marital_StatusSingle +
-2.9466755404797 * Marital_StatusTogether ;
3510848   +   H12  = H12  +    -0.71973163861859 * Marital_StatusDivorced
3510849   +          +    -1.46124810141658 * Marital_StatusMarried
3510850   +          +     0.22293069210318 * Marital_StatusSingle
3510851   +          +     0.63811577343066 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.71973163861859 * Marital_StatusDivorced +
-1.46124810141658 * Marital_StatusMarried + 0.22293069210318 * Marital_StatusSingle +
0.63811577343066 * Marital_StatusTogether ;
3510852   +   H13  = H13  +    -0.22066760882425 * Marital_StatusDivorced
3510853   +          +    -0.49379967620089 * Marital_StatusMarried
3510854   +          +     1.33836269224459 * Marital_StatusSingle
3510855   +          +    -0.48688238123944 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22066760882425 * Marital_StatusDivorced +
-0.49379967620089 * Marital_StatusMarried + 1.33836269224459 * Marital_StatusSingle +
-0.48688238123944 * Marital_StatusTogether ;
3510856   +   H14  = H14  +     0.12494492348461 * Marital_StatusDivorced
3510857   +          +     0.75925503819525 * Marital_StatusMarried
3510858   +          +    -1.83128635807289 * Marital_StatusSingle
3510859   +          +     0.64387635524048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12494492348461 * Marital_StatusDivorced + 0.75925503819525
* Marital_StatusMarried + -1.83128635807289 * Marital_StatusSingle + 0.64387635524048 *
Marital_StatusTogether ;
3510860   +   H15  = H15  +     0.41728783880507 * Marital_StatusDivorced
3510861   +          +     0.18678798100886 * Marital_StatusMarried
3510862   +          +     0.96267965033948 * Marital_StatusSingle
3510863   +          +    -1.16350622762409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41728783880507 * Marital_StatusDivorced + 0.18678798100886
* Marital_StatusMarried + 0.96267965033948 * Marital_StatusSingle + -1.16350622762409 *
Marital_StatusTogether ;
3510864   +   H16  = H16  +     0.45007260136586 * Marital_StatusDivorced
3510865   +          +     0.56532266244591 * Marital_StatusMarried
3510866   +          +     0.08188009019655 * Marital_StatusSingle
3510867   +          +     0.20493688038691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.45007260136586 * Marital_StatusDivorced + 0.56532266244591
* Marital_StatusMarried + 0.08188009019655 * Marital_StatusSingle + 0.20493688038691 *
Marital_StatusTogether ;
3510868   +   H17  = H17  +     3.13575165935396 * Marital_StatusDivorced
3510869   +          +    -2.84041923449651 * Marital_StatusMarried
3510870   +          +     1.40329341904895 * Marital_StatusSingle
3510871   +          +    -2.90289212948832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 3.13575165935396 * Marital_StatusDivorced +
-2.84041923449651 * Marital_StatusMarried + 1.40329341904895 * Marital_StatusSingle +
-2.90289212948832 * Marital_StatusTogether ;
3510872   +   H18  = H18  +     1.28384791412256 * Marital_StatusDivorced
3510873   +          +     0.68131469294547 * Marital_StatusMarried
3510874   +          +     1.13665601046785 * Marital_StatusSingle
3510875   +          +    -2.29728600067679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 1.28384791412256 * Marital_StatusDivorced + 0.68131469294547
* Marital_StatusMarried + 1.13665601046785 * Marital_StatusSingle + -2.29728600067679 *
Marital_StatusTogether ;
3510876   +   H11  =    -0.05282312243969 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.05282312243969 + H11 ;
3510877   +   H12  =     2.64798101938983 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.64798101938983 + H12 ;
3510878   +   H13  =     2.00939177578981 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.00939177578981 + H13 ;
3510879   +   H14  =     1.33484377083984 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.33484377083984 + H14 ;
3510880   +   H15  =    -4.80831981838052 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.80831981838052 + H15 ;
3510881   +   H16  =     4.51133254117913 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 4.51133254117913 + H16 ;
3510882   +   H17  =    -6.71571276926668 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -6.71571276926668 + H17 ;
3510883   +   H18  =    -5.33934521647108 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -5.33934521647108 + H18 ;
3510884   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3510885   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3510886   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3510887   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3510888   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3510889   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3510890   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3510891   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3510892   +END;
MPRINT(EM_DIAGRAM):   END;
3510893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510894   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3510895   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3510896   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3510897   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3510898   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3510899   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3510900   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3510901   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3510902   +END;
MPRINT(EM_DIAGRAM):   END;
3510903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510904   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3510905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510906   +
3510907   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3510908   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3510909   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3510910   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3510911   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3510912   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3510913   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3510914   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510915   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510916   +end;
MPRINT(EM_DIAGRAM):   end;
3510917   +else do;
MPRINT(EM_DIAGRAM):   else do;
3510918   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3510919   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3510920   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3510921   +   end;
MPRINT(EM_DIAGRAM):   end;
3510922   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3510923   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3510924   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3510925   +   end;
MPRINT(EM_DIAGRAM):   end;
3510926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3510927   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3510928   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3510929   +   end;
MPRINT(EM_DIAGRAM):   end;
3510930   +end;
MPRINT(EM_DIAGRAM):   end;
3510931   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3510932   +   P_DepVar1  =     7.30495506875647 * H11  +     3.47234126942186 * H12
3510933   +          +    -4.71700780627367 * H13  +    -6.10667802104575 * H14
3510934   +          +     6.18869035568642 * H15  +    -7.13060451984575 * H16
3510935   +          +     5.67390166779368 * H17  +      5.8640759423747 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.30495506875647 * H11 + 3.47234126942186 * H12 +
-4.71700780627367 * H13 + -6.10667802104575 * H14 + 6.18869035568642 * H15 + -7.13060451984575
* H16 + 5.67390166779368 * H17 + 5.8640759423747 * H18 ;
3510936   +   P_DepVar1  =     0.00657712609428 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.00657712609428 + P_DepVar1 ;
3510937   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3510938   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3510939   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3510940   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3510941   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3510942   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3510943   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3510944   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3510945   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3510946   +END;
MPRINT(EM_DIAGRAM):   END;
3510947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3510948   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3510949   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3510950   +END;
MPRINT(EM_DIAGRAM):   END;
3510951   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3510952   +   P_DepVar1  =     0.13474538080216;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13474538080216;
3510953   +   P_DepVar0  =     0.86525461919783;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86525461919783;
3510954   +END;
MPRINT(EM_DIAGRAM):   END;
3510955   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3510956   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3510957   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3510958   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3510959   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3510960   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3510961   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3510962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510963   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3510964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3510965   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3510966   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3510967   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3510968   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3510969   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3510970   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3510971   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3510972   +END;
MPRINT(EM_DIAGRAM):   END;
3510973   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510974   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3510975   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3510976   +drop
3510977   +S_MntCard_Games
3510978   +S_MntMagazines
3510979   +S_NumCatalogPurchases
3510980   +S_NumDealsPurchases
3510981   +S_NumWebPurchases
3510982   +S_RANGE_Frq
3510983   +S_RANGE_Recency
3510984   +S_RANGE_average_purchase
3510985   +S_RANGE_campaign_acceptance
3510986   +H11
3510987   +H12
3510988   +H13
3510989   +H14
3510990   +H15
3510991   +H16
3510992   +H17
3510993   +H18
3510994   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3510995   +end;
MPRINT(EM_DIAGRAM):   end;
3510996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510997   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3510998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3510999   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3511000   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3511001   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3511002   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3511003   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3511004   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3511005   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3511006   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3511007   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3511008   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3511009   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3511010   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3511011   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3511012   +LENGTH _WARN_ $4
3511013   +      F_DepVar  $ 12
3511014   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3511015   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3511016   +
3511017   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3511018   +
3511019   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3511020   +
3511021   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3511022   +
3511023   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3511024   +
3511025   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3511026   +
3511027   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3511028   +
3511029   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3511030   +
3511031   +      label S_RANGE_campaign_acceptance =
3511032   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3511033   +
3511034   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3511035   +
3511036   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3511037   +
3511038   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3511039   +
3511040   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3511041   +
3511042   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3511043   +
3511044   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3511045   +
3511046   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3511047   +
3511048   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3511049   +
3511050   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3511051   +
3511052   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3511053   +
3511054   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
3511055   +
3511056   +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
3511057   +
3511058   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3511059   +
3511060   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3511061   +
3511062   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3511063   +
3511064   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3511065   +
3511066   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3511067   +
3511068   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3511069   +
3511070   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3511071   +
3511072   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3511073   +
3511074   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3511075   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3511076   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3511077   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3511078   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3511079   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3511080   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3511081   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3511082   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3511083   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3511084   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3511085   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3511086   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3511087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3511088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3511089   +end;
MPRINT(EM_DIAGRAM):   end;
3511090   +else do;
MPRINT(EM_DIAGRAM):   else do;
3511091   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3511092   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3511093   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3511094   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3511095   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3511096   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3511097   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3511098   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3511099   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3511100   +         end;
MPRINT(EM_DIAGRAM):   end;
3511101   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3511102   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3511103   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3511104   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3511105   +            end;
MPRINT(EM_DIAGRAM):   end;
3511106   +         end;
MPRINT(EM_DIAGRAM):   end;
3511107   +      end;
MPRINT(EM_DIAGRAM):   end;
3511108   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3511109   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3511110   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3511111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3511112   +         end;
MPRINT(EM_DIAGRAM):   end;
3511113   +      end;
MPRINT(EM_DIAGRAM):   end;
3511114   +   end;
MPRINT(EM_DIAGRAM):   end;
3511115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3511116   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3511117   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3511118   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3511119   +      end;
MPRINT(EM_DIAGRAM):   end;
3511120   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3511121   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3511122   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3511123   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3511124   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3511125   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3511126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3511127   +         end;
MPRINT(EM_DIAGRAM):   end;
3511128   +      end;
MPRINT(EM_DIAGRAM):   end;
3511129   +   end;
MPRINT(EM_DIAGRAM):   end;
3511130   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3511131   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3511132   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3511133   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3511134   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3511135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3511136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3511137   +   end;
MPRINT(EM_DIAGRAM):   end;
3511138   +end;
MPRINT(EM_DIAGRAM):   end;
3511139   +
3511140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511141   +*** Checking missing input Interval
3511142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3511143   +
3511144   +IF NMISS(
3511145   +   MntCard_Games ,
3511146   +   MntMagazines ,
3511147   +   NumCatalogPurchases ,
3511148   +   NumDealsPurchases ,
3511149   +   NumWebPurchases ,
3511150   +   RANGE_Frq ,
3511151   +   RANGE_Recency ,
3511152   +   RANGE_average_purchase ,
3511153   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3511154   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3511155   +
3511156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3511157   +END;
MPRINT(EM_DIAGRAM):   END;
3511158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511159   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3511160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511161   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3511162   +   S_MntCard_Games  =     -2.3079998164948 +     6.62914407452749 *
3511163   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3079998164948 + 6.62914407452749 * MntCard_Games ;
3511164   +   S_MntMagazines  =    -0.83429946689635 +     17.2207552565663 *
3511165   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83429946689635 + 17.2207552565663 * MntMagazines ;
3511166   +   S_NumCatalogPurchases  =    -3.14232988556526 +     13.6048658777273 *
3511167   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.14232988556526 + 13.6048658777273 *
NumCatalogPurchases ;
3511168   +   S_NumDealsPurchases  =     -1.4171090178645 +      11.303404896878 *
3511169   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.4171090178645 + 11.303404896878 *
NumDealsPurchases ;
3511170   +   S_NumWebPurchases  =    -5.23336280802532 +     12.2576709113779 *
3511171   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23336280802532 + 12.2576709113779 *
NumWebPurchases ;
3511172   +   S_RANGE_Frq  =    -1.37286527474303 +     4.24322472860292 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37286527474303 + 4.24322472860292 * RANGE_Frq ;
3511173   +   S_RANGE_Recency  =    -1.63967132284055 +     3.33224872286324 *
3511174   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.63967132284055 + 3.33224872286324 * RANGE_Recency ;
3511175   +   S_RANGE_average_purchase  =    -1.03800216530034 +     5.12896816358573 *
3511176   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03800216530034 + 5.12896816358573 *
RANGE_average_purchase ;
3511177   +   S_RANGE_campaign_acceptance
3511178   +          =     -0.4775682943613 +     5.78927017197935 *
3511179   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4775682943613 + 5.78927017197935 *
RANGE_campaign_acceptance ;
3511180   +END;
MPRINT(EM_DIAGRAM):   END;
3511181   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3511182   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3511183   +   ELSE S_MntCard_Games  =     -2.3079998164948 +     6.62914407452749 *
3511184   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3079998164948 + 6.62914407452749 *
MntCard_Games ;
3511185   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3511186   +   ELSE S_MntMagazines  =    -0.83429946689635 +     17.2207552565663 *
3511187   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83429946689635 + 17.2207552565663 *
MntMagazines ;
3511188   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3511189   +   ELSE S_NumCatalogPurchases
3511190   +          =    -3.14232988556526 +     13.6048658777273 * NumCatalogPurchases
3511191   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.14232988556526 + 13.6048658777273 *
NumCatalogPurchases ;
3511192   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3511193   +   ELSE S_NumDealsPurchases  =     -1.4171090178645 +      11.303404896878 *
3511194   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.4171090178645 + 11.303404896878 *
NumDealsPurchases ;
3511195   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3511196   +   ELSE S_NumWebPurchases  =    -5.23336280802532 +     12.2576709113779 *
3511197   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23336280802532 + 12.2576709113779 *
NumWebPurchases ;
3511198   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3511199   +   ELSE S_RANGE_Frq  =    -1.37286527474303 +     4.24322472860292 * RANGE_Frq
3511200   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37286527474303 + 4.24322472860292 * RANGE_Frq ;
3511201   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3511202   +   ELSE S_RANGE_Recency  =    -1.63967132284055 +     3.33224872286324 *
3511203   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.63967132284055 + 3.33224872286324 *
RANGE_Recency ;
3511204   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3511205   +   ELSE S_RANGE_average_purchase
3511206   +          =    -1.03800216530034 +     5.12896816358573 *
3511207   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03800216530034 + 5.12896816358573 *
RANGE_average_purchase ;
3511208   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3511209   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3511210   +   ELSE S_RANGE_campaign_acceptance
3511211   +          =     -0.4775682943613 +     5.78927017197935 *
3511212   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4775682943613 + 5.78927017197935 *
RANGE_campaign_acceptance ;
3511213   +END;
MPRINT(EM_DIAGRAM):   END;
3511214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511215   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3511216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511218   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3511219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511220   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3511221   +   H11  =     -0.0985056670514 * S_MntCard_Games  +     1.14817271193827 *
3511222   +        S_MntMagazines  +    -1.88428033181885 * S_NumCatalogPurchases
3511223   +          +      0.4201035012382 * S_NumDealsPurchases
3511224   +          +    -2.84759599821732 * S_NumWebPurchases
3511225   +          +     4.56274330717806 * S_RANGE_Frq  +    -4.07235286076192 *
3511226   +        S_RANGE_Recency  +     0.16692881647416 * S_RANGE_average_purchase
3511227   +          +    -0.27487936048345 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.0985056670514 * S_MntCard_Games + 1.14817271193827 *
S_MntMagazines + -1.88428033181885 * S_NumCatalogPurchases + 0.4201035012382 *
S_NumDealsPurchases + -2.84759599821732 * S_NumWebPurchases + 4.56274330717806 * S_RANGE_Frq +
-4.07235286076192 * S_RANGE_Recency + 0.16692881647416 * S_RANGE_average_purchase +
-0.27487936048345 * S_RANGE_campaign_acceptance ;
3511228   +   H12  =     1.70702816858751 * S_MntCard_Games  +    -0.82991010087518 *
3511229   +        S_MntMagazines  +     2.62711913675079 * S_NumCatalogPurchases
3511230   +          +     0.48471184950155 * S_NumDealsPurchases
3511231   +          +     1.01490994417582 * S_NumWebPurchases
3511232   +          +    -1.37904435058422 * S_RANGE_Frq  +    -3.19509495389618 *
3511233   +        S_RANGE_Recency  +     5.68278398558231 * S_RANGE_average_purchase
3511234   +          +     1.14225452283837 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.70702816858751 * S_MntCard_Games + -0.82991010087518 *
S_MntMagazines + 2.62711913675079 * S_NumCatalogPurchases + 0.48471184950155 *
S_NumDealsPurchases + 1.01490994417582 * S_NumWebPurchases + -1.37904435058422 * S_RANGE_Frq +
-3.19509495389618 * S_RANGE_Recency + 5.68278398558231 * S_RANGE_average_purchase +
1.14225452283837 * S_RANGE_campaign_acceptance ;
3511235   +   H13  =     1.01185801092706 * S_MntCard_Games  +    -3.24898706480794 *
3511236   +        S_MntMagazines  +    -2.78539907724605 * S_NumCatalogPurchases
3511237   +          +     0.04469270373185 * S_NumDealsPurchases
3511238   +          +    -4.51585769147293 * S_NumWebPurchases
3511239   +          +     0.36854048706022 * S_RANGE_Frq  +    -1.46015279814225 *
3511240   +        S_RANGE_Recency  +     4.20017300779032 * S_RANGE_average_purchase
3511241   +          +    -0.71317303550721 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 1.01185801092706 * S_MntCard_Games + -3.24898706480794 *
S_MntMagazines + -2.78539907724605 * S_NumCatalogPurchases + 0.04469270373185 *
S_NumDealsPurchases + -4.51585769147293 * S_NumWebPurchases + 0.36854048706022 * S_RANGE_Frq +
-1.46015279814225 * S_RANGE_Recency + 4.20017300779032 * S_RANGE_average_purchase +
-0.71317303550721 * S_RANGE_campaign_acceptance ;
3511242   +   H14  =    -1.27927012059944 * S_MntCard_Games  +     1.63318220156388 *
3511243   +        S_MntMagazines  +     0.09251786034368 * S_NumCatalogPurchases
3511244   +          +     -1.7148144195101 * S_NumDealsPurchases
3511245   +          +    -3.15740898425088 * S_NumWebPurchases
3511246   +          +       2.331159698919 * S_RANGE_Frq  +     3.97632031511652 *
3511247   +        S_RANGE_Recency  +    -3.62419972081949 * S_RANGE_average_purchase
3511248   +          +    -3.76115828619713 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -1.27927012059944 * S_MntCard_Games + 1.63318220156388 *
S_MntMagazines + 0.09251786034368 * S_NumCatalogPurchases + -1.7148144195101 *
S_NumDealsPurchases + -3.15740898425088 * S_NumWebPurchases + 2.331159698919 * S_RANGE_Frq +
3.97632031511652 * S_RANGE_Recency + -3.62419972081949 * S_RANGE_average_purchase +
-3.76115828619713 * S_RANGE_campaign_acceptance ;
3511249   +   H15  =     2.86392511097473 * S_MntCard_Games  +     1.70718240178026 *
3511250   +        S_MntMagazines  +     0.19350635315017 * S_NumCatalogPurchases
3511251   +          +     0.88365209673452 * S_NumDealsPurchases
3511252   +          +    -0.29485200978577 * S_NumWebPurchases
3511253   +          +    -1.38661482729961 * S_RANGE_Frq  +     0.44047010643832 *
3511254   +        S_RANGE_Recency  +     0.90435572164264 * S_RANGE_average_purchase
3511255   +          +     4.13455531232834 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 2.86392511097473 * S_MntCard_Games + 1.70718240178026 *
S_MntMagazines + 0.19350635315017 * S_NumCatalogPurchases + 0.88365209673452 *
S_NumDealsPurchases + -0.29485200978577 * S_NumWebPurchases + -1.38661482729961 * S_RANGE_Frq
+ 0.44047010643832 * S_RANGE_Recency + 0.90435572164264 * S_RANGE_average_purchase +
4.13455531232834 * S_RANGE_campaign_acceptance ;
3511256   +   H16  =    -2.92136199562424 * S_MntCard_Games  +     1.17769686948741 *
3511257   +        S_MntMagazines  +    -1.71017570754182 * S_NumCatalogPurchases
3511258   +          +    -2.87755651043379 * S_NumDealsPurchases
3511259   +          +     -1.3972392656555 * S_NumWebPurchases
3511260   +          +    -0.50950089792778 * S_RANGE_Frq  +     4.06351852225563 *
3511261   +        S_RANGE_Recency  +    -0.11891394392592 * S_RANGE_average_purchase
3511262   +          +    -2.36332659005711 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.92136199562424 * S_MntCard_Games + 1.17769686948741 *
S_MntMagazines + -1.71017570754182 * S_NumCatalogPurchases + -2.87755651043379 *
S_NumDealsPurchases + -1.3972392656555 * S_NumWebPurchases + -0.50950089792778 * S_RANGE_Frq +
4.06351852225563 * S_RANGE_Recency + -0.11891394392592 * S_RANGE_average_purchase +
-2.36332659005711 * S_RANGE_campaign_acceptance ;
3511263   +   H17  =       1.919829952219 * S_MntCard_Games  +     0.40961480297544 *
3511264   +        S_MntMagazines  +      2.6026471145522 * S_NumCatalogPurchases
3511265   +          +    -3.21415369866508 * S_NumDealsPurchases
3511266   +          +      1.1529945209277 * S_NumWebPurchases
3511267   +          +      0.1426740909152 * S_RANGE_Frq  +    -2.12798683127045 *
3511268   +        S_RANGE_Recency  +     0.87114789883867 * S_RANGE_average_purchase
3511269   +          +     0.70765961201641 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 1.919829952219 * S_MntCard_Games + 0.40961480297544 *
S_MntMagazines + 2.6026471145522 * S_NumCatalogPurchases + -3.21415369866508 *
S_NumDealsPurchases + 1.1529945209277 * S_NumWebPurchases + 0.1426740909152 * S_RANGE_Frq +
-2.12798683127045 * S_RANGE_Recency + 0.87114789883867 * S_RANGE_average_purchase +
0.70765961201641 * S_RANGE_campaign_acceptance ;
3511270   +   H18  =    -1.47435058833296 * S_MntCard_Games  +     1.65215143651641 *
3511271   +        S_MntMagazines  +     1.05186415059259 * S_NumCatalogPurchases
3511272   +          +     1.49309632305588 * S_NumDealsPurchases
3511273   +          +    -2.02128318829916 * S_NumWebPurchases
3511274   +          +     2.12966434801007 * S_RANGE_Frq  +    -2.74317522495894 *
3511275   +        S_RANGE_Recency  +     1.70248960612764 * S_RANGE_average_purchase
3511276   +          +     0.49447901225777 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -1.47435058833296 * S_MntCard_Games + 1.65215143651641 *
S_MntMagazines + 1.05186415059259 * S_NumCatalogPurchases + 1.49309632305588 *
S_NumDealsPurchases + -2.02128318829916 * S_NumWebPurchases + 2.12966434801007 * S_RANGE_Frq +
-2.74317522495894 * S_RANGE_Recency + 1.70248960612764 * S_RANGE_average_purchase +
0.49447901225777 * S_RANGE_campaign_acceptance ;
3511277   +   H11  = H11  +      0.9494936054746 * Marital_StatusDivorced
3511278   +          +    -1.19865921921931 * Marital_StatusMarried
3511279   +          +     0.63023803048582 * Marital_StatusSingle
3511280   +          +     1.04514697699149 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.9494936054746 * Marital_StatusDivorced + -1.19865921921931
* Marital_StatusMarried + 0.63023803048582 * Marital_StatusSingle + 1.04514697699149 *
Marital_StatusTogether ;
3511281   +   H12  = H12  +    -1.15821762734746 * Marital_StatusDivorced
3511282   +          +    -2.68008863804409 * Marital_StatusMarried
3511283   +          +    -0.97793224821393 * Marital_StatusSingle
3511284   +          +     0.70502403806275 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.15821762734746 * Marital_StatusDivorced +
-2.68008863804409 * Marital_StatusMarried + -0.97793224821393 * Marital_StatusSingle +
0.70502403806275 * Marital_StatusTogether ;
3511285   +   H13  = H13  +     1.44348931030209 * Marital_StatusDivorced
3511286   +          +    -1.17719616310135 * Marital_StatusMarried
3511287   +          +     2.42311759779355 * Marital_StatusSingle
3511288   +          +     1.64663416666983 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.44348931030209 * Marital_StatusDivorced +
-1.17719616310135 * Marital_StatusMarried + 2.42311759779355 * Marital_StatusSingle +
1.64663416666983 * Marital_StatusTogether ;
3511289   +   H14  = H14  +     1.17512477355876 * Marital_StatusDivorced
3511290   +          +    -2.18960718894585 * Marital_StatusMarried
3511291   +          +     -6.0603685795294 * Marital_StatusSingle
3511292   +          +     3.69948168979241 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.17512477355876 * Marital_StatusDivorced +
-2.18960718894585 * Marital_StatusMarried + -6.0603685795294 * Marital_StatusSingle +
3.69948168979241 * Marital_StatusTogether ;
3511293   +   H15  = H15  +     1.13704070805914 * Marital_StatusDivorced
3511294   +          +     3.73889241061818 * Marital_StatusMarried
3511295   +          +    -4.50932158718513 * Marital_StatusSingle
3511296   +          +    -1.03149604709355 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.13704070805914 * Marital_StatusDivorced + 3.73889241061818
* Marital_StatusMarried + -4.50932158718513 * Marital_StatusSingle + -1.03149604709355 *
Marital_StatusTogether ;
3511297   +   H16  = H16  +    -0.15782820023753 * Marital_StatusDivorced
3511298   +          +     1.65164406433362 * Marital_StatusMarried
3511299   +          +    -0.28441112187606 * Marital_StatusSingle
3511300   +          +     0.85306787881509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15782820023753 * Marital_StatusDivorced +
1.65164406433362 * Marital_StatusMarried + -0.28441112187606 * Marital_StatusSingle +
0.85306787881509 * Marital_StatusTogether ;
3511301   +   H17  = H17  +     4.26532981701255 * Marital_StatusDivorced
3511302   +          +    -4.75176491742279 * Marital_StatusMarried
3511303   +          +     4.73186355261237 * Marital_StatusSingle
3511304   +          +    -3.12756468456074 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 4.26532981701255 * Marital_StatusDivorced +
-4.75176491742279 * Marital_StatusMarried + 4.73186355261237 * Marital_StatusSingle +
-3.12756468456074 * Marital_StatusTogether ;
3511305   +   H18  = H18  +     2.46719513823568 * Marital_StatusDivorced
3511306   +          +     -0.3915579464233 * Marital_StatusMarried
3511307   +          +    -2.10231853279411 * Marital_StatusSingle
3511308   +          +    -0.94444829218528 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 2.46719513823568 * Marital_StatusDivorced + -0.3915579464233
* Marital_StatusMarried + -2.10231853279411 * Marital_StatusSingle + -0.94444829218528 *
Marital_StatusTogether ;
3511309   +   H11  =     2.93327296299726 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.93327296299726 + H11 ;
3511310   +   H12  =      2.1329561766939 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.1329561766939 + H12 ;
3511311   +   H13  =     0.98521528874651 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.98521528874651 + H13 ;
3511312   +   H14  =     1.15837019712432 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.15837019712432 + H14 ;
3511313   +   H15  =    -4.09256580694333 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.09256580694333 + H15 ;
3511314   +   H16  =      5.4936837250692 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 5.4936837250692 + H16 ;
3511315   +   H17  =    -10.3001663638833 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -10.3001663638833 + H17 ;
3511316   +   H18  =    -9.99687185957031 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -9.99687185957031 + H18 ;
3511317   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3511318   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3511319   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3511320   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3511321   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3511322   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3511323   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
3511324   +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
3511325   +END;
MPRINT(EM_DIAGRAM):   END;
3511326   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3511327   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3511328   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3511329   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3511330   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3511331   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3511332   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3511333   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
3511334   +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
3511335   +END;
MPRINT(EM_DIAGRAM):   END;
3511336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511337   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3511338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511339   +
3511340   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3511341   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3511342   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3511343   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3511344   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3511345   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3511346   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3511347   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3511348   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3511349   +end;
MPRINT(EM_DIAGRAM):   end;
3511350   +else do;
MPRINT(EM_DIAGRAM):   else do;
3511351   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3511352   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3511353   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3511354   +   end;
MPRINT(EM_DIAGRAM):   end;
3511355   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3511356   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3511357   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3511358   +   end;
MPRINT(EM_DIAGRAM):   end;
3511359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3511360   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3511361   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3511362   +   end;
MPRINT(EM_DIAGRAM):   end;
3511363   +end;
MPRINT(EM_DIAGRAM):   end;
3511364   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3511365   +   P_DepVar1  =     4.64491287207524 * H11  +     5.28219592941748 * H12
3511366   +          +    -3.45448394973418 * H13  +    -7.93142244715969 * H14
3511367   +          +     3.32053013742208 * H15  +    -6.09896245960826 * H16
3511368   +          +     6.28365392663441 * H17  +     11.0716063134576 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.64491287207524 * H11 + 5.28219592941748 * H12 +
-3.45448394973418 * H13 + -7.93142244715969 * H14 + 3.32053013742208 * H15 + -6.09896245960826
* H16 + 6.28365392663441 * H17 + 11.0716063134576 * H18 ;
3511369   +   P_DepVar1  =    -0.17395538341319 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.17395538341319 + P_DepVar1 ;
3511370   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3511371   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3511372   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3511373   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3511374   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3511375   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3511376   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3511377   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3511378   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3511379   +END;
MPRINT(EM_DIAGRAM):   END;
3511380   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3511381   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3511382   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3511383   +END;
MPRINT(EM_DIAGRAM):   END;
3511384   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3511385   +   P_DepVar1  =     0.13675998164295;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13675998164295;
3511386   +   P_DepVar0  =     0.86324001835704;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86324001835704;
3511387   +END;
MPRINT(EM_DIAGRAM):   END;
3511388   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3511389   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3511390   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3511391   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3511392   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3511393   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3511394   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3511395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511396   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3511397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3511398   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3511399   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3511400   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3511401   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3511402   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3511403   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3511404   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3511405   +END;
MPRINT(EM_DIAGRAM):   END;
3511406   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3511407   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3511408   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3511409   +drop
3511410   +S_MntCard_Games
3511411   +S_MntMagazines
3511412   +S_NumCatalogPurchases
3511413   +S_NumDealsPurchases
3511414   +S_NumWebPurchases
3511415   +S_RANGE_Frq
3511416   +S_RANGE_Recency
3511417   +S_RANGE_average_purchase
3511418   +S_RANGE_campaign_acceptance
3511419   +H11
3511420   +H12
3511421   +H13
3511422   +H14
3511423   +H15
3511424   +H16
3511425   +H17
3511426   +H18
3511427   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
3511428   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3511429    run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP12_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3511430    quit;
3511431    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Neural4_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3511455    data EMWS1.Neural4_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMOUTFIT;
3511456    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3511457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.NEURAL4_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3511458    data EMWS1.Neural4_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMOUTFIT;
3511459    set EMWS1.Neural4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMOUTFIT;
3511460    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3511461    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3511461  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3511462    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3511463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL4_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3511464    proc sort data=EMWS1.Neural4_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_EMREPORTFIT nothreads;
3511465    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3511466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL4_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL4_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3511467    %let _EMwarndup = 0;
3511468    %let _EMtargetdup =;
3511469    %let _EMASEtargetdup =;
3511470    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3511471    set EMWS1.Neural4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMOUTFIT;
3511472    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3511473    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3511474    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3511475    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3511476    end;
MPRINT(EM_DIAGRAM):   end;
3511477    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3511478    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3511479    * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
3511480    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural4_TRAIN out=WORK.M0TU76XA noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TU76XA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TU76XA(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TU76XA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TU76XA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3HDN95A NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JRPH8D(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HDN95A;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp12_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp12_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3511833    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3511834    set EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO;
3511835    where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3511836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3511837    data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMINFO;
3511838    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3511839    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3511840    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3511844    run;
3511845    data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMINFO;
3511846    set EMWS1.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMINFO WORK.MODELTEMP_INFO;
3511847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3511848    proc sort data = EMWS1.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural4_EMINFO NOTHREADS;
3511849    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3511850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3511851    proc sort data = EMWS1.Grp12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3511852    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3511853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP12_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3511854    proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3511855    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3511856    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3511857    data EMWS1.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMINFO;
3511858    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3511859    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3511860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3511861    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3511862    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3511863    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3511864    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
3511865    proc sort data=EMWS1.Grp12_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp12_CMeta_TRAIN out=WORK.SUBSETINMETA;
3511866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3511867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.GRP12_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3511868    proc sort data=EMWS1.Neural4_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3511869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3511870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL4_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3511871    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3511872    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3511873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3511874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3511875    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3511876    set EMWS1.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_CMeta_TRAIN;
3511877    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3511877  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3511878    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3511879    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3511880    set EMWS1.Neural4_TRAIN(keep=
3511881    F_DepVar
3511882    I_DepVar
3511883    P_DepVar0
3511884    P_DepVar1
3511885    R_DepVar0
3511886    R_DepVar1
3511887    U_DepVar
3511888    _WARN_
3511889    DepVar
3511890    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3511891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.GRP12_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.NEURAL4_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural4_25YZ6UG nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural4_25YZ6UG;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural4_25YZ6UG(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural4_25YZ6UG;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural4_25YZ6UG;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.0790458186243E-26 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3516178    %let grouptarget=0;
3516179    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3516180    set EMWS1.Grp12_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp12_EMLOOPINFO;
3516181    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3516182    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3516183    stop;
MPRINT(EM_DIAGRAM):   stop;
3516184    end;
MPRINT(EM_DIAGRAM):   end;
3516185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP12_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3516186    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3516187    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516188    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516189    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516189  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516190    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516191    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516192    set EMWS1.Neural4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMOUTFIT;
3516193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516194    data EMWS1.Neural4_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMOUTFIT_LOOP;
3516195    set EMWS1.Neural4_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMOUTFIT_LOOP work.EMOUTFIT;
3516196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL4_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.NEURAL4_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516197    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3516198    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516199    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516200    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516200  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516201    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516202    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516203    set EMWS1.Neural4_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMREPORTFIT;
3516204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL4_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3516205    data EMWS1.Neural4_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMREPORTFIT_LOOP;
3516206    set EMWS1.Neural4_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMREPORTFIT_LOOP work.EMREPORTFIT;
3516207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 210 observations read from the data set EMWS1.NEURAL4_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL4_EMREPORTFIT_LOOP has 219 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
3516208    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3516209    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516210    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516211    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516211  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516212    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516213    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516214    set EMWS1.Neural4_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMRANK;
3516215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516216    data EMWS1.Neural4_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMRANK_LOOP;
3516217    set EMWS1.Neural4_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMRANK_LOOP work.EMRANK;
3516218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.NEURAL4_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.NEURAL4_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516219    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3516220    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516221    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516222    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516222  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516223    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516224    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516225    set EMWS1.Neural4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMSCOREDIST;
3516226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3516227    data EMWS1.Neural4_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMSCOREDIST_LOOP;
3516228    set EMWS1.Neural4_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMSCOREDIST_LOOP work.EMSCOREDIST;
3516229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 199 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.NEURAL4_EMSCOREDIST_LOOP has 219 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516230    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3516231    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516232    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516233    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516233  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516234    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516235    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516236    set EMWS1.Neural4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMCLASSIFICATION;
3516237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516238    data EMWS1.Neural4_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMCLASSIFICATION_LOOP;
3516239    set EMWS1.Neural4_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3516240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516241    proc sort data=EMWS1.Neural4_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_EMCLASSIFICATION_LOOP out=_temp;
3516242    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516243    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3516244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3516245    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3516245  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount
totalPercent);
3516246    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3516247    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3516248    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516249    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3516250    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3516251    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3516252    end;
MPRINT(EM_DIAGRAM):   end;
3516253    else do;
MPRINT(EM_DIAGRAM):   else do;
3516254    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3516255    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3516256    end;
MPRINT(EM_DIAGRAM):   end;
3516257    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3516258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516259    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3516259  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount
eventPercent);
3516260    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3516261    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3516262    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516263    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3516264    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3516265    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3516266    end;
MPRINT(EM_DIAGRAM):   end;
3516267    else do;
MPRINT(EM_DIAGRAM):   else do;
3516268    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3516269    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3516270    end;
MPRINT(EM_DIAGRAM):   end;
3516271    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3516272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516273    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3516273  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
neventPercent);
3516274    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3516275    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3516276    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516277    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3516278    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3516279    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3516280    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3516281    end;
MPRINT(EM_DIAGRAM):   end;
3516282    else do;
MPRINT(EM_DIAGRAM):   else do;
3516283    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3516284    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3516285    end;
MPRINT(EM_DIAGRAM):   end;
3516286    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3516287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3516288    data EMWS1.Neural4_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMMISC_LOOP;
3516289    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3516290    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516291    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3516291  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3516291  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3516292       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3516292  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3516292  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3516293       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3516293  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3516294    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3516295    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3516296    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3516297    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3516298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.NEURAL4_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3516299    proc sort data=EMWS1.Neural4_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural4_EMMISC_LOOP;
3516300    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3516301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL4_EMMISC_LOOP.
NOTE: The data set EMWS1.NEURAL4_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3516302    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3516303    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3516304    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3516305    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3516305  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3516306    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3516307    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3516308    set EMWS1.Neural4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMEVENTREPORT;
3516309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL4_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516310    data EMWS1.Neural4_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMEVENTREPORT_LOOP;
3516311    set EMWS1.Neural4_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3516312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL4_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL4_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3516313    %let _cn = %sysfunc(getoption(CENTER));
3516314    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3516315    proc print data=EMWS1.Neural4_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural4_EMREPORTFIT_LOOP noobs label;
3516316    var STAT LABEL TRAIN
3516317    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3516318    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3516319    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3516320    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3516321    run;
 
NOTE: There were 219 observations read from the data set EMWS1.NEURAL4_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2325.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516322    title10;
MPRINT(EM_DIAGRAM):   title10;
3516323    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3516324    proc sort data=EMWS1.Neural4_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural4_EMCLASSIFICATION_LOOP nothreads;
3516325    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3516326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3516327    %let _cn = %sysfunc(getoption(CENTER));
3516328    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3516329    proc print data=EMWS1.Neural4_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural4_EMCLASSIFICATION_LOOP noobs label;
3516330    var from into pct_row pct_col count percent
3516331    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3516332    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3516333    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3516334    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3516335    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3516336    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3516337    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3516338    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3516339    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3516340    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3516341    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3516342    run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL4_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2326.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3516343    title9;
MPRINT(EM_DIAGRAM):   title9;
3516344    title10;
MPRINT(EM_DIAGRAM):   title10;
3516345    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3516346    %let _cn = %sysfunc(getoption(CENTER));
3516347    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3516348    data EMWS1.Neural4_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural4_EMEVENTREPORT_LOOP;
3516349    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3516349  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3516350    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3516350  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3516350  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3516350  ! FALSEEVENT
3516351    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3516351  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3516351  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3516352       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3516353    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3516354    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3516355    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3516356    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3516357    set EMWS1.Neural4_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural4_EMEVENTREPORT_LOOP;
3516358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL4_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.NEURAL4_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3516359    proc print data=EMWS1.Neural4_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural4_EMEVENTREPORT_LOOP noobs label;
3516360    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3516361    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3516362    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3516363    run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL4_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2327.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3516364    title10;
MPRINT(EM_DIAGRAM):   title10;
3516365    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3516366    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3516367    modify Neural4_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural4_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3516368    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3516369    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3516369  ! ;
MPRINT(EM_DIAGRAM):   run;
3516370    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL4_EMRANK_LOOP.DATA.
3516371    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3516372    %let _cn = %sysfunc(getoption(CENTER));
3516373    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3516374    proc print data=EMWS1.Neural4_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural4_EMRANK_LOOP label noobs;
3516375    var
3516376    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3516377    by
3516378    notsorted DATAROLE
3516379    notsorted _WHERE_
3516380    notsorted TARGET
3516381    notsorted TARGETLABEL
3516382    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3516383    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3516384    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3516385    run;
 
NOTE: There were 220 observations read from the data set EMWS1.NEURAL4_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2328.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3516386    title10;
MPRINT(EM_DIAGRAM):   title10;
3516387    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3516388    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3516389    modify Neural4_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural4_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3516390    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3516390  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3516391    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3516391  ! ;
MPRINT(EM_DIAGRAM):   run;
3516392    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL4_EMSCOREDIST_LOOP.DATA.
3516393    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
3516394    %let _cn = %sysfunc(getoption(CENTER));
3516395    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3516396    proc print data=EMWS1.Neural4_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural4_EMSCOREDIST_LOOP label noobs;
3516397    var
3516398    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3516399    by
3516400    notsorted DATAROLE
3516401    notsorted _WHERE_
3516402    notsorted TARGET
3516403    notsorted TARGETLABEL
3516404    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3516405    where TARGET in(
3516406    "DepVar"
3516407    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3516408    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3516409    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3516410    run;
 
NOTE: There were 219 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2329.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3516411    title10;
MPRINT(EM_DIAGRAM):   title10;
3516412    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3516413    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:59 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:59 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural4\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural4_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ITERATIONPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_PLOTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="WEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_WEIGHTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="HISTWEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMESTIMATE_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural4_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
