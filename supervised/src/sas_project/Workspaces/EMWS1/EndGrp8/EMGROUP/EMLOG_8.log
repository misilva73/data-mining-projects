*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:55:30 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:24 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:55:24 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37__W5B "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37__W5B new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMGROUP\EMLOG_8.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:24 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMGROUP\EMOUTPUT_8.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:24 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2662099    proc freq data=EMWS1.EndGrp8_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp8_VariableSet noprint;
2662100    table ROLE*LEVEL/out=WORK.EndGrp8META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp8META;
2662101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP8_VARIABLESET.
NOTE: The data set WORK.ENDGRP8META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
2662102    proc print data=WORK.EndGrp8META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp8META label noobs;
2662103    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2662104    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2662105    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2662106    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2662107    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP8META.
NOTE: The PROCEDURE PRINT printed page 1798.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2662108    title10;
MPRINT(EM_DIAGRAM):   title10;
2662109    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2662138    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2662139    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2662140    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2662141       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2662142    set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
2662143    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2662144    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2662145    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2662146    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2662147    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2662148    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2662149    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2662150    end;
MPRINT(EM_DIAGRAM):   end;
2662151    output;
MPRINT(EM_DIAGRAM):   output;
2662152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP8_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
2662153    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2662154    proc print data=WORK.EndGrp8_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp8_EVENT noobs label;
2662155    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2662156    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2662157    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2662158    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP8_EVENT.
NOTE: The PROCEDURE PRINT printed page 1799.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2662159    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2662160    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
2662161    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2662162    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2662163    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2662164    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2662165    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2662166    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1800.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2662167    title10;
MPRINT(EM_DIAGRAM):   title10;
2662168    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp8: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=295;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13348416289592;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1915;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86651583710407;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2662641    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2662642    * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
2662643    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2662644    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2662645    %let EMEXCEPTIONSTRING=;
2662646    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2662647    * TRAIN: EndGrp8;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp8;
2662648    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2662649    %let EM_ACTION = TRAIN;
2662650    %let syscc = 0;
2662651    %macro main;
2662652       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2662653
2662654           filename temp catalog 'sashelp.emutil.endgp_train.source';
2662655           %include temp;
2662656           filename temp;
2662657
2662658           %train;
2662659
2662660       %end;
2662661       %else
2662662          %if %upcase(&EM_ACTION) = SCORE %then %do;
2662663
2662664           filename temp catalog 'sashelp.emutil.endgp_score.source';
2662665           %include temp;
2662666           filename temp;
2662667
2662668           %score;
2662669       %end;
2662670       %else
2662671       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2662672
2662673           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2662674           %include temp;
2662675           filename temp;
2662676
2662677           %postloop;
2662678
2662679       %end;
2662680
2662681       %doendm:
2662682    %mend main;
2662683
2662684    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2662685   +%macro copyModelDs(model=, key=);
2662686   +   %let modelDs  = &em_lib..&model._&key;
2662687   +   %let reportDs = &em_lib..&em_nodeid._&key;
2662688   +   %if %sysfunc(exist(&modelDs)) %then %do;
2662689   +       data &reportDs;
2662690   +          length ModelId $16;
2662691   +          retain ModelId "&model";
2662692   +          set &modelDs;
2662693   +       run;
2662694   +   %end;
2662695   +%mend copyModelDs;
2662696   +
2662697   +%macro traintarget(groupid=);
2662698   +   %em_getname(key=emoutfit, type=DATA);
2662699   +   %let targetname=;
2662700   +   data _null_;
2662701   +     set &em_lib..&groupid._&looptype;
2662702   +     where _LOOP_ = &EMLOOPNUMBER;
2662703   +     call symput('targetname', strip(_TARGET_));
2662704   +   run;
2662705   +   %let modelId =;
2662706   +   data _null_;
2662707   +      set &em_import_data_eminfo;
2662708   +      where key = 'MODEL' and TARGET = "&targetname";
2662709   +      call symput('modelId',   strip(data));
2662710   +   run;
2662711   +   %if "&modelId" ne "" %then %do;
2662712   +       %copyModelDs(model=&modelid, key=EMRANK);
2662713   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2662714   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2662715   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2662716   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2662717   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2662718   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2662719   +   %end;
2662720   +
2662721   +   %doendtgp:
2662722   +%mend;
2662723   +
2662724   +%macro trainboost(groupid=);
2662725   +
2662726   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2662727   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2662728   +
2662729   +   data _null_;
2662730   +      retain index 0;
2662731   +      set &boostinfoDs;
2662732   +      call symput('targetname', strip(_target_));
2662733   +   run;
2662734   +
2662735   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2662736   +       %let decmeta = ;
2662737   +       data _null_;
2662738   +          set &em_import_data_eminfo;
2662739   +          where (key='DECMETA' and TARGET="&targetname");
2662740   +          call symput('DECMETA', strip(data));
2662741   +       run;
2662742   +       %if "&decmeta" eq "" %then %do;
2662743   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2662744   +           %goto doendtb;
2662745   +       %end;
2662746   +
2662747   +       %let predictedVars=;
2662748   +       data _null_;
2662749   +          set &decmeta;
2662750   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2662751   +          else
2662752   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2662753   +          else
2662754   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2662755   +       run;
2662756   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2662757   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2662758   +       %end;
2662759   +   %end;
2662760   +
2662761   +   * ;
2662762   +   * ENDGROUP &NODEID : Boosting scoring ;
2662763   +   * ;
2662764   +   data &em_lib..&groupid._boostscore;
2662765   +      set &em_import_data;
2662766   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2662767   +      %if "%em_freq" ne "" %then %do ;
2662768   +          keep %em_freq ;
2662769   +      %end ;
2662770   +   run;
2662771   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2662772   +
2662773   +   %doendtb:
2662774   +
2662775   +%mend trainboost;
2662776   +
2662777   +%macro trainbag(groupid=);
2662778   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2662779   +   data _null_;
2662780   +      retain index 0;
2662781   +      set &baginfoDs;
2662782   +      call symput('targetname', strip(_target_));
2662783   +   run;
2662784   +
2662785   +   %let decmeta = ;
2662786   +   data _null_;
2662787   +       set &em_import_data_eminfo;
2662788   +       where (key='DECMETA' and TARGET="&targetname");
2662789   +       call symput('DECMETA', strip(data));
2662790   +   run;
2662791   +   %if "&decmeta" eq "" %then %do;
2662792   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2662793   +       %goto doendtg;
2662794   +   %end;
2662795   +
2662796   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2662797   +
2662798   +   %doendtg:
2662799   +%mend trainbag;
2662800   +
2662801   +%macro traingroup(groupid=);
2662802   +   %let targetNum = 0;
2662803   +
2662804   +   data _temp1;
2662805   +      set &em_lib..&groupid._eminfo;
2662806   +      where key='MODEL';
2662807   +   run;
2662808   +   data _temp2;
2662809   +      set &em_import_data_eminfo;
2662810   +      where key='MODEL';
2662811   +   run;
2662812   +   proc sort data=_temp1; by TARGET DATA;
2662813   +   proc sort data=_temp2; by TARGET DATA;
2662814   +   data _temp2;
2662815   +      merge _temp1(in=_a) _temp2(in=_b);
2662816   +      by TARGET DATA;
2662817   +      if ^_a and _b then output;
2662818   +   run;
2662819   +   data _null_;
2662820   +      retain index 0;
2662821   +      set _temp2 end=eof;
2662822   +      index +1;
2662823   +      where key ='MODEL';
2662824   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2662825   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2662826   +      if eof then
2662827   +         call symput('targetnum', strip(put(index, best.)));
2662828   +   run;
2662829   +   proc datasets lib=work nolist;
2662830   +      delete _temp1 _temp2;
2662831   +   run;
2662832   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2662833   +
2662834   +   %let modelString =;
2662835   +   %do i=1 %to &targetnum;
2662836   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2662837   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2662838   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2662839   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2662840   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2662841   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2662842   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2662843   +            %let modelString = &modelString &&modelid&i;
2662844   +       %end;
2662845   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2662846   +   %end;
2662847   +
2662848   +   %doendtgp:
2662849   +
2662850   +%mend traingroup;
2662851   +
2662852   +%macro getSize(data=, nobsvar=);
2662853   +
2662854   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2662855   +       %let dsid = %sysfunc(open(&data));
2662856   +       %if &dsid %then %do;
2662857   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2662858   +           %let dsid = %sysfunc(close(&dsid));
2662859   +       %end;
2662860   +   %end;
2662861   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2662862   +        proc sql;
2662863   +           reset noprint;
2662864   +           select count(*) into :&nobsvar from &data;
2662865   +        quit;
2662866   +   %end;
2662867   +
2662868   +%mend getsize;
2662869   +
2662870   +%macro train;
2662871   +
2662872   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2662873   +      %let EM_TOOLTYPE=UTILITY;
2662874   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2662875   +          proc delete data=&em_data_eminfo;
2662876   +          run;
2662877   +      %end;
2662878   +      %goto doendtr;
2662879   +   %end;
2662880   +
2662881   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2662882   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2662883   +       %goto doendtr;
2662884   +   %end;
2662885   +
2662886   +   %let xgroupid = ;
2662887   +   data _null_;
2662888   +      set &em_import_data_eminfo;
2662889   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2662890   +      call symput('XGROUPID',  strip(data));
2662891   +      call symput('LOOPTYPE', strip(key));
2662892   +   run;
2662893   +
2662894   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2662895   +       %let nDataObs=0;
2662896   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2662897   +
2662898   +       %let nStartObs=0;
2662899   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2662900   +
2662901   +       %if &nDataObs ne &nStartObs %then %do;
2662902   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2662903   +           %goto doendtr;
2662904   +       %end;
2662905   +
2662906   +       %trainboost(groupid=&xgroupid);
2662907   +   %end;
2662908   +   %else
2662909   +   %if "&looptype" eq "BAGINFO" %then %do;
2662910   +       %trainbag(groupid=&xgroupid);
2662911   +   %end;
2662912   +   %else
2662913   +   %if "&looptype" eq "GROUPINFO" %then %do;
2662914   +       %traingroup(groupid=&xgroupid);
2662915   +   %end;
2662916   +   %else
2662917   +   %if "&looptype" eq "TARGETINFO" %then %do;
2662918   +       %traintarget(groupid=&xgroupid);
2662919   +   %end;
2662920   +
2662921   +   data &em_data_eminfo;
2662922   +      length TARGET KEY $32  DATA $43;
2662923   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2662924   +   run;
2662925   +
2662926   +   %let EM_TOOLTYPE=MODEL;
2662927   +
2662928   +   %doendtr:
2662929   +
2662930   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp7_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP7_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMRANK.
NOTE: The data set EMWS1.ENDGRP8_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP8_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp8_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp8";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2662931    *------------------------------------------------------------*;
2662932    * End TRAIN: EndGrp8;
2662933    *------------------------------------------------------------*;
2662934
 
2662935    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2662936    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2662937    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2662938    ;
MPRINT(EM_DIAGRAM):   ;
2662939    ;
MPRINT(EM_DIAGRAM):   ;
2662940    ;
MPRINT(EM_DIAGRAM):   ;
2662941    ;
MPRINT(EM_DIAGRAM):   ;
2662942    quit;
MPRINT(EM_DIAGRAM):   quit;
2662943    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2662944    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2662945    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2662946    /*; *"; *'; */
2662947    ;
MPRINT(EM_DIAGRAM):   ;
2662948    run;
MPRINT(EM_DIAGRAM):   run;
2662949    quit;
MPRINT(EM_DIAGRAM):   quit;
2662950    /* Reset EM Options */
2662951    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2662952    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2662953    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:27 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:55:27 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3QTRHTL "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3QTRHTL new;
MPRINT(EM_DIAGRAM):   run;
2663055    %let EMEXCEPTIONSTRING=;
2663056    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2663057    * SCORE: EndGrp8;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp8;
2663058    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2663059    %let EM_ACTION = SCORE;
2663060    %let syscc = 0;
2663061    %macro main;
2663062       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2663063
2663064           filename temp catalog 'sashelp.emutil.endgp_train.source';
2663065           %include temp;
2663066           filename temp;
2663067
2663068           %train;
2663069
2663070       %end;
2663071       %else
2663072          %if %upcase(&EM_ACTION) = SCORE %then %do;
2663073
2663074           filename temp catalog 'sashelp.emutil.endgp_score.source';
2663075           %include temp;
2663076           filename temp;
2663077
2663078           %score;
2663079       %end;
2663080       %else
2663081       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2663082
2663083           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2663084           %include temp;
2663085           filename temp;
2663086
2663087           %postloop;
2663088
2663089       %end;
2663090
2663091       %doendm:
2663092    %mend main;
2663093
2663094    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2663095   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2663097   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2663098   +       data &out / view=&out;
2663099   +          set &data
2663101   +          %if "&prescore" = "Y" %then %do;
2663102   +              (obs=1)
2663103   +          %end;
2663105   +          ;
2663107   +          %inc &scoreref;
2663109   +          %if "&prescore" eq "Y" %then %do;
2663110   +              drop I_: R_:;
2663111   +          %end;
2663113   +       run;
2663114   +   %end;
2663116   +%mend scoretables;
2663118   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2663119   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2663120   +   data _null_;
2663121   +      retain index 0;
2663122   +      set &infoDs;
2663123   +      call symput('targetname', strip(_target_));
2663124   +      call symput('endloopnum', strip(_loop_));
2663125   +   run;
2663127   +   %let endgrp_decmeta=;
2663128   +   %let endgrp_decdata=;
2663130   +   data _null_;
2663131   +      set &em_import_data_eminfo;
2663132   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2663133   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2663134   +      else
2663135   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2663136   +      else call symput('MODELID', strip(data));
2663137   +   run;
2663139   +   %let headerString= Boosting;
2663140   +   %let prefixString= _BoostVar;
2663142   +   %if "&type" = "BAGINFO" %then %do;
2663143   +        %let headerString = Bagging;
2663144   +        %let prefixString= _BagVar;
2663145   +   %end;
2663147   +   %let targetType=;
2663148   +   %let predictedVars=;
2663149   +   data _null_;
2663150   +      retain index;
2663151   +      set &endgrp_decmeta end=eof;
2663152   +      length tempvar $200;
2663153   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2663154   +      else
2663155   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2663156   +      else
2663157   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2663158   +      else
2663159   +      if _TYPE_ = 'PREDICTED' then do;
2663160   +         index+1;
2663161   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2663162   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2663163   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2663164   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2663165   +      end;
2663166   +      if eof then
2663167   +         call symput('prednum', strip(put(index, best.)));
2663168   +   run;
2663170   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2663171   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2663173   +   filename loopflow "&em_user_loopflowcode";
2663174   +   filename looppub "&em_user_looppubcode";
2663176   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2663177   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2663179   +   %if "&emloopnumber" = "1" %then %do;
2663180   +       data _null_;
2663181   +          rc = fdelete('loopflow');
2663182   +          rc = fdelete('looppub');
2663183   +       run;
2663184   +       data _null_;
2663185   +          file loopflow;
2663186   +          put "&em_codebar;";
2663187   +          put "* &em_nodeid: ;" ;
2663188   +          put "* User: &sysuserid;";
2663189   +          put "* Date: &sysdate: &systime;";
2663190   +          put "&em_codebar ;";
2663191   +          put "* Ensemble Code;";
2663192   +          put "&em_codebar ;";
2663193   +          put "* &headerString: Loop=1;";
2663194   +          put "* Temporary Variables;";
2663195   +          %do i= 1 %to &prednum;
2663196   +              put "drop &&tempvars&i;";
2663197   +              put "&&tempvars&i = 0;";
2663198   +          %end;
2663199   +       run;
2663200   +       %em_copyfile(infref=loopflow, outfref=looppub);
2663201   +   %end;
2663203   +   %let j=&emloopnumber;
2663204   +   %do i = 1 %to &loopcodenum;
2663205   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2663206   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2663208   +       %if (&&loopnode&i eq &em_nodeid ) or
2663209   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2663210   +           data _null_;
2663211   +              file loopflow mod;
2663212   +              put "&em_codebar;";
2663213   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2663214   +              put "* User: &sysuserid;";
2663215   +              put "* Date: &sysdate: &systime;";
2663216   +              put "* &headerString: Loop=&j;";
2663217   +              put "&em_codebar;";
2663218   +           run;
2663219   +           data _null_;
2663220   +              file looppub mod;
2663221   +              put "&em_codebar;";
2663222   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2663223   +              put "* User: &sysuserid;";
2663224   +              put "* Date: &sysdate: &systime;";
2663225   +              put "* &headerString: Loop=&j;";
2663226   +              put "&em_codebar;";
2663227   +           run;
2663228   +       %end;
2663230   +       %if &&loopnode&i ne &em_nodeid %then %do;
2663231   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2663232   +               filename x catalog "&fsourceEntry";
2663233   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2663234   +               filename x;
2663236   +               filename y catalog "&psourceEntry";
2663237   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2663238   +               filename y;
2663239   +           %end;
2663240   +       %end;
2663241   +       %else %do;
2663242   +           %if "&j" ne "1" %then %do;
2663243   +               %let weight = %eval(&j-1);
2663244   +               data _null_;
2663245   +                  file loopflow mod;
2663246   +                  put "&em_codebar;";
2663247   +                  %if "&j" ne "&endloopnum" %then %do;
2663248   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2663249   +                  %end;
2663250   +                  %else %do;
2663251   +                      put "* &headerString: accumulate final probabilities;";
2663252   +                  %end;
2663253   +                  put "&em_codebar;";
2663254   +                  %do k=1 %to &prednum;
2663255   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2663256   +                  %end;
2663257   +               run;
2663258   +               data _null_;
2663259   +                  file looppub mod;
2663260   +                  put "&em_codebar;";
2663261   +                  %if "&j" ne "&endloopnum" %then %do;
2663262   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2663263   +                  %end;
2663264   +                  %else %do;
2663265   +                      put "* &headerString: accumulate final probabilities;";
2663266   +                  %end;
2663267   +                  %do k=1 %to &prednum;
2663268   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2663269   +                  %end;
2663270   +               run;
2663271   +           %end;
2663272   +           %if "&j" ne "&endloopnum" %then %do;
2663273   +               data _null_;
2663274   +                  file loopflow mod;
2663275   +                  put "&em_codebar;";
2663276   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2663277   +                  put "&em_codebar;";
2663278   +               %do k=1 %to &prednum;
2663279   +                  put "&&tempvars&k = &&predvars&k;";
2663280   +               %end;
2663281   +               run;
2663282   +               data _null_;
2663283   +                  file looppub mod;
2663284   +                  put "&em_codebar;";
2663285   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2663286   +                  put "&em_codebar;";
2663287   +               %do k=1 %to &prednum;
2663288   +                   put "&&tempvars&k = &&predvars&k;";
2663289   +               %end;
2663290   +               run;
2663291   +           %end;
2663293   +       %end;
2663294   +   %end;
2663296   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2663297   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2663299   +   filename loopflow;
2663300   +   filename looppub;
2663301   +   filename empub;
2663303   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2663304   +   %let gpTrain=;
2663305   +   %let gpValidate=;
2663306   +   %let gpTest=;
2663308   +   data _null_;
2663309   +      set &groupImportDs;
2663310   +      select(upcase(port));
2663311   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2663312   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2663313   +          when('TEST')     call symput('gpTest',     strip(dataset));
2663314   +       otherwise;
2663315   +      end;
2663316   +   run;
2663318   +   %if "&gpTrain" ne "" %then %do;
2663320   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2663322   +       %if &targetType ne INTERVAL %then %do;
2663323   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2663324   +       %end;
2663326   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2663328   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2663330   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2663331   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2663333   +       filename _decflow "&decflow";
2663334   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2663335   +       filename _decflow;
2663337   +   %end;
2663339   +   %if "&gpTrain" ne "" %then
2663340   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2663341   +   %if "&gpValidate" ne "" %then
2663342   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2663343   +   %if "&gpTest" ne "" %then
2663344   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2663346   +   filename emflow;
2663348   +%mend boostbagcode;
2663350   +%macro score;
2663352   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2663353   +   %inc _dec;
2663354   +   filename _dec;
2663356   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2663358   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2663359   +       %let emexceptionstring = nomodeltarget;
2663360   +       %goto doendpl;
2663361   +   %end;
2663363   +   %LET GROUPID=;
2663364   +   %let LOOPTYPE=;
2663365   +   data _null_;
2663366   +      set &em_import_data_eminfo;
2663367   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2663368   +      call symput('GROUPID',   strip(data));
2663369   +      call symput('LOOPTYPE', strip(key));
2663370   +   run;
2663372   +   %em_getname(key=PATH, type=DATA);
2663374   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2663375   +   %include temp;
2663376   +   filename temp;
2663378   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2663380   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2663381   +       %let deleteString = &em_nodeid._path;
2663382   +       proc datasets lib=&em_lib nolist;
2663383   +          delete &deleteString;
2663384   +       run;
2663385   +       quit;
2663386   +   %end;
2663388   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2663390   +   data score_path;
2663391   +      retain LOOPID &emloopnumber;
2663392   +      set score_path;
2663393   +   run;
2663395   +   proc append base=&em_user_path  data=score_path;
2663396   +   run;
2663398   +   %let EnsembleIndex=0;
2663399   +   data _null_;
2663400   +      retain index 0 ensembleIndex 0;
2663401   +      set score_Path end=eof;
2663402   +      if nodelabel = "&groupid" or index then do;
2663403   +         index + 1;
2663404   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2663405   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2663406   +      end;
2663407   +      if component='Ensemble' then ensembleIndex = index;
2663408   +      if eof then do;
2663409   +         call symput('loopcodenum', strip(put(index, best.)));
2663410   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2663411   +      end;
2663412   +   run;
2663414   +   proc datasets lib=work nolist;
2663415   +      delete score_Path;
2663416   +   run;
2663417   +   quit;
2663419   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2663420   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2663422   +   %doendpl:
2663424   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2663425   +/*
2663426   +       MACRO: EM_DECIDECODE
2663427   +
2663428   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2663429   +       SUPPORT: Taiyeong Lee
2663430   +
2663431   +       HISTORY: 01OCT04 Initial code
2663432   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2663433   +                to add the corresponding decision code
2663434   +
2663435   +*/
2663436   +
2663437   +
2663438   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2663439   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2663440   +
2663441   +    %do;
2663442   +    %let m_data      = &data;
2663443   +    %let m_decdata   = &decdata;
2663444   +    %let m_decmeta   = &decmeta;
2663445   +    %let m_noresfile = &noresfile;
2663446   +    %let m_resfile   = &resfile;
2663447   +    dm "afa c=sashelp.emutil.decidecode.scl";
2663448   +  %end;
2663449   +%mend EM_DECIDECODE;
2663450   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2663451   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2663452   +   proc display c=sashelp.emcore.pathscorecode.scl;
2663453   +   run;
2663454   +%mend EM_GETTRAINPATH;
2663455   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2663456    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2663457    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2663458    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2663459    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2663460    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2663461    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2663462    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2663463    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663464    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663465    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663466    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663467    output;
MPRINT(EM_GETTRAINPATH):   output;
2663468    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2663469    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2663470    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2663471    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2663472    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2663473    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663474    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663475    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663476    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663477    output;
MPRINT(EM_GETTRAINPATH):   output;
2663478    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2663479    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2663480    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2663481    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2663482    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2663483    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663484    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663485    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663486    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663487    output;
MPRINT(EM_GETTRAINPATH):   output;
2663488    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2663489    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2663490    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2663491    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2663492    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2663493    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663494    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663495    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663496    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663497    output;
MPRINT(EM_GETTRAINPATH):   output;
2663498    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2663499    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2663500    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2663501    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2663502    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2663503    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663504    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663505    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663506    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663507    output;
MPRINT(EM_GETTRAINPATH):   output;
2663508    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2663509    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2663510    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2663511    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2663512    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2663513    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663514    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663515    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663516    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663517    output;
MPRINT(EM_GETTRAINPATH):   output;
2663518    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2663519    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2663520    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2663521    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2663522    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2663523    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663524    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663525    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663526    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663527    output;
MPRINT(EM_GETTRAINPATH):   output;
2663528    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2663529    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2663530    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2663531    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2663532    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2663533    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663534    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663535    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663536    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663537    output;
MPRINT(EM_GETTRAINPATH):   output;
2663538    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2663539    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2663540    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2663541    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2663542    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2663543    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663544    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663545    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663546    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663547    output;
MPRINT(EM_GETTRAINPATH):   output;
2663548    nodelabel="Grp7";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp7";
2663549    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2663550    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2663551    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2663552    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2663553    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663554    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663555    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663556    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663557    output;
MPRINT(EM_GETTRAINPATH):   output;
2663558    nodelabel="Reg3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg3";
2663559    parent="Grp7";
MPRINT(EM_GETTRAINPATH):   parent="Grp7";
2663560    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
2663561    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
2663562    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2663563    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663564    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663565    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663566    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663567    output;
MPRINT(EM_GETTRAINPATH):   output;
2663568    nodelabel="EndGrp8";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp8";
2663569    parent="Reg3";
MPRINT(EM_GETTRAINPATH):   parent="Reg3";
2663570    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2663571    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2663572    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2663573    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2663574    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2663575    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2663576    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2663577    output;
MPRINT(EM_GETTRAINPATH):   output;
2663578    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 8;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp8_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP8_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP8_PATH has 96 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp7" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2663579    *------------------------------------------------------------*;
2663580    * End SCORE: EndGrp8;
2663581    *------------------------------------------------------------*;
2663582
 
2663583    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2663584    * EndGrp8: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp8: Scoring DATA data;
2663585    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2663586    data EMWS1.EndGrp8_TRAIN
2663587    / view=EMWS1.EndGrp8_TRAIN
2663588    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_TRAIN / view=EMWS1.EndGrp8_TRAIN ;
2663589    set EMWS1.Reg3_TRAIN
2663590    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_TRAIN ;
2663591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP8_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2663592    quit;
 
2663594    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2663595    * EndGrp8: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp8: Computing metadata for TRAIN data;
2663596    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp8_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp8_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp8_TRAIN out=WORK.M1QIPL5I noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QIPL5I;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QIPL5I(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QIPL5I;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QIPL5I;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1CM1EZX NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2M__FKX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CM1EZX;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp8";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp8";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2663942    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2663943    set EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO;
2663944    where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2663945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMINFO.
      WHERE (DATA='EndGrp8') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2663946    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMINFO;
2663947    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2663948    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2663949    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2663953    run;
2663954    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
2663955    set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
2663956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2663957    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
2663958    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2663959    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2663960    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2663961    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2663962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2663963    proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2663964    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2663965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2663966    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
2663967    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2663968    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2663969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2663970    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2663971    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2663972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2663973    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:29 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:55:29 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O01WYW5H "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O01WYW5H new;
MPRINT(EM_DIAGRAM):   run;
2663997    data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT;
2663998    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
2663999    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2664000    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2664001    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2664002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2664003    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
2664004    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2664005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2664006    %let _EMwarndup = 0;
2664007    %let _EMtargetdup =;
2664008    %let _EMASEtargetdup =;
2664009    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2664010    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
2664011    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2664012    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2664013    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2664014    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2664015    end;
MPRINT(EM_DIAGRAM):   end;
2664016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2664017    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
2664018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2664019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.REG3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2664020    proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2664021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2664022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP8_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 19 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2664023    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2664024    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2664025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2664026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 19 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2664027    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2664028    set EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_CMeta_TRAIN;
2664029    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2664030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP8_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2664031    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2664032    set EMWS1.EndGrp8_TRAIN(keep=
2664033    F_DepVar
2664034    I_DepVar
2664035    P_DepVar0
2664036    P_DepVar1
2664037    R_DepVar0
2664038    R_DepVar1
2664039    U_DepVar
2664040    _WARN_
2664041    DepVar
2664042    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2664043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2210 observations read from the data set EMWS1.GRP7_TRAIN.
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2210 observations read from the data set EMWS1.REG3_TRAIN.
NOTE: There were 2210 observations read from the data set EMWS1.ENDGRP8_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2210 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2668230    %let _cn = %sysfunc(getoption(CENTER));
2668231    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2668232    proc print data=EMWS1.EndGrp8_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMREPORTFIT noobs label;
2668233    var STAT LABEL TRAIN
2668234    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2668235    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2668236    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2668237    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2668238    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1801.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2668239    title10;
MPRINT(EM_DIAGRAM):   title10;
2668240    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2668241    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION nothreads;
2668242    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2668243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668244    %let _cn = %sysfunc(getoption(CENTER));
2668245    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2668246    proc print data=EMWS1.EndGrp8_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMCLASSIFICATION noobs label;
2668247    var from into pct_row pct_col count percent
2668248    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2668249    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2668250    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2668251    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2668252    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2668253    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2668254    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2668255    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2668256    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2668257    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2668258    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2668259    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1802.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668260    title9;
MPRINT(EM_DIAGRAM):   title9;
2668261    title10;
MPRINT(EM_DIAGRAM):   title10;
2668262    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2668263    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2668264    modify EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2668265    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2668266    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2668267    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMRANK.DATA.
2668268    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
2668269    %let _cn = %sysfunc(getoption(CENTER));
2668270    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2668271    proc print data=EMWS1.EndGrp8_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMRANK label noobs;
2668272    var
2668273    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2668274    by
2668275    notsorted DATAROLE
2668276    notsorted TARGET
2668277    notsorted TARGETLABEL
2668278    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2668279    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2668280    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2668281    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1803.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2668282    title10;
MPRINT(EM_DIAGRAM):   title10;
2668283    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2668284    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2668285    modify EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2668286    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2668287    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2668288    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMSCOREDIST.DATA.
2668289    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
2668290    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2668291    set EMWS1.Grp7_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_GROUPINFO;
2668292    where _LOOP_=8;
MPRINT(EM_DIAGRAM):   where _LOOP_=8;
2668293    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2668294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP7_GROUPINFO.
      WHERE _LOOP_=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2668295    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2668296    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2668297    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2668298    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2668299    set EMWS1.EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK;
2668300    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2668301    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2668302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
2668303    data EMWS1.EndGrp8_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMRANK_LOOP;
2668304    set EMWS1.EndGrp8_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK_LOOP temp;
2668305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP8_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMRANK_LOOP has 160 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668306    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2668307    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2668308    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2668309    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2668310    set EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST;
2668311    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2668312    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2668313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668314    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
2668315    set EMWS1.EndGrp8_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST_LOOP temp;
2668316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP has 160 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2668317    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2668318    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2668319    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2668320    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2668321    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
2668322    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2668323    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2668324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668325    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
2668326    set EMWS1.EndGrp8_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT_LOOP temp;
2668327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT_LOOP has 8 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2668328    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2668329    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2668330    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2668331    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2668332    set EMWS1.EndGrp8_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT;
2668333    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2668334    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2668335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2668336    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
2668337    set EMWS1.EndGrp8_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT_LOOP temp;
2668338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP has 160 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2668339    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2668340    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2668341    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2668342    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2668343    set EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION;
2668344    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2668345    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2668346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2668347    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
2668348    set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP temp;
2668349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP has 32 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
