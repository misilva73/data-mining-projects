*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:03:55 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:48 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:03:48 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ABM2DK "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ABM2DK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMGROUP\EMLOG_10.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:48 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMGROUP\EMOUTPUT_10.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:48 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3329822    proc freq data=EMWS1.EndGrp8_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp8_VariableSet noprint;
3329823    table ROLE*LEVEL/out=WORK.EndGrp8META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp8META;
3329824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP8_VARIABLESET.
NOTE: The data set WORK.ENDGRP8META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
3329825    proc print data=WORK.EndGrp8META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp8META label noobs;
3329826    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3329827    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3329828    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3329829    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3329830    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP8META.
NOTE: The PROCEDURE PRINT printed page 2248.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3329831    title10;
MPRINT(EM_DIAGRAM):   title10;
3329832    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg3_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3329861    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3329862    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3329863    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3329864       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3329865    set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3329866    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3329867    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3329868    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3329869    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3329870    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3329871    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3329872    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3329873    end;
MPRINT(EM_DIAGRAM):   end;
3329874    output;
MPRINT(EM_DIAGRAM):   output;
3329875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP8_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3329876    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3329877    proc print data=WORK.EndGrp8_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp8_EVENT noobs label;
3329878    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3329879    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3329880    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3329881    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP8_EVENT.
NOTE: The PROCEDURE PRINT printed page 2249.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3329882    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3329883    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
3329884    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3329885    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3329886    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3329887    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3329888    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3329889    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2250.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3329890    title10;
MPRINT(EM_DIAGRAM):   title10;
3329891    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp8: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=300;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13793103448275;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1875;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86206896551724;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg3_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg3_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3330364    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3330365    * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
3330366    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3330367    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3330368    %let EMEXCEPTIONSTRING=;
3330369    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3330370    * TRAIN: EndGrp8;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp8;
3330371    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330372    %let EM_ACTION = TRAIN;
3330373    %let syscc = 0;
3330374    %macro main;
3330375       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3330376
3330377           filename temp catalog 'sashelp.emutil.endgp_train.source';
3330378           %include temp;
3330379           filename temp;
3330380
3330381           %train;
3330382
3330383       %end;
3330384       %else
3330385          %if %upcase(&EM_ACTION) = SCORE %then %do;
3330386
3330387           filename temp catalog 'sashelp.emutil.endgp_score.source';
3330388           %include temp;
3330389           filename temp;
3330390
3330391           %score;
3330392       %end;
3330393       %else
3330394       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3330395
3330396           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3330397           %include temp;
3330398           filename temp;
3330399
3330400           %postloop;
3330401
3330402       %end;
3330403
3330404       %doendm:
3330405    %mend main;
3330406
3330407    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3330408   +%macro copyModelDs(model=, key=);
3330409   +   %let modelDs  = &em_lib..&model._&key;
3330410   +   %let reportDs = &em_lib..&em_nodeid._&key;
3330411   +   %if %sysfunc(exist(&modelDs)) %then %do;
3330412   +       data &reportDs;
3330413   +          length ModelId $16;
3330414   +          retain ModelId "&model";
3330415   +          set &modelDs;
3330416   +       run;
3330417   +   %end;
3330418   +%mend copyModelDs;
3330419   +
3330420   +%macro traintarget(groupid=);
3330421   +   %em_getname(key=emoutfit, type=DATA);
3330422   +   %let targetname=;
3330423   +   data _null_;
3330424   +     set &em_lib..&groupid._&looptype;
3330425   +     where _LOOP_ = &EMLOOPNUMBER;
3330426   +     call symput('targetname', strip(_TARGET_));
3330427   +   run;
3330428   +   %let modelId =;
3330429   +   data _null_;
3330430   +      set &em_import_data_eminfo;
3330431   +      where key = 'MODEL' and TARGET = "&targetname";
3330432   +      call symput('modelId',   strip(data));
3330433   +   run;
3330434   +   %if "&modelId" ne "" %then %do;
3330435   +       %copyModelDs(model=&modelid, key=EMRANK);
3330436   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3330437   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3330438   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3330439   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3330440   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3330441   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3330442   +   %end;
3330443   +
3330444   +   %doendtgp:
3330445   +%mend;
3330446   +
3330447   +%macro trainboost(groupid=);
3330448   +
3330449   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3330450   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3330451   +
3330452   +   data _null_;
3330453   +      retain index 0;
3330454   +      set &boostinfoDs;
3330455   +      call symput('targetname', strip(_target_));
3330456   +   run;
3330457   +
3330458   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3330459   +       %let decmeta = ;
3330460   +       data _null_;
3330461   +          set &em_import_data_eminfo;
3330462   +          where (key='DECMETA' and TARGET="&targetname");
3330463   +          call symput('DECMETA', strip(data));
3330464   +       run;
3330465   +       %if "&decmeta" eq "" %then %do;
3330466   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3330467   +           %goto doendtb;
3330468   +       %end;
3330469   +
3330470   +       %let predictedVars=;
3330471   +       data _null_;
3330472   +          set &decmeta;
3330473   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3330474   +          else
3330475   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3330476   +          else
3330477   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3330478   +       run;
3330479   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3330480   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3330481   +       %end;
3330482   +   %end;
3330483   +
3330484   +   * ;
3330485   +   * ENDGROUP &NODEID : Boosting scoring ;
3330486   +   * ;
3330487   +   data &em_lib..&groupid._boostscore;
3330488   +      set &em_import_data;
3330489   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3330490   +      %if "%em_freq" ne "" %then %do ;
3330491   +          keep %em_freq ;
3330492   +      %end ;
3330493   +   run;
3330494   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3330495   +
3330496   +   %doendtb:
3330497   +
3330498   +%mend trainboost;
3330499   +
3330500   +%macro trainbag(groupid=);
3330501   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3330502   +   data _null_;
3330503   +      retain index 0;
3330504   +      set &baginfoDs;
3330505   +      call symput('targetname', strip(_target_));
3330506   +   run;
3330507   +
3330508   +   %let decmeta = ;
3330509   +   data _null_;
3330510   +       set &em_import_data_eminfo;
3330511   +       where (key='DECMETA' and TARGET="&targetname");
3330512   +       call symput('DECMETA', strip(data));
3330513   +   run;
3330514   +   %if "&decmeta" eq "" %then %do;
3330515   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3330516   +       %goto doendtg;
3330517   +   %end;
3330518   +
3330519   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3330520   +
3330521   +   %doendtg:
3330522   +%mend trainbag;
3330523   +
3330524   +%macro traingroup(groupid=);
3330525   +   %let targetNum = 0;
3330526   +
3330527   +   data _temp1;
3330528   +      set &em_lib..&groupid._eminfo;
3330529   +      where key='MODEL';
3330530   +   run;
3330531   +   data _temp2;
3330532   +      set &em_import_data_eminfo;
3330533   +      where key='MODEL';
3330534   +   run;
3330535   +   proc sort data=_temp1; by TARGET DATA;
3330536   +   proc sort data=_temp2; by TARGET DATA;
3330537   +   data _temp2;
3330538   +      merge _temp1(in=_a) _temp2(in=_b);
3330539   +      by TARGET DATA;
3330540   +      if ^_a and _b then output;
3330541   +   run;
3330542   +   data _null_;
3330543   +      retain index 0;
3330544   +      set _temp2 end=eof;
3330545   +      index +1;
3330546   +      where key ='MODEL';
3330547   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3330548   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3330549   +      if eof then
3330550   +         call symput('targetnum', strip(put(index, best.)));
3330551   +   run;
3330552   +   proc datasets lib=work nolist;
3330553   +      delete _temp1 _temp2;
3330554   +   run;
3330555   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3330556   +
3330557   +   %let modelString =;
3330558   +   %do i=1 %to &targetnum;
3330559   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3330560   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3330561   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3330562   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3330563   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3330564   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3330565   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3330566   +            %let modelString = &modelString &&modelid&i;
3330567   +       %end;
3330568   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3330569   +   %end;
3330570   +
3330571   +   %doendtgp:
3330572   +
3330573   +%mend traingroup;
3330574   +
3330575   +%macro getSize(data=, nobsvar=);
3330576   +
3330577   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3330578   +       %let dsid = %sysfunc(open(&data));
3330579   +       %if &dsid %then %do;
3330580   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3330581   +           %let dsid = %sysfunc(close(&dsid));
3330582   +       %end;
3330583   +   %end;
3330584   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3330585   +        proc sql;
3330586   +           reset noprint;
3330587   +           select count(*) into :&nobsvar from &data;
3330588   +        quit;
3330589   +   %end;
3330590   +
3330591   +%mend getsize;
3330592   +
3330593   +%macro train;
3330594   +
3330595   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3330596   +      %let EM_TOOLTYPE=UTILITY;
3330597   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3330598   +          proc delete data=&em_data_eminfo;
3330599   +          run;
3330600   +      %end;
3330601   +      %goto doendtr;
3330602   +   %end;
3330603   +
3330604   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3330605   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3330606   +       %goto doendtr;
3330607   +   %end;
3330608   +
3330609   +   %let xgroupid = ;
3330610   +   data _null_;
3330611   +      set &em_import_data_eminfo;
3330612   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3330613   +      call symput('XGROUPID',  strip(data));
3330614   +      call symput('LOOPTYPE', strip(key));
3330615   +   run;
3330616   +
3330617   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3330618   +       %let nDataObs=0;
3330619   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3330620   +
3330621   +       %let nStartObs=0;
3330622   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3330623   +
3330624   +       %if &nDataObs ne &nStartObs %then %do;
3330625   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3330626   +           %goto doendtr;
3330627   +       %end;
3330628   +
3330629   +       %trainboost(groupid=&xgroupid);
3330630   +   %end;
3330631   +   %else
3330632   +   %if "&looptype" eq "BAGINFO" %then %do;
3330633   +       %trainbag(groupid=&xgroupid);
3330634   +   %end;
3330635   +   %else
3330636   +   %if "&looptype" eq "GROUPINFO" %then %do;
3330637   +       %traingroup(groupid=&xgroupid);
3330638   +   %end;
3330639   +   %else
3330640   +   %if "&looptype" eq "TARGETINFO" %then %do;
3330641   +       %traintarget(groupid=&xgroupid);
3330642   +   %end;
3330643   +
3330644   +   data &em_data_eminfo;
3330645   +      length TARGET KEY $32  DATA $43;
3330646   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3330647   +   run;
3330648   +
3330649   +   %let EM_TOOLTYPE=MODEL;
3330650   +
3330651   +   %doendtr:
3330652   +
3330653   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg3_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp7_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP7_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg3_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMRANK.
NOTE: The data set EMWS1.ENDGRP8_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP8_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg3";
MPRINT(COPYMODELDS):   set EMWS1.Reg3_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG3_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp8_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp8";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330654    *------------------------------------------------------------*;
3330655    * End TRAIN: EndGrp8;
3330656    *------------------------------------------------------------*;
3330657
 
3330658    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3330659    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3330660    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330661    ;
MPRINT(EM_DIAGRAM):   ;
3330662    ;
MPRINT(EM_DIAGRAM):   ;
3330663    ;
MPRINT(EM_DIAGRAM):   ;
3330664    ;
MPRINT(EM_DIAGRAM):   ;
3330665    quit;
MPRINT(EM_DIAGRAM):   quit;
3330666    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330667    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3330668    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330669    /*; *"; *'; */
3330670    ;
MPRINT(EM_DIAGRAM):   ;
3330671    run;
MPRINT(EM_DIAGRAM):   run;
3330672    quit;
MPRINT(EM_DIAGRAM):   quit;
3330673    /* Reset EM Options */
3330674    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3330675    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3330676    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:52 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:03:52 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0DI8D6K "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0DI8D6K new;
MPRINT(EM_DIAGRAM):   run;
3330778    %let EMEXCEPTIONSTRING=;
3330779    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3330780    * SCORE: EndGrp8;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp8;
3330781    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3330782    %let EM_ACTION = SCORE;
3330783    %let syscc = 0;
3330784    %macro main;
3330785       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3330786
3330787           filename temp catalog 'sashelp.emutil.endgp_train.source';
3330788           %include temp;
3330789           filename temp;
3330790
3330791           %train;
3330792
3330793       %end;
3330794       %else
3330795          %if %upcase(&EM_ACTION) = SCORE %then %do;
3330796
3330797           filename temp catalog 'sashelp.emutil.endgp_score.source';
3330798           %include temp;
3330799           filename temp;
3330800
3330801           %score;
3330802       %end;
3330803       %else
3330804       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3330805
3330806           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3330807           %include temp;
3330808           filename temp;
3330809
3330810           %postloop;
3330811
3330812       %end;
3330813
3330814       %doendm:
3330815    %mend main;
3330816
3330817    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3330818   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3330820   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3330821   +       data &out / view=&out;
3330822   +          set &data
3330824   +          %if "&prescore" = "Y" %then %do;
3330825   +              (obs=1)
3330826   +          %end;
3330828   +          ;
3330830   +          %inc &scoreref;
3330832   +          %if "&prescore" eq "Y" %then %do;
3330833   +              drop I_: R_:;
3330834   +          %end;
3330836   +       run;
3330837   +   %end;
3330839   +%mend scoretables;
3330841   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3330842   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3330843   +   data _null_;
3330844   +      retain index 0;
3330845   +      set &infoDs;
3330846   +      call symput('targetname', strip(_target_));
3330847   +      call symput('endloopnum', strip(_loop_));
3330848   +   run;
3330850   +   %let endgrp_decmeta=;
3330851   +   %let endgrp_decdata=;
3330853   +   data _null_;
3330854   +      set &em_import_data_eminfo;
3330855   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3330856   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3330857   +      else
3330858   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3330859   +      else call symput('MODELID', strip(data));
3330860   +   run;
3330862   +   %let headerString= Boosting;
3330863   +   %let prefixString= _BoostVar;
3330865   +   %if "&type" = "BAGINFO" %then %do;
3330866   +        %let headerString = Bagging;
3330867   +        %let prefixString= _BagVar;
3330868   +   %end;
3330870   +   %let targetType=;
3330871   +   %let predictedVars=;
3330872   +   data _null_;
3330873   +      retain index;
3330874   +      set &endgrp_decmeta end=eof;
3330875   +      length tempvar $200;
3330876   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3330877   +      else
3330878   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3330879   +      else
3330880   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3330881   +      else
3330882   +      if _TYPE_ = 'PREDICTED' then do;
3330883   +         index+1;
3330884   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3330885   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3330886   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3330887   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3330888   +      end;
3330889   +      if eof then
3330890   +         call symput('prednum', strip(put(index, best.)));
3330891   +   run;
3330893   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3330894   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3330896   +   filename loopflow "&em_user_loopflowcode";
3330897   +   filename looppub "&em_user_looppubcode";
3330899   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3330900   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3330902   +   %if "&emloopnumber" = "1" %then %do;
3330903   +       data _null_;
3330904   +          rc = fdelete('loopflow');
3330905   +          rc = fdelete('looppub');
3330906   +       run;
3330907   +       data _null_;
3330908   +          file loopflow;
3330909   +          put "&em_codebar;";
3330910   +          put "* &em_nodeid: ;" ;
3330911   +          put "* User: &sysuserid;";
3330912   +          put "* Date: &sysdate: &systime;";
3330913   +          put "&em_codebar ;";
3330914   +          put "* Ensemble Code;";
3330915   +          put "&em_codebar ;";
3330916   +          put "* &headerString: Loop=1;";
3330917   +          put "* Temporary Variables;";
3330918   +          %do i= 1 %to &prednum;
3330919   +              put "drop &&tempvars&i;";
3330920   +              put "&&tempvars&i = 0;";
3330921   +          %end;
3330922   +       run;
3330923   +       %em_copyfile(infref=loopflow, outfref=looppub);
3330924   +   %end;
3330926   +   %let j=&emloopnumber;
3330927   +   %do i = 1 %to &loopcodenum;
3330928   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3330929   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3330931   +       %if (&&loopnode&i eq &em_nodeid ) or
3330932   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3330933   +           data _null_;
3330934   +              file loopflow mod;
3330935   +              put "&em_codebar;";
3330936   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3330937   +              put "* User: &sysuserid;";
3330938   +              put "* Date: &sysdate: &systime;";
3330939   +              put "* &headerString: Loop=&j;";
3330940   +              put "&em_codebar;";
3330941   +           run;
3330942   +           data _null_;
3330943   +              file looppub mod;
3330944   +              put "&em_codebar;";
3330945   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3330946   +              put "* User: &sysuserid;";
3330947   +              put "* Date: &sysdate: &systime;";
3330948   +              put "* &headerString: Loop=&j;";
3330949   +              put "&em_codebar;";
3330950   +           run;
3330951   +       %end;
3330953   +       %if &&loopnode&i ne &em_nodeid %then %do;
3330954   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3330955   +               filename x catalog "&fsourceEntry";
3330956   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3330957   +               filename x;
3330959   +               filename y catalog "&psourceEntry";
3330960   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3330961   +               filename y;
3330962   +           %end;
3330963   +       %end;
3330964   +       %else %do;
3330965   +           %if "&j" ne "1" %then %do;
3330966   +               %let weight = %eval(&j-1);
3330967   +               data _null_;
3330968   +                  file loopflow mod;
3330969   +                  put "&em_codebar;";
3330970   +                  %if "&j" ne "&endloopnum" %then %do;
3330971   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3330972   +                  %end;
3330973   +                  %else %do;
3330974   +                      put "* &headerString: accumulate final probabilities;";
3330975   +                  %end;
3330976   +                  put "&em_codebar;";
3330977   +                  %do k=1 %to &prednum;
3330978   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3330979   +                  %end;
3330980   +               run;
3330981   +               data _null_;
3330982   +                  file looppub mod;
3330983   +                  put "&em_codebar;";
3330984   +                  %if "&j" ne "&endloopnum" %then %do;
3330985   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3330986   +                  %end;
3330987   +                  %else %do;
3330988   +                      put "* &headerString: accumulate final probabilities;";
3330989   +                  %end;
3330990   +                  %do k=1 %to &prednum;
3330991   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3330992   +                  %end;
3330993   +               run;
3330994   +           %end;
3330995   +           %if "&j" ne "&endloopnum" %then %do;
3330996   +               data _null_;
3330997   +                  file loopflow mod;
3330998   +                  put "&em_codebar;";
3330999   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3331000   +                  put "&em_codebar;";
3331001   +               %do k=1 %to &prednum;
3331002   +                  put "&&tempvars&k = &&predvars&k;";
3331003   +               %end;
3331004   +               run;
3331005   +               data _null_;
3331006   +                  file looppub mod;
3331007   +                  put "&em_codebar;";
3331008   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3331009   +                  put "&em_codebar;";
3331010   +               %do k=1 %to &prednum;
3331011   +                   put "&&tempvars&k = &&predvars&k;";
3331012   +               %end;
3331013   +               run;
3331014   +           %end;
3331016   +       %end;
3331017   +   %end;
3331019   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3331020   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3331022   +   filename loopflow;
3331023   +   filename looppub;
3331024   +   filename empub;
3331026   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3331027   +   %let gpTrain=;
3331028   +   %let gpValidate=;
3331029   +   %let gpTest=;
3331031   +   data _null_;
3331032   +      set &groupImportDs;
3331033   +      select(upcase(port));
3331034   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3331035   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3331036   +          when('TEST')     call symput('gpTest',     strip(dataset));
3331037   +       otherwise;
3331038   +      end;
3331039   +   run;
3331041   +   %if "&gpTrain" ne "" %then %do;
3331043   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3331045   +       %if &targetType ne INTERVAL %then %do;
3331046   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3331047   +       %end;
3331049   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3331051   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3331053   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3331054   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3331056   +       filename _decflow "&decflow";
3331057   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3331058   +       filename _decflow;
3331060   +   %end;
3331062   +   %if "&gpTrain" ne "" %then
3331063   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3331064   +   %if "&gpValidate" ne "" %then
3331065   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3331066   +   %if "&gpTest" ne "" %then
3331067   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3331069   +   filename emflow;
3331071   +%mend boostbagcode;
3331073   +%macro score;
3331075   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3331076   +   %inc _dec;
3331077   +   filename _dec;
3331079   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3331081   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3331082   +       %let emexceptionstring = nomodeltarget;
3331083   +       %goto doendpl;
3331084   +   %end;
3331086   +   %LET GROUPID=;
3331087   +   %let LOOPTYPE=;
3331088   +   data _null_;
3331089   +      set &em_import_data_eminfo;
3331090   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3331091   +      call symput('GROUPID',   strip(data));
3331092   +      call symput('LOOPTYPE', strip(key));
3331093   +   run;
3331095   +   %em_getname(key=PATH, type=DATA);
3331097   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3331098   +   %include temp;
3331099   +   filename temp;
3331101   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3331103   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3331104   +       %let deleteString = &em_nodeid._path;
3331105   +       proc datasets lib=&em_lib nolist;
3331106   +          delete &deleteString;
3331107   +       run;
3331108   +       quit;
3331109   +   %end;
3331111   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3331113   +   data score_path;
3331114   +      retain LOOPID &emloopnumber;
3331115   +      set score_path;
3331116   +   run;
3331118   +   proc append base=&em_user_path  data=score_path;
3331119   +   run;
3331121   +   %let EnsembleIndex=0;
3331122   +   data _null_;
3331123   +      retain index 0 ensembleIndex 0;
3331124   +      set score_Path end=eof;
3331125   +      if nodelabel = "&groupid" or index then do;
3331126   +         index + 1;
3331127   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3331128   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3331129   +      end;
3331130   +      if component='Ensemble' then ensembleIndex = index;
3331131   +      if eof then do;
3331132   +         call symput('loopcodenum', strip(put(index, best.)));
3331133   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3331134   +      end;
3331135   +   run;
3331137   +   proc datasets lib=work nolist;
3331138   +      delete score_Path;
3331139   +   run;
3331140   +   quit;
3331142   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3331143   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3331145   +   %doendpl:
3331147   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3331148   +/*
3331149   +       MACRO: EM_DECIDECODE
3331150   +
3331151   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3331152   +       SUPPORT: Taiyeong Lee
3331153   +
3331154   +       HISTORY: 01OCT04 Initial code
3331155   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3331156   +                to add the corresponding decision code
3331157   +
3331158   +*/
3331159   +
3331160   +
3331161   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3331162   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3331163   +
3331164   +    %do;
3331165   +    %let m_data      = &data;
3331166   +    %let m_decdata   = &decdata;
3331167   +    %let m_decmeta   = &decmeta;
3331168   +    %let m_noresfile = &noresfile;
3331169   +    %let m_resfile   = &resfile;
3331170   +    dm "afa c=sashelp.emutil.decidecode.scl";
3331171   +  %end;
3331172   +%mend EM_DECIDECODE;
3331173   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg3_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3331174   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3331175   +   proc display c=sashelp.emcore.pathscorecode.scl;
3331176   +   run;
3331177   +%mend EM_GETTRAINPATH;
3331178   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3331179    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3331180    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3331181    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3331182    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3331183    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3331184    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3331185    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3331186    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331187    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331188    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331189    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331190    output;
MPRINT(EM_GETTRAINPATH):   output;
3331191    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3331192    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3331193    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3331194    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3331195    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3331196    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331197    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331198    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331199    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331200    output;
MPRINT(EM_GETTRAINPATH):   output;
3331201    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3331202    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3331203    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3331204    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3331205    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3331206    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331207    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331208    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331209    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331210    output;
MPRINT(EM_GETTRAINPATH):   output;
3331211    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3331212    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3331213    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3331214    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3331215    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3331216    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331217    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331218    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331219    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331220    output;
MPRINT(EM_GETTRAINPATH):   output;
3331221    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3331222    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3331223    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3331224    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3331225    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3331226    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331227    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331228    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331229    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331230    output;
MPRINT(EM_GETTRAINPATH):   output;
3331231    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3331232    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3331233    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3331234    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3331235    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3331236    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331237    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331238    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331239    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331240    output;
MPRINT(EM_GETTRAINPATH):   output;
3331241    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3331242    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3331243    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3331244    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3331245    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3331246    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331247    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331248    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331249    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331250    output;
MPRINT(EM_GETTRAINPATH):   output;
3331251    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3331252    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3331253    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3331254    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3331255    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3331256    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331257    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331258    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331259    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331260    output;
MPRINT(EM_GETTRAINPATH):   output;
3331261    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3331262    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3331263    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3331264    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3331265    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3331266    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331267    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331268    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331269    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331270    output;
MPRINT(EM_GETTRAINPATH):   output;
3331271    nodelabel="Grp7";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp7";
3331272    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3331273    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3331274    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3331275    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3331276    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331277    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331278    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331279    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331280    output;
MPRINT(EM_GETTRAINPATH):   output;
3331281    nodelabel="Reg3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg3";
3331282    parent="Grp7";
MPRINT(EM_GETTRAINPATH):   parent="Grp7";
3331283    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
3331284    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
3331285    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3331286    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331287    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331288    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331289    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331290    output;
MPRINT(EM_GETTRAINPATH):   output;
3331291    nodelabel="EndGrp8";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp8";
3331292    parent="Reg3";
MPRINT(EM_GETTRAINPATH):   parent="Reg3";
3331293    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3331294    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3331295    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3331296    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3331297    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3331298    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3331299    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3331300    output;
MPRINT(EM_GETTRAINPATH):   output;
3331301    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp8_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP8_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP8_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp7" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3331302    *------------------------------------------------------------*;
3331303    * End SCORE: EndGrp8;
3331304    *------------------------------------------------------------*;
3331305
 
3331306    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3331307    * EndGrp8: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp8: Scoring DATA data;
3331308    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3331309    data EMWS1.EndGrp8_TRAIN
3331310    / view=EMWS1.EndGrp8_TRAIN
3331311    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_TRAIN / view=EMWS1.EndGrp8_TRAIN ;
3331312    set EMWS1.Reg3_TRAIN
3331313    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_TRAIN ;
3331314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP8_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3331315    quit;
 
3331317    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3331318    * EndGrp8: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp8: Computing metadata for TRAIN data;
3331319    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp8_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp8_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp8_TRAIN out=WORK.M0C59MMJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C59MMJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C59MMJ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C59MMJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C59MMJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M258Q38U NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26SM00N(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   set WORK.M258Q38U;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp8";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp8";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3331665    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3331666    set EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO;
3331667    where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3331668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMINFO.
      WHERE (DATA='EndGrp8') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3331669    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMINFO;
3331670    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3331671    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3331672    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3331676    run;
3331677    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
3331678    set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
3331679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3331680    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
3331681    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3331682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3331683    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3331684    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3331685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3331686    proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3331687    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3331688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3331689    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
3331690    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3331691    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3331692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3331693    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3331694    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3331695    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3331696    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:53 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:03:53 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O203NU31 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O203NU31 new;
MPRINT(EM_DIAGRAM):   run;
3331720    data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT;
3331721    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3331722    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3331723    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3331724    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3331725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3331726    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
3331727    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3331728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3331729    %let _EMwarndup = 0;
3331730    %let _EMtargetdup =;
3331731    %let _EMASEtargetdup =;
3331732    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3331733    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3331734    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3331735    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3331736    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3331737    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3331738    end;
MPRINT(EM_DIAGRAM):   end;
3331739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3331740    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
3331741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3331742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.REG3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3331743    proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3331744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3331745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP8_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 19 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3331746    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3331747    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3331748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3331749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 19 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3331750    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3331751    set EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_CMeta_TRAIN;
3331752    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3331753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP8_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3331754    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3331755    set EMWS1.EndGrp8_TRAIN(keep=
3331756    F_DepVar
3331757    I_DepVar
3331758    P_DepVar0
3331759    P_DepVar1
3331760    R_DepVar0
3331761    R_DepVar1
3331762    U_DepVar
3331763    _WARN_
3331764    DepVar
3331765    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3331766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2175 observations read from the data set EMWS1.GRP7_TRAIN.
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2175 observations read from the data set EMWS1.REG3_TRAIN.
NOTE: There were 2175 observations read from the data set EMWS1.ENDGRP8_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2175 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3335953    %let _cn = %sysfunc(getoption(CENTER));
3335954    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3335955    proc print data=EMWS1.EndGrp8_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMREPORTFIT noobs label;
3335956    var STAT LABEL TRAIN
3335957    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3335958    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3335959    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3335960    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3335961    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2251.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3335962    title10;
MPRINT(EM_DIAGRAM):   title10;
3335963    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3335964    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION nothreads;
3335965    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3335966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3335967    %let _cn = %sysfunc(getoption(CENTER));
3335968    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3335969    proc print data=EMWS1.EndGrp8_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMCLASSIFICATION noobs label;
3335970    var from into pct_row pct_col count percent
3335971    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3335972    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3335973    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3335974    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3335975    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3335976    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3335977    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3335978    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3335979    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3335980    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3335981    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3335982    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2252.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3335983    title9;
MPRINT(EM_DIAGRAM):   title9;
3335984    title10;
MPRINT(EM_DIAGRAM):   title10;
3335985    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3335986    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3335987    modify EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3335988    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3335989    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3335990    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMRANK.DATA.
3335991    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3335992    %let _cn = %sysfunc(getoption(CENTER));
3335993    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3335994    proc print data=EMWS1.EndGrp8_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMRANK label noobs;
3335995    var
3335996    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3335997    by
3335998    notsorted DATAROLE
3335999    notsorted TARGET
3336000    notsorted TARGETLABEL
3336001    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3336002    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3336003    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3336004    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2253.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3336005    title10;
MPRINT(EM_DIAGRAM):   title10;
3336006    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3336007    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3336008    modify EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3336009    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3336010    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3336011    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMSCOREDIST.DATA.
3336012    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
3336013    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3336014    set EMWS1.Grp7_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_GROUPINFO;
3336015    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3336016    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3336017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP7_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3336018    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3336019    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3336020    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3336021    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3336022    set EMWS1.EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK;
3336023    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3336024    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3336025    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3336026    data EMWS1.EndGrp8_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMRANK_LOOP;
3336027    set EMWS1.EndGrp8_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK_LOOP temp;
3336028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP8_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3336029    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3336030    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3336031    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3336032    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3336033    set EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST;
3336034    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3336035    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3336036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3336037    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
3336038    set EMWS1.EndGrp8_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST_LOOP temp;
3336039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP has 200 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3336040    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3336041    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3336042    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3336043    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3336044    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3336045    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3336046    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3336047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3336048    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
3336049    set EMWS1.EndGrp8_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT_LOOP temp;
3336050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT_LOOP has 10 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3336051    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3336052    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3336053    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3336054    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3336055    set EMWS1.EndGrp8_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT;
3336056    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3336057    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3336058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3336059    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
3336060    set EMWS1.EndGrp8_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT_LOOP temp;
3336061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP has 200 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3336062    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3336063    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3336064    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3336065    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3336066    set EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION;
3336067    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3336068    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3336069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3336070    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
3336071    set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP temp;
3336072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
