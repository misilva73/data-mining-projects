MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:01 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:09:01 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0OS4VF6 "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0OS4VF6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:01 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:01 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
3720670    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3720671    set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
3720672    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3720673    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3720674    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3720675    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3720676    data WORK.M2SIYGQH;
MPRINT(EM_DIAGRAM):    data WORK.M2SIYGQH;
3720677    set WORK.M2SIYGQH;
MPRINT(EM_DIAGRAM):   set WORK.M2SIYGQH;
3720678    where upcase(NAME) in(
3720679    "DEPVAR"
3720680    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3720681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M2SIYGQH.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M2SIYGQH has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3720682    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN 
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN 
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN 
EMWS1.Reg3_TRAIN EMWS1.Reg3_TRAIN EMWS1 Reg3_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg3_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3720711    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp8_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS 
ORDER);
3720712    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3720713    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3720713  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3720713  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3720714       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3720714  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3720714  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3720715    set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3720716    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3720717    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3720718    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3720719    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3720720    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3720721    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3720722    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3720723    end;
MPRINT(EM_DIAGRAM):   end;
3720724    output;
MPRINT(EM_DIAGRAM):   output;
3720725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP8_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3720726    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3720727    proc print data=WORK.EndGrp8_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp8_EVENT noobs label;
3720728    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3720729    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3720730    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3720731    run;

NOTE: There were 1 observations read from the data set WORK.ENDGRP8_EVENT.
NOTE: The PROCEDURE PRINT printed page 2434.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3720732    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3720733    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
3720734    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3720735    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
3720736    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3720736  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3720736  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3720737    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3720738    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3720739    run;

NOTE: There were 7 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2435.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3720740    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp8: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3721200    %let EMEXCEPTIONSTRING=;
3721201    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3721202    * POSTLOOP: EndGrp8;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp8;
3721203    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3721204    %let EM_ACTION = POSTLOOP;
3721205    %let syscc = 0;
3721206    %macro main;
3721207       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3721208    
3721209           filename temp catalog 'sashelp.emutil.endgp_train.source';
3721210           %include temp;
3721211           filename temp;
3721212    
3721213           %train;
3721214    
3721215       %end;
3721216       %else
3721217          %if %upcase(&EM_ACTION) = SCORE %then %do;
3721218    
3721219           filename temp catalog 'sashelp.emutil.endgp_score.source';
3721220           %include temp;
3721221           filename temp;
3721222    
3721223           %score;
3721224       %end;
3721225       %else
3721226       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3721227    
3721228           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3721229           %include temp;
3721230           filename temp;
3721231    
3721232           %postloop;
3721233    
3721234       %end;
3721235    
3721236       %doendm:
3721237    %mend main;
3721238    
3721239    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3721240   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3721242   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3721242  !+%then %do;
3721243   +       data &out / view=&out;
3721244   +          set &data
3721247   +          %if "&prescore" = "Y" %then %do;
3721248   +              (obs=1)
3721249   +          %end;
3721251   +          ;
3721253   +       %let fexist = %sysfunc(fexist(&scoreref));
3721254   +       %if &fexist %then %do;
3721255   +          %inc &scoreref;
3721256   +       %end;
3721258   +       %if "&prescore" eq "Y" %then %do;
3721259   +          drop I_: R_:;
3721260   +       %end;
3721262   +       run;
3721263   +   %end;
3721265   +%mend scoretables;
3721267   +%macro postboostbag(groupid=, type=);
3721268   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3721269   +   data _null_;
3721270   +      retain index 0;
3721271   +      set &infoDs;
3721272   +      call symput('targetname', strip(_target_));
3721273   +   run;
3721275   +   data _null_;
3721276   +      set &em_import_data_eminfo;
3721277   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3721278   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3721279   +      else call symput('MODELID', strip(data));
3721280   +   run;
3721282   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3721283   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3721285   +   filename loopflow "&em_user_loopflowcode";
3721286   +   filename looppub "&em_user_looppubcode";
3721288   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3721289   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3721291   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3721292   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3721294   +   filename loopflow;
3721295   +   filename looppub;
3721296   +   filename emflow;
3721297   +   filename empub;
3721299   +   %let EMGROUPASSMT = Y;
3721301   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3721301  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3721303   +   %em_getname(key=emoutfit, type=DATA);
3721304   +   %em_getname(key=emoutfit_loop, type=DATA);
3721306   +   data &em_user_emoutfit;
3721307   +      set &em_user_emoutfit_loop end=eof;
3721308   +      drop _LOOP_ _WHERE_;
3721309   +      if eof then output;
3721310   +   run;
3721312   +%mend postboostbag;
3721314   +%macro postgroup(groupid=, type=);
3721315   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3721316   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3721318   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3721319   +   %let _XValidation = 0;
3721321   +   data _null_;
3721322   +      retain index 0;
3721323   +      set &infoDs end=eof;
3721324   +      index + 1;
3721325   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3721325  !+ '"', '""'));
3721326   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3721327   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3721328   +         call symput('_XValidation', '1');
3721329   +   run;
3721331   +   %let grouptarget=;
3721332   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3721333   +   %if "&looptarget1" eq "" %then %do;
3721334   +      data _null_;
3721335   +         set &em_import_data_eminfo;
3721336   +         where key in('MODEL');
3721337   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3721337  !+'!!strip(target));
3721338   +      run;
3721339   +   %end;
3721341   +   %do j=1 %to &emloopnumber;
3721342   +       %let EnsembleIndex=0;
3721343   +       data _null_;
3721344   +          retain index 0 ensembleIndex 0;
3721345   +          set &em_user_path end=eof;
3721346   +          where LOOPID=&j;
3721347   +          if nodelabel = "&groupid" or index then do;
3721348   +             index + 1;
3721349   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3721350   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3721351   +             call symput('loopaccum'!!strip(put(index, best.)),
3721351  !+strip(accumulatedScoreCode));
3721352   +          end;
3721353   +          if component='Ensemble' then ensembleIndex = index;
3721354   +          if eof then do;
3721355   +             call symput('loopcodenum', strip(put(index, best.)));
3721356   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3721357   +          end;
3721358   +       run;
3721360   +       %do i = 1 %to &loopcodenum;
3721361   +           %let fsourceEntry =
3721361  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3721362   +           %let psourceEntry =
3721362  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3721364   +           %if (&&loopnode&i eq &em_nodeid ) or
3721365   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3721365  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3721367   +               data _null_;
3721368   +                  file emflow mod;
3721369   +                  put "&em_codebar;";
3721370   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3721371   +                  put "* User: &sysuserid;";
3721372   +                  put "* Date: &sysdate: &systime;";
3721373   +                  %if "&&loopwhere&j" ne "" %then %do;
3721374   +                      put "* Group: &&loopwhere&j;";
3721375   +                  %end;
3721376   +                  %if "&&looptarget&j" ne "" %then %do;
3721377   +                       put "* Target: &&looptarget&j;";
3721378   +                  %end;
3721379   +                  put "&em_codebar ;";
3721380   +               run;
3721381   +               data _null_;
3721382   +                   file empub mod;
3721383   +                   put "&em_codebar ;";
3721384   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3721385   +                   put "* User: &sysuserid;";
3721386   +                   put "* Date: &sysdate: &systime;";
3721387   +                   %if "&&loopwhere&j" ne "" %then %do;
3721388   +                       put "* Group: &&loopwhere&j;";
3721389   +                   %end;
3721390   +                   %if "&&looptarget&j" ne "" %then %do;
3721391   +                       put "* Target: &&looptarget&j;";
3721392   +                   %end;
3721393   +                   put "&em_codebar;";
3721394   +               run;
3721395   +           %end;
3721397   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3721398   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3721398  !+&i=&ensembleIndex) %then %do;
3721399   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3721399  !+ %do;
3721400   +                       filename y catalog "&psourceEntry";
3721401   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3721402   +                       filename y;
3721403   +                   %end;
3721404   +                   %else %do;
3721405   +                       filename x catalog "&fsourceEntry";
3721406   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3721407   +                       filename x;
3721408   +                   %end;
3721410   +                   filename y catalog "&psourceEntry";
3721411   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3721412   +                   filename y;
3721413   +               %end;
3721414   +           %end;
3721415   +           %else %do;
3721416   +              %if "&&loopwhere&j" ne "" %then %do;
3721417   +                  data _null_;
3721418   +                     file emflow mod;
3721419   +                     put 'end;';
3721420   +                  run;
3721421   +                  data _null_;
3721422   +                     file empub mod;
3721423   +                     put 'end;';
3721424   +                  run;
3721425   +               %end;
3721426   +           %end;
3721427   +       %end;
3721428   +   %end;
3721429   +   filename emflow;
3721430   +   filename empub;
3721432   +   /* Stratify Model Need to Recompute All Assessment Reports */
3721433   +   %if "&grouptarget" eq "" %then %do;
3721434   +       %let assessTarget=;
3721435   +       %do j=1 %to &emloopnumber;
3721436   +           %let targetname = &&looptarget&j;
3721437   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3721437  !+%do;
3721438   +               %let assesstarget = &assesstarget &targetname;
3721439   +               %let index = 1;
3721440   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3721440  !+%sysfunc(strip(&targetname)));
3721441   +                   %let index = %eval(&index + 1);
3721442   +               %end;
3721443   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3721443  !+,%str( ));
3721445   +               %if "&targetlevel" ne "INTERVAL" %then
3721446   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3721446  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3721447   +               %else
3721448   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3721448  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3721449   +           %end;
3721450   +       %end;
3721451   +   %end;
3721452   +   %else %do;
3721453   +       %do i=1 %to &em_num_target;
3721454   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3721455   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3721457   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3721458   +              %if "&targetlevel" ne "INTERVAL" %then
3721459   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3721459  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3721460   +              %else
3721461   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3721461  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3721462   +           %end;
3721463   +           %else %do;
3721464   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3721464  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3721465   +           %end;
3721466   +       %end;
3721467   +   %end;
3721468   +   %let EMGROUPASSMT = N;
3721469   +%mend postgroup;
3721471   +%macro posttarget(groupid=, type=);
3721472   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3721473   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3721475   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3721476   +   data _null_;
3721477   +      retain index 0;
3721478   +      set &infoDs end=eof;
3721479   +      index + 1;
3721480   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3721481   +   run;
3721483   +   %do j=1 %to &emloopnumber;
3721484   +       %let EnsembleIndex=0;
3721485   +       data _null_;
3721486   +          retain index 0 ensembleIndex 0;
3721487   +          set &em_user_path end=eof;
3721488   +          where LOOPID=&j;
3721489   +          if nodelabel = "&groupid" or index then do;
3721490   +             index + 1;
3721491   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3721492   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3721493   +             call symput('loopaccum'!!strip(put(index, best.)),
3721493  !+strip(accumulatedScoreCode));
3721494   +          end;
3721495   +          if component='Ensemble' then ensembleIndex = index;
3721496   +          if eof then do;
3721497   +             call symput('loopcodenum', strip(put(index, best.)));
3721498   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3721499   +          end;
3721500   +       run;
3721502   +       %do i = 1 %to &loopcodenum;
3721503   +           %let fsourceEntry =
3721503  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3721504   +           %let psourceEntry =
3721504  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3721506   +           %if (&&loopnode&i ne &em_nodeid ) and
3721507   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3721508   +               data _null_;
3721509   +                  file emflow mod;
3721510   +                  put "&em_codebar;";
3721511   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3721512   +                  put "* User: &sysuserid;";
3721513   +                  put "* Date: &sysdate: &systime;";
3721514   +                  put "* Target: &&looptarget&j;";
3721515   +                  put "&em_codebar ;";
3721516   +               run;
3721517   +               data _null_;
3721518   +                  file empub mod;
3721519   +                  put "&em_codebar ;";
3721520   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3721521   +                  put "* User: &sysuserid;";
3721522   +                  put "* Date: &sysdate: &systime;";
3721523   +                  put "* Target: &&looptarget&j;";
3721524   +                  put "&em_codebar;";
3721525   +               run;
3721527   +               filename x catalog "&fsourceEntry";
3721528   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3721529   +               filename x;
3721531   +               filename y catalog "&psourceEntry";
3721532   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3721533   +               filename y;
3721534   +           %end;
3721535   +       %end;
3721536   +   %end;
3721537   +   filename emflow;
3721538   +   filename empub;
3721540   +   %do j=1 %to &emloopnumber;
3721541   +       %let targetname = &&looptarget&j;
3721542   +       %let k = 1;
3721543   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3721543  !+%sysfunc(strip(&targetname)));
3721544   +           %let k = %eval(&k + 1);
3721545   +       %end;
3721546   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3721547   +       %if "&targetlevel" ne "INTERVAL" %then
3721548   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3721548  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3721549   +       %else
3721550   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3721550  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3721551   +       %let EMGROUPASSMT = N;
3721552   +   %end;
3721554   +%mend posttarget;
3721556   +%macro postloop;
3721558   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3721560   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3721560  !+%then %do;
3721561   +       %let emexceptionstring = nomodeltarget;
3721562   +       %goto doendpl;
3721563   +   %end;
3721565   +   %let targetName=;
3721566   +   %let endgrp_decmeta=;
3721568   +   data _null_;
3721569   +      set &em_import_data_eminfo;
3721570   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3721571   +      call symput('GROUPID',   strip(data));
3721572   +      call symput('LOOPTYPE', strip(key));
3721573   +   run;
3721575   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3721576   +   %include temp;
3721577   +   filename temp;
3721579   +   %em_getname(key=PATH, type=DATA);
3721581   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3721583   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3721585   +   %let gptrain=;
3721586   +   %let gpvalidate=;
3721587   +   %let gptest=;
3721589   +   data _null_;
3721590   +      set &groupImportDs;
3721591   +      select(upcase(port));
3721592   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3721593   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3721594   +          when('TEST')     call symput('gpTest',     strip(dataset));
3721595   +       otherwise;
3721596   +      end;
3721597   +   run;
3721598   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3721600   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3721600  !+%postboostbag(groupid=&groupid, type=&looptype);
3721601   +   %else
3721602   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3721602  !+type=&looptype);
3721603   +   %else
3721604   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3721604  !+type=&looptype);
3721606   +   %let deleteString = &em_nodeid._path;
3721608   +   proc sort data=&em_user_path nodupkey;
3721609   +      by nodelabel;
3721610   +   run;
3721611   +   %let loopnodenum=0;
3721612   +   data _null_;
3721613   +      retain index 0;
3721614   +      set &em_user_path end=eof;
3721615   +      if nodelabel = "&groupid" or index then do;
3721616   +         index + 1;
3721617   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3721618   +      end;
3721619   +      if eof then do;
3721620   +         call symput('loopnodenum', strip(put(index, best.)));
3721621   +      end;
3721622   +   run;
3721623   +   proc datasets lib=&em_lib nolist;
3721624   +      delete &deleteString;
3721625   +      delete
3721626   +      %do i = 1 %to &loopnodenum;
3721627   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3721628   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3721628  !+%do;
3721630   +              &loopcatalog
3721631   +          %end;
3721632   +          %if &i = &loopnodenum %then %do;
3721633   +              / mt=catalog;
3721634   +          %end;
3721635   +      %end;
3721636   +   run;
3721637   +   quit;
3721639   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3721641   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3721641  !+"BAGINFO")) %then %do;
3721643   +       %let targetType = ;
3721644   +       data _null_;
3721645   +          set &endgrp_decmeta;
3721646   +          where _TYPE_='TARGET';
3721647   +          call symput('TARGETTYPE', strip(level));
3721648   +       run;
3721650   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3721652   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3721652  !+prescore=Y);
3721654   +       %if &targetType ne 'INTERVAL' %then %do;
3721655   +           %makeClassificationVars(target=&target, data=&em_export_train,
3721655  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3721656   +       %end;
3721658   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3721660   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3721660  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3721662   +       filename empub;
3721664   +   %end;
3721666   +   %if "&gpTrain" ne "" %then
3721667   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3721668   +   %if "&gpValidate" ne "" %then
3721669   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3721669  !+out=&em_export_validate, scoreref=emflow);
3721670   +   %if "&gpTest" ne "" %then
3721671   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3721671  !+out=&em_export_test,     scoreref=emflow);
3721673   +   filename emflow;
3721675   +   %doendpl:
3721677   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Reg3_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3721678   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3721679   +   proc display c=sashelp.emcore.pathscorecode.scl;
3721680   +   run;
3721681   +%mend EM_GETTRAINPATH;
3721682   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp7_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 15 observations read from the data set EMWS1.GRP7_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp7_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)), 
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation', 
'1');
MPRINT(POSTGROUP):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP7_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Reg3_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!' 
'!!strip(target));
MPRINT(POSTGROUP):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 261 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 225 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6960,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6217,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=7178,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6435,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=7184,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6441,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=7401,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6658,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=7438,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6695,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=7655,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 257 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6912,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 221 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14008,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12522,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14226,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12740,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14232,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12746,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14449,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=12963,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14486,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13000,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14703,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 261 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13217,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 225 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21202,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=18973,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21420,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19191,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21426,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19197,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21643,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19414,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21680,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19451,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21897,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19668,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28135,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25163,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28353,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25381,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28359,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25387,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28576,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=25604,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28613,
      Last Modified=02 June 2018 17:09:04 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25641,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28830,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=25858,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35076,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31361,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35294,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31579,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35300,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31585,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35517,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=31802,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35554,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31839,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35771,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 251 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32056,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 215 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42010,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=37552,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42228,
The SAS System

      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=37770,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42234,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=37776,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42451,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=37993,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42488,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=38030,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42705,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 267 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=38247,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 231 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49435,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44234,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49653,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44452,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49659,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44458,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=49876,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=44675,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49913,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=44712,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=50130,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=44929,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56376,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=50432,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56594,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=50650,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56600,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=50656,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=56817,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=50873,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56854,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=50910,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57071,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=51127,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63173,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56486,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63391,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56704,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63397,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp7: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56710,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63615,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=56928,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63654,
      Last Modified=02 June 2018 17:09:05 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg3: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56967,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=63872,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 257 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57185,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 221 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=70284,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp8: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62854,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=70503,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63073,
      Last Modified=02 June 2018 17:09:06 o'clock,
      Create Time=02 June 2018 17:09:04 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;

NOTE: There were 5 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp8_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;

NOTE: There were 120 observations read from the data set EMWS1.ENDGRP8_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP8_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp8_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp7" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP8_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp8_path;
MPRINT(POSTLOOP):   delete Grp7_LOOP Reg3_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;

NOTE: Deleting EMWS1.ENDGRP8_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP7_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.REG3_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp8_TRAIN / view=EMWS1.EndGrp8_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMFLOWSCORE.sas.
3721683   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3721684   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3721685   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3721686   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3721687   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3721688   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3721689   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3721690   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3721691   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3721692   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3721693   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3721694   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3721695   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3721696   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3721697   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721698   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3721699   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721700   +
3721701   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3721702   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3721703   +
3721704   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3721705   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3721706   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3721707   +array REG3_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_1DRF [2] $12 _temporary_ ('1' '0' );
3721708   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3721709   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3721710   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3721711   +ARRAY REG3_1DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_1DRU[2] _TEMPORARY_ (1 0);
3721712   +
3721713   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3721714   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3721715   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3721716   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3721717   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3721718   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3721719   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3721720   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3721721   +end;
MPRINT(SCORETABLES):   end;
3721722   +else do;
MPRINT(SCORETABLES):   else do;
3721723   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3721724   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3721725   +   end;
MPRINT(SCORETABLES):   end;
3721726   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3721727   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3721728   +   end;
MPRINT(SCORETABLES):   end;
3721729   +   else do;
MPRINT(SCORETABLES):   else do;
3721730   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3721731   +   end;
MPRINT(SCORETABLES):   end;
3721732   +end;
MPRINT(SCORETABLES):   end;
3721733   +
3721734   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3721735   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3721736   +
3721737   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3721738   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3721739   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721740   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721741   +end;
MPRINT(SCORETABLES):   end;
3721742   +
3721743   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3721744   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3721745   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721746   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721747   +end;
MPRINT(SCORETABLES):   end;
3721748   +
3721749   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3721750   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3721751   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721752   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721753   +end;
MPRINT(SCORETABLES):   end;
3721754   +
3721755   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3721756   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3721757   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721758   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721759   +end;
MPRINT(SCORETABLES):   end;
3721760   +
3721761   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3721762   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3721763   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721764   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721765   +end;
MPRINT(SCORETABLES):   end;
3721766   +
3721767   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3721768   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3721769   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721770   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721771   +end;
MPRINT(SCORETABLES):   end;
3721772   +
3721773   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3721774   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3721775   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721776   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721777   +end;
MPRINT(SCORETABLES):   end;
3721778   +
3721779   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3721780   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3721781   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721782   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721783   +end;
MPRINT(SCORETABLES):   end;
3721784   +
3721785   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3721786   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3721787   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3721788   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3721789   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3721790   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3721791   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3721792   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3721793   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3721794   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3721795   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3721796   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3721797   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3721798   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721799   +end;
MPRINT(SCORETABLES):   end;
3721800   +else do;
MPRINT(SCORETABLES):   else do;
3721801   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3721802   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3721803   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3721804   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3721805   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3721806   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3721807   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3721808   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3721809   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3721810   +         end;
MPRINT(SCORETABLES):   end;
3721811   +         else do;
MPRINT(SCORETABLES):   else do;
3721812   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3721813   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3721814   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3721815   +            end;
MPRINT(SCORETABLES):   end;
3721816   +         end;
MPRINT(SCORETABLES):   end;
3721817   +      end;
MPRINT(SCORETABLES):   end;
3721818   +      else do;
MPRINT(SCORETABLES):   else do;
3721819   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3721820   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3721821   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3721822   +         end;
MPRINT(SCORETABLES):   end;
3721823   +      end;
MPRINT(SCORETABLES):   end;
3721824   +   end;
MPRINT(SCORETABLES):   end;
3721825   +   else do;
MPRINT(SCORETABLES):   else do;
3721826   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3721827   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3721828   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3721829   +      end;
MPRINT(SCORETABLES):   end;
3721830   +      else do;
MPRINT(SCORETABLES):   else do;
3721831   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3721832   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3721833   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3721834   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3721835   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3721836   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3721837   +         end;
MPRINT(SCORETABLES):   end;
3721838   +      end;
MPRINT(SCORETABLES):   end;
3721839   +   end;
MPRINT(SCORETABLES):   end;
3721840   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3721841   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3721842   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3721843   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3721844   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3721845   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3721846   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3721847   +   end;
MPRINT(SCORETABLES):   end;
3721848   +end;
MPRINT(SCORETABLES):   end;
3721849   +
3721850   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3721851   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3721852   +   _P0 = 0.135600907;
MPRINT(SCORETABLES):   _P0 = 0.135600907;
3721853   +   _P1 = 0.864399093;
MPRINT(SCORETABLES):   _P1 = 0.864399093;
3721854   +   goto REG3_1DR1;
MPRINT(SCORETABLES):   goto REG3_1DR1;
3721855   +end;
MPRINT(SCORETABLES):   end;
3721856   +
3721857   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3721858   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3721859   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3721860   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3721861   +
3721862   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3721863   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3721864   +_LP0 = _LP0 + (    1.20697963280158) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.20697963280158) * _TEMP * _1_0;
3721865   +_LP0 = _LP0 + (   -1.20794193430997) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.20794193430997) * _TEMP * _1_1;
3721866   +_LP0 = _LP0 + (    0.91448880157455) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91448880157455) * _TEMP * _1_2;
3721867   +_LP0 = _LP0 + (    -1.7142100026679) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.7142100026679) * _TEMP * _1_3;
3721868   +
3721869   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3721870   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3721871   +_LP0 = _LP0 + (     25.841095856931 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.841095856931 * _TEMP);
3721872   +
3721873   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3721874   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3721875   +_LP0 = _LP0 + (   -59.7422470748668 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -59.7422470748668 * _TEMP);
3721876   +
3721877   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3721878   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3721879   +_LP0 = _LP0 + (   -18.2642382438574 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -18.2642382438574 * _TEMP);
3721880   +
3721881   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3721882   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3721883   +_LP0 = _LP0 + (    12.9286024765017 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 12.9286024765017 * _TEMP);
3721884   +
3721885   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3721886   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3721887   +_LP0 = _LP0 + (    38.6523562106812 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 38.6523562106812 * _TEMP);
3721888   +
3721889   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3721890   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3721891   +_LP0 = _LP0 + (    47.8210754293014 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 47.8210754293014 * _TEMP);
3721892   +
3721893   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3721894   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3721895   +_LP0 = _LP0 + (   -14.2261672652397 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -14.2261672652397 * _TEMP);
3721896   +
3721897   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3721898   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3721899   +_LP0 = _LP0 + (    33.1983295081975 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 33.1983295081975 * _TEMP);
3721900   +
3721901   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3721902   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3721903   +_LP0 = _LP0 + (    24.0145164813365 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.0145164813365 * _TEMP);
3721904   +
3721905   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*NumWebPurchases ;
3721906   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * NumWebPurchases ;
3721907   +_LP0 = _LP0 + (    71.3673951916513 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 71.3673951916513 * _TEMP);
3721908   +
3721909   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3721910   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3721911   +_LP0 = _LP0 + (    9.51572827128068 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 9.51572827128068 * _TEMP);
3721912   +
3721913   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3721914   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3721915   +_TEMP =    -1.75296205447878 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -1.75296205447878 + _LP0;
3721916   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3721917   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3721918   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3721919   +end;
MPRINT(SCORETABLES):   end;
3721920   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3721921   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3721922   +
3721923   +REG3_1DR1:
3721924   +
3721925   +*** Residuals;
MPRINT(SCORETABLES):   REG3_1DR1: *** Residuals;
3721926   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3721927   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3721928   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3721929   +end;
MPRINT(SCORETABLES):   end;
3721930   +else do;
MPRINT(SCORETABLES):   else do;
3721931   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3721932   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3721933   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3721934   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3721935   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3721936   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3721937   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3721938   +   end;
MPRINT(SCORETABLES):   end;
3721939   +end;
MPRINT(SCORETABLES):   end;
3721940   +
3721941   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3721942   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3721943   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3721944   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3721945   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3721946   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3721947   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3721948   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3721949   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3721950   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3721951   +end;
MPRINT(SCORETABLES):   end;
3721952   +I_DepVar = REG3_1DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_1DRF[_IY];
3721953   +U_DepVar = REG3_1DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_1DRU[_IY];
3721954   +
3721955   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721956   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3721957   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721958   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3721959   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3721960   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3721961   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3721962   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3721963   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3721964   +end;
MPRINT(SCORETABLES):   end;
3721965   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3721966   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3721967   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3721968   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3721969   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3721970   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3721971   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3721972   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3721973   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3721974   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3721975   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3721976   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3721977   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3721978   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3721979   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721980   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3721981   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3721982   +
3721983   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3721984   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3721985   +
3721986   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3721987   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3721988   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3721989   +array REG3_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_2DRF [2] $12 _temporary_ ('1' '0' );
3721990   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3721991   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3721992   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3721993   +ARRAY REG3_2DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_2DRU[2] _TEMPORARY_ (1 0);
3721994   +
3721995   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3721996   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3721997   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3721998   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3721999   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3722000   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722001   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3722002   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722003   +end;
MPRINT(SCORETABLES):   end;
3722004   +else do;
MPRINT(SCORETABLES):   else do;
3722005   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3722006   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3722007   +   end;
MPRINT(SCORETABLES):   end;
3722008   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3722009   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3722010   +   end;
MPRINT(SCORETABLES):   end;
3722011   +   else do;
MPRINT(SCORETABLES):   else do;
3722012   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722013   +   end;
MPRINT(SCORETABLES):   end;
3722014   +end;
MPRINT(SCORETABLES):   end;
3722015   +
3722016   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3722017   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3722018   +
3722019   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3722020   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3722021   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722022   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722023   +end;
MPRINT(SCORETABLES):   end;
3722024   +
3722025   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3722026   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3722027   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722028   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722029   +end;
MPRINT(SCORETABLES):   end;
3722030   +
3722031   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3722032   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3722033   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722034   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722035   +end;
MPRINT(SCORETABLES):   end;
3722036   +
3722037   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3722038   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3722039   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722040   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722041   +end;
MPRINT(SCORETABLES):   end;
3722042   +
3722043   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3722044   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3722045   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722046   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722047   +end;
MPRINT(SCORETABLES):   end;
3722048   +
3722049   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3722050   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3722051   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722052   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722053   +end;
MPRINT(SCORETABLES):   end;
3722054   +
3722055   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3722056   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3722057   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722058   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722059   +end;
MPRINT(SCORETABLES):   end;
3722060   +
3722061   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3722062   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3722063   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722064   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722065   +end;
MPRINT(SCORETABLES):   end;
3722066   +
3722067   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3722068   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3722069   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3722070   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3722071   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3722072   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3722073   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3722074   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3722075   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722076   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722077   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722078   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722079   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722080   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722081   +end;
MPRINT(SCORETABLES):   end;
3722082   +else do;
MPRINT(SCORETABLES):   else do;
3722083   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3722084   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3722085   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722086   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3722087   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3722088   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3722089   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3722090   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3722091   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722092   +         end;
MPRINT(SCORETABLES):   end;
3722093   +         else do;
MPRINT(SCORETABLES):   else do;
3722094   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3722095   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3722096   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722097   +            end;
MPRINT(SCORETABLES):   end;
3722098   +         end;
MPRINT(SCORETABLES):   end;
3722099   +      end;
MPRINT(SCORETABLES):   end;
3722100   +      else do;
MPRINT(SCORETABLES):   else do;
3722101   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3722102   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3722103   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722104   +         end;
MPRINT(SCORETABLES):   end;
3722105   +      end;
MPRINT(SCORETABLES):   end;
3722106   +   end;
MPRINT(SCORETABLES):   end;
3722107   +   else do;
MPRINT(SCORETABLES):   else do;
3722108   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3722109   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3722110   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722111   +      end;
MPRINT(SCORETABLES):   end;
3722112   +      else do;
MPRINT(SCORETABLES):   else do;
3722113   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3722114   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3722115   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3722116   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3722117   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3722118   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722119   +         end;
MPRINT(SCORETABLES):   end;
3722120   +      end;
MPRINT(SCORETABLES):   end;
3722121   +   end;
MPRINT(SCORETABLES):   end;
3722122   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3722123   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722124   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722125   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722126   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722127   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3722128   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722129   +   end;
MPRINT(SCORETABLES):   end;
3722130   +end;
MPRINT(SCORETABLES):   end;
3722131   +
3722132   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3722133   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3722134   +   _P0 = 0.137694419;
MPRINT(SCORETABLES):   _P0 = 0.137694419;
3722135   +   _P1 = 0.862305581;
MPRINT(SCORETABLES):   _P1 = 0.862305581;
3722136   +   goto REG3_2DR1;
MPRINT(SCORETABLES):   goto REG3_2DR1;
3722137   +end;
MPRINT(SCORETABLES):   end;
3722138   +
3722139   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3722140   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3722141   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3722142   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3722143   +
3722144   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3722145   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3722146   +_LP0 = _LP0 + (    0.96460618241742) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.96460618241742) * _TEMP * _1_0;
3722147   +_LP0 = _LP0 + (   -1.21680341826489) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.21680341826489) * _TEMP * _1_1;
3722148   +_LP0 = _LP0 + (     0.9058811035026) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.9058811035026) * _TEMP * _1_2;
3722149   +_LP0 = _LP0 + (   -1.72043508233542) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.72043508233542) * _TEMP * _1_3;
3722150   +
3722151   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3722152   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3722153   +_LP0 = _LP0 + (    26.2156650988566 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.2156650988566 * _TEMP);
3722154   +
3722155   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3722156   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3722157   +_LP0 = _LP0 + (   -57.2451824742213 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -57.2451824742213 * _TEMP);
3722158   +
3722159   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3722160   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3722161   +_LP0 = _LP0 + (   -17.0079313354133 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -17.0079313354133 * _TEMP);
3722162   +
3722163   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3722164   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3722165   +_LP0 = _LP0 + (    14.3463654651169 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.3463654651169 * _TEMP);
3722166   +
3722167   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3722168   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3722169   +_LP0 = _LP0 + (    39.6006043353658 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 39.6006043353658 * _TEMP);
3722170   +
3722171   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3722172   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3722173   +_LP0 = _LP0 + (    45.3471994845302 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 45.3471994845302 * _TEMP);
3722174   +
3722175   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3722176   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3722177   +_LP0 = _LP0 + (    19.7792054125068 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 19.7792054125068 * _TEMP);
3722178   +
3722179   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3722180   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3722181   +_LP0 = _LP0 + (    16.0947493124885 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 16.0947493124885 * _TEMP);
3722182   +
3722183   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*NumWebPurchases ;
3722184   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * NumWebPurchases ;
3722185   +_LP0 = _LP0 + (    67.1153576840868 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 67.1153576840868 * _TEMP);
3722186   +
3722187   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3722188   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3722189   +_LP0 = _LP0 + (    5.81573702050692 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 5.81573702050692 * _TEMP);
3722190   +
3722191   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3722192   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3722193   +_TEMP =    -2.37291573448972 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -2.37291573448972 + _LP0;
3722194   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3722195   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3722196   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3722197   +end;
MPRINT(SCORETABLES):   end;
3722198   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3722199   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3722200   +
3722201   +REG3_2DR1:
3722202   +
3722203   +*** Residuals;
MPRINT(SCORETABLES):   REG3_2DR1: *** Residuals;
3722204   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3722205   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3722206   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3722207   +end;
MPRINT(SCORETABLES):   end;
3722208   +else do;
MPRINT(SCORETABLES):   else do;
3722209   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3722210   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3722211   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3722212   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3722213   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3722214   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3722215   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3722216   +   end;
MPRINT(SCORETABLES):   end;
3722217   +end;
MPRINT(SCORETABLES):   end;
3722218   +
3722219   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3722220   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3722221   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3722222   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3722223   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3722224   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3722225   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3722226   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3722227   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3722228   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3722229   +end;
MPRINT(SCORETABLES):   end;
3722230   +I_DepVar = REG3_2DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_2DRF[_IY];
3722231   +U_DepVar = REG3_2DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_2DRU[_IY];
3722232   +
3722233   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722234   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3722235   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722236   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722237   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3722238   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722239   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722240   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3722241   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722242   +end;
MPRINT(SCORETABLES):   end;
3722243   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722244   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3722245   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722246   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722247   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3722248   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722249   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3722250   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3722251   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722252   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3722253   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722254   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722255   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3722256   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722257   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722258   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3722259   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722260   +
3722261   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3722262   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3722263   +
3722264   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3722265   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3722266   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3722267   +array REG3_3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_3DRF [2] $12 _temporary_ ('1' '0' );
3722268   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3722269   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3722270   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3722271   +ARRAY REG3_3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_3DRU[2] _TEMPORARY_ (1 0);
3722272   +
3722273   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3722274   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3722275   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3722276   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3722277   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3722278   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722279   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3722280   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722281   +end;
MPRINT(SCORETABLES):   end;
3722282   +else do;
MPRINT(SCORETABLES):   else do;
3722283   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3722284   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3722285   +   end;
MPRINT(SCORETABLES):   end;
3722286   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3722287   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3722288   +   end;
MPRINT(SCORETABLES):   end;
3722289   +   else do;
MPRINT(SCORETABLES):   else do;
3722290   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722291   +   end;
MPRINT(SCORETABLES):   end;
3722292   +end;
MPRINT(SCORETABLES):   end;
3722293   +
3722294   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3722295   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3722296   +
3722297   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3722298   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3722299   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722300   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722301   +end;
MPRINT(SCORETABLES):   end;
3722302   +
3722303   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3722304   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3722305   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722306   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722307   +end;
MPRINT(SCORETABLES):   end;
3722308   +
3722309   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3722310   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3722311   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722312   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722313   +end;
MPRINT(SCORETABLES):   end;
3722314   +
3722315   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3722316   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3722317   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722318   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722319   +end;
MPRINT(SCORETABLES):   end;
3722320   +
3722321   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3722322   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3722323   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722324   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722325   +end;
MPRINT(SCORETABLES):   end;
3722326   +
3722327   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3722328   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3722329   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722330   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722331   +end;
MPRINT(SCORETABLES):   end;
3722332   +
3722333   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3722334   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3722335   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722336   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722337   +end;
MPRINT(SCORETABLES):   end;
3722338   +
3722339   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3722340   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3722341   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722342   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722343   +end;
MPRINT(SCORETABLES):   end;
3722344   +
3722345   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3722346   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3722347   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3722348   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3722349   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3722350   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3722351   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3722352   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3722353   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722354   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722355   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722356   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722357   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722358   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722359   +end;
MPRINT(SCORETABLES):   end;
3722360   +else do;
MPRINT(SCORETABLES):   else do;
3722361   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3722362   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3722363   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722364   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3722365   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3722366   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3722367   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3722368   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3722369   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722370   +         end;
MPRINT(SCORETABLES):   end;
3722371   +         else do;
MPRINT(SCORETABLES):   else do;
3722372   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3722373   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3722374   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722375   +            end;
MPRINT(SCORETABLES):   end;
3722376   +         end;
MPRINT(SCORETABLES):   end;
3722377   +      end;
MPRINT(SCORETABLES):   end;
3722378   +      else do;
MPRINT(SCORETABLES):   else do;
3722379   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3722380   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3722381   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722382   +         end;
MPRINT(SCORETABLES):   end;
3722383   +      end;
MPRINT(SCORETABLES):   end;
3722384   +   end;
MPRINT(SCORETABLES):   end;
3722385   +   else do;
MPRINT(SCORETABLES):   else do;
3722386   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3722387   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3722388   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722389   +      end;
MPRINT(SCORETABLES):   end;
3722390   +      else do;
MPRINT(SCORETABLES):   else do;
3722391   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3722392   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3722393   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3722394   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3722395   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3722396   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722397   +         end;
MPRINT(SCORETABLES):   end;
3722398   +      end;
MPRINT(SCORETABLES):   end;
3722399   +   end;
MPRINT(SCORETABLES):   end;
3722400   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3722401   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722402   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722403   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722404   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722405   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3722406   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722407   +   end;
MPRINT(SCORETABLES):   end;
3722408   +end;
MPRINT(SCORETABLES):   end;
3722409   +
3722410   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3722411   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3722412   +   _P0 = 0.1365479946;
MPRINT(SCORETABLES):   _P0 = 0.1365479946;
3722413   +   _P1 = 0.8634520054;
MPRINT(SCORETABLES):   _P1 = 0.8634520054;
3722414   +   goto REG3_3DR1;
MPRINT(SCORETABLES):   goto REG3_3DR1;
3722415   +end;
MPRINT(SCORETABLES):   end;
3722416   +
3722417   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3722418   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3722419   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3722420   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3722421   +
3722422   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3722423   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3722424   +_LP0 = _LP0 + (    1.08599256416866) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.08599256416866) * _TEMP * _1_0;
3722425   +_LP0 = _LP0 + (   -1.36087540501895) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.36087540501895) * _TEMP * _1_1;
3722426   +_LP0 = _LP0 + (    0.94857995186377) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.94857995186377) * _TEMP * _1_2;
3722427   +_LP0 = _LP0 + (   -1.56150984270597) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.56150984270597) * _TEMP * _1_3;
3722428   +
3722429   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3722430   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3722431   +_LP0 = _LP0 + (    25.4594923607924 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.4594923607924 * _TEMP);
3722432   +
3722433   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3722434   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3722435   +_LP0 = _LP0 + (   -63.0286516455468 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -63.0286516455468 * _TEMP);
3722436   +
3722437   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3722438   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3722439   +_LP0 = _LP0 + (   -14.4183292674941 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -14.4183292674941 * _TEMP);
3722440   +
3722441   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3722442   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3722443   +_LP0 = _LP0 + (    12.8106794358554 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 12.8106794358554 * _TEMP);
3722444   +
3722445   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3722446   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3722447   +_LP0 = _LP0 + (    40.3486912075674 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 40.3486912075674 * _TEMP);
3722448   +
3722449   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3722450   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3722451   +_LP0 = _LP0 + (    51.4022903815845 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 51.4022903815845 * _TEMP);
3722452   +
3722453   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3722454   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3722455   +_LP0 = _LP0 + (   -15.9708643272535 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -15.9708643272535 * _TEMP);
3722456   +
3722457   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3722458   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3722459   +_LP0 = _LP0 + (    34.6663143127141 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 34.6663143127141 * _TEMP);
3722460   +
3722461   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3722462   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3722463   +_LP0 = _LP0 + (    24.9623029321829 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.9623029321829 * _TEMP);
3722464   +
3722465   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*NumWebPurchases ;
3722466   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * NumWebPurchases ;
3722467   +_LP0 = _LP0 + (    73.3572834170655 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 73.3572834170655 * _TEMP);
3722468   +
3722469   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3722470   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3722471   +_LP0 = _LP0 + (    4.74182789927739 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 4.74182789927739 * _TEMP);
3722472   +
3722473   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3722474   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3722475   +_TEMP =    -1.43541350237023 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -1.43541350237023 + _LP0;
3722476   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3722477   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3722478   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3722479   +end;
MPRINT(SCORETABLES):   end;
3722480   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3722481   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3722482   +
3722483   +REG3_3DR1:
3722484   +
3722485   +*** Residuals;
MPRINT(SCORETABLES):   REG3_3DR1: *** Residuals;
3722486   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3722487   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3722488   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3722489   +end;
MPRINT(SCORETABLES):   end;
3722490   +else do;
MPRINT(SCORETABLES):   else do;
3722491   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3722492   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3722493   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3722494   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3722495   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3722496   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3722497   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3722498   +   end;
MPRINT(SCORETABLES):   end;
3722499   +end;
MPRINT(SCORETABLES):   end;
3722500   +
3722501   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3722502   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3722503   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3722504   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3722505   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3722506   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3722507   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3722508   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3722509   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3722510   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3722511   +end;
MPRINT(SCORETABLES):   end;
3722512   +I_DepVar = REG3_3DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_3DRF[_IY];
3722513   +U_DepVar = REG3_3DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_3DRU[_IY];
3722514   +
3722515   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722516   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3722517   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722518   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722519   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3722520   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722521   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722522   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3722523   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722524   +end;
MPRINT(SCORETABLES):   end;
3722525   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722526   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3722527   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722528   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722529   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3722530   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722531   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3722532   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3722533   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722534   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3722535   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722536   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722537   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3722538   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722539   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722540   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3722541   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722542   +
3722543   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3722544   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3722545   +
3722546   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3722547   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3722548   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3722549   +array REG3_4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_4DRF [2] $12 _temporary_ ('1' '0' );
3722550   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3722551   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3722552   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3722553   +ARRAY REG3_4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_4DRU[2] _TEMPORARY_ (1 0);
3722554   +
3722555   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3722556   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3722557   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3722558   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3722559   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3722560   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722561   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3722562   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722563   +end;
MPRINT(SCORETABLES):   end;
3722564   +else do;
MPRINT(SCORETABLES):   else do;
3722565   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3722566   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3722567   +   end;
MPRINT(SCORETABLES):   end;
3722568   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3722569   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3722570   +   end;
MPRINT(SCORETABLES):   end;
3722571   +   else do;
MPRINT(SCORETABLES):   else do;
3722572   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722573   +   end;
MPRINT(SCORETABLES):   end;
3722574   +end;
MPRINT(SCORETABLES):   end;
3722575   +
3722576   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3722577   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3722578   +
3722579   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3722580   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3722581   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722582   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722583   +end;
MPRINT(SCORETABLES):   end;
3722584   +
3722585   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3722586   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3722587   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722588   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722589   +end;
MPRINT(SCORETABLES):   end;
3722590   +
3722591   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3722592   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3722593   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722594   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722595   +end;
MPRINT(SCORETABLES):   end;
3722596   +
3722597   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3722598   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3722599   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722600   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722601   +end;
MPRINT(SCORETABLES):   end;
3722602   +
3722603   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3722604   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3722605   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722606   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722607   +end;
MPRINT(SCORETABLES):   end;
3722608   +
3722609   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3722610   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3722611   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722612   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722613   +end;
MPRINT(SCORETABLES):   end;
3722614   +
3722615   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3722616   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3722617   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722618   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722619   +end;
MPRINT(SCORETABLES):   end;
3722620   +
3722621   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3722622   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3722623   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722624   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722625   +end;
MPRINT(SCORETABLES):   end;
3722626   +
3722627   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3722628   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3722629   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3722630   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3722631   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3722632   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3722633   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3722634   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3722635   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722636   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722637   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722638   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722639   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722640   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722641   +end;
MPRINT(SCORETABLES):   end;
3722642   +else do;
MPRINT(SCORETABLES):   else do;
3722643   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3722644   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3722645   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722646   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3722647   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3722648   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3722649   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3722650   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3722651   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722652   +         end;
MPRINT(SCORETABLES):   end;
3722653   +         else do;
MPRINT(SCORETABLES):   else do;
3722654   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3722655   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3722656   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722657   +            end;
MPRINT(SCORETABLES):   end;
3722658   +         end;
MPRINT(SCORETABLES):   end;
3722659   +      end;
MPRINT(SCORETABLES):   end;
3722660   +      else do;
MPRINT(SCORETABLES):   else do;
3722661   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3722662   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3722663   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722664   +         end;
MPRINT(SCORETABLES):   end;
3722665   +      end;
MPRINT(SCORETABLES):   end;
3722666   +   end;
MPRINT(SCORETABLES):   end;
3722667   +   else do;
MPRINT(SCORETABLES):   else do;
3722668   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3722669   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3722670   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722671   +      end;
MPRINT(SCORETABLES):   end;
3722672   +      else do;
MPRINT(SCORETABLES):   else do;
3722673   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3722674   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3722675   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3722676   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3722677   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3722678   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722679   +         end;
MPRINT(SCORETABLES):   end;
3722680   +      end;
MPRINT(SCORETABLES):   end;
3722681   +   end;
MPRINT(SCORETABLES):   end;
3722682   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3722683   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722684   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722685   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722686   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722687   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3722688   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722689   +   end;
MPRINT(SCORETABLES):   end;
3722690   +end;
MPRINT(SCORETABLES):   end;
3722691   +
3722692   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3722693   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3722694   +   _P0 = 0.1371115174;
MPRINT(SCORETABLES):   _P0 = 0.1371115174;
3722695   +   _P1 = 0.8628884826;
MPRINT(SCORETABLES):   _P1 = 0.8628884826;
3722696   +   goto REG3_4DR1;
MPRINT(SCORETABLES):   goto REG3_4DR1;
3722697   +end;
MPRINT(SCORETABLES):   end;
3722698   +
3722699   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3722700   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3722701   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3722702   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3722703   +
3722704   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3722705   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3722706   +_LP0 = _LP0 + (    0.99347379102565) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.99347379102565) * _TEMP * _1_0;
3722707   +_LP0 = _LP0 + (     -1.249678858048) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.249678858048) * _TEMP * _1_1;
3722708   +_LP0 = _LP0 + (    1.04740638545062) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.04740638545062) * _TEMP * _1_2;
3722709   +_LP0 = _LP0 + (   -1.52782236591702) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.52782236591702) * _TEMP * _1_3;
3722710   +
3722711   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3722712   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3722713   +_LP0 = _LP0 + (    25.6263750594805 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.6263750594805 * _TEMP);
3722714   +
3722715   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3722716   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3722717   +_LP0 = _LP0 + (    -17.400997674421 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -17.400997674421 * _TEMP);
3722718   +
3722719   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3722720   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3722721   +_LP0 = _LP0 + (    11.6983595942938 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.6983595942938 * _TEMP);
3722722   +
3722723   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3722724   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3722725   +_LP0 = _LP0 + (    36.1261154661485 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 36.1261154661485 * _TEMP);
3722726   +
3722727   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3722728   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3722729   +_LP0 = _LP0 + (    43.5439352077278 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 43.5439352077278 * _TEMP);
3722730   +
3722731   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3722732   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3722733   +_LP0 = _LP0 + (   -13.9703756646369 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.9703756646369 * _TEMP);
3722734   +
3722735   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3722736   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3722737   +_LP0 = _LP0 + (    35.6886429548531 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 35.6886429548531 * _TEMP);
3722738   +
3722739   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3722740   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3722741   +_LP0 = _LP0 + (    24.6781395719623 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.6781395719623 * _TEMP);
3722742   +
3722743   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3722744   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3722745   +_LP0 = _LP0 + (    9.50749188563887 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 9.50749188563887 * _TEMP);
3722746   +
3722747   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3722748   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3722749   +_TEMP =    -13.1009637271714 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -13.1009637271714 + _LP0;
3722750   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3722751   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3722752   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3722753   +end;
MPRINT(SCORETABLES):   end;
3722754   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3722755   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3722756   +
3722757   +REG3_4DR1:
3722758   +
3722759   +*** Residuals;
MPRINT(SCORETABLES):   REG3_4DR1: *** Residuals;
3722760   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3722761   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3722762   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3722763   +end;
MPRINT(SCORETABLES):   end;
3722764   +else do;
MPRINT(SCORETABLES):   else do;
3722765   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3722766   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3722767   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3722768   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3722769   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3722770   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3722771   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3722772   +   end;
MPRINT(SCORETABLES):   end;
3722773   +end;
MPRINT(SCORETABLES):   end;
3722774   +
3722775   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3722776   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3722777   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3722778   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3722779   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3722780   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3722781   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3722782   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3722783   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3722784   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3722785   +end;
MPRINT(SCORETABLES):   end;
3722786   +I_DepVar = REG3_4DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_4DRF[_IY];
3722787   +U_DepVar = REG3_4DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_4DRU[_IY];
3722788   +
3722789   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722790   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3722791   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722792   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722793   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3722794   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722795   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722796   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3722797   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722798   +end;
MPRINT(SCORETABLES):   end;
3722799   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722800   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3722801   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722802   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722803   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3722804   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722805   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3722806   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3722807   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3722808   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3722809   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3722810   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3722811   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3722812   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3722813   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722814   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3722815   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3722816   +
3722817   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3722818   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3722819   +
3722820   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3722821   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3722822   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3722823   +array REG3_5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_5DRF [2] $12 _temporary_ ('1' '0' );
3722824   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3722825   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3722826   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3722827   +ARRAY REG3_5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_5DRU[2] _TEMPORARY_ (1 0);
3722828   +
3722829   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3722830   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3722831   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3722832   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3722833   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3722834   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722835   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3722836   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722837   +end;
MPRINT(SCORETABLES):   end;
3722838   +else do;
MPRINT(SCORETABLES):   else do;
3722839   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3722840   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3722841   +   end;
MPRINT(SCORETABLES):   end;
3722842   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3722843   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3722844   +   end;
MPRINT(SCORETABLES):   end;
3722845   +   else do;
MPRINT(SCORETABLES):   else do;
3722846   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3722847   +   end;
MPRINT(SCORETABLES):   end;
3722848   +end;
MPRINT(SCORETABLES):   end;
3722849   +
3722850   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3722851   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3722852   +
3722853   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3722854   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3722855   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722856   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722857   +end;
MPRINT(SCORETABLES):   end;
3722858   +
3722859   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3722860   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3722861   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722862   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722863   +end;
MPRINT(SCORETABLES):   end;
3722864   +
3722865   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3722866   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3722867   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722868   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722869   +end;
MPRINT(SCORETABLES):   end;
3722870   +
3722871   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3722872   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3722873   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722874   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722875   +end;
MPRINT(SCORETABLES):   end;
3722876   +
3722877   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3722878   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3722879   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722880   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722881   +end;
MPRINT(SCORETABLES):   end;
3722882   +
3722883   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3722884   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3722885   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722886   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722887   +end;
MPRINT(SCORETABLES):   end;
3722888   +
3722889   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3722890   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3722891   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722892   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722893   +end;
MPRINT(SCORETABLES):   end;
3722894   +
3722895   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3722896   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3722897   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722898   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722899   +end;
MPRINT(SCORETABLES):   end;
3722900   +
3722901   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3722902   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3722903   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3722904   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3722905   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3722906   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3722907   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3722908   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3722909   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722910   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722911   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722912   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722913   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3722914   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722915   +end;
MPRINT(SCORETABLES):   end;
3722916   +else do;
MPRINT(SCORETABLES):   else do;
3722917   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3722918   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3722919   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3722920   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3722921   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3722922   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3722923   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3722924   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3722925   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722926   +         end;
MPRINT(SCORETABLES):   end;
3722927   +         else do;
MPRINT(SCORETABLES):   else do;
3722928   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3722929   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3722930   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722931   +            end;
MPRINT(SCORETABLES):   end;
3722932   +         end;
MPRINT(SCORETABLES):   end;
3722933   +      end;
MPRINT(SCORETABLES):   end;
3722934   +      else do;
MPRINT(SCORETABLES):   else do;
3722935   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3722936   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3722937   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722938   +         end;
MPRINT(SCORETABLES):   end;
3722939   +      end;
MPRINT(SCORETABLES):   end;
3722940   +   end;
MPRINT(SCORETABLES):   end;
3722941   +   else do;
MPRINT(SCORETABLES):   else do;
3722942   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3722943   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3722944   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722945   +      end;
MPRINT(SCORETABLES):   end;
3722946   +      else do;
MPRINT(SCORETABLES):   else do;
3722947   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3722948   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3722949   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3722950   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3722951   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3722952   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3722953   +         end;
MPRINT(SCORETABLES):   end;
3722954   +      end;
MPRINT(SCORETABLES):   end;
3722955   +   end;
MPRINT(SCORETABLES):   end;
3722956   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3722957   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3722958   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3722959   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3722960   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3722961   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3722962   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3722963   +   end;
MPRINT(SCORETABLES):   end;
3722964   +end;
MPRINT(SCORETABLES):   end;
3722965   +
3722966   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3722967   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3722968   +   _P0 = 0.1407876867;
MPRINT(SCORETABLES):   _P0 = 0.1407876867;
3722969   +   _P1 = 0.8592123133;
MPRINT(SCORETABLES):   _P1 = 0.8592123133;
3722970   +   goto REG3_5DR1;
MPRINT(SCORETABLES):   goto REG3_5DR1;
3722971   +end;
MPRINT(SCORETABLES):   end;
3722972   +
3722973   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3722974   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3722975   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3722976   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3722977   +
3722978   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3722979   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3722980   +_LP0 = _LP0 + (    1.02117137121456) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.02117137121456) * _TEMP * _1_0;
3722981   +_LP0 = _LP0 + (   -1.24291307052906) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.24291307052906) * _TEMP * _1_1;
3722982   +_LP0 = _LP0 + (    0.79936695761458) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.79936695761458) * _TEMP * _1_2;
3722983   +_LP0 = _LP0 + (   -1.63775184002936) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.63775184002936) * _TEMP * _1_3;
3722984   +
3722985   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3722986   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3722987   +_LP0 = _LP0 + (    27.4903123752783 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 27.4903123752783 * _TEMP);
3722988   +
3722989   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3722990   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3722991   +_LP0 = _LP0 + (   -15.0001160217982 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -15.0001160217982 * _TEMP);
3722992   +
3722993   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3722994   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3722995   +_LP0 = _LP0 + (     11.589180897991 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.589180897991 * _TEMP);
3722996   +
3722997   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3722998   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3722999   +_LP0 = _LP0 + (    37.4344913845479 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 37.4344913845479 * _TEMP);
3723000   +
3723001   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3723002   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3723003   +_LP0 = _LP0 + (    49.1309050852856 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 49.1309050852856 * _TEMP);
3723004   +
3723005   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3723006   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3723007   +_LP0 = _LP0 + (   -12.1925827555019 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.1925827555019 * _TEMP);
3723008   +
3723009   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3723010   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3723011   +_LP0 = _LP0 + (    27.5436818249704 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 27.5436818249704 * _TEMP);
3723012   +
3723013   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3723014   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3723015   +_LP0 = _LP0 + (    26.8411577407027 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.8411577407027 * _TEMP);
3723016   +
3723017   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3723018   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3723019   +_LP0 = _LP0 + (    6.34895715845929 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 6.34895715845929 * _TEMP);
3723020   +
3723021   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3723022   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3723023   +_TEMP =    -14.0931745829506 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -14.0931745829506 + _LP0;
3723024   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3723025   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3723026   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3723027   +end;
MPRINT(SCORETABLES):   end;
3723028   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3723029   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3723030   +
3723031   +REG3_5DR1:
3723032   +
3723033   +*** Residuals;
MPRINT(SCORETABLES):   REG3_5DR1: *** Residuals;
3723034   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3723035   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3723036   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3723037   +end;
MPRINT(SCORETABLES):   end;
3723038   +else do;
MPRINT(SCORETABLES):   else do;
3723039   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3723040   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3723041   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3723042   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3723043   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3723044   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3723045   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3723046   +   end;
MPRINT(SCORETABLES):   end;
3723047   +end;
MPRINT(SCORETABLES):   end;
3723048   +
3723049   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3723050   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3723051   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3723052   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3723053   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3723054   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3723055   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3723056   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3723057   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3723058   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3723059   +end;
MPRINT(SCORETABLES):   end;
3723060   +I_DepVar = REG3_5DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_5DRF[_IY];
3723061   +U_DepVar = REG3_5DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_5DRU[_IY];
3723062   +
3723063   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723064   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3723065   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723066   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723067   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3723068   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723069   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723070   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3723071   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723072   +end;
MPRINT(SCORETABLES):   end;
3723073   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723074   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3723075   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723076   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723077   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3723078   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723079   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3723080   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3723081   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723082   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3723083   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723084   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723085   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3723086   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723087   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723088   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3723089   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723090   +
3723091   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3723092   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3723093   +
3723094   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3723095   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3723096   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3723097   +array REG3_6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_6DRF [2] $12 _temporary_ ('1' '0' );
3723098   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3723099   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3723100   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3723101   +ARRAY REG3_6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_6DRU[2] _TEMPORARY_ (1 0);
3723102   +
3723103   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3723104   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3723105   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3723106   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3723107   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3723108   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723109   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3723110   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723111   +end;
MPRINT(SCORETABLES):   end;
3723112   +else do;
MPRINT(SCORETABLES):   else do;
3723113   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3723114   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3723115   +   end;
MPRINT(SCORETABLES):   end;
3723116   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3723117   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3723118   +   end;
MPRINT(SCORETABLES):   end;
3723119   +   else do;
MPRINT(SCORETABLES):   else do;
3723120   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723121   +   end;
MPRINT(SCORETABLES):   end;
3723122   +end;
MPRINT(SCORETABLES):   end;
3723123   +
3723124   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3723125   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3723126   +
3723127   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3723128   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3723129   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723130   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723131   +end;
MPRINT(SCORETABLES):   end;
3723132   +
3723133   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3723134   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3723135   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723136   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723137   +end;
MPRINT(SCORETABLES):   end;
3723138   +
3723139   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3723140   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3723141   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723142   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723143   +end;
MPRINT(SCORETABLES):   end;
3723144   +
3723145   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3723146   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3723147   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723148   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723149   +end;
MPRINT(SCORETABLES):   end;
3723150   +
3723151   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3723152   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3723153   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723154   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723155   +end;
MPRINT(SCORETABLES):   end;
3723156   +
3723157   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3723158   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3723159   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723160   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723161   +end;
MPRINT(SCORETABLES):   end;
3723162   +
3723163   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3723164   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3723165   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723166   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723167   +end;
MPRINT(SCORETABLES):   end;
3723168   +
3723169   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3723170   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3723171   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3723172   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3723173   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3723174   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3723175   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3723176   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3723177   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723178   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723179   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723180   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723181   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723182   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723183   +end;
MPRINT(SCORETABLES):   end;
3723184   +else do;
MPRINT(SCORETABLES):   else do;
3723185   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3723186   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3723187   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723188   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3723189   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3723190   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3723191   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3723192   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3723193   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723194   +         end;
MPRINT(SCORETABLES):   end;
3723195   +         else do;
MPRINT(SCORETABLES):   else do;
3723196   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3723197   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3723198   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723199   +            end;
MPRINT(SCORETABLES):   end;
3723200   +         end;
MPRINT(SCORETABLES):   end;
3723201   +      end;
MPRINT(SCORETABLES):   end;
3723202   +      else do;
MPRINT(SCORETABLES):   else do;
3723203   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3723204   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3723205   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723206   +         end;
MPRINT(SCORETABLES):   end;
3723207   +      end;
MPRINT(SCORETABLES):   end;
3723208   +   end;
MPRINT(SCORETABLES):   end;
3723209   +   else do;
MPRINT(SCORETABLES):   else do;
3723210   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3723211   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3723212   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723213   +      end;
MPRINT(SCORETABLES):   end;
3723214   +      else do;
MPRINT(SCORETABLES):   else do;
3723215   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3723216   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3723217   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3723218   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3723219   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3723220   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723221   +         end;
MPRINT(SCORETABLES):   end;
3723222   +      end;
MPRINT(SCORETABLES):   end;
3723223   +   end;
MPRINT(SCORETABLES):   end;
3723224   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3723225   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723226   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723227   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723228   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723229   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3723230   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723231   +   end;
MPRINT(SCORETABLES):   end;
3723232   +end;
MPRINT(SCORETABLES):   end;
3723233   +
3723234   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3723235   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3723236   +   _P0 = 0.1388127854;
MPRINT(SCORETABLES):   _P0 = 0.1388127854;
3723237   +   _P1 = 0.8611872146;
MPRINT(SCORETABLES):   _P1 = 0.8611872146;
3723238   +   goto REG3_6DR1;
MPRINT(SCORETABLES):   goto REG3_6DR1;
3723239   +end;
MPRINT(SCORETABLES):   end;
3723240   +
3723241   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3723242   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3723243   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3723244   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3723245   +
3723246   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3723247   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3723248   +_LP0 = _LP0 + (    1.01182794637653) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.01182794637653) * _TEMP * _1_0;
3723249   +_LP0 = _LP0 + (   -1.32309416671542) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.32309416671542) * _TEMP * _1_1;
3723250   +_LP0 = _LP0 + (    0.88328465903732) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.88328465903732) * _TEMP * _1_2;
3723251   +_LP0 = _LP0 + (   -1.79489091296899) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.79489091296899) * _TEMP * _1_3;
3723252   +
3723253   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3723254   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3723255   +_LP0 = _LP0 + (    26.2840249438678 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.2840249438678 * _TEMP);
3723256   +
3723257   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3723258   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3723259   +_LP0 = _LP0 + (    -68.246247660204 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -68.246247660204 * _TEMP);
3723260   +
3723261   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3723262   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3723263   +_LP0 = _LP0 + (   -11.9841426342291 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -11.9841426342291 * _TEMP);
3723264   +
3723265   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3723266   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3723267   +_LP0 = _LP0 + (    13.1903523365172 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.1903523365172 * _TEMP);
3723268   +
3723269   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3723270   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3723271   +_LP0 = _LP0 + (    38.0080217809621 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 38.0080217809621 * _TEMP);
3723272   +
3723273   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3723274   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3723275   +_LP0 = _LP0 + (    51.1808998805074 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 51.1808998805074 * _TEMP);
3723276   +
3723277   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3723278   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3723279   +_LP0 = _LP0 + (   -16.7062327924002 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -16.7062327924002 * _TEMP);
3723280   +
3723281   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3723282   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3723283   +_LP0 = _LP0 + (     34.283083593586 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 34.283083593586 * _TEMP);
3723284   +
3723285   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3723286   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3723287   +_LP0 = _LP0 + (    25.2746687972476 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.2746687972476 * _TEMP);
3723288   +
3723289   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*NumWebPurchases ;
3723290   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * NumWebPurchases ;
3723291   +_LP0 = _LP0 + (    79.0900216539386 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 79.0900216539386 * _TEMP);
3723292   +
3723293   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3723294   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3723295   +_TEMP =    -0.14564401691823 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -0.14564401691823 + _LP0;
3723296   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3723297   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3723298   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3723299   +end;
MPRINT(SCORETABLES):   end;
3723300   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3723301   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3723302   +
3723303   +REG3_6DR1:
3723304   +
3723305   +*** Residuals;
MPRINT(SCORETABLES):   REG3_6DR1: *** Residuals;
3723306   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3723307   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3723308   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3723309   +end;
MPRINT(SCORETABLES):   end;
3723310   +else do;
MPRINT(SCORETABLES):   else do;
3723311   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3723312   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3723313   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3723314   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3723315   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3723316   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3723317   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3723318   +   end;
MPRINT(SCORETABLES):   end;
3723319   +end;
MPRINT(SCORETABLES):   end;
3723320   +
3723321   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3723322   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3723323   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3723324   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3723325   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3723326   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3723327   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3723328   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3723329   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3723330   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3723331   +end;
MPRINT(SCORETABLES):   end;
3723332   +I_DepVar = REG3_6DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_6DRF[_IY];
3723333   +U_DepVar = REG3_6DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_6DRU[_IY];
3723334   +
3723335   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723336   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3723337   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723338   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723339   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3723340   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723341   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723342   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3723343   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723344   +end;
MPRINT(SCORETABLES):   end;
3723345   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723346   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3723347   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723348   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723349   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3723350   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723351   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3723352   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3723353   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723354   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3723355   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723356   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723357   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3723358   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723359   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723360   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3723361   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723362   +
3723363   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3723364   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3723365   +
3723366   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3723367   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3723368   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3723369   +array REG3_7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_7DRF [2] $12 _temporary_ ('1' '0' );
3723370   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3723371   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3723372   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3723373   +ARRAY REG3_7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_7DRU[2] _TEMPORARY_ (1 0);
3723374   +
3723375   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3723376   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3723377   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3723378   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3723379   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3723380   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723381   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3723382   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723383   +end;
MPRINT(SCORETABLES):   end;
3723384   +else do;
MPRINT(SCORETABLES):   else do;
3723385   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3723386   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3723387   +   end;
MPRINT(SCORETABLES):   end;
3723388   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3723389   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3723390   +   end;
MPRINT(SCORETABLES):   end;
3723391   +   else do;
MPRINT(SCORETABLES):   else do;
3723392   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723393   +   end;
MPRINT(SCORETABLES):   end;
3723394   +end;
MPRINT(SCORETABLES):   end;
3723395   +
3723396   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3723397   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3723398   +
3723399   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3723400   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3723401   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723402   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723403   +end;
MPRINT(SCORETABLES):   end;
3723404   +
3723405   +*** Check MntMagazines for missing values ;
MPRINT(SCORETABLES):   *** Check MntMagazines for missing values ;
3723406   +if missing( MntMagazines ) then do;
MPRINT(SCORETABLES):   if missing( MntMagazines ) then do;
3723407   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723408   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723409   +end;
MPRINT(SCORETABLES):   end;
3723410   +
3723411   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3723412   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3723413   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723414   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723415   +end;
MPRINT(SCORETABLES):   end;
3723416   +
3723417   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3723418   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3723419   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723420   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723421   +end;
MPRINT(SCORETABLES):   end;
3723422   +
3723423   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3723424   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3723425   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723426   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723427   +end;
MPRINT(SCORETABLES):   end;
3723428   +
3723429   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3723430   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3723431   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723432   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723433   +end;
MPRINT(SCORETABLES):   end;
3723434   +
3723435   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3723436   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3723437   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723438   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723439   +end;
MPRINT(SCORETABLES):   end;
3723440   +
3723441   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3723442   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3723443   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723444   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723445   +end;
MPRINT(SCORETABLES):   end;
3723446   +
3723447   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3723448   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3723449   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723450   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723451   +end;
MPRINT(SCORETABLES):   end;
3723452   +
3723453   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3723454   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3723455   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3723456   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3723457   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3723458   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3723459   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3723460   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3723461   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723462   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723463   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723464   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723465   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723466   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723467   +end;
MPRINT(SCORETABLES):   end;
3723468   +else do;
MPRINT(SCORETABLES):   else do;
3723469   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3723470   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3723471   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723472   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3723473   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3723474   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3723475   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3723476   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3723477   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723478   +         end;
MPRINT(SCORETABLES):   end;
3723479   +         else do;
MPRINT(SCORETABLES):   else do;
3723480   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3723481   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3723482   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723483   +            end;
MPRINT(SCORETABLES):   end;
3723484   +         end;
MPRINT(SCORETABLES):   end;
3723485   +      end;
MPRINT(SCORETABLES):   end;
3723486   +      else do;
MPRINT(SCORETABLES):   else do;
3723487   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3723488   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3723489   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723490   +         end;
MPRINT(SCORETABLES):   end;
3723491   +      end;
MPRINT(SCORETABLES):   end;
3723492   +   end;
MPRINT(SCORETABLES):   end;
3723493   +   else do;
MPRINT(SCORETABLES):   else do;
3723494   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3723495   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3723496   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723497   +      end;
MPRINT(SCORETABLES):   end;
3723498   +      else do;
MPRINT(SCORETABLES):   else do;
3723499   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3723500   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3723501   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3723502   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3723503   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3723504   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723505   +         end;
MPRINT(SCORETABLES):   end;
3723506   +      end;
MPRINT(SCORETABLES):   end;
3723507   +   end;
MPRINT(SCORETABLES):   end;
3723508   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3723509   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723510   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723511   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723512   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723513   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3723514   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723515   +   end;
MPRINT(SCORETABLES):   end;
3723516   +end;
MPRINT(SCORETABLES):   end;
3723517   +
3723518   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3723519   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3723520   +   _P0 = 0.1362807657;
MPRINT(SCORETABLES):   _P0 = 0.1362807657;
3723521   +   _P1 = 0.8637192343;
MPRINT(SCORETABLES):   _P1 = 0.8637192343;
3723522   +   goto REG3_7DR1;
MPRINT(SCORETABLES):   goto REG3_7DR1;
3723523   +end;
MPRINT(SCORETABLES):   end;
3723524   +
3723525   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3723526   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3723527   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3723528   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3723529   +
3723530   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3723531   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3723532   +_LP0 = _LP0 + (    0.96655867438765) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.96655867438765) * _TEMP * _1_0;
3723533   +_LP0 = _LP0 + (   -1.37923265528798) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.37923265528798) * _TEMP * _1_1;
3723534   +_LP0 = _LP0 + (    0.96622246991031) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.96622246991031) * _TEMP * _1_2;
3723535   +_LP0 = _LP0 + (   -1.73642149379113) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.73642149379113) * _TEMP * _1_3;
3723536   +
3723537   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3723538   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3723539   +_LP0 = _LP0 + (    40.5239018618328 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 40.5239018618328 * _TEMP);
3723540   +
3723541   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3723542   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3723543   +_LP0 = _LP0 + (    37.3942926198467 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 37.3942926198467 * _TEMP);
3723544   +
3723545   +***  Effect: MntMagazines*MntMagazines ;
MPRINT(SCORETABLES):   *** Effect: MntMagazines*MntMagazines ;
3723546   +_TEMP = MntMagazines  * MntMagazines ;
MPRINT(SCORETABLES):   _TEMP = MntMagazines * MntMagazines ;
3723547   +_LP0 = _LP0 + (   -21.8797161256705 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -21.8797161256705 * _TEMP);
3723548   +
3723549   +***  Effect: NumCatalogPurchases*NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases*NumCatalogPurchases ;
3723550   +_TEMP = NumCatalogPurchases  * NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases * NumCatalogPurchases ;
3723551   +_LP0 = _LP0 + (   -35.1420960436994 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -35.1420960436994 * _TEMP);
3723552   +
3723553   +***  Effect: NumCatalogPurchases*RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases*RANGE_Frq ;
3723554   +_TEMP = NumCatalogPurchases  * RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases * RANGE_Frq ;
3723555   +_LP0 = _LP0 + (    17.6140544823686 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 17.6140544823686 * _TEMP);
3723556   +
3723557   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3723558   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3723559   +_LP0 = _LP0 + (    25.3866365743095 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.3866365743095 * _TEMP);
3723560   +
3723561   +***  Effect: NumDealsPurchases*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumWebPurchases ;
3723562   +_TEMP = NumDealsPurchases  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumWebPurchases ;
3723563   +_LP0 = _LP0 + (    41.2127868194016 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 41.2127868194016 * _TEMP);
3723564   +
3723565   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3723566   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3723567   +_LP0 = _LP0 + (   -23.4703162359313 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -23.4703162359313 * _TEMP);
3723568   +
3723569   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3723570   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3723571   +_LP0 = _LP0 + (    41.4336934506916 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 41.4336934506916 * _TEMP);
3723572   +
3723573   +***  Effect: NumWebPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*RANGE_Recency ;
3723574   +_TEMP = NumWebPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * RANGE_Recency ;
3723575   +_LP0 = _LP0 + (    -35.770232488261 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -35.770232488261 * _TEMP);
3723576   +
3723577   +***  Effect: NumWebPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases*RANGE_campaign_acceptance ;
3723578   +_TEMP = NumWebPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases * RANGE_campaign_acceptance ;
3723579   +_LP0 = _LP0 + (    37.4854029110071 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 37.4854029110071 * _TEMP);
3723580   +
3723581   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3723582   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3723583   +_TEMP =    -17.8750395023975 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -17.8750395023975 + _LP0;
3723584   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3723585   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3723586   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3723587   +end;
MPRINT(SCORETABLES):   end;
3723588   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3723589   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3723590   +
3723591   +REG3_7DR1:
3723592   +
3723593   +*** Residuals;
MPRINT(SCORETABLES):   REG3_7DR1: *** Residuals;
3723594   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3723595   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3723596   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3723597   +end;
MPRINT(SCORETABLES):   end;
3723598   +else do;
MPRINT(SCORETABLES):   else do;
3723599   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3723600   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3723601   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3723602   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3723603   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3723604   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3723605   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3723606   +   end;
MPRINT(SCORETABLES):   end;
3723607   +end;
MPRINT(SCORETABLES):   end;
3723608   +
3723609   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3723610   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3723611   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3723612   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3723613   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3723614   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3723615   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3723616   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3723617   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3723618   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3723619   +end;
MPRINT(SCORETABLES):   end;
3723620   +I_DepVar = REG3_7DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_7DRF[_IY];
3723621   +U_DepVar = REG3_7DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_7DRU[_IY];
3723622   +
3723623   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723624   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3723625   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723626   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723627   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3723628   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723629   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723630   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3723631   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723632   +end;
MPRINT(SCORETABLES):   end;
3723633   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723634   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3723635   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723636   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723637   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3723638   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723639   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3723640   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3723641   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723642   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3723643   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723644   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723645   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3723646   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723647   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723648   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3723649   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723650   +
3723651   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3723652   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3723653   +
3723654   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3723655   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3723656   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3723657   +array REG3_8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_8DRF [2] $12 _temporary_ ('1' '0' );
3723658   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3723659   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3723660   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3723661   +ARRAY REG3_8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_8DRU[2] _TEMPORARY_ (1 0);
3723662   +
3723663   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3723664   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3723665   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3723666   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3723667   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3723668   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723669   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3723670   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723671   +end;
MPRINT(SCORETABLES):   end;
3723672   +else do;
MPRINT(SCORETABLES):   else do;
3723673   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3723674   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3723675   +   end;
MPRINT(SCORETABLES):   end;
3723676   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3723677   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3723678   +   end;
MPRINT(SCORETABLES):   end;
3723679   +   else do;
MPRINT(SCORETABLES):   else do;
3723680   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723681   +   end;
MPRINT(SCORETABLES):   end;
3723682   +end;
MPRINT(SCORETABLES):   end;
3723683   +
3723684   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3723685   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3723686   +
3723687   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3723688   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3723689   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723690   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723691   +end;
MPRINT(SCORETABLES):   end;
3723692   +
3723693   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3723694   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3723695   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723696   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723697   +end;
MPRINT(SCORETABLES):   end;
3723698   +
3723699   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3723700   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3723701   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723702   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723703   +end;
MPRINT(SCORETABLES):   end;
3723704   +
3723705   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3723706   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3723707   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723708   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723709   +end;
MPRINT(SCORETABLES):   end;
3723710   +
3723711   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3723712   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3723713   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723714   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723715   +end;
MPRINT(SCORETABLES):   end;
3723716   +
3723717   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3723718   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3723719   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723720   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723721   +end;
MPRINT(SCORETABLES):   end;
3723722   +
3723723   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3723724   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3723725   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723726   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723727   +end;
MPRINT(SCORETABLES):   end;
3723728   +
3723729   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3723730   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3723731   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723732   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723733   +end;
MPRINT(SCORETABLES):   end;
3723734   +
3723735   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3723736   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3723737   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3723738   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3723739   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3723740   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3723741   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3723742   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3723743   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723744   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723745   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723746   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723747   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723748   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723749   +end;
MPRINT(SCORETABLES):   end;
3723750   +else do;
MPRINT(SCORETABLES):   else do;
3723751   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3723752   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3723753   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723754   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3723755   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3723756   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3723757   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3723758   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3723759   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723760   +         end;
MPRINT(SCORETABLES):   end;
3723761   +         else do;
MPRINT(SCORETABLES):   else do;
3723762   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3723763   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3723764   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723765   +            end;
MPRINT(SCORETABLES):   end;
3723766   +         end;
MPRINT(SCORETABLES):   end;
3723767   +      end;
MPRINT(SCORETABLES):   end;
3723768   +      else do;
MPRINT(SCORETABLES):   else do;
3723769   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3723770   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3723771   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723772   +         end;
MPRINT(SCORETABLES):   end;
3723773   +      end;
MPRINT(SCORETABLES):   end;
3723774   +   end;
MPRINT(SCORETABLES):   end;
3723775   +   else do;
MPRINT(SCORETABLES):   else do;
3723776   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3723777   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3723778   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723779   +      end;
MPRINT(SCORETABLES):   end;
3723780   +      else do;
MPRINT(SCORETABLES):   else do;
3723781   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3723782   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3723783   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3723784   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3723785   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3723786   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3723787   +         end;
MPRINT(SCORETABLES):   end;
3723788   +      end;
MPRINT(SCORETABLES):   end;
3723789   +   end;
MPRINT(SCORETABLES):   end;
3723790   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3723791   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3723792   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3723793   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3723794   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3723795   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3723796   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723797   +   end;
MPRINT(SCORETABLES):   end;
3723798   +end;
MPRINT(SCORETABLES):   end;
3723799   +
3723800   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3723801   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3723802   +   _P0 = 0.1334841629;
MPRINT(SCORETABLES):   _P0 = 0.1334841629;
3723803   +   _P1 = 0.8665158371;
MPRINT(SCORETABLES):   _P1 = 0.8665158371;
3723804   +   goto REG3_8DR1;
MPRINT(SCORETABLES):   goto REG3_8DR1;
3723805   +end;
MPRINT(SCORETABLES):   end;
3723806   +
3723807   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3723808   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3723809   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3723810   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3723811   +
3723812   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3723813   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3723814   +_LP0 = _LP0 + (    1.05341890046678) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.05341890046678) * _TEMP * _1_0;
3723815   +_LP0 = _LP0 + (   -1.19329117919287) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.19329117919287) * _TEMP * _1_1;
3723816   +_LP0 = _LP0 + (    1.09722689667561) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.09722689667561) * _TEMP * _1_2;
3723817   +_LP0 = _LP0 + (   -1.62971983500123) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.62971983500123) * _TEMP * _1_3;
3723818   +
3723819   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3723820   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3723821   +_LP0 = _LP0 + (    26.5147603094263 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.5147603094263 * _TEMP);
3723822   +
3723823   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3723824   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3723825   +_LP0 = _LP0 + (   -15.1700250432743 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -15.1700250432743 * _TEMP);
3723826   +
3723827   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3723828   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3723829   +_LP0 = _LP0 + (    11.8179313570406 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.8179313570406 * _TEMP);
3723830   +
3723831   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3723832   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3723833   +_LP0 = _LP0 + (    37.0557224234241 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 37.0557224234241 * _TEMP);
3723834   +
3723835   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3723836   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3723837   +_LP0 = _LP0 + (    51.4245587833932 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 51.4245587833932 * _TEMP);
3723838   +
3723839   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3723840   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3723841   +_LP0 = _LP0 + (   -12.5194135609714 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.5194135609714 * _TEMP);
3723842   +
3723843   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3723844   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3723845   +_LP0 = _LP0 + (    25.3055237224813 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.3055237224813 * _TEMP);
3723846   +
3723847   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3723848   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3723849   +_LP0 = _LP0 + (    31.5124687302289 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 31.5124687302289 * _TEMP);
3723850   +
3723851   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3723852   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3723853   +_LP0 = _LP0 + (    7.17260488020695 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 7.17260488020695 * _TEMP);
3723854   +
3723855   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3723856   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3723857   +_TEMP =    -14.1217970221632 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -14.1217970221632 + _LP0;
3723858   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3723859   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3723860   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3723861   +end;
MPRINT(SCORETABLES):   end;
3723862   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3723863   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3723864   +
3723865   +REG3_8DR1:
3723866   +
3723867   +*** Residuals;
MPRINT(SCORETABLES):   REG3_8DR1: *** Residuals;
3723868   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3723869   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3723870   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3723871   +end;
MPRINT(SCORETABLES):   end;
3723872   +else do;
MPRINT(SCORETABLES):   else do;
3723873   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3723874   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3723875   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3723876   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3723877   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3723878   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3723879   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3723880   +   end;
MPRINT(SCORETABLES):   end;
3723881   +end;
MPRINT(SCORETABLES):   end;
3723882   +
3723883   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3723884   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3723885   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3723886   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3723887   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3723888   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3723889   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3723890   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3723891   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3723892   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3723893   +end;
MPRINT(SCORETABLES):   end;
3723894   +I_DepVar = REG3_8DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_8DRF[_IY];
3723895   +U_DepVar = REG3_8DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_8DRU[_IY];
3723896   +
3723897   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723898   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3723899   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723900   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723901   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3723902   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723903   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723904   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3723905   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723906   +end;
MPRINT(SCORETABLES):   end;
3723907   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723908   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3723909   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723910   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723911   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3723912   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723913   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3723914   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3723915   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3723916   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3723917   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3723918   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3723919   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3723920   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3723921   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723922   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3723923   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3723924   +
3723925   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3723926   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3723927   +
3723928   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3723929   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3723930   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3723931   +array REG3_9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_9DRF [2] $12 _temporary_ ('1' '0' );
3723932   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3723933   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3723934   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3723935   +ARRAY REG3_9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_9DRU[2] _TEMPORARY_ (1 0);
3723936   +
3723937   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3723938   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3723939   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3723940   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3723941   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3723942   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3723943   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3723944   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723945   +end;
MPRINT(SCORETABLES):   end;
3723946   +else do;
MPRINT(SCORETABLES):   else do;
3723947   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3723948   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3723949   +   end;
MPRINT(SCORETABLES):   end;
3723950   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3723951   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3723952   +   end;
MPRINT(SCORETABLES):   end;
3723953   +   else do;
MPRINT(SCORETABLES):   else do;
3723954   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3723955   +   end;
MPRINT(SCORETABLES):   end;
3723956   +end;
MPRINT(SCORETABLES):   end;
3723957   +
3723958   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3723959   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3723960   +
3723961   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3723962   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3723963   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723964   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723965   +end;
MPRINT(SCORETABLES):   end;
3723966   +
3723967   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3723968   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3723969   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723970   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723971   +end;
MPRINT(SCORETABLES):   end;
3723972   +
3723973   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3723974   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3723975   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723976   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723977   +end;
MPRINT(SCORETABLES):   end;
3723978   +
3723979   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3723980   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3723981   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723982   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723983   +end;
MPRINT(SCORETABLES):   end;
3723984   +
3723985   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3723986   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3723987   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723988   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723989   +end;
MPRINT(SCORETABLES):   end;
3723990   +
3723991   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3723992   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3723993   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3723994   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3723995   +end;
MPRINT(SCORETABLES):   end;
3723996   +
3723997   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3723998   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3723999   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724000   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724001   +end;
MPRINT(SCORETABLES):   end;
3724002   +
3724003   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3724004   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3724005   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724006   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724007   +end;
MPRINT(SCORETABLES):   end;
3724008   +
3724009   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3724010   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3724011   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3724012   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3724013   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3724014   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3724015   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3724016   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3724017   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3724018   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3724019   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3724020   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3724021   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724022   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724023   +end;
MPRINT(SCORETABLES):   end;
3724024   +else do;
MPRINT(SCORETABLES):   else do;
3724025   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3724026   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3724027   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3724028   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3724029   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3724030   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3724031   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3724032   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3724033   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724034   +         end;
MPRINT(SCORETABLES):   end;
3724035   +         else do;
MPRINT(SCORETABLES):   else do;
3724036   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3724037   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3724038   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724039   +            end;
MPRINT(SCORETABLES):   end;
3724040   +         end;
MPRINT(SCORETABLES):   end;
3724041   +      end;
MPRINT(SCORETABLES):   end;
3724042   +      else do;
MPRINT(SCORETABLES):   else do;
3724043   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3724044   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3724045   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724046   +         end;
MPRINT(SCORETABLES):   end;
3724047   +      end;
MPRINT(SCORETABLES):   end;
3724048   +   end;
MPRINT(SCORETABLES):   end;
3724049   +   else do;
MPRINT(SCORETABLES):   else do;
3724050   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3724051   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3724052   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724053   +      end;
MPRINT(SCORETABLES):   end;
3724054   +      else do;
MPRINT(SCORETABLES):   else do;
3724055   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3724056   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3724057   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3724058   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3724059   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3724060   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724061   +         end;
MPRINT(SCORETABLES):   end;
3724062   +      end;
MPRINT(SCORETABLES):   end;
3724063   +   end;
MPRINT(SCORETABLES):   end;
3724064   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3724065   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3724066   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3724067   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3724068   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3724069   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3724070   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724071   +   end;
MPRINT(SCORETABLES):   end;
3724072   +end;
MPRINT(SCORETABLES):   end;
3724073   +
3724074   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3724075   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3724076   +   _P0 = 0.1412454874;
MPRINT(SCORETABLES):   _P0 = 0.1412454874;
3724077   +   _P1 = 0.8587545126;
MPRINT(SCORETABLES):   _P1 = 0.8587545126;
3724078   +   goto REG3_9DR1;
MPRINT(SCORETABLES):   goto REG3_9DR1;
3724079   +end;
MPRINT(SCORETABLES):   end;
3724080   +
3724081   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3724082   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3724083   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3724084   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3724085   +
3724086   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3724087   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3724088   +_LP0 = _LP0 + (    0.92673814467647) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.92673814467647) * _TEMP * _1_0;
3724089   +_LP0 = _LP0 + (   -1.18765352180004) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.18765352180004) * _TEMP * _1_1;
3724090   +_LP0 = _LP0 + (    1.05279088559479) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.05279088559479) * _TEMP * _1_2;
3724091   +_LP0 = _LP0 + (   -1.69453766829666) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.69453766829666) * _TEMP * _1_3;
3724092   +
3724093   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3724094   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3724095   +_LP0 = _LP0 + (    27.7141203990461 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 27.7141203990461 * _TEMP);
3724096   +
3724097   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3724098   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3724099   +_LP0 = _LP0 + (    -17.857872017464 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -17.857872017464 * _TEMP);
3724100   +
3724101   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3724102   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3724103   +_LP0 = _LP0 + (    12.8709398287869 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 12.8709398287869 * _TEMP);
3724104   +
3724105   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3724106   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3724107   +_LP0 = _LP0 + (     38.766147016007 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 38.766147016007 * _TEMP);
3724108   +
3724109   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3724110   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3724111   +_LP0 = _LP0 + (     41.096208973821 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 41.096208973821 * _TEMP);
3724112   +
3724113   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3724114   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3724115   +_LP0 = _LP0 + (    24.5063606840366 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.5063606840366 * _TEMP);
3724116   +
3724117   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3724118   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3724119   +_LP0 = _LP0 + (    21.4108585607915 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 21.4108585607915 * _TEMP);
3724120   +
3724121   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3724122   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3724123   +_LP0 = _LP0 + (    8.09307152410641 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 8.09307152410641 * _TEMP);
3724124   +
3724125   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3724126   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3724127   +_TEMP =    -14.1877215027064 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -14.1877215027064 + _LP0;
3724128   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3724129   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3724130   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3724131   +end;
MPRINT(SCORETABLES):   end;
3724132   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3724133   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3724134   +
3724135   +REG3_9DR1:
3724136   +
3724137   +*** Residuals;
MPRINT(SCORETABLES):   REG3_9DR1: *** Residuals;
3724138   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3724139   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3724140   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3724141   +end;
MPRINT(SCORETABLES):   end;
3724142   +else do;
MPRINT(SCORETABLES):   else do;
3724143   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3724144   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3724145   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3724146   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3724147   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3724148   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3724149   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3724150   +   end;
MPRINT(SCORETABLES):   end;
3724151   +end;
MPRINT(SCORETABLES):   end;
3724152   +
3724153   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3724154   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3724155   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3724156   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3724157   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3724158   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3724159   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3724160   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3724161   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3724162   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3724163   +end;
MPRINT(SCORETABLES):   end;
3724164   +I_DepVar = REG3_9DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_9DRF[_IY];
3724165   +U_DepVar = REG3_9DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_9DRU[_IY];
3724166   +
3724167   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724168   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3724169   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724170   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3724171   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3724172   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3724173   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3724174   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3724175   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3724176   +end;
MPRINT(SCORETABLES):   end;
3724177   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3724178   +* Grp7: StartGroup;
MPRINT(SCORETABLES):   * Grp7: StartGroup;
3724179   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3724180   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3724181   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3724182   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3724183   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3724184   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3724185   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3724186   +* Reg3: Regression;
MPRINT(SCORETABLES):   * Reg3: Regression;
3724187   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3724188   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3724189   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3724190   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3724191   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724192   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3724193   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724194   +
3724195   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3724196   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3724197   +
3724198   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3724199   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3724200   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3724201   +array REG3_10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG3_10DRF [2] $12 _temporary_ ('1' '0' );
3724202   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3724203   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3724204   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3724205   +ARRAY REG3_10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG3_10DRU[2] _TEMPORARY_ (1 0);
3724206   +
3724207   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3724208   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3724209   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3724210   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3724211   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3724212   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3724213   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3724214   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3724215   +end;
MPRINT(SCORETABLES):   end;
3724216   +else do;
MPRINT(SCORETABLES):   else do;
3724217   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3724218   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3724219   +   end;
MPRINT(SCORETABLES):   end;
3724220   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3724221   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3724222   +   end;
MPRINT(SCORETABLES):   end;
3724223   +   else do;
MPRINT(SCORETABLES):   else do;
3724224   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3724225   +   end;
MPRINT(SCORETABLES):   end;
3724226   +end;
MPRINT(SCORETABLES):   end;
3724227   +
3724228   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3724229   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3724230   +
3724231   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3724232   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3724233   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724234   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724235   +end;
MPRINT(SCORETABLES):   end;
3724236   +
3724237   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3724238   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3724239   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724240   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724241   +end;
MPRINT(SCORETABLES):   end;
3724242   +
3724243   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3724244   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3724245   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724246   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724247   +end;
MPRINT(SCORETABLES):   end;
3724248   +
3724249   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3724250   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3724251   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724252   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724253   +end;
MPRINT(SCORETABLES):   end;
3724254   +
3724255   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3724256   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3724257   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724258   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724259   +end;
MPRINT(SCORETABLES):   end;
3724260   +
3724261   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3724262   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3724263   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724264   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724265   +end;
MPRINT(SCORETABLES):   end;
3724266   +
3724267   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3724268   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3724269   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724270   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724271   +end;
MPRINT(SCORETABLES):   end;
3724272   +
3724273   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3724274   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3724275   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724276   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724277   +end;
MPRINT(SCORETABLES):   end;
3724278   +
3724279   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3724280   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3724281   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3724282   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3724283   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3724284   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3724285   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3724286   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3724287   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3724288   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3724289   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3724290   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3724291   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3724292   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724293   +end;
MPRINT(SCORETABLES):   end;
3724294   +else do;
MPRINT(SCORETABLES):   else do;
3724295   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3724296   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3724297   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3724298   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3724299   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3724300   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3724301   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3724302   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3724303   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724304   +         end;
MPRINT(SCORETABLES):   end;
3724305   +         else do;
MPRINT(SCORETABLES):   else do;
3724306   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3724307   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3724308   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724309   +            end;
MPRINT(SCORETABLES):   end;
3724310   +         end;
MPRINT(SCORETABLES):   end;
3724311   +      end;
MPRINT(SCORETABLES):   end;
3724312   +      else do;
MPRINT(SCORETABLES):   else do;
3724313   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3724314   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3724315   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724316   +         end;
MPRINT(SCORETABLES):   end;
3724317   +      end;
MPRINT(SCORETABLES):   end;
3724318   +   end;
MPRINT(SCORETABLES):   end;
3724319   +   else do;
MPRINT(SCORETABLES):   else do;
3724320   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3724321   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3724322   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724323   +      end;
MPRINT(SCORETABLES):   end;
3724324   +      else do;
MPRINT(SCORETABLES):   else do;
3724325   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3724326   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3724327   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3724328   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3724329   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3724330   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3724331   +         end;
MPRINT(SCORETABLES):   end;
3724332   +      end;
MPRINT(SCORETABLES):   end;
3724333   +   end;
MPRINT(SCORETABLES):   end;
3724334   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3724335   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3724336   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3724337   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3724338   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3724339   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3724340   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3724341   +   end;
MPRINT(SCORETABLES):   end;
3724342   +end;
MPRINT(SCORETABLES):   end;
3724343   +
3724344   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3724345   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3724346   +   _P0 = 0.1379310345;
MPRINT(SCORETABLES):   _P0 = 0.1379310345;
3724347   +   _P1 = 0.8620689655;
MPRINT(SCORETABLES):   _P1 = 0.8620689655;
3724348   +   goto REG3_10DR1;
MPRINT(SCORETABLES):   goto REG3_10DR1;
3724349   +end;
MPRINT(SCORETABLES):   end;
3724350   +
3724351   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3724352   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3724353   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3724354   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3724355   +
3724356   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3724357   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3724358   +_LP0 = _LP0 + (    0.90330090436951) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.90330090436951) * _TEMP * _1_0;
3724359   +_LP0 = _LP0 + (   -1.37553360695696) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.37553360695696) * _TEMP * _1_1;
3724360   +_LP0 = _LP0 + (    0.92066961566325) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.92066961566325) * _TEMP * _1_2;
3724361   +_LP0 = _LP0 + (   -1.59453373035712) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.59453373035712) * _TEMP * _1_3;
3724362   +
3724363   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3724364   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3724365   +_LP0 = _LP0 + (    28.4256964396873 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 28.4256964396873 * _TEMP);
3724366   +
3724367   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3724368   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3724369   +_LP0 = _LP0 + (   -14.4502286728023 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -14.4502286728023 * _TEMP);
3724370   +
3724371   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3724372   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3724373   +_LP0 = _LP0 + (    14.2095012555908 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.2095012555908 * _TEMP);
3724374   +
3724375   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games*NumWebPurchases ;
3724376   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games * NumWebPurchases ;
3724377   +_LP0 = _LP0 + (     39.872620410657 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 39.872620410657 * _TEMP);
3724378   +
3724379   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3724380   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3724381   +_LP0 = _LP0 + (    54.7238739876447 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 54.7238739876447 * _TEMP);
3724382   +
3724383   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3724384   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3724385   +_LP0 = _LP0 + (   -14.9237677955755 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -14.9237677955755 * _TEMP);
3724386   +
3724387   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3724388   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3724389   +_LP0 = _LP0 + (    24.2538062846118 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.2538062846118 * _TEMP);
3724390   +
3724391   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3724392   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3724393   +_LP0 = _LP0 + (    30.5202194797507 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 30.5202194797507 * _TEMP);
3724394   +
3724395   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq*RANGE_Recency ;
3724396   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq * RANGE_Recency ;
3724397   +_LP0 = _LP0 + (    6.84479139239876 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 6.84479139239876 * _TEMP);
3724398   +
3724399   +***  Effect: RANGE_Recency*RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency*RANGE_campaign_acceptance ;
3724400   +_TEMP = RANGE_Recency  * RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency * RANGE_campaign_acceptance ;
3724401   +_LP0 = _LP0 + (   -4.63740864288079 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -4.63740864288079 * _TEMP);
3724402   +
3724403   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3724404   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3724405   +_TEMP =    -15.1702074127842 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -15.1702074127842 + _LP0;
3724406   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3724407   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3724408   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3724409   +end;
MPRINT(SCORETABLES):   end;
3724410   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3724411   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3724412   +
3724413   +REG3_10DR1:
3724414   +
3724415   +*** Residuals;
MPRINT(SCORETABLES):   REG3_10DR1: *** Residuals;
3724416   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3724417   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3724418   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3724419   +end;
MPRINT(SCORETABLES):   end;
3724420   +else do;
MPRINT(SCORETABLES):   else do;
3724421   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3724422   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3724423   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3724424   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3724425   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3724426   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3724427   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3724428   +   end;
MPRINT(SCORETABLES):   end;
3724429   +end;
MPRINT(SCORETABLES):   end;
3724430   +
3724431   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3724432   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3724433   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3724434   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3724435   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3724436   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3724437   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3724438   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3724439   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3724440   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3724441   +end;
MPRINT(SCORETABLES):   end;
3724442   +I_DepVar = REG3_10DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG3_10DRF[_IY];
3724443   +U_DepVar = REG3_10DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG3_10DRU[_IY];
3724444   +
3724445   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724446   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3724447   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3724448   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3724449   +* EndGrp8: EndGroup;
MPRINT(SCORETABLES):   * EndGrp8: EndGroup;
3724450   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3724451   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3724452   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3724453   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3724454   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;

NOTE: DATA STEP view saved on file EMWS1.ENDGRP8_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
      

MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3724455    *------------------------------------------------------------*;
3724456    * End POSTLOOP: EndGrp8;
3724457    *------------------------------------------------------------*;
3724458    

NOTE: There were 10 observations read from the data set EMWS1.GRP7_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP8_EMLOOPINFO has 10 observations and 3 variables.
3724459    proc print data=EMWS1.EndGrp8_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp8_EMLOOPINFO noobs label;
3724460    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3724461    run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP8_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2436.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3724462    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp8_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3724486    data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT;
3724487    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3724488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724489    data EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT;
3724490    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3724491    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3724492    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3724492  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3724493    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3724494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3724495    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMREPORTFIT nothreads;
3724496    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3724497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724498    %let _EMwarndup = 0;
3724499    %let _EMtargetdup =;
3724500    %let _EMASEtargetdup =;
3724501    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3724502    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3724503    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3724504    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3724505    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3724506    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3724507    end;
MPRINT(EM_DIAGRAM):   end;
3724508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724509    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3724510    * EndGrp8: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp8: Computing metadata for TRAIN data;
3724511    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp8_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp8_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp8_TRAIN out=WORK.M3Q_7U3J noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q_7U3J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q_7U3J(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q_7U3J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3Q_7U3J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M25TWIFR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2J0Z_HO(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   set WORK.M25TWIFR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp8";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp8";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp8";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3724862    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3724863    set EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO;
3724864    where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp8' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3724865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMINFO.
      WHERE (DATA='EndGrp8') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3724866    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMINFO;
3724867    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3724868    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3724869    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.ENDGRP8_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3724873    run;
3724874    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
3724875    set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMINFO WORK.MODELTEMP_INFO;
3724876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724877    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp8_EMINFO NOTHREADS;
3724878    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3724879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3724880    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3724881    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3724882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3724883    proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp8_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3724884    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3724885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724886    data EMWS1.EndGrp8_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMINFO;
3724887    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3724888    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3724889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP8_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3724890    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3724891    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3724892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3724893    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp8: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp8: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3725353    %let EMEXCEPTIONSTRING=;
3725354    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3725355    * POSTLOOPREPORT: EndGrp8;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp8;
3725356    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3725357    %let EM_ACTION = POSTLOOPREPORT;
3725358    %let syscc = 0;
3725359    %macro main;
3725360       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3725361    
3725362           filename temp catalog 'sashelp.emutil.endgp_train.source';
3725363           %include temp;
3725364           filename temp;
3725365    
3725366           %train;
3725367    
3725368       %end;
3725369       %else
3725370          %if %upcase(&EM_ACTION) = SCORE %then %do;
3725371    
3725372           filename temp catalog 'sashelp.emutil.endgp_score.source';
3725373           %include temp;
3725374           filename temp;
3725375    
3725376           %score;
3725377       %end;
3725378       %else
3725379       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3725380    
3725381           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3725382           %include temp;
3725383           filename temp;
3725384    
3725385           %postloop;
3725386    
3725387       %end;
3725388    
3725389       %doendm:
3725390    %mend main;
3725391    
3725392    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
3725393    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3725394    * End POSTLOOPREPORT: EndGrp8;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp8;
3725395    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3725396    

3725397    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_CMeta_TRAIN out=WORK.SUBSETINMETA;
3725398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3725399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.REG3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3725400    proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp8_VariableSet out=WORK.SUBSETVARSET(keep=NAME 
REPORT);
3725401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3725402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3725403    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3725404    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3725405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3725406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3725407    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3725408    set EMWS1.EndGrp8_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_CMeta_TRAIN;
3725409    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3725409  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 
'ASSESS', 'COST');
3725410    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.ENDGRP8_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3725411    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3725412    set EMWS1.EndGrp8_TRAIN(keep=
3725413    F_DepVar
3725414    I_DepVar
3725415    P_DepVar0
3725416    P_DepVar1
3725417    R_DepVar0
3725418    R_DepVar1
3725419    U_DepVar
3725420    _WARN_
3725421    DepVar
3725422    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3725423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP8_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP8_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp8_0848B_D nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp8_0848B_D;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp8_0848B_D(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp8_0848B_D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp8_0848B_D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ 
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN 
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = 
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing 
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS 
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC 
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB 
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST 
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE 
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS 
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - 
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 9.3201414183283E-13 OVLMAX 0.9999999999 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * 
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / 
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( 
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * 
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - 
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - 
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - 
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - 
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - 
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - 
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - 
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - 
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - 
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - 
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - 
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - 
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - 
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - 
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - 
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - 
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - 
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - 
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - 
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) 
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number 
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3729710    %let grouptarget=0;
3729711    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3729712    set EMWS1.Grp7_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_EMLOOPINFO;
3729713    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3729714    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3729715    stop;
MPRINT(EM_DIAGRAM):   stop;
3729716    end;
MPRINT(EM_DIAGRAM):   end;
3729717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP7_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3729718    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3729719    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729720    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729721    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729721  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729722    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729723    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729724    set EMWS1.EndGrp8_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT;
3729725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729726    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMOUTFIT_LOOP;
3729727    set EMWS1.EndGrp8_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMOUTFIT_LOOP work.EMOUTFIT;
3729728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP8_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMOUTFIT_LOOP has 11 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3729729    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3729730    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729731    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729732    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729732  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729733    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729734    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729735    set EMWS1.EndGrp8_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT;
3729736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729737    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMREPORTFIT_LOOP;
3729738    set EMWS1.EndGrp8_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMREPORTFIT_LOOP work.EMREPORTFIT;
3729739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP has 209 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3729740    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3729741    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729742    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729743    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729743  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729744    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729745    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729746    set EMWS1.EndGrp8_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK;
3729747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729748    data EMWS1.EndGrp8_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMRANK_LOOP;
3729749    set EMWS1.EndGrp8_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMRANK_LOOP work.EMRANK;
3729750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP8_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP8_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729751    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3729752    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729753    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729754    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729754  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729755    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729756    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729757    set EMWS1.EndGrp8_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST;
3729758    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729759    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMSCOREDIST_LOOP;
3729760    set EMWS1.EndGrp8_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMSCOREDIST_LOOP work.EMSCOREDIST;
3729761    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP has 220 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729762    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3729763    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729764    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729765    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729765  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729766    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729767    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729768    set EMWS1.EndGrp8_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION;
3729769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729770    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMCLASSIFICATION_LOOP;
3729771    set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3729772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729773    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP out=_temp;
3729774    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3729775    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3729776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729777    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3729777  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
totalCount totalPercent);
3729778    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3729779    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3729780    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3729781    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3729782    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3729783    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3729784    end;
MPRINT(EM_DIAGRAM):   end;
3729785    else do;
MPRINT(EM_DIAGRAM):   else do;
3729786    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3729787    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3729788    end;
MPRINT(EM_DIAGRAM):   end;
3729789    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3729790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3729791    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3729791  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
eventCount eventPercent);
3729792    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3729793    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3729794    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3729795    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3729796    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3729797    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3729798    end;
MPRINT(EM_DIAGRAM):   end;
3729799    else do;
MPRINT(EM_DIAGRAM):   else do;
3729800    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3729801    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3729802    end;
MPRINT(EM_DIAGRAM):   end;
3729803    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3729804    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729805    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3729805  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
neventCount neventPercent);
3729806    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3729807    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3729808    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3729809    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3729810    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3729811    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3729812    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3729813    end;
MPRINT(EM_DIAGRAM):   end;
3729814    else do;
MPRINT(EM_DIAGRAM):   else do;
3729815    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3729816    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3729817    end;
MPRINT(EM_DIAGRAM):   end;
3729818    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3729819    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3729820    data EMWS1.EndGrp8_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMMISC_LOOP;
3729821    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3729822    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3729823    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3729823  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3729823  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3729824       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3729824  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3729824  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3729825       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3729825  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3729826    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3729827    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3729828    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3729829    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3729830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP8_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3729831    proc sort data=EMWS1.EndGrp8_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp8_EMMISC_LOOP;
3729832    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3729833    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.ENDGRP8_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP8_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3729834    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3729835    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3729836    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3729837    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3729837  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3729838    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3729839    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3729840    set EMWS1.EndGrp8_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMEVENTREPORT;
3729841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729842    data EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
3729843    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3729844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP8_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729845    %let _cn = %sysfunc(getoption(CENTER));
3729846    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3729847    proc print data=EMWS1.EndGrp8_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMREPORTFIT_LOOP noobs label;
3729848    var STAT LABEL TRAIN
3729849    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3729850    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3729851    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3729852    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3729853    run;

NOTE: There were 209 observations read from the data set EMWS1.ENDGRP8_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2437.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729854    title10;
MPRINT(EM_DIAGRAM):   title10;
3729855    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3729856    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP nothreads;
3729857    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3729858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3729859    %let _cn = %sysfunc(getoption(CENTER));
3729860    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3729861    proc print data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMCLASSIFICATION_LOOP noobs label;
3729862    var from into pct_row pct_col count percent
3729863    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3729864    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3729865    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3729866    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3729867    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3729868    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3729869    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3729870    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3729871    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3729872    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3729873    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3729874    run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP8_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2438.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3729875    title9;
MPRINT(EM_DIAGRAM):   title9;
3729876    title10;
MPRINT(EM_DIAGRAM):   title10;
3729877    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3729878    %let _cn = %sysfunc(getoption(CENTER));
3729879    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3729880    data EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
3729881    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3729881  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3729882    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3729882  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3729882  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3729882  ! FALSEEVENT
3729883    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3729883  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3729883  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3729884       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3729885    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3729886    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3729887    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3729888    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3729889    set EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp8_EMEVENTREPORT_LOOP;
3729890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP8_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3729891    proc print data=EMWS1.EndGrp8_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMEVENTREPORT_LOOP noobs label;
3729892    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3729893    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3729894    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3729895    run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP8_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2439.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3729896    title10;
MPRINT(EM_DIAGRAM):   title10;
3729897    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3729898    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3729899    modify EndGrp8_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3729900    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3729901    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3729901  ! ;
MPRINT(EM_DIAGRAM):   run;
3729902    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMRANK_LOOP.DATA.
3729903    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3729904    %let _cn = %sysfunc(getoption(CENTER));
3729905    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3729906    proc print data=EMWS1.EndGrp8_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMRANK_LOOP label noobs;
3729907    var
3729908    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3729909    by
3729910    notsorted DATAROLE
3729911    notsorted _WHERE_
3729912    notsorted TARGET
3729913    notsorted TARGETLABEL
3729914    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3729915    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3729916    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3729917    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP8_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2440.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3729918    title10;
MPRINT(EM_DIAGRAM):   title10;
3729919    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3729920    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3729921    modify EndGrp8_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp8_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3729922    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3729922  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3729923    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3729923  ! ;
MPRINT(EM_DIAGRAM):   run;
3729924    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP8_EMSCOREDIST_LOOP.DATA.
3729925    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3729926    %let _cn = %sysfunc(getoption(CENTER));
3729927    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3729928    proc print data=EMWS1.EndGrp8_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp8_EMSCOREDIST_LOOP label noobs;
3729929    var
3729930    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3729931    by
3729932    notsorted DATAROLE
3729933    notsorted _WHERE_
3729934    notsorted TARGET
3729935    notsorted TARGETLABEL
3729936    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3729937    where TARGET in(
3729938    "DepVar"
3729939    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3729940    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3729941    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3729942    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP8_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2441.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3729943    title10;
MPRINT(EM_DIAGRAM):   title10;
3729944    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3729945    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:13 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:14 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp8\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp8_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
The SAS System

MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp8_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
