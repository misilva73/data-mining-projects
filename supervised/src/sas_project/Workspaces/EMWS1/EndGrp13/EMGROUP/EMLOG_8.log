*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:54:58 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:54:52 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:54:52 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1TFEFXG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1TFEFXG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMLOG_8.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:54:52 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMOUTPUT_8.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:54:52 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2615515    proc freq data=EMWS1.EndGrp13_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp13_VariableSet noprint;
2615516    table ROLE*LEVEL/out=WORK.EndGrp13META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp13META;
2615517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.ENDGRP13META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
2615518    proc print data=WORK.EndGrp13META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13META label noobs;
2615519    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2615520    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2615521    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2615522    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2615523    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP13META.
NOTE: The PROCEDURE PRINT printed page 1774.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2615524    title10;
MPRINT(EM_DIAGRAM):   title10;
2615525    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural5_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2615554    data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2615555    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2615556    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2615557       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2615558    set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
2615559    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2615560    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2615561    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2615562    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2615563    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2615564    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2615565    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2615566    end;
MPRINT(EM_DIAGRAM):   end;
2615567    output;
MPRINT(EM_DIAGRAM):   output;
2615568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP13_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2615569    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2615570    proc print data=WORK.EndGrp13_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13_EVENT noobs label;
2615571    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2615572    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2615573    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2615574    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP13_EVENT.
NOTE: The PROCEDURE PRINT printed page 1775.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2615575    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2615576    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
2615577    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2615578    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2615579    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2615580    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2615581    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2615582    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1776.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2615583    title10;
MPRINT(EM_DIAGRAM):   title10;
2615584    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp13: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=297;
MPRINT(EM_DECDATA):   DATAPRIOR=0.1366568914956;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13512283894449;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1901;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86334310850439;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.8648771610555;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2616058    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2616059    * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
2616060    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2616061    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2616062    %let EMEXCEPTIONSTRING=;
2616063    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2616064    * TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp13;
2616065    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616066    %let EM_ACTION = TRAIN;
2616067    %let syscc = 0;
2616068    %macro main;
2616069       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2616070
2616071           filename temp catalog 'sashelp.emutil.endgp_train.source';
2616072           %include temp;
2616073           filename temp;
2616074
2616075           %train;
2616076
2616077       %end;
2616078       %else
2616079          %if %upcase(&EM_ACTION) = SCORE %then %do;
2616080
2616081           filename temp catalog 'sashelp.emutil.endgp_score.source';
2616082           %include temp;
2616083           filename temp;
2616084
2616085           %score;
2616086       %end;
2616087       %else
2616088       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2616089
2616090           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2616091           %include temp;
2616092           filename temp;
2616093
2616094           %postloop;
2616095
2616096       %end;
2616097
2616098       %doendm:
2616099    %mend main;
2616100
2616101    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2616102   +%macro copyModelDs(model=, key=);
2616103   +   %let modelDs  = &em_lib..&model._&key;
2616104   +   %let reportDs = &em_lib..&em_nodeid._&key;
2616105   +   %if %sysfunc(exist(&modelDs)) %then %do;
2616106   +       data &reportDs;
2616107   +          length ModelId $16;
2616108   +          retain ModelId "&model";
2616109   +          set &modelDs;
2616110   +       run;
2616111   +   %end;
2616112   +%mend copyModelDs;
2616113   +
2616114   +%macro traintarget(groupid=);
2616115   +   %em_getname(key=emoutfit, type=DATA);
2616116   +   %let targetname=;
2616117   +   data _null_;
2616118   +     set &em_lib..&groupid._&looptype;
2616119   +     where _LOOP_ = &EMLOOPNUMBER;
2616120   +     call symput('targetname', strip(_TARGET_));
2616121   +   run;
2616122   +   %let modelId =;
2616123   +   data _null_;
2616124   +      set &em_import_data_eminfo;
2616125   +      where key = 'MODEL' and TARGET = "&targetname";
2616126   +      call symput('modelId',   strip(data));
2616127   +   run;
2616128   +   %if "&modelId" ne "" %then %do;
2616129   +       %copyModelDs(model=&modelid, key=EMRANK);
2616130   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2616131   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2616132   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2616133   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2616134   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2616135   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2616136   +   %end;
2616137   +
2616138   +   %doendtgp:
2616139   +%mend;
2616140   +
2616141   +%macro trainboost(groupid=);
2616142   +
2616143   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2616144   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2616145   +
2616146   +   data _null_;
2616147   +      retain index 0;
2616148   +      set &boostinfoDs;
2616149   +      call symput('targetname', strip(_target_));
2616150   +   run;
2616151   +
2616152   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2616153   +       %let decmeta = ;
2616154   +       data _null_;
2616155   +          set &em_import_data_eminfo;
2616156   +          where (key='DECMETA' and TARGET="&targetname");
2616157   +          call symput('DECMETA', strip(data));
2616158   +       run;
2616159   +       %if "&decmeta" eq "" %then %do;
2616160   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2616161   +           %goto doendtb;
2616162   +       %end;
2616163   +
2616164   +       %let predictedVars=;
2616165   +       data _null_;
2616166   +          set &decmeta;
2616167   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2616168   +          else
2616169   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2616170   +          else
2616171   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2616172   +       run;
2616173   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2616174   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2616175   +       %end;
2616176   +   %end;
2616177   +
2616178   +   * ;
2616179   +   * ENDGROUP &NODEID : Boosting scoring ;
2616180   +   * ;
2616181   +   data &em_lib..&groupid._boostscore;
2616182   +      set &em_import_data;
2616183   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2616184   +      %if "%em_freq" ne "" %then %do ;
2616185   +          keep %em_freq ;
2616186   +      %end ;
2616187   +   run;
2616188   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2616189   +
2616190   +   %doendtb:
2616191   +
2616192   +%mend trainboost;
2616193   +
2616194   +%macro trainbag(groupid=);
2616195   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2616196   +   data _null_;
2616197   +      retain index 0;
2616198   +      set &baginfoDs;
2616199   +      call symput('targetname', strip(_target_));
2616200   +   run;
2616201   +
2616202   +   %let decmeta = ;
2616203   +   data _null_;
2616204   +       set &em_import_data_eminfo;
2616205   +       where (key='DECMETA' and TARGET="&targetname");
2616206   +       call symput('DECMETA', strip(data));
2616207   +   run;
2616208   +   %if "&decmeta" eq "" %then %do;
2616209   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2616210   +       %goto doendtg;
2616211   +   %end;
2616212   +
2616213   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2616214   +
2616215   +   %doendtg:
2616216   +%mend trainbag;
2616217   +
2616218   +%macro traingroup(groupid=);
2616219   +   %let targetNum = 0;
2616220   +
2616221   +   data _temp1;
2616222   +      set &em_lib..&groupid._eminfo;
2616223   +      where key='MODEL';
2616224   +   run;
2616225   +   data _temp2;
2616226   +      set &em_import_data_eminfo;
2616227   +      where key='MODEL';
2616228   +   run;
2616229   +   proc sort data=_temp1; by TARGET DATA;
2616230   +   proc sort data=_temp2; by TARGET DATA;
2616231   +   data _temp2;
2616232   +      merge _temp1(in=_a) _temp2(in=_b);
2616233   +      by TARGET DATA;
2616234   +      if ^_a and _b then output;
2616235   +   run;
2616236   +   data _null_;
2616237   +      retain index 0;
2616238   +      set _temp2 end=eof;
2616239   +      index +1;
2616240   +      where key ='MODEL';
2616241   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2616242   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2616243   +      if eof then
2616244   +         call symput('targetnum', strip(put(index, best.)));
2616245   +   run;
2616246   +   proc datasets lib=work nolist;
2616247   +      delete _temp1 _temp2;
2616248   +   run;
2616249   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2616250   +
2616251   +   %let modelString =;
2616252   +   %do i=1 %to &targetnum;
2616253   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2616254   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2616255   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2616256   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2616257   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2616258   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2616259   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2616260   +            %let modelString = &modelString &&modelid&i;
2616261   +       %end;
2616262   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2616263   +   %end;
2616264   +
2616265   +   %doendtgp:
2616266   +
2616267   +%mend traingroup;
2616268   +
2616269   +%macro getSize(data=, nobsvar=);
2616270   +
2616271   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2616272   +       %let dsid = %sysfunc(open(&data));
2616273   +       %if &dsid %then %do;
2616274   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2616275   +           %let dsid = %sysfunc(close(&dsid));
2616276   +       %end;
2616277   +   %end;
2616278   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2616279   +        proc sql;
2616280   +           reset noprint;
2616281   +           select count(*) into :&nobsvar from &data;
2616282   +        quit;
2616283   +   %end;
2616284   +
2616285   +%mend getsize;
2616286   +
2616287   +%macro train;
2616288   +
2616289   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2616290   +      %let EM_TOOLTYPE=UTILITY;
2616291   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2616292   +          proc delete data=&em_data_eminfo;
2616293   +          run;
2616294   +      %end;
2616295   +      %goto doendtr;
2616296   +   %end;
2616297   +
2616298   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2616299   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2616300   +       %goto doendtr;
2616301   +   %end;
2616302   +
2616303   +   %let xgroupid = ;
2616304   +   data _null_;
2616305   +      set &em_import_data_eminfo;
2616306   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2616307   +      call symput('XGROUPID',  strip(data));
2616308   +      call symput('LOOPTYPE', strip(key));
2616309   +   run;
2616310   +
2616311   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2616312   +       %let nDataObs=0;
2616313   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2616314   +
2616315   +       %let nStartObs=0;
2616316   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2616317   +
2616318   +       %if &nDataObs ne &nStartObs %then %do;
2616319   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2616320   +           %goto doendtr;
2616321   +       %end;
2616322   +
2616323   +       %trainboost(groupid=&xgroupid);
2616324   +   %end;
2616325   +   %else
2616326   +   %if "&looptype" eq "BAGINFO" %then %do;
2616327   +       %trainbag(groupid=&xgroupid);
2616328   +   %end;
2616329   +   %else
2616330   +   %if "&looptype" eq "GROUPINFO" %then %do;
2616331   +       %traingroup(groupid=&xgroupid);
2616332   +   %end;
2616333   +   %else
2616334   +   %if "&looptype" eq "TARGETINFO" %then %do;
2616335   +       %traintarget(groupid=&xgroupid);
2616336   +   %end;
2616337   +
2616338   +   data &em_data_eminfo;
2616339   +      length TARGET KEY $32  DATA $43;
2616340   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2616341   +   run;
2616342   +
2616343   +   %let EM_TOOLTYPE=MODEL;
2616344   +
2616345   +   %doendtr:
2616346   +
2616347   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp13_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP13_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMRANK.
NOTE: The data set EMWS1.ENDGRP13_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp13_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp13";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616348    *------------------------------------------------------------*;
2616349    * End TRAIN: EndGrp13;
2616350    *------------------------------------------------------------*;
2616351
 
2616352    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2616353    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2616354    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616355    ;
MPRINT(EM_DIAGRAM):   ;
2616356    ;
MPRINT(EM_DIAGRAM):   ;
2616357    ;
MPRINT(EM_DIAGRAM):   ;
2616358    ;
MPRINT(EM_DIAGRAM):   ;
2616359    quit;
MPRINT(EM_DIAGRAM):   quit;
2616360    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616361    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2616362    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616363    /*; *"; *'; */
2616364    ;
MPRINT(EM_DIAGRAM):   ;
2616365    run;
MPRINT(EM_DIAGRAM):   run;
2616366    quit;
MPRINT(EM_DIAGRAM):   quit;
2616367    /* Reset EM Options */
2616368    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2616369    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2616370    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:54:55 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:54:55 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2Y_C1BH "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2Y_C1BH new;
MPRINT(EM_DIAGRAM):   run;
2616472    %let EMEXCEPTIONSTRING=;
2616473    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2616474    * SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp13;
2616475    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616476    %let EM_ACTION = SCORE;
2616477    %let syscc = 0;
2616478    %macro main;
2616479       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2616480
2616481           filename temp catalog 'sashelp.emutil.endgp_train.source';
2616482           %include temp;
2616483           filename temp;
2616484
2616485           %train;
2616486
2616487       %end;
2616488       %else
2616489          %if %upcase(&EM_ACTION) = SCORE %then %do;
2616490
2616491           filename temp catalog 'sashelp.emutil.endgp_score.source';
2616492           %include temp;
2616493           filename temp;
2616494
2616495           %score;
2616496       %end;
2616497       %else
2616498       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2616499
2616500           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2616501           %include temp;
2616502           filename temp;
2616503
2616504           %postloop;
2616505
2616506       %end;
2616507
2616508       %doendm:
2616509    %mend main;
2616510
2616511    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2616512   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2616514   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2616515   +       data &out / view=&out;
2616516   +          set &data
2616518   +          %if "&prescore" = "Y" %then %do;
2616519   +              (obs=1)
2616520   +          %end;
2616522   +          ;
2616524   +          %inc &scoreref;
2616526   +          %if "&prescore" eq "Y" %then %do;
2616527   +              drop I_: R_:;
2616528   +          %end;
2616530   +       run;
2616531   +   %end;
2616533   +%mend scoretables;
2616535   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2616536   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2616537   +   data _null_;
2616538   +      retain index 0;
2616539   +      set &infoDs;
2616540   +      call symput('targetname', strip(_target_));
2616541   +      call symput('endloopnum', strip(_loop_));
2616542   +   run;
2616544   +   %let endgrp_decmeta=;
2616545   +   %let endgrp_decdata=;
2616547   +   data _null_;
2616548   +      set &em_import_data_eminfo;
2616549   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2616550   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2616551   +      else
2616552   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2616553   +      else call symput('MODELID', strip(data));
2616554   +   run;
2616556   +   %let headerString= Boosting;
2616557   +   %let prefixString= _BoostVar;
2616559   +   %if "&type" = "BAGINFO" %then %do;
2616560   +        %let headerString = Bagging;
2616561   +        %let prefixString= _BagVar;
2616562   +   %end;
2616564   +   %let targetType=;
2616565   +   %let predictedVars=;
2616566   +   data _null_;
2616567   +      retain index;
2616568   +      set &endgrp_decmeta end=eof;
2616569   +      length tempvar $200;
2616570   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2616571   +      else
2616572   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2616573   +      else
2616574   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2616575   +      else
2616576   +      if _TYPE_ = 'PREDICTED' then do;
2616577   +         index+1;
2616578   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2616579   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2616580   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2616581   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2616582   +      end;
2616583   +      if eof then
2616584   +         call symput('prednum', strip(put(index, best.)));
2616585   +   run;
2616587   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2616588   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2616590   +   filename loopflow "&em_user_loopflowcode";
2616591   +   filename looppub "&em_user_looppubcode";
2616593   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2616594   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2616596   +   %if "&emloopnumber" = "1" %then %do;
2616597   +       data _null_;
2616598   +          rc = fdelete('loopflow');
2616599   +          rc = fdelete('looppub');
2616600   +       run;
2616601   +       data _null_;
2616602   +          file loopflow;
2616603   +          put "&em_codebar;";
2616604   +          put "* &em_nodeid: ;" ;
2616605   +          put "* User: &sysuserid;";
2616606   +          put "* Date: &sysdate: &systime;";
2616607   +          put "&em_codebar ;";
2616608   +          put "* Ensemble Code;";
2616609   +          put "&em_codebar ;";
2616610   +          put "* &headerString: Loop=1;";
2616611   +          put "* Temporary Variables;";
2616612   +          %do i= 1 %to &prednum;
2616613   +              put "drop &&tempvars&i;";
2616614   +              put "&&tempvars&i = 0;";
2616615   +          %end;
2616616   +       run;
2616617   +       %em_copyfile(infref=loopflow, outfref=looppub);
2616618   +   %end;
2616620   +   %let j=&emloopnumber;
2616621   +   %do i = 1 %to &loopcodenum;
2616622   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2616623   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2616625   +       %if (&&loopnode&i eq &em_nodeid ) or
2616626   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2616627   +           data _null_;
2616628   +              file loopflow mod;
2616629   +              put "&em_codebar;";
2616630   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2616631   +              put "* User: &sysuserid;";
2616632   +              put "* Date: &sysdate: &systime;";
2616633   +              put "* &headerString: Loop=&j;";
2616634   +              put "&em_codebar;";
2616635   +           run;
2616636   +           data _null_;
2616637   +              file looppub mod;
2616638   +              put "&em_codebar;";
2616639   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2616640   +              put "* User: &sysuserid;";
2616641   +              put "* Date: &sysdate: &systime;";
2616642   +              put "* &headerString: Loop=&j;";
2616643   +              put "&em_codebar;";
2616644   +           run;
2616645   +       %end;
2616647   +       %if &&loopnode&i ne &em_nodeid %then %do;
2616648   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2616649   +               filename x catalog "&fsourceEntry";
2616650   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2616651   +               filename x;
2616653   +               filename y catalog "&psourceEntry";
2616654   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2616655   +               filename y;
2616656   +           %end;
2616657   +       %end;
2616658   +       %else %do;
2616659   +           %if "&j" ne "1" %then %do;
2616660   +               %let weight = %eval(&j-1);
2616661   +               data _null_;
2616662   +                  file loopflow mod;
2616663   +                  put "&em_codebar;";
2616664   +                  %if "&j" ne "&endloopnum" %then %do;
2616665   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2616666   +                  %end;
2616667   +                  %else %do;
2616668   +                      put "* &headerString: accumulate final probabilities;";
2616669   +                  %end;
2616670   +                  put "&em_codebar;";
2616671   +                  %do k=1 %to &prednum;
2616672   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2616673   +                  %end;
2616674   +               run;
2616675   +               data _null_;
2616676   +                  file looppub mod;
2616677   +                  put "&em_codebar;";
2616678   +                  %if "&j" ne "&endloopnum" %then %do;
2616679   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2616680   +                  %end;
2616681   +                  %else %do;
2616682   +                      put "* &headerString: accumulate final probabilities;";
2616683   +                  %end;
2616684   +                  %do k=1 %to &prednum;
2616685   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2616686   +                  %end;
2616687   +               run;
2616688   +           %end;
2616689   +           %if "&j" ne "&endloopnum" %then %do;
2616690   +               data _null_;
2616691   +                  file loopflow mod;
2616692   +                  put "&em_codebar;";
2616693   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2616694   +                  put "&em_codebar;";
2616695   +               %do k=1 %to &prednum;
2616696   +                  put "&&tempvars&k = &&predvars&k;";
2616697   +               %end;
2616698   +               run;
2616699   +               data _null_;
2616700   +                  file looppub mod;
2616701   +                  put "&em_codebar;";
2616702   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2616703   +                  put "&em_codebar;";
2616704   +               %do k=1 %to &prednum;
2616705   +                   put "&&tempvars&k = &&predvars&k;";
2616706   +               %end;
2616707   +               run;
2616708   +           %end;
2616710   +       %end;
2616711   +   %end;
2616713   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2616714   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2616716   +   filename loopflow;
2616717   +   filename looppub;
2616718   +   filename empub;
2616720   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2616721   +   %let gpTrain=;
2616722   +   %let gpValidate=;
2616723   +   %let gpTest=;
2616725   +   data _null_;
2616726   +      set &groupImportDs;
2616727   +      select(upcase(port));
2616728   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2616729   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2616730   +          when('TEST')     call symput('gpTest',     strip(dataset));
2616731   +       otherwise;
2616732   +      end;
2616733   +   run;
2616735   +   %if "&gpTrain" ne "" %then %do;
2616737   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2616739   +       %if &targetType ne INTERVAL %then %do;
2616740   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2616741   +       %end;
2616743   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2616745   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2616747   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2616748   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2616750   +       filename _decflow "&decflow";
2616751   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2616752   +       filename _decflow;
2616754   +   %end;
2616756   +   %if "&gpTrain" ne "" %then
2616757   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2616758   +   %if "&gpValidate" ne "" %then
2616759   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2616760   +   %if "&gpTest" ne "" %then
2616761   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2616763   +   filename emflow;
2616765   +%mend boostbagcode;
2616767   +%macro score;
2616769   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2616770   +   %inc _dec;
2616771   +   filename _dec;
2616773   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2616775   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2616776   +       %let emexceptionstring = nomodeltarget;
2616777   +       %goto doendpl;
2616778   +   %end;
2616780   +   %LET GROUPID=;
2616781   +   %let LOOPTYPE=;
2616782   +   data _null_;
2616783   +      set &em_import_data_eminfo;
2616784   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2616785   +      call symput('GROUPID',   strip(data));
2616786   +      call symput('LOOPTYPE', strip(key));
2616787   +   run;
2616789   +   %em_getname(key=PATH, type=DATA);
2616791   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2616792   +   %include temp;
2616793   +   filename temp;
2616795   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2616797   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2616798   +       %let deleteString = &em_nodeid._path;
2616799   +       proc datasets lib=&em_lib nolist;
2616800   +          delete &deleteString;
2616801   +       run;
2616802   +       quit;
2616803   +   %end;
2616805   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2616807   +   data score_path;
2616808   +      retain LOOPID &emloopnumber;
2616809   +      set score_path;
2616810   +   run;
2616812   +   proc append base=&em_user_path  data=score_path;
2616813   +   run;
2616815   +   %let EnsembleIndex=0;
2616816   +   data _null_;
2616817   +      retain index 0 ensembleIndex 0;
2616818   +      set score_Path end=eof;
2616819   +      if nodelabel = "&groupid" or index then do;
2616820   +         index + 1;
2616821   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2616822   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2616823   +      end;
2616824   +      if component='Ensemble' then ensembleIndex = index;
2616825   +      if eof then do;
2616826   +         call symput('loopcodenum', strip(put(index, best.)));
2616827   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2616828   +      end;
2616829   +   run;
2616831   +   proc datasets lib=work nolist;
2616832   +      delete score_Path;
2616833   +   run;
2616834   +   quit;
2616836   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2616837   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2616839   +   %doendpl:
2616841   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2616842   +/*
2616843   +       MACRO: EM_DECIDECODE
2616844   +
2616845   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2616846   +       SUPPORT: Taiyeong Lee
2616847   +
2616848   +       HISTORY: 01OCT04 Initial code
2616849   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2616850   +                to add the corresponding decision code
2616851   +
2616852   +*/
2616853   +
2616854   +
2616855   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2616856   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2616857   +
2616858   +    %do;
2616859   +    %let m_data      = &data;
2616860   +    %let m_decdata   = &decdata;
2616861   +    %let m_decmeta   = &decmeta;
2616862   +    %let m_noresfile = &noresfile;
2616863   +    %let m_resfile   = &resfile;
2616864   +    dm "afa c=sashelp.emutil.decidecode.scl";
2616865   +  %end;
2616866   +%mend EM_DECIDECODE;
2616867   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural5_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2616868   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2616869   +   proc display c=sashelp.emcore.pathscorecode.scl;
2616870   +   run;
2616871   +%mend EM_GETTRAINPATH;
2616872   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2616873    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2616874    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2616875    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2616876    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2616877    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2616878    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2616879    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2616880    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616881    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616882    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616883    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616884    output;
MPRINT(EM_GETTRAINPATH):   output;
2616885    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2616886    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2616887    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2616888    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2616889    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2616890    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616891    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616892    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616893    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616894    output;
MPRINT(EM_GETTRAINPATH):   output;
2616895    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2616896    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2616897    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2616898    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2616899    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2616900    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616901    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616902    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616903    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616904    output;
MPRINT(EM_GETTRAINPATH):   output;
2616905    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2616906    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2616907    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2616908    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2616909    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2616910    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616911    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616912    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616913    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616914    output;
MPRINT(EM_GETTRAINPATH):   output;
2616915    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2616916    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2616917    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2616918    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2616919    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2616920    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616921    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616922    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616923    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616924    output;
MPRINT(EM_GETTRAINPATH):   output;
2616925    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2616926    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2616927    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2616928    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2616929    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2616930    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616931    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616932    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616933    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616934    output;
MPRINT(EM_GETTRAINPATH):   output;
2616935    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2616936    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2616937    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2616938    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2616939    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2616940    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616941    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616942    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616943    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616944    output;
MPRINT(EM_GETTRAINPATH):   output;
2616945    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2616946    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2616947    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2616948    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2616949    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2616950    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616951    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616952    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616953    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616954    output;
MPRINT(EM_GETTRAINPATH):   output;
2616955    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2616956    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2616957    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2616958    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2616959    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2616960    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616961    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616962    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616963    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616964    output;
MPRINT(EM_GETTRAINPATH):   output;
2616965    nodelabel="Grp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp13";
2616966    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2616967    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2616968    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2616969    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2616970    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616971    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616972    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616973    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616974    output;
MPRINT(EM_GETTRAINPATH):   output;
2616975    nodelabel="Neural5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural5";
2616976    parent="Grp13";
MPRINT(EM_GETTRAINPATH):   parent="Grp13";
2616977    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
2616978    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
2616979    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2616980    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616981    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616982    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616983    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616984    output;
MPRINT(EM_GETTRAINPATH):   output;
2616985    nodelabel="EndGrp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp13";
2616986    parent="Neural5";
MPRINT(EM_GETTRAINPATH):   parent="Neural5";
2616987    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2616988    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2616989    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2616990    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2616991    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2616992    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2616993    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2616994    output;
MPRINT(EM_GETTRAINPATH):   output;
2616995    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 8;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp13_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP13_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP13_PATH has 96 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp13" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2616996    *------------------------------------------------------------*;
2616997    * End SCORE: EndGrp13;
2616998    *------------------------------------------------------------*;
2616999
 
2617000    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2617001    * EndGrp13: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Scoring DATA data;
2617002    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2617003    data EMWS1.EndGrp13_TRAIN
2617004    / view=EMWS1.EndGrp13_TRAIN
2617005    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_TRAIN / view=EMWS1.EndGrp13_TRAIN ;
2617006    set EMWS1.Neural5_TRAIN
2617007    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_TRAIN ;
2617008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP13_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2617009    quit;
 
2617011    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2617012    * EndGrp13: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Computing metadata for TRAIN data;
2617013    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp13_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp13_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp13_TRAIN out=WORK.M1KZ4QPC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KZ4QPC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KZ4QPC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KZ4QPC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KZ4QPC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10X28ZQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RSXQDP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M10X28ZQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp13";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp13";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp13";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2617359    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2617360    set EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO;
2617361    where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2617362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMINFO.
      WHERE (DATA='EndGrp13') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2617363    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMINFO;
2617364    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2617365    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2617366    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2617370    run;
2617371    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
2617372    set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
2617373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2617374    proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
2617375    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2617376    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2617377    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2617378    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2617379    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2617380    proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2617381    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2617382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2617383    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
2617384    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2617385    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2617386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2617387    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2617388    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2617389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2617390    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:54:57 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:54:57 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QNECR7 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QNECR7 new;
MPRINT(EM_DIAGRAM):   run;
2617414    data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT;
2617415    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
2617416    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2617417    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2617418    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2617419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2617420    proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
2617421    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2617422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2617423    %let _EMwarndup = 0;
2617424    %let _EMtargetdup =;
2617425    %let _EMASEtargetdup =;
2617426    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2617427    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
2617428    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2617429    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2617430    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2617431    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2617432    end;
MPRINT(EM_DIAGRAM):   end;
2617433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2617434    proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
2617435    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2617436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2617437    proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2617438    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2617439    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2617440    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2617441    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2617442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2617443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2617444    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2617445    set EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_CMeta_TRAIN;
2617446    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2617447    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP13_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2617448    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2617449    set EMWS1.EndGrp13_TRAIN(keep=
2617450    F_DepVar
2617451    I_DepVar
2617452    P_DepVar0
2617453    P_DepVar1
2617454    R_DepVar0
2617455    R_DepVar1
2617456    U_DepVar
2617457    _WARN_
2617458    DepVar
2617459    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2617460    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2198 observations read from the data set EMWS1.GRP13_TRAIN.
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2198 observations read from the data set EMWS1.NEURAL5_TRAIN.
NOTE: There were 2198 observations read from the data set EMWS1.ENDGRP13_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2198 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2621647    %let _cn = %sysfunc(getoption(CENTER));
2621648    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2621649    proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
2621650    var STAT LABEL TRAIN
2621651    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2621652    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2621653    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2621654    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2621655    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1777.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2621656    title10;
MPRINT(EM_DIAGRAM):   title10;
2621657    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2621658    proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
2621659    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2621660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2621661    %let _cn = %sysfunc(getoption(CENTER));
2621662    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2621663    proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
2621664    var from into pct_row pct_col count percent
2621665    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2621666    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2621667    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2621668    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2621669    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2621670    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2621671    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2621672    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2621673    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2621674    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2621675    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2621676    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1778.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621677    title9;
MPRINT(EM_DIAGRAM):   title9;
2621678    title10;
MPRINT(EM_DIAGRAM):   title10;
2621679    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2621680    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2621681    modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2621682    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2621683    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2621684    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMRANK.DATA.
2621685    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
2621686    %let _cn = %sysfunc(getoption(CENTER));
2621687    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2621688    proc print data=EMWS1.EndGrp13_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMRANK label noobs;
2621689    var
2621690    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2621691    by
2621692    notsorted DATAROLE
2621693    notsorted TARGET
2621694    notsorted TARGETLABEL
2621695    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2621696    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2621697    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2621698    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1779.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2621699    title10;
MPRINT(EM_DIAGRAM):   title10;
2621700    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2621701    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2621702    modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2621703    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2621704    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2621705    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMSCOREDIST.DATA.
2621706    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.07 seconds
 
 
2621707    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2621708    set EMWS1.Grp13_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_GROUPINFO;
2621709    where _LOOP_=8;
MPRINT(EM_DIAGRAM):   where _LOOP_=8;
2621710    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2621711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_GROUPINFO.
      WHERE _LOOP_=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2621712    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2621713    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2621714    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2621715    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2621716    set EMWS1.EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK;
2621717    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2621718    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2621719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621720    data EMWS1.EndGrp13_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMRANK_LOOP;
2621721    set EMWS1.EndGrp13_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK_LOOP temp;
2621722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP13_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMRANK_LOOP has 160 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2621723    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2621724    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2621725    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2621726    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2621727    set EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST;
2621728    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2621729    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2621730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621731    data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
2621732    set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
2621733    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP has 160 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2621734    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2621735    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2621736    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2621737    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2621738    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
2621739    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2621740    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2621741    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621742    data EMWS1.EndGrp13_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT_LOOP;
2621743    set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
2621744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT_LOOP has 8 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2621745    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2621746    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2621747    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2621748    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2621749    set EMWS1.EndGrp13_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT;
2621750    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2621751    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2621752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621753    data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
2621754    set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
2621755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 147 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP has 168 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2621756    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2621757    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2621758    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2621759    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2621760    set EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION;
2621761    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2621762    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2621763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2621764    data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
2621765    set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
2621766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP has 32 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
