*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:35:49 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:35:44 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:35:44 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3OQMTM6 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3OQMTM6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMLOG_3.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:35:44 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMOUTPUT_3.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:35:44 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
945950     proc freq data=EMWS1.EndGrp13_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp13_VariableSet noprint;
945951     table ROLE*LEVEL/out=WORK.EndGrp13META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp13META;
945952     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.ENDGRP13META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
945953     proc print data=WORK.EndGrp13META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13META label noobs;
945954     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
945955     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
945956     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
945957     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
945958     run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP13META.
NOTE: The PROCEDURE PRINT printed page 634.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
945959     title10;
MPRINT(EM_DIAGRAM):   title10;
945960     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural5_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
945989     data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
945990     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
945991     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
945992        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
945993     set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
945994     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
945995     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
945996     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
945997     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
945998     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
945999     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
946000     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
946001     end;
MPRINT(EM_DIAGRAM):   end;
946002     output;
MPRINT(EM_DIAGRAM):   output;
946003     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP13_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
946004     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
946005     proc print data=WORK.EndGrp13_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13_EVENT noobs label;
946006     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
946007     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
946008     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
946009     run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP13_EVENT.
NOTE: The PROCEDURE PRINT printed page 635.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
946010     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
946011     proc print data = EMWS1.Neural5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
946012     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
946013     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
946014     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
946015     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
946016     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
946017     run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 636.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
946018     title10;
MPRINT(EM_DIAGRAM):   title10;
946019     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp13: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=308;
MPRINT(EM_DECDATA):   DATAPRIOR=0.1366568914956;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13911472448057;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1906;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86334310850439;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86088527551942;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
946493     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
946494     * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
946495     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
946496     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
946497     %let EMEXCEPTIONSTRING=;
946498     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
946499     * TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp13;
946500     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946501     %let EM_ACTION = TRAIN;
946502     %let syscc = 0;
946503     %macro main;
946504        %if %upcase(&EM_ACTION) = TRAIN %then %do;
946505
946506            filename temp catalog 'sashelp.emutil.endgp_train.source';
946507            %include temp;
946508            filename temp;
946509
946510            %train;
946511
946512        %end;
946513        %else
946514           %if %upcase(&EM_ACTION) = SCORE %then %do;
946515
946516            filename temp catalog 'sashelp.emutil.endgp_score.source';
946517            %include temp;
946518            filename temp;
946519
946520            %score;
946521        %end;
946522        %else
946523        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
946524
946525            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
946526            %include temp;
946527            filename temp;
946528
946529            %postloop;
946530
946531        %end;
946532
946533        %doendm:
946534     %mend main;
946535
946536     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
946537    +%macro copyModelDs(model=, key=);
946538    +   %let modelDs  = &em_lib..&model._&key;
946539    +   %let reportDs = &em_lib..&em_nodeid._&key;
946540    +   %if %sysfunc(exist(&modelDs)) %then %do;
946541    +       data &reportDs;
946542    +          length ModelId $16;
946543    +          retain ModelId "&model";
946544    +          set &modelDs;
946545    +       run;
946546    +   %end;
946547    +%mend copyModelDs;
946548    +
946549    +%macro traintarget(groupid=);
946550    +   %em_getname(key=emoutfit, type=DATA);
946551    +   %let targetname=;
946552    +   data _null_;
946553    +     set &em_lib..&groupid._&looptype;
946554    +     where _LOOP_ = &EMLOOPNUMBER;
946555    +     call symput('targetname', strip(_TARGET_));
946556    +   run;
946557    +   %let modelId =;
946558    +   data _null_;
946559    +      set &em_import_data_eminfo;
946560    +      where key = 'MODEL' and TARGET = "&targetname";
946561    +      call symput('modelId',   strip(data));
946562    +   run;
946563    +   %if "&modelId" ne "" %then %do;
946564    +       %copyModelDs(model=&modelid, key=EMRANK);
946565    +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
946566    +       %copyModelDs(model=&modelid, key=EMOUTFIT);
946567    +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
946568    +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
946569    +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
946570    +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
946571    +   %end;
946572    +
946573    +   %doendtgp:
946574    +%mend;
946575    +
946576    +%macro trainboost(groupid=);
946577    +
946578    +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
946579    +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
946580    +
946581    +   data _null_;
946582    +      retain index 0;
946583    +      set &boostinfoDs;
946584    +      call symput('targetname', strip(_target_));
946585    +   run;
946586    +
946587    +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
946588    +       %let decmeta = ;
946589    +       data _null_;
946590    +          set &em_import_data_eminfo;
946591    +          where (key='DECMETA' and TARGET="&targetname");
946592    +          call symput('DECMETA', strip(data));
946593    +       run;
946594    +       %if "&decmeta" eq "" %then %do;
946595    +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
946596    +           %goto doendtb;
946597    +       %end;
946598    +
946599    +       %let predictedVars=;
946600    +       data _null_;
946601    +          set &decmeta;
946602    +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
946603    +          else
946604    +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
946605    +          else
946606    +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
946607    +       run;
946608    +       %if %index(&EM_DEBUG, _ALL_) %then %do;
946609    +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
946610    +       %end;
946611    +   %end;
946612    +
946613    +   * ;
946614    +   * ENDGROUP &NODEID : Boosting scoring ;
946615    +   * ;
946616    +   data &em_lib..&groupid._boostscore;
946617    +      set &em_import_data;
946618    +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
946619    +      %if "%em_freq" ne "" %then %do ;
946620    +          keep %em_freq ;
946621    +      %end ;
946622    +   run;
946623    +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
946624    +
946625    +   %doendtb:
946626    +
946627    +%mend trainboost;
946628    +
946629    +%macro trainbag(groupid=);
946630    +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
946631    +   data _null_;
946632    +      retain index 0;
946633    +      set &baginfoDs;
946634    +      call symput('targetname', strip(_target_));
946635    +   run;
946636    +
946637    +   %let decmeta = ;
946638    +   data _null_;
946639    +       set &em_import_data_eminfo;
946640    +       where (key='DECMETA' and TARGET="&targetname");
946641    +       call symput('DECMETA', strip(data));
946642    +   run;
946643    +   %if "&decmeta" eq "" %then %do;
946644    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
946645    +       %goto doendtg;
946646    +   %end;
946647    +
946648    +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
946649    +
946650    +   %doendtg:
946651    +%mend trainbag;
946652    +
946653    +%macro traingroup(groupid=);
946654    +   %let targetNum = 0;
946655    +
946656    +   data _temp1;
946657    +      set &em_lib..&groupid._eminfo;
946658    +      where key='MODEL';
946659    +   run;
946660    +   data _temp2;
946661    +      set &em_import_data_eminfo;
946662    +      where key='MODEL';
946663    +   run;
946664    +   proc sort data=_temp1; by TARGET DATA;
946665    +   proc sort data=_temp2; by TARGET DATA;
946666    +   data _temp2;
946667    +      merge _temp1(in=_a) _temp2(in=_b);
946668    +      by TARGET DATA;
946669    +      if ^_a and _b then output;
946670    +   run;
946671    +   data _null_;
946672    +      retain index 0;
946673    +      set _temp2 end=eof;
946674    +      index +1;
946675    +      where key ='MODEL';
946676    +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
946677    +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
946678    +      if eof then
946679    +         call symput('targetnum', strip(put(index, best.)));
946680    +   run;
946681    +   proc datasets lib=work nolist;
946682    +      delete _temp1 _temp2;
946683    +   run;
946684    +   %if "&targetNum" eq "0" %then %goto doendtgp;
946685    +
946686    +   %let modelString =;
946687    +   %do i=1 %to &targetnum;
946688    +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
946689    +            %copyModelDs(model=&&modelid&i, key=EMRANK);
946690    +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
946691    +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
946692    +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
946693    +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
946694    +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
946695    +            %let modelString = &modelString &&modelid&i;
946696    +       %end;
946697    +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
946698    +   %end;
946699    +
946700    +   %doendtgp:
946701    +
946702    +%mend traingroup;
946703    +
946704    +%macro getSize(data=, nobsvar=);
946705    +
946706    +   %if %sysfunc(exist(&data, DATA)) %then %do;
946707    +       %let dsid = %sysfunc(open(&data));
946708    +       %if &dsid %then %do;
946709    +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
946710    +           %let dsid = %sysfunc(close(&dsid));
946711    +       %end;
946712    +   %end;
946713    +    %if %sysfunc(exist(&data, VIEW)) %then %do;
946714    +        proc sql;
946715    +           reset noprint;
946716    +           select count(*) into :&nobsvar from &data;
946717    +        quit;
946718    +   %end;
946719    +
946720    +%mend getsize;
946721    +
946722    +%macro train;
946723    +
946724    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
946725    +      %let EM_TOOLTYPE=UTILITY;
946726    +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
946727    +          proc delete data=&em_data_eminfo;
946728    +          run;
946729    +      %end;
946730    +      %goto doendtr;
946731    +   %end;
946732    +
946733    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
946734    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
946735    +       %goto doendtr;
946736    +   %end;
946737    +
946738    +   %let xgroupid = ;
946739    +   data _null_;
946740    +      set &em_import_data_eminfo;
946741    +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
946742    +      call symput('XGROUPID',  strip(data));
946743    +      call symput('LOOPTYPE', strip(key));
946744    +   run;
946745    +
946746    +   %if "&looptype" eq "BOOSTINFO" %then %do;
946747    +       %let nDataObs=0;
946748    +       %getSize(data=&em_import_data, nobsvar=nDataObs);
946749    +
946750    +       %let nStartObs=0;
946751    +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
946752    +
946753    +       %if &nDataObs ne &nStartObs %then %do;
946754    +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
946755    +           %goto doendtr;
946756    +       %end;
946757    +
946758    +       %trainboost(groupid=&xgroupid);
946759    +   %end;
946760    +   %else
946761    +   %if "&looptype" eq "BAGINFO" %then %do;
946762    +       %trainbag(groupid=&xgroupid);
946763    +   %end;
946764    +   %else
946765    +   %if "&looptype" eq "GROUPINFO" %then %do;
946766    +       %traingroup(groupid=&xgroupid);
946767    +   %end;
946768    +   %else
946769    +   %if "&looptype" eq "TARGETINFO" %then %do;
946770    +       %traintarget(groupid=&xgroupid);
946771    +   %end;
946772    +
946773    +   data &em_data_eminfo;
946774    +      length TARGET KEY $32  DATA $43;
946775    +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
946776    +   run;
946777    +
946778    +   %let EM_TOOLTYPE=MODEL;
946779    +
946780    +   %doendtr:
946781    +
946782    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp13_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP13_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMRANK.
NOTE: The data set EMWS1.ENDGRP13_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp13_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp13";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946783     *------------------------------------------------------------*;
946784     * End TRAIN: EndGrp13;
946785     *------------------------------------------------------------*;
946786
 
946787     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
946788     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
946789     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946790     ;
MPRINT(EM_DIAGRAM):   ;
946791     ;
MPRINT(EM_DIAGRAM):   ;
946792     ;
MPRINT(EM_DIAGRAM):   ;
946793     ;
MPRINT(EM_DIAGRAM):   ;
946794     quit;
MPRINT(EM_DIAGRAM):   quit;
946795     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946796     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
946797     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946798     /*; *"; *'; */
946799     ;
MPRINT(EM_DIAGRAM):   ;
946800     run;
MPRINT(EM_DIAGRAM):   run;
946801     quit;
MPRINT(EM_DIAGRAM):   quit;
946802     /* Reset EM Options */
946803     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
946804     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
946805     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:35:47 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:35:47 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3F_IZPF "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3F_IZPF new;
MPRINT(EM_DIAGRAM):   run;
946907     %let EMEXCEPTIONSTRING=;
946908     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
946909     * SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp13;
946910     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
946911     %let EM_ACTION = SCORE;
946912     %let syscc = 0;
946913     %macro main;
946914        %if %upcase(&EM_ACTION) = TRAIN %then %do;
946915
946916            filename temp catalog 'sashelp.emutil.endgp_train.source';
946917            %include temp;
946918            filename temp;
946919
946920            %train;
946921
946922        %end;
946923        %else
946924           %if %upcase(&EM_ACTION) = SCORE %then %do;
946925
946926            filename temp catalog 'sashelp.emutil.endgp_score.source';
946927            %include temp;
946928            filename temp;
946929
946930            %score;
946931        %end;
946932        %else
946933        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
946934
946935            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
946936            %include temp;
946937            filename temp;
946938
946939            %postloop;
946940
946941        %end;
946942
946943        %doendm:
946944     %mend main;
946945
946946     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
946947    +%macro scoreTables(data=, out=, scoreref=, prescore=);
946949    +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
946950    +       data &out / view=&out;
946951    +          set &data
946953    +          %if "&prescore" = "Y" %then %do;
946954    +              (obs=1)
946955    +          %end;
946957    +          ;
946959    +          %inc &scoreref;
946961    +          %if "&prescore" eq "Y" %then %do;
946962    +              drop I_: R_:;
946963    +          %end;
946965    +       run;
946966    +   %end;
946968    +%mend scoretables;
946970    +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
946971    +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
946972    +   data _null_;
946973    +      retain index 0;
946974    +      set &infoDs;
946975    +      call symput('targetname', strip(_target_));
946976    +      call symput('endloopnum', strip(_loop_));
946977    +   run;
946979    +   %let endgrp_decmeta=;
946980    +   %let endgrp_decdata=;
946982    +   data _null_;
946983    +      set &em_import_data_eminfo;
946984    +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
946985    +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
946986    +      else
946987    +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
946988    +      else call symput('MODELID', strip(data));
946989    +   run;
946991    +   %let headerString= Boosting;
946992    +   %let prefixString= _BoostVar;
946994    +   %if "&type" = "BAGINFO" %then %do;
946995    +        %let headerString = Bagging;
946996    +        %let prefixString= _BagVar;
946997    +   %end;
946999    +   %let targetType=;
947000    +   %let predictedVars=;
947001    +   data _null_;
947002    +      retain index;
947003    +      set &endgrp_decmeta end=eof;
947004    +      length tempvar $200;
947005    +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
947006    +      else
947007    +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
947008    +      else
947009    +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
947010    +      else
947011    +      if _TYPE_ = 'PREDICTED' then do;
947012    +         index+1;
947013    +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
947014    +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
947015    +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
947016    +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
947017    +      end;
947018    +      if eof then
947019    +         call symput('prednum', strip(put(index, best.)));
947020    +   run;
947022    +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
947023    +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
947025    +   filename loopflow "&em_user_loopflowcode";
947026    +   filename looppub "&em_user_looppubcode";
947028    +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
947029    +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
947031    +   %if "&emloopnumber" = "1" %then %do;
947032    +       data _null_;
947033    +          rc = fdelete('loopflow');
947034    +          rc = fdelete('looppub');
947035    +       run;
947036    +       data _null_;
947037    +          file loopflow;
947038    +          put "&em_codebar;";
947039    +          put "* &em_nodeid: ;" ;
947040    +          put "* User: &sysuserid;";
947041    +          put "* Date: &sysdate: &systime;";
947042    +          put "&em_codebar ;";
947043    +          put "* Ensemble Code;";
947044    +          put "&em_codebar ;";
947045    +          put "* &headerString: Loop=1;";
947046    +          put "* Temporary Variables;";
947047    +          %do i= 1 %to &prednum;
947048    +              put "drop &&tempvars&i;";
947049    +              put "&&tempvars&i = 0;";
947050    +          %end;
947051    +       run;
947052    +       %em_copyfile(infref=loopflow, outfref=looppub);
947053    +   %end;
947055    +   %let j=&emloopnumber;
947056    +   %do i = 1 %to &loopcodenum;
947057    +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
947058    +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
947060    +       %if (&&loopnode&i eq &em_nodeid ) or
947061    +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
947062    +           data _null_;
947063    +              file loopflow mod;
947064    +              put "&em_codebar;";
947065    +              put "* &&loopnode&i: &&loopdesc&i;" ;
947066    +              put "* User: &sysuserid;";
947067    +              put "* Date: &sysdate: &systime;";
947068    +              put "* &headerString: Loop=&j;";
947069    +              put "&em_codebar;";
947070    +           run;
947071    +           data _null_;
947072    +              file looppub mod;
947073    +              put "&em_codebar;";
947074    +              put "* &&loopnode&i: &&loopdesc&i;" ;
947075    +              put "* User: &sysuserid;";
947076    +              put "* Date: &sysdate: &systime;";
947077    +              put "* &headerString: Loop=&j;";
947078    +              put "&em_codebar;";
947079    +           run;
947080    +       %end;
947082    +       %if &&loopnode&i ne &em_nodeid %then %do;
947083    +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
947084    +               filename x catalog "&fsourceEntry";
947085    +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
947086    +               filename x;
947088    +               filename y catalog "&psourceEntry";
947089    +               %em_copyfile(infref=y, outfref=looppub, append=Y);
947090    +               filename y;
947091    +           %end;
947092    +       %end;
947093    +       %else %do;
947094    +           %if "&j" ne "1" %then %do;
947095    +               %let weight = %eval(&j-1);
947096    +               data _null_;
947097    +                  file loopflow mod;
947098    +                  put "&em_codebar;";
947099    +                  %if "&j" ne "&endloopnum" %then %do;
947100    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
947101    +                  %end;
947102    +                  %else %do;
947103    +                      put "* &headerString: accumulate final probabilities;";
947104    +                  %end;
947105    +                  put "&em_codebar;";
947106    +                  %do k=1 %to &prednum;
947107    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
947108    +                  %end;
947109    +               run;
947110    +               data _null_;
947111    +                  file looppub mod;
947112    +                  put "&em_codebar;";
947113    +                  %if "&j" ne "&endloopnum" %then %do;
947114    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
947115    +                  %end;
947116    +                  %else %do;
947117    +                      put "* &headerString: accumulate final probabilities;";
947118    +                  %end;
947119    +                  %do k=1 %to &prednum;
947120    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
947121    +                  %end;
947122    +               run;
947123    +           %end;
947124    +           %if "&j" ne "&endloopnum" %then %do;
947125    +               data _null_;
947126    +                  file loopflow mod;
947127    +                  put "&em_codebar;";
947128    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
947129    +                  put "&em_codebar;";
947130    +               %do k=1 %to &prednum;
947131    +                  put "&&tempvars&k = &&predvars&k;";
947132    +               %end;
947133    +               run;
947134    +               data _null_;
947135    +                  file looppub mod;
947136    +                  put "&em_codebar;";
947137    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
947138    +                  put "&em_codebar;";
947139    +               %do k=1 %to &prednum;
947140    +                   put "&&tempvars&k = &&predvars&k;";
947141    +               %end;
947142    +               run;
947143    +           %end;
947145    +       %end;
947146    +   %end;
947148    +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
947149    +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
947151    +   filename loopflow;
947152    +   filename looppub;
947153    +   filename empub;
947155    +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
947156    +   %let gpTrain=;
947157    +   %let gpValidate=;
947158    +   %let gpTest=;
947160    +   data _null_;
947161    +      set &groupImportDs;
947162    +      select(upcase(port));
947163    +          when('DATA')     call symput('gpTrain',    strip(dataset));
947164    +          when('VALIDATE') call symput('gpValidate', strip(dataset));
947165    +          when('TEST')     call symput('gpTest',     strip(dataset));
947166    +       otherwise;
947167    +      end;
947168    +   run;
947170    +   %if "&gpTrain" ne "" %then %do;
947172    +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
947174    +       %if &targetType ne INTERVAL %then %do;
947175    +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
947176    +       %end;
947178    +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
947180    +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
947182    +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
947183    +                                                           noresfile=, resfile=%nrbquote(&decflow));
947185    +       filename _decflow "&decflow";
947186    +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
947187    +       filename _decflow;
947189    +   %end;
947191    +   %if "&gpTrain" ne "" %then
947192    +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
947193    +   %if "&gpValidate" ne "" %then
947194    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
947195    +   %if "&gpTest" ne "" %then
947196    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
947198    +   filename emflow;
947200    +%mend boostbagcode;
947202    +%macro score;
947204    +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
947205    +   %inc _dec;
947206    +   filename _dec;
947208    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
947210    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
947211    +       %let emexceptionstring = nomodeltarget;
947212    +       %goto doendpl;
947213    +   %end;
947215    +   %LET GROUPID=;
947216    +   %let LOOPTYPE=;
947217    +   data _null_;
947218    +      set &em_import_data_eminfo;
947219    +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
947220    +      call symput('GROUPID',   strip(data));
947221    +      call symput('LOOPTYPE', strip(key));
947222    +   run;
947224    +   %em_getname(key=PATH, type=DATA);
947226    +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
947227    +   %include temp;
947228    +   filename temp;
947230    +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
947232    +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
947233    +       %let deleteString = &em_nodeid._path;
947234    +       proc datasets lib=&em_lib nolist;
947235    +          delete &deleteString;
947236    +       run;
947237    +       quit;
947238    +   %end;
947240    +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
947242    +   data score_path;
947243    +      retain LOOPID &emloopnumber;
947244    +      set score_path;
947245    +   run;
947247    +   proc append base=&em_user_path  data=score_path;
947248    +   run;
947250    +   %let EnsembleIndex=0;
947251    +   data _null_;
947252    +      retain index 0 ensembleIndex 0;
947253    +      set score_Path end=eof;
947254    +      if nodelabel = "&groupid" or index then do;
947255    +         index + 1;
947256    +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
947257    +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
947258    +      end;
947259    +      if component='Ensemble' then ensembleIndex = index;
947260    +      if eof then do;
947261    +         call symput('loopcodenum', strip(put(index, best.)));
947262    +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
947263    +      end;
947264    +   run;
947266    +   proc datasets lib=work nolist;
947267    +      delete score_Path;
947268    +   run;
947269    +   quit;
947271    +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
947272    +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
947274    +   %doendpl:
947276    +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
947277    +/*
947278    +       MACRO: EM_DECIDECODE
947279    +
947280    +       PURPOSE: Generate EM Decide Score Code for non-interval target.
947281    +       SUPPORT: Taiyeong Lee
947282    +
947283    +       HISTORY: 01OCT04 Initial code
947284    +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
947285    +                to add the corresponding decision code
947286    +
947287    +*/
947288    +
947289    +
947290    +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
947291    + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
947292    +
947293    +    %do;
947294    +    %let m_data      = &data;
947295    +    %let m_decdata   = &decdata;
947296    +    %let m_decmeta   = &decmeta;
947297    +    %let m_noresfile = &noresfile;
947298    +    %let m_resfile   = &resfile;
947299    +    dm "afa c=sashelp.emutil.decidecode.scl";
947300    +  %end;
947301    +%mend EM_DECIDECODE;
947302    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural5_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
947303    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
947304    +   proc display c=sashelp.emcore.pathscorecode.scl;
947305    +   run;
947306    +%mend EM_GETTRAINPATH;
947307    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
947308     data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
947309     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
947310     nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
947311     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
947312     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
947313     component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
947314     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
947315     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947316     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947317     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947318     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947319     output;
MPRINT(EM_GETTRAINPATH):   output;
947320     nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
947321     parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
947322     description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
947323     component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
947324     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
947325     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947326     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947327     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947328     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947329     output;
MPRINT(EM_GETTRAINPATH):   output;
947330     nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
947331     parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
947332     description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
947333     component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
947334     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
947335     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947336     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947337     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947338     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947339     output;
MPRINT(EM_GETTRAINPATH):   output;
947340     nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
947341     parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
947342     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
947343     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
947344     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
947345     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947346     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947347     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947348     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947349     output;
MPRINT(EM_GETTRAINPATH):   output;
947350     nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
947351     parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
947352     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
947353     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
947354     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
947355     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947356     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947357     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947358     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947359     output;
MPRINT(EM_GETTRAINPATH):   output;
947360     nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
947361     parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
947362     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
947363     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
947364     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
947365     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947366     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947367     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947368     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947369     output;
MPRINT(EM_GETTRAINPATH):   output;
947370     nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
947371     parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
947372     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
947373     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
947374     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
947375     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947376     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947377     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947378     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947379     output;
MPRINT(EM_GETTRAINPATH):   output;
947380     nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
947381     parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
947382     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
947383     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
947384     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
947385     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947386     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947387     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947388     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947389     output;
MPRINT(EM_GETTRAINPATH):   output;
947390     nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
947391     parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
947392     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
947393     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
947394     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
947395     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947396     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947397     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947398     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947399     output;
MPRINT(EM_GETTRAINPATH):   output;
947400     nodelabel="Grp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp13";
947401     parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
947402     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
947403     component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
947404     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
947405     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947406     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947407     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947408     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947409     output;
MPRINT(EM_GETTRAINPATH):   output;
947410     nodelabel="Neural5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural5";
947411     parent="Grp13";
MPRINT(EM_GETTRAINPATH):   parent="Grp13";
947412     description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
947413     component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
947414     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
947415     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947416     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947417     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947418     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947419     output;
MPRINT(EM_GETTRAINPATH):   output;
947420     nodelabel="EndGrp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp13";
947421     parent="Neural5";
MPRINT(EM_GETTRAINPATH):   parent="Neural5";
947422     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
947423     component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
947424     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
947425     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
947426     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
947427     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
947428     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
947429     output;
MPRINT(EM_GETTRAINPATH):   output;
947430     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 3;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp13_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP13_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP13_PATH has 36 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp13" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
947431     *------------------------------------------------------------*;
947432     * End SCORE: EndGrp13;
947433     *------------------------------------------------------------*;
947434
 
947435     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
947436     * EndGrp13: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Scoring DATA data;
947437     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
947438     data EMWS1.EndGrp13_TRAIN
947439     / view=EMWS1.EndGrp13_TRAIN
947440     ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_TRAIN / view=EMWS1.EndGrp13_TRAIN ;
947441     set EMWS1.Neural5_TRAIN
947442     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_TRAIN ;
947443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP13_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
947444     quit;
 
947446     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
947447     * EndGrp13: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Computing metadata for TRAIN data;
947448     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp13_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp13_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp13_TRAIN out=WORK.M0E85EIC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0E85EIC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0E85EIC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0E85EIC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0E85EIC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0M3VRFM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2E43_XV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   set WORK.M0M3VRFM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp13";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp13";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp13";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
947794     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
947795     set EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO;
947796     where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
947797     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMINFO.
      WHERE (DATA='EndGrp13') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
947798     data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMINFO;
947799     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
947800     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
947801     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
947805     run;
947806     data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
947807     set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
947808     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947809     proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
947810     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
947811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
947812     proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
947813     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
947814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
947815     proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
947816     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
947817     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
947818     data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
947819     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
947820     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
947821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947822     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
947823     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
947824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
947825     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:35:48 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:35:48 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1_W1GJF "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1_W1GJF new;
MPRINT(EM_DIAGRAM):   run;
947849     data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT;
947850     set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
947851     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
947852     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
947853     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
947854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947855     proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
947856     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
947857     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
947858     %let _EMwarndup = 0;
947859     %let _EMtargetdup =;
947860     %let _EMASEtargetdup =;
947861     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
947862     set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
947863     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
947864     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
947865     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
947866     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
947867     end;
MPRINT(EM_DIAGRAM):   end;
947868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
947869     proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
947870     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
947871     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947872     proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
947873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
947874     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947875     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
947876     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
947877     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
947878     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
947879     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
947880     set EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_CMeta_TRAIN;
947881     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
947882     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP13_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
947883     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
947884     set EMWS1.EndGrp13_TRAIN(keep=
947885     F_DepVar
947886     I_DepVar
947887     P_DepVar0
947888     P_DepVar1
947889     R_DepVar0
947890     R_DepVar1
947891     U_DepVar
947892     _WARN_
947893     DepVar
947894     );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
947895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2214 observations read from the data set EMWS1.GRP13_TRAIN.
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2214 observations read from the data set EMWS1.NEURAL5_TRAIN.
NOTE: There were 2214 observations read from the data set EMWS1.ENDGRP13_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2214 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
952082     %let _cn = %sysfunc(getoption(CENTER));
952083     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
952084     proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
952085     var STAT LABEL TRAIN
952086     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
952087     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
952088     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
952089     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
952090     run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 637.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
952091     title10;
MPRINT(EM_DIAGRAM):   title10;
952092     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
952093     proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
952094     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
952095     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
952096     %let _cn = %sysfunc(getoption(CENTER));
952097     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
952098     proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
952099     var from into pct_row pct_col count percent
952100     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
952101     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
952102     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
952103     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
952104     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
952105     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
952106     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
952107     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
952108     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
952109     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
952110     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
952111     run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 638.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
952112     title9;
MPRINT(EM_DIAGRAM):   title9;
952113     title10;
MPRINT(EM_DIAGRAM):   title10;
952114     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
952115     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
952116     modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
952117     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
952118     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
952119     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMRANK.DATA.
952120     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
952121     %let _cn = %sysfunc(getoption(CENTER));
952122     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
952123     proc print data=EMWS1.EndGrp13_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMRANK label noobs;
952124     var
952125     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
952126     by
952127     notsorted DATAROLE
952128     notsorted TARGET
952129     notsorted TARGETLABEL
952130     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
952131     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
952132     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
952133     run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The PROCEDURE PRINT printed page 639.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
952134     title10;
MPRINT(EM_DIAGRAM):   title10;
952135     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
952136     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
952137     modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
952138     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
952139     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
952140     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMSCOREDIST.DATA.
952141     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
952142     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
952143     set EMWS1.Grp13_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_GROUPINFO;
952144     where _LOOP_=3;
MPRINT(EM_DIAGRAM):   where _LOOP_=3;
952145     call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
952146     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_GROUPINFO.
      WHERE _LOOP_=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
952147     data temp;
MPRINT(EM_DIAGRAM):    data temp;
952148     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
952149     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
952150     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
952151     set EMWS1.EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK;
952152     _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
952153     _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
952154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
952155     data EMWS1.EndGrp13_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMRANK_LOOP;
952156     set EMWS1.EndGrp13_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK_LOOP temp;
952157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP13_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMRANK_LOOP has 60 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
952158     data temp;
MPRINT(EM_DIAGRAM):    data temp;
952159     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
952160     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
952161     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
952162     set EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST;
952163     _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
952164     _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
952165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
952166     data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
952167     set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
952168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP has 60 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
952169     data temp;
MPRINT(EM_DIAGRAM):    data temp;
952170     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
952171     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
952172     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
952173     set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
952174     _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
952175     _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
952176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
952177     data EMWS1.EndGrp13_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT_LOOP;
952178     set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
952179     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT_LOOP has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
952180     data temp;
MPRINT(EM_DIAGRAM):    data temp;
952181     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
952182     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
952183     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
952184     set EMWS1.EndGrp13_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT;
952185     _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
952186     _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
952187     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
952188     data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
952189     set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
952190     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP has 63 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
952191     data temp;
MPRINT(EM_DIAGRAM):    data temp;
952192     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
952193     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
952194     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
952195     set EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION;
952196     _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
952197     _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
952198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
952199     data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
952200     set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
952201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP has 12 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
