*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:47:05 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:00 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:47:00 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32JCWMR "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32JCWMR new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMLOG_6.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:00 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMGROUP\EMOUTPUT_6.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:00 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
1947579    proc freq data=EMWS1.EndGrp13_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp13_VariableSet noprint;
1947580    table ROLE*LEVEL/out=WORK.EndGrp13META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp13META;
1947581    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.ENDGRP13META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
1947582    proc print data=WORK.EndGrp13META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13META label noobs;
1947583    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1947584    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
1947585    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1947586    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1947587    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP13META.
NOTE: The PROCEDURE PRINT printed page 1310.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1947588    title10;
MPRINT(EM_DIAGRAM):   title10;
1947589    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN
EMWS1.Neural5_TRAIN EMWS1.Neural5_TRAIN EMWS1 Neural5_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural5_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1947618    data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp13_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
1947619    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1947620    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1947621       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1947622    set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
1947623    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1947624    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1947625    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1947626    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1947627    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1947628    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1947629    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1947630    end;
MPRINT(EM_DIAGRAM):   end;
1947631    output;
MPRINT(EM_DIAGRAM):   output;
1947632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP13_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1947633    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1947634    proc print data=WORK.EndGrp13_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp13_EVENT noobs label;
1947635    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1947636    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1947637    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1947638    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP13_EVENT.
NOTE: The PROCEDURE PRINT printed page 1311.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1947639    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1947640    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
1947641    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1947642    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
1947643    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1947644    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1947645    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1947646    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1312.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1947647    title10;
MPRINT(EM_DIAGRAM):   title10;
1947648    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp13: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=302;
MPRINT(EM_DECDATA):   DATAPRIOR=0.1366568914956;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13777372262773;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1890;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86334310850439;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86222627737226;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural5_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural5_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
1948122    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1948123    * EndGrp13: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp13: Generation of macros and macro variables;
1948124    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
1948125    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
1948126    %let EMEXCEPTIONSTRING=;
1948127    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1948128    * TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp13;
1948129    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948130    %let EM_ACTION = TRAIN;
1948131    %let syscc = 0;
1948132    %macro main;
1948133       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1948134
1948135           filename temp catalog 'sashelp.emutil.endgp_train.source';
1948136           %include temp;
1948137           filename temp;
1948138
1948139           %train;
1948140
1948141       %end;
1948142       %else
1948143          %if %upcase(&EM_ACTION) = SCORE %then %do;
1948144
1948145           filename temp catalog 'sashelp.emutil.endgp_score.source';
1948146           %include temp;
1948147           filename temp;
1948148
1948149           %score;
1948150       %end;
1948151       %else
1948152       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1948153
1948154           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1948155           %include temp;
1948156           filename temp;
1948157
1948158           %postloop;
1948159
1948160       %end;
1948161
1948162       %doendm:
1948163    %mend main;
1948164
1948165    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
1948166   +%macro copyModelDs(model=, key=);
1948167   +   %let modelDs  = &em_lib..&model._&key;
1948168   +   %let reportDs = &em_lib..&em_nodeid._&key;
1948169   +   %if %sysfunc(exist(&modelDs)) %then %do;
1948170   +       data &reportDs;
1948171   +          length ModelId $16;
1948172   +          retain ModelId "&model";
1948173   +          set &modelDs;
1948174   +       run;
1948175   +   %end;
1948176   +%mend copyModelDs;
1948177   +
1948178   +%macro traintarget(groupid=);
1948179   +   %em_getname(key=emoutfit, type=DATA);
1948180   +   %let targetname=;
1948181   +   data _null_;
1948182   +     set &em_lib..&groupid._&looptype;
1948183   +     where _LOOP_ = &EMLOOPNUMBER;
1948184   +     call symput('targetname', strip(_TARGET_));
1948185   +   run;
1948186   +   %let modelId =;
1948187   +   data _null_;
1948188   +      set &em_import_data_eminfo;
1948189   +      where key = 'MODEL' and TARGET = "&targetname";
1948190   +      call symput('modelId',   strip(data));
1948191   +   run;
1948192   +   %if "&modelId" ne "" %then %do;
1948193   +       %copyModelDs(model=&modelid, key=EMRANK);
1948194   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
1948195   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
1948196   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
1948197   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
1948198   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
1948199   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1948200   +   %end;
1948201   +
1948202   +   %doendtgp:
1948203   +%mend;
1948204   +
1948205   +%macro trainboost(groupid=);
1948206   +
1948207   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
1948208   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
1948209   +
1948210   +   data _null_;
1948211   +      retain index 0;
1948212   +      set &boostinfoDs;
1948213   +      call symput('targetname', strip(_target_));
1948214   +   run;
1948215   +
1948216   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
1948217   +       %let decmeta = ;
1948218   +       data _null_;
1948219   +          set &em_import_data_eminfo;
1948220   +          where (key='DECMETA' and TARGET="&targetname");
1948221   +          call symput('DECMETA', strip(data));
1948222   +       run;
1948223   +       %if "&decmeta" eq "" %then %do;
1948224   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1948225   +           %goto doendtb;
1948226   +       %end;
1948227   +
1948228   +       %let predictedVars=;
1948229   +       data _null_;
1948230   +          set &decmeta;
1948231   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1948232   +          else
1948233   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1948234   +          else
1948235   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
1948236   +       run;
1948237   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
1948238   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
1948239   +       %end;
1948240   +   %end;
1948241   +
1948242   +   * ;
1948243   +   * ENDGROUP &NODEID : Boosting scoring ;
1948244   +   * ;
1948245   +   data &em_lib..&groupid._boostscore;
1948246   +      set &em_import_data;
1948247   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
1948248   +      %if "%em_freq" ne "" %then %do ;
1948249   +          keep %em_freq ;
1948250   +      %end ;
1948251   +   run;
1948252   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1948253   +
1948254   +   %doendtb:
1948255   +
1948256   +%mend trainboost;
1948257   +
1948258   +%macro trainbag(groupid=);
1948259   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
1948260   +   data _null_;
1948261   +      retain index 0;
1948262   +      set &baginfoDs;
1948263   +      call symput('targetname', strip(_target_));
1948264   +   run;
1948265   +
1948266   +   %let decmeta = ;
1948267   +   data _null_;
1948268   +       set &em_import_data_eminfo;
1948269   +       where (key='DECMETA' and TARGET="&targetname");
1948270   +       call symput('DECMETA', strip(data));
1948271   +   run;
1948272   +   %if "&decmeta" eq "" %then %do;
1948273   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1948274   +       %goto doendtg;
1948275   +   %end;
1948276   +
1948277   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1948278   +
1948279   +   %doendtg:
1948280   +%mend trainbag;
1948281   +
1948282   +%macro traingroup(groupid=);
1948283   +   %let targetNum = 0;
1948284   +
1948285   +   data _temp1;
1948286   +      set &em_lib..&groupid._eminfo;
1948287   +      where key='MODEL';
1948288   +   run;
1948289   +   data _temp2;
1948290   +      set &em_import_data_eminfo;
1948291   +      where key='MODEL';
1948292   +   run;
1948293   +   proc sort data=_temp1; by TARGET DATA;
1948294   +   proc sort data=_temp2; by TARGET DATA;
1948295   +   data _temp2;
1948296   +      merge _temp1(in=_a) _temp2(in=_b);
1948297   +      by TARGET DATA;
1948298   +      if ^_a and _b then output;
1948299   +   run;
1948300   +   data _null_;
1948301   +      retain index 0;
1948302   +      set _temp2 end=eof;
1948303   +      index +1;
1948304   +      where key ='MODEL';
1948305   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
1948306   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
1948307   +      if eof then
1948308   +         call symput('targetnum', strip(put(index, best.)));
1948309   +   run;
1948310   +   proc datasets lib=work nolist;
1948311   +      delete _temp1 _temp2;
1948312   +   run;
1948313   +   %if "&targetNum" eq "0" %then %goto doendtgp;
1948314   +
1948315   +   %let modelString =;
1948316   +   %do i=1 %to &targetnum;
1948317   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
1948318   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
1948319   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
1948320   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
1948321   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
1948322   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
1948323   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
1948324   +            %let modelString = &modelString &&modelid&i;
1948325   +       %end;
1948326   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1948327   +   %end;
1948328   +
1948329   +   %doendtgp:
1948330   +
1948331   +%mend traingroup;
1948332   +
1948333   +%macro getSize(data=, nobsvar=);
1948334   +
1948335   +   %if %sysfunc(exist(&data, DATA)) %then %do;
1948336   +       %let dsid = %sysfunc(open(&data));
1948337   +       %if &dsid %then %do;
1948338   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
1948339   +           %let dsid = %sysfunc(close(&dsid));
1948340   +       %end;
1948341   +   %end;
1948342   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
1948343   +        proc sql;
1948344   +           reset noprint;
1948345   +           select count(*) into :&nobsvar from &data;
1948346   +        quit;
1948347   +   %end;
1948348   +
1948349   +%mend getsize;
1948350   +
1948351   +%macro train;
1948352   +
1948353   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
1948354   +      %let EM_TOOLTYPE=UTILITY;
1948355   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
1948356   +          proc delete data=&em_data_eminfo;
1948357   +          run;
1948358   +      %end;
1948359   +      %goto doendtr;
1948360   +   %end;
1948361   +
1948362   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1948363   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1948364   +       %goto doendtr;
1948365   +   %end;
1948366   +
1948367   +   %let xgroupid = ;
1948368   +   data _null_;
1948369   +      set &em_import_data_eminfo;
1948370   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1948371   +      call symput('XGROUPID',  strip(data));
1948372   +      call symput('LOOPTYPE', strip(key));
1948373   +   run;
1948374   +
1948375   +   %if "&looptype" eq "BOOSTINFO" %then %do;
1948376   +       %let nDataObs=0;
1948377   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
1948378   +
1948379   +       %let nStartObs=0;
1948380   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
1948381   +
1948382   +       %if &nDataObs ne &nStartObs %then %do;
1948383   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
1948384   +           %goto doendtr;
1948385   +       %end;
1948386   +
1948387   +       %trainboost(groupid=&xgroupid);
1948388   +   %end;
1948389   +   %else
1948390   +   %if "&looptype" eq "BAGINFO" %then %do;
1948391   +       %trainbag(groupid=&xgroupid);
1948392   +   %end;
1948393   +   %else
1948394   +   %if "&looptype" eq "GROUPINFO" %then %do;
1948395   +       %traingroup(groupid=&xgroupid);
1948396   +   %end;
1948397   +   %else
1948398   +   %if "&looptype" eq "TARGETINFO" %then %do;
1948399   +       %traintarget(groupid=&xgroupid);
1948400   +   %end;
1948401   +
1948402   +   data &em_data_eminfo;
1948403   +      length TARGET KEY $32  DATA $43;
1948404   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
1948405   +   run;
1948406   +
1948407   +   %let EM_TOOLTYPE=MODEL;
1948408   +
1948409   +   %doendtr:
1948410   +
1948411   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp13_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP13_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural5_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMRANK.
NOTE: The data set EMWS1.ENDGRP13_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural5";
MPRINT(COPYMODELDS):   set EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp13_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp13";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948412    *------------------------------------------------------------*;
1948413    * End TRAIN: EndGrp13;
1948414    *------------------------------------------------------------*;
1948415
 
1948416    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1948417    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
1948418    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948419    ;
MPRINT(EM_DIAGRAM):   ;
1948420    ;
MPRINT(EM_DIAGRAM):   ;
1948421    ;
MPRINT(EM_DIAGRAM):   ;
1948422    ;
MPRINT(EM_DIAGRAM):   ;
1948423    quit;
MPRINT(EM_DIAGRAM):   quit;
1948424    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948425    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
1948426    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948427    /*; *"; *'; */
1948428    ;
MPRINT(EM_DIAGRAM):   ;
1948429    run;
MPRINT(EM_DIAGRAM):   run;
1948430    quit;
MPRINT(EM_DIAGRAM):   quit;
1948431    /* Reset EM Options */
1948432    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
1948433    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
1948434    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:03 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:47:03 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0VFI8Z8 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0VFI8Z8 new;
MPRINT(EM_DIAGRAM):   run;
1948536    %let EMEXCEPTIONSTRING=;
1948537    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1948538    * SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp13;
1948539    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948540    %let EM_ACTION = SCORE;
1948541    %let syscc = 0;
1948542    %macro main;
1948543       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1948544
1948545           filename temp catalog 'sashelp.emutil.endgp_train.source';
1948546           %include temp;
1948547           filename temp;
1948548
1948549           %train;
1948550
1948551       %end;
1948552       %else
1948553          %if %upcase(&EM_ACTION) = SCORE %then %do;
1948554
1948555           filename temp catalog 'sashelp.emutil.endgp_score.source';
1948556           %include temp;
1948557           filename temp;
1948558
1948559           %score;
1948560       %end;
1948561       %else
1948562       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1948563
1948564           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1948565           %include temp;
1948566           filename temp;
1948567
1948568           %postloop;
1948569
1948570       %end;
1948571
1948572       %doendm:
1948573    %mend main;
1948574
1948575    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
1948576   +%macro scoreTables(data=, out=, scoreref=, prescore=);
1948578   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
1948579   +       data &out / view=&out;
1948580   +          set &data
1948582   +          %if "&prescore" = "Y" %then %do;
1948583   +              (obs=1)
1948584   +          %end;
1948586   +          ;
1948588   +          %inc &scoreref;
1948590   +          %if "&prescore" eq "Y" %then %do;
1948591   +              drop I_: R_:;
1948592   +          %end;
1948594   +       run;
1948595   +   %end;
1948597   +%mend scoretables;
1948599   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
1948600   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
1948601   +   data _null_;
1948602   +      retain index 0;
1948603   +      set &infoDs;
1948604   +      call symput('targetname', strip(_target_));
1948605   +      call symput('endloopnum', strip(_loop_));
1948606   +   run;
1948608   +   %let endgrp_decmeta=;
1948609   +   %let endgrp_decdata=;
1948611   +   data _null_;
1948612   +      set &em_import_data_eminfo;
1948613   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
1948614   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
1948615   +      else
1948616   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
1948617   +      else call symput('MODELID', strip(data));
1948618   +   run;
1948620   +   %let headerString= Boosting;
1948621   +   %let prefixString= _BoostVar;
1948623   +   %if "&type" = "BAGINFO" %then %do;
1948624   +        %let headerString = Bagging;
1948625   +        %let prefixString= _BagVar;
1948626   +   %end;
1948628   +   %let targetType=;
1948629   +   %let predictedVars=;
1948630   +   data _null_;
1948631   +      retain index;
1948632   +      set &endgrp_decmeta end=eof;
1948633   +      length tempvar $200;
1948634   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
1948635   +      else
1948636   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1948637   +      else
1948638   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1948639   +      else
1948640   +      if _TYPE_ = 'PREDICTED' then do;
1948641   +         index+1;
1948642   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
1948643   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
1948644   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
1948645   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
1948646   +      end;
1948647   +      if eof then
1948648   +         call symput('prednum', strip(put(index, best.)));
1948649   +   run;
1948651   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
1948652   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
1948654   +   filename loopflow "&em_user_loopflowcode";
1948655   +   filename looppub "&em_user_looppubcode";
1948657   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
1948658   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
1948660   +   %if "&emloopnumber" = "1" %then %do;
1948661   +       data _null_;
1948662   +          rc = fdelete('loopflow');
1948663   +          rc = fdelete('looppub');
1948664   +       run;
1948665   +       data _null_;
1948666   +          file loopflow;
1948667   +          put "&em_codebar;";
1948668   +          put "* &em_nodeid: ;" ;
1948669   +          put "* User: &sysuserid;";
1948670   +          put "* Date: &sysdate: &systime;";
1948671   +          put "&em_codebar ;";
1948672   +          put "* Ensemble Code;";
1948673   +          put "&em_codebar ;";
1948674   +          put "* &headerString: Loop=1;";
1948675   +          put "* Temporary Variables;";
1948676   +          %do i= 1 %to &prednum;
1948677   +              put "drop &&tempvars&i;";
1948678   +              put "&&tempvars&i = 0;";
1948679   +          %end;
1948680   +       run;
1948681   +       %em_copyfile(infref=loopflow, outfref=looppub);
1948682   +   %end;
1948684   +   %let j=&emloopnumber;
1948685   +   %do i = 1 %to &loopcodenum;
1948686   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
1948687   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
1948689   +       %if (&&loopnode&i eq &em_nodeid ) or
1948690   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
1948691   +           data _null_;
1948692   +              file loopflow mod;
1948693   +              put "&em_codebar;";
1948694   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1948695   +              put "* User: &sysuserid;";
1948696   +              put "* Date: &sysdate: &systime;";
1948697   +              put "* &headerString: Loop=&j;";
1948698   +              put "&em_codebar;";
1948699   +           run;
1948700   +           data _null_;
1948701   +              file looppub mod;
1948702   +              put "&em_codebar;";
1948703   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1948704   +              put "* User: &sysuserid;";
1948705   +              put "* Date: &sysdate: &systime;";
1948706   +              put "* &headerString: Loop=&j;";
1948707   +              put "&em_codebar;";
1948708   +           run;
1948709   +       %end;
1948711   +       %if &&loopnode&i ne &em_nodeid %then %do;
1948712   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
1948713   +               filename x catalog "&fsourceEntry";
1948714   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
1948715   +               filename x;
1948717   +               filename y catalog "&psourceEntry";
1948718   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
1948719   +               filename y;
1948720   +           %end;
1948721   +       %end;
1948722   +       %else %do;
1948723   +           %if "&j" ne "1" %then %do;
1948724   +               %let weight = %eval(&j-1);
1948725   +               data _null_;
1948726   +                  file loopflow mod;
1948727   +                  put "&em_codebar;";
1948728   +                  %if "&j" ne "&endloopnum" %then %do;
1948729   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1948730   +                  %end;
1948731   +                  %else %do;
1948732   +                      put "* &headerString: accumulate final probabilities;";
1948733   +                  %end;
1948734   +                  put "&em_codebar;";
1948735   +                  %do k=1 %to &prednum;
1948736   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1948737   +                  %end;
1948738   +               run;
1948739   +               data _null_;
1948740   +                  file looppub mod;
1948741   +                  put "&em_codebar;";
1948742   +                  %if "&j" ne "&endloopnum" %then %do;
1948743   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1948744   +                  %end;
1948745   +                  %else %do;
1948746   +                      put "* &headerString: accumulate final probabilities;";
1948747   +                  %end;
1948748   +                  %do k=1 %to &prednum;
1948749   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1948750   +                  %end;
1948751   +               run;
1948752   +           %end;
1948753   +           %if "&j" ne "&endloopnum" %then %do;
1948754   +               data _null_;
1948755   +                  file loopflow mod;
1948756   +                  put "&em_codebar;";
1948757   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1948758   +                  put "&em_codebar;";
1948759   +               %do k=1 %to &prednum;
1948760   +                  put "&&tempvars&k = &&predvars&k;";
1948761   +               %end;
1948762   +               run;
1948763   +               data _null_;
1948764   +                  file looppub mod;
1948765   +                  put "&em_codebar;";
1948766   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1948767   +                  put "&em_codebar;";
1948768   +               %do k=1 %to &prednum;
1948769   +                   put "&&tempvars&k = &&predvars&k;";
1948770   +               %end;
1948771   +               run;
1948772   +           %end;
1948774   +       %end;
1948775   +   %end;
1948777   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
1948778   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
1948780   +   filename loopflow;
1948781   +   filename looppub;
1948782   +   filename empub;
1948784   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
1948785   +   %let gpTrain=;
1948786   +   %let gpValidate=;
1948787   +   %let gpTest=;
1948789   +   data _null_;
1948790   +      set &groupImportDs;
1948791   +      select(upcase(port));
1948792   +          when('DATA')     call symput('gpTrain',    strip(dataset));
1948793   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
1948794   +          when('TEST')     call symput('gpTest',     strip(dataset));
1948795   +       otherwise;
1948796   +      end;
1948797   +   run;
1948799   +   %if "&gpTrain" ne "" %then %do;
1948801   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
1948803   +       %if &targetType ne INTERVAL %then %do;
1948804   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
1948805   +       %end;
1948807   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
1948809   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
1948811   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
1948812   +                                                           noresfile=, resfile=%nrbquote(&decflow));
1948814   +       filename _decflow "&decflow";
1948815   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
1948816   +       filename _decflow;
1948818   +   %end;
1948820   +   %if "&gpTrain" ne "" %then
1948821   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
1948822   +   %if "&gpValidate" ne "" %then
1948823   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
1948824   +   %if "&gpTest" ne "" %then
1948825   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
1948827   +   filename emflow;
1948829   +%mend boostbagcode;
1948831   +%macro score;
1948833   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
1948834   +   %inc _dec;
1948835   +   filename _dec;
1948837   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
1948839   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1948840   +       %let emexceptionstring = nomodeltarget;
1948841   +       %goto doendpl;
1948842   +   %end;
1948844   +   %LET GROUPID=;
1948845   +   %let LOOPTYPE=;
1948846   +   data _null_;
1948847   +      set &em_import_data_eminfo;
1948848   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1948849   +      call symput('GROUPID',   strip(data));
1948850   +      call symput('LOOPTYPE', strip(key));
1948851   +   run;
1948853   +   %em_getname(key=PATH, type=DATA);
1948855   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
1948856   +   %include temp;
1948857   +   filename temp;
1948859   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
1948861   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
1948862   +       %let deleteString = &em_nodeid._path;
1948863   +       proc datasets lib=&em_lib nolist;
1948864   +          delete &deleteString;
1948865   +       run;
1948866   +       quit;
1948867   +   %end;
1948869   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
1948871   +   data score_path;
1948872   +      retain LOOPID &emloopnumber;
1948873   +      set score_path;
1948874   +   run;
1948876   +   proc append base=&em_user_path  data=score_path;
1948877   +   run;
1948879   +   %let EnsembleIndex=0;
1948880   +   data _null_;
1948881   +      retain index 0 ensembleIndex 0;
1948882   +      set score_Path end=eof;
1948883   +      if nodelabel = "&groupid" or index then do;
1948884   +         index + 1;
1948885   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
1948886   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
1948887   +      end;
1948888   +      if component='Ensemble' then ensembleIndex = index;
1948889   +      if eof then do;
1948890   +         call symput('loopcodenum', strip(put(index, best.)));
1948891   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
1948892   +      end;
1948893   +   run;
1948895   +   proc datasets lib=work nolist;
1948896   +      delete score_Path;
1948897   +   run;
1948898   +   quit;
1948900   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
1948901   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
1948903   +   %doendpl:
1948905   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
1948906   +/*
1948907   +       MACRO: EM_DECIDECODE
1948908   +
1948909   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
1948910   +       SUPPORT: Taiyeong Lee
1948911   +
1948912   +       HISTORY: 01OCT04 Initial code
1948913   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
1948914   +                to add the corresponding decision code
1948915   +
1948916   +*/
1948917   +
1948918   +
1948919   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
1948920   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
1948921   +
1948922   +    %do;
1948923   +    %let m_data      = &data;
1948924   +    %let m_decdata   = &decdata;
1948925   +    %let m_decmeta   = &decmeta;
1948926   +    %let m_noresfile = &noresfile;
1948927   +    %let m_resfile   = &resfile;
1948928   +    dm "afa c=sashelp.emutil.decidecode.scl";
1948929   +  %end;
1948930   +%mend EM_DECIDECODE;
1948931   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural5_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
1948932   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
1948933   +   proc display c=sashelp.emcore.pathscorecode.scl;
1948934   +   run;
1948935   +%mend EM_GETTRAINPATH;
1948936   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
1948937    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
1948938    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
1948939    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
1948940    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
1948941    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1948942    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
1948943    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
1948944    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948945    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948946    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948947    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948948    output;
MPRINT(EM_GETTRAINPATH):   output;
1948949    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
1948950    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
1948951    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
1948952    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
1948953    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1948954    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948955    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948956    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948957    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948958    output;
MPRINT(EM_GETTRAINPATH):   output;
1948959    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
1948960    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
1948961    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
1948962    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
1948963    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1948964    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948965    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948966    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948967    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948968    output;
MPRINT(EM_GETTRAINPATH):   output;
1948969    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
1948970    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
1948971    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1948972    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1948973    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1948974    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948975    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948976    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948977    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948978    output;
MPRINT(EM_GETTRAINPATH):   output;
1948979    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
1948980    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
1948981    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1948982    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1948983    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1948984    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948985    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948986    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948987    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948988    output;
MPRINT(EM_GETTRAINPATH):   output;
1948989    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
1948990    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
1948991    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1948992    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1948993    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1948994    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1948995    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1948996    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1948997    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1948998    output;
MPRINT(EM_GETTRAINPATH):   output;
1948999    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
1949000    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
1949001    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1949002    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1949003    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1949004    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949005    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949006    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949007    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949008    output;
MPRINT(EM_GETTRAINPATH):   output;
1949009    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
1949010    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
1949011    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1949012    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1949013    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1949014    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949015    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949016    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949017    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949018    output;
MPRINT(EM_GETTRAINPATH):   output;
1949019    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
1949020    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
1949021    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1949022    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1949023    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1949024    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949025    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949026    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949027    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949028    output;
MPRINT(EM_GETTRAINPATH):   output;
1949029    nodelabel="Grp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp13";
1949030    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
1949031    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1949032    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
1949033    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1949034    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949035    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949036    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949037    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949038    output;
MPRINT(EM_GETTRAINPATH):   output;
1949039    nodelabel="Neural5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural5";
1949040    parent="Grp13";
MPRINT(EM_GETTRAINPATH):   parent="Grp13";
1949041    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
1949042    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
1949043    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1949044    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949045    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949046    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949047    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949048    output;
MPRINT(EM_GETTRAINPATH):   output;
1949049    nodelabel="EndGrp13";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp13";
1949050    parent="Neural5";
MPRINT(EM_GETTRAINPATH):   parent="Neural5";
1949051    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1949052    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
1949053    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1949054    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1949055    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1949056    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1949057    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1949058    output;
MPRINT(EM_GETTRAINPATH):   output;
1949059    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 6;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp13_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP13_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP13_PATH has 72 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp13" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp13;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949060    *------------------------------------------------------------*;
1949061    * End SCORE: EndGrp13;
1949062    *------------------------------------------------------------*;
1949063
 
1949064    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1949065    * EndGrp13: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Scoring DATA data;
1949066    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949067    data EMWS1.EndGrp13_TRAIN
1949068    / view=EMWS1.EndGrp13_TRAIN
1949069    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_TRAIN / view=EMWS1.EndGrp13_TRAIN ;
1949070    set EMWS1.Neural5_TRAIN
1949071    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_TRAIN ;
1949072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP13_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1949073    quit;
 
1949075    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
1949076    * EndGrp13: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp13: Computing metadata for TRAIN data;
1949077    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp13_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp13_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp13_TRAIN out=WORK.M34ZJ3LO noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34ZJ3LO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M34ZJ3LO(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34ZJ3LO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M34ZJ3LO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0DIOYL_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TISKNK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DIOYL_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp13";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp13";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp13";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp13: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1949423    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1949424    set EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO;
1949425    where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
1949426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMINFO.
      WHERE (DATA='EndGrp13') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949427    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMINFO;
1949428    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1949429    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1949430    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1949434    run;
1949435    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
1949436    set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMINFO WORK.MODELTEMP_INFO;
1949437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949438    proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp13_EMINFO NOTHREADS;
1949439    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1949440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949441    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1949442    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1949443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1949444    proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1949445    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1949446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949447    data EMWS1.EndGrp13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp13_EMINFO;
1949448    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1949449    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1949450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP13_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1949451    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1949452    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1949453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1949454    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:04 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:47:04 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O21_7HJ8 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp13\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O21_7HJ8 new;
MPRINT(EM_DIAGRAM):   run;
1949478    data EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT;
1949479    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
1949480    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1949481    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1949482    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1949483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1949484    proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMREPORTFIT nothreads;
1949485    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1949486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949487    %let _EMwarndup = 0;
1949488    %let _EMtargetdup =;
1949489    %let _EMASEtargetdup =;
1949490    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1949491    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
1949492    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1949493    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1949494    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1949495    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1949496    end;
MPRINT(EM_DIAGRAM):   end;
1949497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949498    proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_CMeta_TRAIN out=WORK.SUBSETINMETA;
1949499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1949500    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1949501    proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp13_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
1949502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1949503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1949504    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1949505    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1949506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1949507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1949508    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1949509    set EMWS1.EndGrp13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_CMeta_TRAIN;
1949510    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
1949511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP13_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1949512    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1949513    set EMWS1.EndGrp13_TRAIN(keep=
1949514    F_DepVar
1949515    I_DepVar
1949516    P_DepVar0
1949517    P_DepVar1
1949518    R_DepVar0
1949519    R_DepVar1
1949520    U_DepVar
1949521    _WARN_
1949522    DepVar
1949523    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1949524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2192 observations read from the data set EMWS1.GRP13_TRAIN.
NOTE: View EMWS1.ENDGRP13_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2192 observations read from the data set EMWS1.NEURAL5_TRAIN.
NOTE: There were 2192 observations read from the data set EMWS1.ENDGRP13_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2192 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
1953711    %let _cn = %sysfunc(getoption(CENTER));
1953712    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1953713    proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMREPORTFIT noobs label;
1953714    var STAT LABEL TRAIN
1953715    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
1953716    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1953717    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1953718    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1953719    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1313.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1953720    title10;
MPRINT(EM_DIAGRAM):   title10;
1953721    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1953722    proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp13_EMCLASSIFICATION nothreads;
1953723    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1953724    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953725    %let _cn = %sysfunc(getoption(CENTER));
1953726    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1953727    proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMCLASSIFICATION noobs label;
1953728    var from into pct_row pct_col count percent
1953729    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1953730    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1953731    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1953732    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1953733    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1953734    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1953735    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1953736    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1953737    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1953738    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1953739    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1953740    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1314.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1953741    title9;
MPRINT(EM_DIAGRAM):   title9;
1953742    title10;
MPRINT(EM_DIAGRAM):   title10;
1953743    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1953744    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1953745    modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1953746    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1953747    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1953748    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMRANK.DATA.
1953749    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
 
1953750    %let _cn = %sysfunc(getoption(CENTER));
1953751    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1953752    proc print data=EMWS1.EndGrp13_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp13_EMRANK label noobs;
1953753    var
1953754    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1953755    by
1953756    notsorted DATAROLE
1953757    notsorted TARGET
1953758    notsorted TARGETLABEL
1953759    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1953760    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1953761    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1953762    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1315.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1953763    title10;
MPRINT(EM_DIAGRAM):   title10;
1953764    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1953765    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1953766    modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1953767    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1953768    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1953769    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP13_EMSCOREDIST.DATA.
1953770    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
1953771    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1953772    set EMWS1.Grp13_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_GROUPINFO;
1953773    where _LOOP_=6;
MPRINT(EM_DIAGRAM):   where _LOOP_=6;
1953774    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
1953775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_GROUPINFO.
      WHERE _LOOP_=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1953776    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1953777    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1953778    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1953779    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1953780    set EMWS1.EndGrp13_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK;
1953781    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
1953782    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
1953783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953784    data EMWS1.EndGrp13_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMRANK_LOOP;
1953785    set EMWS1.EndGrp13_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMRANK_LOOP temp;
1953786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP13_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMRANK_LOOP has 120 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953787    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1953788    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1953789    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1953790    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1953791    set EMWS1.EndGrp13_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST;
1953792    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
1953793    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
1953794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953795    data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMSCOREDIST_LOOP;
1953796    set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMSCOREDIST_LOOP temp;
1953797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMSCOREDIST_LOOP has 120 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953798    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1953799    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1953800    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1953801    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1953802    set EMWS1.EndGrp13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT;
1953803    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
1953804    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
1953805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1953806    data EMWS1.EndGrp13_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMOUTFIT_LOOP;
1953807    set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMOUTFIT_LOOP temp;
1953808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.ENDGRP13_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMOUTFIT_LOOP has 6 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1953809    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1953810    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1953811    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1953812    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1953813    set EMWS1.EndGrp13_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT;
1953814    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
1953815    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
1953816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953817    data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMREPORTFIT_LOOP;
1953818    set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMREPORTFIT_LOOP temp;
1953819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMREPORTFIT_LOOP has 126 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1953820    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1953821    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1953822    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1953823    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1953824    set EMWS1.EndGrp13_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION;
1953825    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
1953826    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
1953827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1953828    data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp13_EMCLASSIFICATION_LOOP;
1953829    set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp13_EMCLASSIFICATION_LOOP temp;
1953830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP13_EMCLASSIFICATION_LOOP has 24 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
