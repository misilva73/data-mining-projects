*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:57:05 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:56:55 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:56:55 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PU3X2W "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PU3X2W new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMGROUP\EMLOG_9.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:56:55 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMGROUP\EMOUTPUT_9.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:56:55 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2811726    proc freq data=EMWS1.Neural2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Neural2_VariableSet noprint;
2811727    table ROLE*LEVEL/out=WORK.Neural2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Neural2META;
2811728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_VARIABLESET.
NOTE: The data set WORK.NEURAL2META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
2811729    proc print data=WORK.Neural2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural2META label noobs;
2811730    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2811731    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2811732    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2811733    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2811734    run;
 
NOTE: There were 3 observations read from the data set WORK.NEURAL2META.
NOTE: The PROCEDURE PRINT printed page 1845.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2811735    title10;
MPRINT(EM_DIAGRAM):   title10;
2811736    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN EMWS1 Grp10_TRAIN
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN EMWS1 Grp10_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp10_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural2_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_DepVar_DD out=EMWS1.Neural2_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
2811783    data WORK.Neural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2811784    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2811785    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2811786       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2811787    set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
2811788    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2811789    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2811790    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2811791    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2811792    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2811793    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2811794    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2811795    end;
MPRINT(EM_DIAGRAM):   end;
2811796    output;
MPRINT(EM_DIAGRAM):   output;
2811797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2811798    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2811799    proc print data=WORK.Neural2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural2_EVENT noobs label;
2811800    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2811801    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2811802    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2811803    run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL2_EVENT.
NOTE: The PROCEDURE PRINT printed page 1846.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2811804    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2811805    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
2811806    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2811807    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2811808    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2811809    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2811810    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2811811    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1847.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2811812    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M20SS3_A;
MPRINT(EM_DIAGRAM):   set WORK.M20SS3_A;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
2811822    data WORK.M20SS3_A;
MPRINT(EM_DIAGRAM):    data WORK.M20SS3_A;
2811823    set WORK.M20SS3_A end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M20SS3_A end=eof;
2811824    output;
MPRINT(EM_DIAGRAM):   output;
2811825    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
2811826    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
2811827    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
2811828    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2811829    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2811830    output;
MPRINT(EM_DIAGRAM):   output;
2811831    end;
MPRINT(EM_DIAGRAM):   end;
2811832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.M20SS3_A.
NOTE: The data set WORK.M20SS3_A has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS1.NEURAL2_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: There were 2 observations read from the data set EMWS1.NEURAL2_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
2811833    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2811834    * Neural2: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural2: Create decision matrix;
2811835    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811836    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
2811837      length   DepVar                           $  32
The SAS System
 
2811838               COUNT                                8
2811839               DATAPRIOR                            8
2811840               TRAINPRIOR                           8
2811841               DECPRIOR                             8
2811842               DECISION1                            8
2811843               DECISION2                            8
2811844               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
2811845
2811846      label    COUNT="Level Counts"
2811847               DATAPRIOR="Data Proportions"
2811848               TRAINPRIOR="Training Proportions"
2811849               DECPRIOR="Decision Priors"
2811850               DECISION1="1"
2811851               DECISION2="0"
2811852               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
2811853      format   COUNT 10.
2811854               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
2811855    DepVar="1"; COUNT=304; DATAPRIOR=0.13673708920187; TRAINPRIOR=0.13681368136813; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=304;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.13681368136813;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
2811856    output;
MPRINT(EM_DIAGRAM):   output;
2811857    DepVar="0"; COUNT=1918; DATAPRIOR=0.86326291079812; TRAINPRIOR=0.86318631863186; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=1918;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.86318631863186;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
2811858    output;
MPRINT(EM_DIAGRAM):   output;
2811859    ;
MPRINT(EM_DIAGRAM):   ;
2811860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2811861    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2811862    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
2811863    label DECISION1= '1';
2811864    label DECISION2= '0';
2811865    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
2811866    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
2811867    data EM_Neural2;
MPRINT(EM_DIAGRAM):   data EM_Neural2;
2811868    set EMWS1.Grp10_TRAIN(keep=
2811869    DepVar Marital_Status MntCard_Games MntMagazines NumCatalogPurchases
2811870    NumDealsPurchases NumWebPurchases RANGE_Frq RANGE_Recency
2811871    RANGE_average_purchase RANGE_campaign_acceptance );
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_TRAIN(keep= DepVar Marital_Status MntCard_Games MntMagazines NumCatalogPurchases NumDealsPurchases NumWebPurchases RANGE_Frq RANGE_Recency RANGE_average_purchase RANGE_campaign_acceptance );
2811872    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2222 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: The data set WORK.EM_NEURAL2 has 2222 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811873    *------------------------------------------------------------* ;
2811874    * Neural2: DMDBClass Macro ;
2811875    *------------------------------------------------------------* ;
2811876    %macro DMDBClass;
2811877        DepVar(DESC) Marital_Status(ASC)
2811878    %mend DMDBClass;
2811879    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811880    * Neural2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural2: DMDBVar Macro ;
2811881    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811882    %macro DMDBVar;
2811883        MntCard_Games MntMagazines NumCatalogPurchases NumDealsPurchases
2811884       NumWebPurchases RANGE_Frq RANGE_Recency RANGE_average_purchase
2811885       RANGE_campaign_acceptance
2811886    %mend DMDBVar;
2811887    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811888    * Neural2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural2: Create DMDB;
2811889    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811890    proc dmdb batch data=WORK.EM_Neural2
2811891    dmdbcat=WORK.Neural2_DMDB
2811892    maxlevel = 513
2811893    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural2 dmdbcat=WORK.Neural2_DMDB maxlevel = 513 ;
2811894    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
2811895    var %DMDBVar;
MPRINT(EM_DIAGRAM):   var
MPRINT(DMDBVAR):   MntCard_Games MntMagazines NumCatalogPurchases NumDealsPurchases NumWebPurchases RANGE_Frq RANGE_Recency RANGE_average_purchase RANGE_campaign_acceptance
MPRINT(EM_DIAGRAM):  ;
2811896    target
2811897    DepVar
2811898    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2811899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2222   Memory used = 511K.
NOTE: There were 2222 observations read from the data set WORK.EM_NEURAL2.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2811900    quit;
2811901    *--- end code ---*;
 
2811902    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2811903    * Neural2: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural2: Interval Input Variables Macro ;
2811904    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811905    %macro INTINPUTS;
2811906        MntCard_Games MntMagazines NumCatalogPurchases NumDealsPurchases
2811907       NumWebPurchases RANGE_Frq RANGE_Recency RANGE_average_purchase
2811908       RANGE_campaign_acceptance
2811909    %mend INTINPUTS;
2811910    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811911    * Neural2: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural2: Binary Inputs Macro ;
2811912    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811913    %macro BININPUTS;
2811914
2811915    %mend BININPUTS;
2811916    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811917    * Neural2: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural2: Nominal Inputs Macro ;
2811918    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811919    %macro NOMINPUTS;
2811920        Marital_Status
2811921    %mend NOMINPUTS;
2811922    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811923    * Neural2: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural2: Ordinal Inputs Macro ;
2811924    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2811925    %macro ORDINPUTS;
2811926
2811927    %mend ORDINPUTS;
2811928    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811929    * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
2811930    ;
MPRINT(EM_DIAGRAM):   ;
2811931    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811932    proc neural data=EM_Neural2 dmdbcat=WORK.Neural2_DMDB
2811933    random=12345
2811934    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural2 dmdbcat=WORK.Neural2_DMDB random=12345 ;
2811935    nloptions
2811936    ;
MPRINT(EM_DIAGRAM):   nloptions ;
2811937    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
2811938    netopts
2811939    decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
2811940    input %INTINPUTS / level=interval id=intvl
MPRINT(EM_DIAGRAM):   input
MPRINT(INTINPUTS):   MntCard_Games MntMagazines NumCatalogPurchases NumDealsPurchases NumWebPurchases RANGE_Frq RANGE_Recency RANGE_average_purchase RANGE_campaign_acceptance
2811941    ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
2811942    input %NOMINPUTS / level=nominal id=nom
MPRINT(EM_DIAGRAM):   input
MPRINT(NOMINPUTS):   Marital_Status
2811943    ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
2811944    target DepVar / level=NOMINAL id=DepVar
2811945    bias
2811946    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar bias ;
2811947    arch MLP
2811948    Hidden=4
2811949    ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=4 ;
2811950    Prelim 5 preiter=10
2811951    pretime=3600
2811952    Outest=EMWS1.Neural2_PRELIM_OUTEST
2811953    ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS1.Neural2_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set EMWS1.NEURAL2_PRELIM_OUTEST has 11 observations and 72 variables.
2811954    save network=EMWS1.Neural2_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS1.Neural2_NETWORK.dm_neural;
NOTE: Entry EMWS1.NEURAL2_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL2_NETWORK.DM_NEURAL has been closed.
2811955    train Maxiter=50
2811956    maxtime=14400
2811957    Outest=EMWS1.Neural2_outest estiter=1
2811958    Outfit=EMWS1.Neural2_OUTFIT
2811959    ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS1.Neural2_outest estiter=1 Outfit=EMWS1.Neural2_OUTFIT ;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set EMWS1.NEURAL2_OUTEST has 114 observations and 72 variables.
NOTE: The data set EMWS1.NEURAL2_OUTFIT has 104 observations and 23 variables.
2811960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL2 has 2222 observations and 11 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 1848-1851.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.78 seconds
      cpu time            2.79 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2811961    quit;
 
2811962    proc sort data=EMWS1.Neural2_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural2;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural2;
2811963    by _AVERR_;
MPRINT(EM_DIAGRAM):   by _AVERR_;
2811964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL2_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL2 has 52 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2811965    %GLOBAL ITER;
2811966    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2811967    set fit_Neural2(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural2(obs=1);
2811968    call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
2811969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL2.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2811970    data EMWS1.Neural2_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_INITIAL;
2811971    set EMWS1.Neural2_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_outest(where=(_ITER_ eq 50 and _OBJ_ ne .));
2811972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.NEURAL2_OUTEST.
      WHERE (_ITER_=50) and (_OBJ_ not = .);
NOTE: The data set EMWS1.NEURAL2_INITIAL has 2 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2811973    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2811974    * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
2811975    ;
MPRINT(EM_DIAGRAM):   ;
2811976    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2811977    proc neural data=EM_Neural2 dmdbcat=WORK.Neural2_DMDB
2811978    network = EMWS1.Neural2_NETWORK.dm_neural
2811979    random=12345
2811980    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural2 dmdbcat=WORK.Neural2_DMDB network = EMWS1.Neural2_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS1.NEURAL2_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS1.NEURAL2_NETWORK.DM_NEURAL has been closed.
2811981    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
2811982    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
2811983    initial inest=EMWS1.Neural2_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS1.Neural2_INITIAL;
NOTE: The data set EMWS1.NEURAL2_INITIAL has 2 observations and 72 variables.
2811984    train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
2811985    code file="C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\SCORECODE.sas"
2811986    group=Neural2_9
2811987    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\SCORECODE.sas" group=Neural2_9 ;
NOTE: External file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\SCORECODE.sas opened.
2811988    ;
MPRINT(EM_DIAGRAM):   ;
2811989    code file="C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\RESIDUALSCORECODE.sas"
2811990    group=Neural2_9
2811991    residual
2811992    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\RESIDUALSCORECODE.sas" group=Neural2_9 residual ;
NOTE: External file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\RESIDUALSCORECODE.sas opened.
2811993    ;
MPRINT(EM_DIAGRAM):   ;
2811994    score data=EMWS1.Grp10_TRAIN out=_NULL_
2811995    outfit=WORK.FIT1
2811996    role=TRAIN
2811997    outkey=EMWS1.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS1.Grp10_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN outkey=EMWS1.Neural2_OUTKEY;
NOTE: The data set EMWS1.NEURAL2_OUTKEY has 29 observations and 8 variables.
NOTE: The data set EMWS1.GRP10_TRAIN has 2222 observations and 14 variables.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
2811998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL2 has 2222 observations and 11 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2811999    quit;
2812000    data EMWS1.Neural2_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_OUTFIT;
2812001    merge WORK.FIT1;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1;
2812002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: The data set EMWS1.NEURAL2_OUTFIT has 2 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812003    data EMWS1.Neural2_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMESTIMATE;
2812004    set EMWS1.Neural2_outest;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_outest;
2812005    if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
2812006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 114 observations read from the data set EMWS1.NEURAL2_OUTEST.
NOTE: The data set EMWS1.NEURAL2_EMESTIMATE has 52 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2812007    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2812008    delete EM_Neural2;
MPRINT(EM_DIAGRAM):   delete EM_Neural2;
2812009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL2 (memtype=DATA).
2812010    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
2812011    data EMWS1.Neural2_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
2812012    set fit_Neural2;
MPRINT(EM_DIAGRAM):   set fit_Neural2;
2812013    attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
2812014    attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
2812015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL2.
NOTE: The data set EMWS1.NEURAL2_PLOTDS has 52 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2812016    proc sort data=EMWS1.Neural2_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_PLOTDS;
2812017    by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
2812018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL2_PLOTDS.
NOTE: The data set EMWS1.NEURAL2_PLOTDS has 52 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812019    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 50) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 50) );
2812020    set EMWS1.Neural2_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMESTIMATE;
2812021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL2_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 2 observations and 64 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2812022    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
2812023    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
2812024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 2 observations and 64 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812025    proc transpose data=tempweight out=EMWS1.Neural2_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS1.Neural2_WEIGHTDS;
2812026    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
2812027    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS1.NEURAL2_WEIGHTDS has 124 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
2812028    data EMWS1.Neural2_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_WEIGHTDS;
2812029    set EMWS1.Neural2_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_WEIGHTDS;
2812030    FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
2812031    TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
2812032    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
2812033    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
2812034    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
2812035       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
2812036    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
2812037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 124 observations read from the data set EMWS1.NEURAL2_WEIGHTDS.
NOTE: The data set EMWS1.NEURAL2_WEIGHTDS has 122 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812038    proc sort data=EMWS1.Neural2_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_WEIGHTDS nodupkey;
2812039    by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
2812040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 122 observations read from the data set EMWS1.NEURAL2_WEIGHTDS.
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.NEURAL2_WEIGHTDS has 61 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:57:01 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:57:01 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3TOMVZE "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3TOMVZE new;
MPRINT(EM_DIAGRAM):   run;
2812142    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
2812143    set EMWS1.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_OUTKEY;
2812144    if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
2812145    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS1.NEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812146    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2812147    *------------------------------------------------------------*;
2812148    * Neural2: Scoring DATA data;
2812149    *------------------------------------------------------------*;
2812150    data EMWS1.Neural2_TRAIN
2812151    / view=EMWS1.Neural2_TRAIN
2812152    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_TRAIN / view=EMWS1.Neural2_TRAIN ;
2812153    set EMWS1.Grp10_TRAIN
2812154    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_TRAIN ;
2812155    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas.
2812156   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2812157   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2812158   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2812159   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2812160   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2812161   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2812162   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2812163   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2812164   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2812165   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2812166   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2812167   +LENGTH _WARN_ $4
2812168   +      F_DepVar  $ 12
2812169   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2812170   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
2812171   +
2812172   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
2812173   +
2812174   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2812175   +
2812176   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2812177   +
2812178   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2812179   +
2812180   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
2812181   +
2812182   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
2812183   +
2812184   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
2812185   +
2812186   +      label S_RANGE_campaign_acceptance =
2812187   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
2812188   +
2812189   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2812190   +
2812191   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2812192   +
2812193   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2812194   +
2812195   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2812196   +
2812197   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2812198   +
2812199   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2812200   +
2812201   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2812202   +
2812203   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2812204   +
2812205   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2812206   +
2812207   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2812208   +
2812209   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2812210   +
2812211   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2812212   +
2812213   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2812214   +
2812215   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2812216   +
2812217   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2812218   +
2812219   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2812220   +
2812221   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2812222   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2812223   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
2812224   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2812225   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2812226   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2812227   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2812228   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2812229   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2812230   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2812231   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2812232   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2812233   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2812234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2812235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2812236   +end;
MPRINT(EM_DIAGRAM):   end;
2812237   +else do;
MPRINT(EM_DIAGRAM):   else do;
2812238   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2812239   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2812240   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2812241   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2812242   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2812243   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2812244   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2812245   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2812246   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2812247   +         end;
MPRINT(EM_DIAGRAM):   end;
2812248   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2812249   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2812250   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2812251   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2812252   +            end;
MPRINT(EM_DIAGRAM):   end;
2812253   +         end;
MPRINT(EM_DIAGRAM):   end;
2812254   +      end;
MPRINT(EM_DIAGRAM):   end;
2812255   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2812256   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2812257   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2812258   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2812259   +         end;
MPRINT(EM_DIAGRAM):   end;
2812260   +      end;
MPRINT(EM_DIAGRAM):   end;
2812261   +   end;
MPRINT(EM_DIAGRAM):   end;
2812262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2812263   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2812264   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2812265   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2812266   +      end;
MPRINT(EM_DIAGRAM):   end;
2812267   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2812268   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2812269   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2812270   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2812271   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2812272   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2812273   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2812274   +         end;
MPRINT(EM_DIAGRAM):   end;
2812275   +      end;
MPRINT(EM_DIAGRAM):   end;
2812276   +   end;
MPRINT(EM_DIAGRAM):   end;
2812277   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2812278   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2812279   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2812280   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2812281   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2812282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2812283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2812284   +   end;
MPRINT(EM_DIAGRAM):   end;
2812285   +end;
MPRINT(EM_DIAGRAM):   end;
2812286   +
2812287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812288   +*** Checking missing input Interval
2812289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2812290   +
2812291   +IF NMISS(
2812292   +   MntCard_Games ,
2812293   +   MntMagazines ,
2812294   +   NumCatalogPurchases ,
2812295   +   NumDealsPurchases ,
2812296   +   NumWebPurchases ,
2812297   +   RANGE_Frq ,
2812298   +   RANGE_Recency ,
2812299   +   RANGE_average_purchase ,
2812300   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
2812301   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2812302   +
2812303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2812304   +END;
MPRINT(EM_DIAGRAM):   END;
2812305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812306   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2812307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812308   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2812309   +   S_MntCard_Games  =    -2.32305063803042 +     6.62296326392696 *
2812310   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32305063803042 + 6.62296326392696 * MntCard_Games ;
2812311   +   S_MntMagazines  =    -0.83743715165094 +     17.2557683681788 *
2812312   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83743715165094 + 17.2557683681788 * MntMagazines ;
2812313   +   S_NumCatalogPurchases  =    -3.10529221517931 +     13.4443396287062 *
2812314   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10529221517931 + 13.4443396287062 * NumCatalogPurchases ;
2812315   +   S_NumDealsPurchases  =    -1.41942573823989 +     11.1591434336611 *
2812316   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41942573823989 + 11.1591434336611 * NumDealsPurchases ;
2812317   +   S_NumWebPurchases  =    -5.22935751211101 +     12.2529435207201 *
2812318   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22935751211101 + 12.2529435207201 * NumWebPurchases ;
2812319   +   S_RANGE_Frq  =    -1.36631161721433 +     4.23876448101209 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36631161721433 + 4.23876448101209 * RANGE_Frq ;
2812320   +   S_RANGE_Recency  =    -1.66510588698585 +     3.34389270312286 *
2812321   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66510588698585 + 3.34389270312286 * RANGE_Recency ;
2812322   +   S_RANGE_average_purchase  =    -1.03662703247946 +     5.13922454231074 *
2812323   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03662703247946 + 5.13922454231074 * RANGE_average_purchase ;
2812324   +   S_RANGE_campaign_acceptance
2812325   +          =    -0.48150797928749 +     5.76771283006363 *
2812326   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48150797928749 + 5.76771283006363 * RANGE_campaign_acceptance ;
2812327   +END;
MPRINT(EM_DIAGRAM):   END;
2812328   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2812329   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
2812330   +   ELSE S_MntCard_Games  =    -2.32305063803042 +     6.62296326392696 *
2812331   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32305063803042 + 6.62296326392696 * MntCard_Games ;
2812332   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
2812333   +   ELSE S_MntMagazines  =    -0.83743715165094 +     17.2557683681788 *
2812334   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83743715165094 + 17.2557683681788 * MntMagazines ;
2812335   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2812336   +   ELSE S_NumCatalogPurchases
2812337   +          =    -3.10529221517931 +     13.4443396287062 * NumCatalogPurchases
2812338   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10529221517931 + 13.4443396287062 * NumCatalogPurchases ;
2812339   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2812340   +   ELSE S_NumDealsPurchases  =    -1.41942573823989 +     11.1591434336611 *
2812341   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41942573823989 + 11.1591434336611 * NumDealsPurchases ;
2812342   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2812343   +   ELSE S_NumWebPurchases  =    -5.22935751211101 +     12.2529435207201 *
2812344   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22935751211101 + 12.2529435207201 * NumWebPurchases ;
2812345   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
2812346   +   ELSE S_RANGE_Frq  =    -1.36631161721433 +     4.23876448101209 * RANGE_Frq
2812347   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36631161721433 + 4.23876448101209 * RANGE_Frq ;
2812348   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
2812349   +   ELSE S_RANGE_Recency  =    -1.66510588698585 +     3.34389270312286 *
2812350   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66510588698585 + 3.34389270312286 * RANGE_Recency ;
2812351   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
2812352   +   ELSE S_RANGE_average_purchase
2812353   +          =    -1.03662703247946 +     5.13922454231074 *
2812354   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03662703247946 + 5.13922454231074 * RANGE_average_purchase ;
2812355   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
2812356   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
2812357   +   ELSE S_RANGE_campaign_acceptance
2812358   +          =    -0.48150797928749 +     5.76771283006363 *
2812359   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48150797928749 + 5.76771283006363 * RANGE_campaign_acceptance ;
2812360   +END;
MPRINT(EM_DIAGRAM):   END;
2812361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812362   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2812363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812365   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2812366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812367   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2812368   +   H11  =    -0.39747320333835 * S_MntCard_Games  +    -0.25183122929337 *
2812369   +        S_MntMagazines  +    -0.57773877568295 * S_NumCatalogPurchases
2812370   +          +     -0.6322169381628 * S_NumDealsPurchases
2812371   +          +      0.5252802099865 * S_NumWebPurchases
2812372   +          +     0.23485789050863 * S_RANGE_Frq  +    -0.07574564241971 *
2812373   +        S_RANGE_Recency  +    -0.65914660665246 * S_RANGE_average_purchase
2812374   +          +    -0.81529806931608 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.39747320333835 * S_MntCard_Games + -0.25183122929337 * S_MntMagazines + -0.57773877568295 * S_NumCatalogPurchases + -0.6322169381628 * S_NumDealsPurchases + 0.5252802099865 * S_NumWebPurchases + 0.23485789050863 *
S_RANGE_Frq + -0.07574564241971 * S_RANGE_Recency + -0.65914660665246 * S_RANGE_average_purchase + -0.81529806931608 * S_RANGE_campaign_acceptance ;
2812375   +   H12  =     1.20158491407123 * S_MntCard_Games  +     0.29157626460589 *
2812376   +        S_MntMagazines  +     0.65840999134004 * S_NumCatalogPurchases
2812377   +          +     0.53843038360722 * S_NumDealsPurchases
2812378   +          +     1.28210274981786 * S_NumWebPurchases
2812379   +          +     0.73697515362549 * S_RANGE_Frq  +    -1.44164502696012 *
2812380   +        S_RANGE_Recency  +     0.23708411342304 * S_RANGE_average_purchase
2812381   +          +     0.62790597066881 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.20158491407123 * S_MntCard_Games + 0.29157626460589 * S_MntMagazines + 0.65840999134004 * S_NumCatalogPurchases + 0.53843038360722 * S_NumDealsPurchases + 1.28210274981786 * S_NumWebPurchases + 0.73697515362549 * S_RANGE_Frq
+ -1.44164502696012 * S_RANGE_Recency + 0.23708411342304 * S_RANGE_average_purchase + 0.62790597066881 * S_RANGE_campaign_acceptance ;
2812382   +   H13  =     0.79913669001804 * S_MntCard_Games  +     0.51463308209166 *
2812383   +        S_MntMagazines  +     1.59364944460266 * S_NumCatalogPurchases
2812384   +          +     0.87208087897651 * S_NumDealsPurchases
2812385   +          +     0.66504425377177 * S_NumWebPurchases
2812386   +          +    -0.02933118675441 * S_RANGE_Frq  +    -2.52732528398839 *
2812387   +        S_RANGE_Recency  +     0.38444758941878 * S_RANGE_average_purchase
2812388   +          +     0.95012294848935 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.79913669001804 * S_MntCard_Games + 0.51463308209166 * S_MntMagazines + 1.59364944460266 * S_NumCatalogPurchases + 0.87208087897651 * S_NumDealsPurchases + 0.66504425377177 * S_NumWebPurchases + -0.02933118675441 * S_RANGE_Frq
+ -2.52732528398839 * S_RANGE_Recency + 0.38444758941878 * S_RANGE_average_purchase + 0.95012294848935 * S_RANGE_campaign_acceptance ;
2812389   +   H14  =    -0.27694654560829 * S_MntCard_Games  +     -1.2311099665442 *
2812390   +        S_MntMagazines  +    -0.66153887083111 * S_NumCatalogPurchases
2812391   +          +      0.1794623946668 * S_NumDealsPurchases
2812392   +          +    -0.71091962201945 * S_NumWebPurchases
2812393   +          +    -0.40720505986114 * S_RANGE_Frq  +    -0.45786381523031 *
2812394   +        S_RANGE_Recency  +    -0.98056066826381 * S_RANGE_average_purchase
2812395   +          +      0.1188918651258 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.27694654560829 * S_MntCard_Games + -1.2311099665442 * S_MntMagazines + -0.66153887083111 * S_NumCatalogPurchases + 0.1794623946668 * S_NumDealsPurchases + -0.71091962201945 * S_NumWebPurchases + -0.40720505986114 *
S_RANGE_Frq + -0.45786381523031 * S_RANGE_Recency + -0.98056066826381 * S_RANGE_average_purchase + 0.1188918651258 * S_RANGE_campaign_acceptance ;
2812396   +   H11  = H11  +    -0.58048496810146 * Marital_StatusDivorced
2812397   +          +    -0.31374219533616 * Marital_StatusMarried
2812398   +          +     0.53011056146455 * Marital_StatusSingle
2812399   +          +     0.43514875932913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.58048496810146 * Marital_StatusDivorced + -0.31374219533616 * Marital_StatusMarried + 0.53011056146455 * Marital_StatusSingle + 0.43514875932913 * Marital_StatusTogether ;
2812400   +   H12  = H12  +    -0.01485740060133 * Marital_StatusDivorced
2812401   +          +      0.0633317557359 * Marital_StatusMarried
2812402   +          +      -0.167359925907 * Marital_StatusSingle
2812403   +          +    -0.08355825292542 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.01485740060133 * Marital_StatusDivorced + 0.0633317557359 * Marital_StatusMarried + -0.167359925907 * Marital_StatusSingle + -0.08355825292542 * Marital_StatusTogether ;
2812404   +   H13  = H13  +     0.18543704566327 * Marital_StatusDivorced
2812405   +          +    -0.59482428144644 * Marital_StatusMarried
2812406   +          +     0.60377790114405 * Marital_StatusSingle
2812407   +          +     0.01729261240134 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18543704566327 * Marital_StatusDivorced + -0.59482428144644 * Marital_StatusMarried + 0.60377790114405 * Marital_StatusSingle + 0.01729261240134 * Marital_StatusTogether ;
2812408   +   H14  = H14  +     0.08644018468789 * Marital_StatusDivorced
2812409   +          +    -1.46189018350601 * Marital_StatusMarried
2812410   +          +     1.66381672788945 * Marital_StatusSingle
2812411   +          +    -1.01705305957212 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.08644018468789 * Marital_StatusDivorced + -1.46189018350601 * Marital_StatusMarried + 1.66381672788945 * Marital_StatusSingle + -1.01705305957212 * Marital_StatusTogether ;
2812412   +   H11  =     1.75584857347424 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.75584857347424 + H11 ;
2812413   +   H12  =    -3.58708107273373 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.58708107273373 + H12 ;
2812414   +   H13  =    -1.39264546682791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39264546682791 + H13 ;
2812415   +   H14  =     1.54301093968012 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.54301093968012 + H14 ;
2812416   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2812417   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2812418   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2812419   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2812420   +END;
MPRINT(EM_DIAGRAM):   END;
2812421   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2812422   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2812423   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2812424   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2812425   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2812426   +END;
MPRINT(EM_DIAGRAM):   END;
2812427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812428   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2812429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812430   +
2812431   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2812432   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2812433   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2812434   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2812435   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2812436   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2812437   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2812438   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2812439   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2812440   +end;
MPRINT(EM_DIAGRAM):   end;
2812441   +else do;
MPRINT(EM_DIAGRAM):   else do;
2812442   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2812443   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2812444   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2812445   +   end;
MPRINT(EM_DIAGRAM):   end;
2812446   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2812447   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2812448   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2812449   +   end;
MPRINT(EM_DIAGRAM):   end;
2812450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2812451   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2812452   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2812453   +   end;
MPRINT(EM_DIAGRAM):   end;
2812454   +end;
MPRINT(EM_DIAGRAM):   end;
2812455   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2812456   +   P_DepVar1  =    -5.78876508187939 * H11  +     6.85471535213297 * H12
2812457   +          +     5.43753421268608 * H13  +     5.73512129927081 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78876508187939 * H11 + 6.85471535213297 * H12 + 5.43753421268608 * H13 + 5.73512129927081 * H14 ;
2812458   +   P_DepVar1  =    -0.07610032788675 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.07610032788675 + P_DepVar1 ;
2812459   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2812460   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2812461   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2812462   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2812463   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2812464   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2812465   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2812466   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2812467   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2812468   +END;
MPRINT(EM_DIAGRAM):   END;
2812469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2812470   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2812471   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2812472   +END;
MPRINT(EM_DIAGRAM):   END;
2812473   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2812474   +   P_DepVar1  =     0.13681368136813;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13681368136813;
2812475   +   P_DepVar0  =     0.86318631863186;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86318631863186;
2812476   +END;
MPRINT(EM_DIAGRAM):   END;
2812477   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2812478   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2812479   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2812480   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2812481   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2812482   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2812483   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2812484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812485   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2812486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2812487   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2812488   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2812489   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2812490   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2812491   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2812492   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2812493   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2812494   +END;
MPRINT(EM_DIAGRAM):   END;
2812495   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2812496   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2812497   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2812498   +drop
2812499   +S_MntCard_Games
2812500   +S_MntMagazines
2812501   +S_NumCatalogPurchases
2812502   +S_NumDealsPurchases
2812503   +S_NumWebPurchases
2812504   +S_RANGE_Frq
2812505   +S_RANGE_Recency
2812506   +S_RANGE_average_purchase
2812507   +S_RANGE_campaign_acceptance
2812508   +H11
2812509   +H12
2812510   +H13
2812511   +H14
2812512   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2812513    run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2812514    quit;
2812515    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2812516    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
2812517    filename lpflow catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename lpflow catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_9.source";
2812518    %em_copyfile(infref=emflow, outfref=lpflow);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file lpflow lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("emflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file LPFLOW is:
      Catalog Name=EMWS1.NEURAL2_LOOP.EMFLOWCODE_9.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=70,
      Created=Saturday,  2 June 2018 16:26:49,
      Last Modified=Saturday,  2 June 2018 16:52:57,
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\neural2_loop.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=DESKTOP-61HCQ9U\misil,
      File Size=           277KB,
      File Size (bytes)=283648
 
NOTE: 357 records were written to the file LPFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
2812519    filename lpflow;
MPRINT(EM_DIAGRAM):   filename lpflow;
NOTE: Fileref LPFLOW has been deassigned.
2812520    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2812521    filename empub "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename empub "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
2812522    filename lppub catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename lppub catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_9.source";
2812523    %em_copyfile(infref=empub, outfref=lppub);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file lppub lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("empub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file LPPUB is:
      Catalog Name=EMWS1.NEURAL2_LOOP.EMPUBLISHCODE_9.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=74,
      Created=Saturday,  2 June 2018 16:26:49,
      Last Modified=Saturday,  2 June 2018 16:57:01,
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\neural2_loop.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=DESKTOP-61HCQ9U\misil,
      File Size=           293KB,
      File Size (bytes)=300032
 
NOTE: 318 records were written to the file LPPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
2812524    filename lppub;
MPRINT(EM_DIAGRAM):   filename lppub;
NOTE: Fileref LPPUB has been deassigned.
2812525    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
2812526    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2812527    * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
2812528    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural2_TRAIN out=WORK.M2P3USIT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2P3USIT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2P3USIT(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2P3USIT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2P3USIT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2R4A05C NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RA0WX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   set WORK.M2R4A05C;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2812881    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2812882    set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
2812883    where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2812884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (DATA='Neural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812885    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMINFO;
2812886    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2812887    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2812888    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2812892    run;
2812893    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
2812894    set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
2812895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812896    proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
2812897    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2812898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812899    proc sort data = EMWS1.Grp10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2812900    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2812901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812902    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2812903    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2812904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812905    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
2812906    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2812907    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2812908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2812909    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2812910    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2812911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2812912    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:57:02 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:57:02 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O02NPVO1 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O02NPVO1 new;
MPRINT(EM_DIAGRAM):   run;
2812936    data EMWS1.Neural2_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT(rename=(_NAME_=TARGET));
2812937    set EMWS1.Neural2_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_OUTFIT(where=(_NAME_ eq 'OVERALL'));
2812938    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
2812939    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
2812940    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
2812941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812942    proc sort data=EMWS1.Neural2_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_EMOUTFIT nodupkey;
2812943    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2812944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT has 1 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2812945    data EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT;
2812946    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
2812947    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2812948    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2812949    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2812950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812951    proc sort data=EMWS1.Neural2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_EMREPORTFIT nothreads;
2812952    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2812953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL2_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812954    %let _EMwarndup = 0;
2812955    %let _EMtargetdup =;
2812956    %let _EMASEtargetdup =;
2812957    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2812958    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
2812959    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2812960    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2812961    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2812962    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2812963    end;
MPRINT(EM_DIAGRAM):   end;
2812964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812965    proc sort data=EMWS1.Grp10_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp10_CMeta_TRAIN out=WORK.SUBSETINMETA;
2812966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2812967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.GRP10_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 13 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812968    proc sort data=EMWS1.Neural2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2812969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2812970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2812971    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2812972    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2812973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2812974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 13 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812975    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2812976    set EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_CMeta_TRAIN;
2812977    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2812978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2812979    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2812980    set EMWS1.Neural2_TRAIN(keep=
2812981    F_DepVar
2812982    I_DepVar
2812983    P_DepVar0
2812984    P_DepVar1
2812985    R_DepVar0
2812986    R_DepVar1
2812987    U_DepVar
2812988    _WARN_
2812989    DepVar
2812990    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2812991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2222 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: There were 2222 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2222 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural2_280O8UD nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural2_280O8UD;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural2_280O8UD(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_280O8UD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_280O8UD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1368136814 _NEVENTS 304 _NNONEVENTS 1918 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2222));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.3629991179287E-11 OVLMAX 0.9999999999 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2222 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / (2222/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2222)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2222/20) ) / ( AVGNUMRESP / (2222/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2222 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2222 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2222/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * ((20-GROUP+1)* 2222/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2222;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2817278    %let _cn = %sysfunc(getoption(CENTER));
2817279    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2817280    proc print data=EMWS1.Neural2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMREPORTFIT noobs label;
2817281    var STAT LABEL TRAIN
2817282    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2817283    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2817284    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2817285    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2817286    run;
 
NOTE: There were 21 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1852.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2817287    title10;
MPRINT(EM_DIAGRAM):   title10;
2817288    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2817289    proc sort data=EMWS1.Neural2_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_EMCLASSIFICATION nothreads;
2817290    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2817291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL2_EMCLASSIFICATION has 4 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817292    %let _cn = %sysfunc(getoption(CENTER));
2817293    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2817294    proc print data=EMWS1.Neural2_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMCLASSIFICATION noobs label;
2817295    var from into pct_row pct_col count percent
2817296    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2817297    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2817298    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2817299    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2817300    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2817301    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2817302    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2817303    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2817304    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2817305    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2817306    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2817307    run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1853.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817308    title9;
MPRINT(EM_DIAGRAM):   title9;
2817309    title10;
MPRINT(EM_DIAGRAM):   title10;
2817310    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2817311    %let _cn = %sysfunc(getoption(CENTER));
2817312    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2817313    data EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMEVENTREPORT;
2817314    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2817314  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2817315    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2817315  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2817315  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2817315  ! FALSEEVENT
2817316    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2817316  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2817316  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2817317       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2817318    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2817319    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2817320    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2817321    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2817322    set EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT;
2817323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL2_EMEVENTREPORT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817324    proc print data=EMWS1.Neural2_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMEVENTREPORT noobs label;
2817325    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2817326    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2817327    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2817328    run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1854.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2817329    title10;
MPRINT(EM_DIAGRAM):   title10;
2817330    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2817331    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2817332    modify Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2817333    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2817334    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2817334  ! ;
MPRINT(EM_DIAGRAM):   run;
2817335    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL2_EMRANK.DATA.
2817336    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
2817337    %let _cn = %sysfunc(getoption(CENTER));
2817338    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2817339    proc print data=EMWS1.Neural2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMRANK label noobs;
2817340    var
2817341    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2817342    by
2817343    notsorted DATAROLE
2817344    notsorted TARGET
2817345    notsorted TARGETLABEL
2817346    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2817347    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2817348    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2817349    run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1855.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2817350    title10;
MPRINT(EM_DIAGRAM):   title10;
2817351    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2817352    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2817353    modify Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2817354    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2817354  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2817355    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2817355  ! ;
MPRINT(EM_DIAGRAM):   run;
2817356    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL2_EMSCOREDIST.DATA.
2817357    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2817358    %let _cn = %sysfunc(getoption(CENTER));
2817359    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2817360    proc print data=EMWS1.Neural2_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMSCOREDIST label noobs;
2817361    var
2817362    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
2817363    by
2817364    notsorted DATAROLE
2817365    notsorted TARGET
2817366    notsorted TARGETLABEL
2817367    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2817368    where TARGET in(
2817369    "DepVar"
2817370    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
2817371    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2817372    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
2817373    run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 1856.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2817374    title10;
MPRINT(EM_DIAGRAM):   title10;
2817375    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2817376    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
2817377    set EMWS1.Grp10_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO;
2817378    where _LOOP_=9;
MPRINT(EM_DIAGRAM):   where _LOOP_=9;
2817379    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2817380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_GROUPINFO.
      WHERE _LOOP_=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2817381    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817382    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817383    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817384    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817384  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817385    set EMWS1.Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRANK;
2817386    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817387    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817389    data EMWS1.Neural2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMRANK_LOOP;
2817390    set EMWS1.Neural2_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRANK_LOOP temp;
2817391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.NEURAL2_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMRANK_LOOP has 180 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817392    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817393    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817394    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817395    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817395  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817396    set EMWS1.Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMSCOREDIST;
2817397    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817398    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817400    data EMWS1.Neural2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMSCOREDIST_LOOP;
2817401    set EMWS1.Neural2_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMSCOREDIST_LOOP temp;
2817402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMSCOREDIST_LOOP has 180 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2817403    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817404    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817405    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817406    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817406  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817407    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
2817408    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817409    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817411    data EMWS1.Neural2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT_LOOP;
2817412    set EMWS1.Neural2_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT_LOOP temp;
2817413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL2_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT_LOOP has 9 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2817414    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817415    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817416    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817417    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817417  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817418    set EMWS1.Neural2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMREPORTFIT;
2817419    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817420    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817422    data EMWS1.Neural2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMREPORTFIT_LOOP;
2817423    set EMWS1.Neural2_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMREPORTFIT_LOOP temp;
2817424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 168 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMREPORTFIT_LOOP has 189 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817425    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817426    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817427    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817428    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817428  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817429    set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMCLASSIFICATION;
2817430    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817431    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817432    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817433    data EMWS1.Neural2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMCLASSIFICATION_LOOP;
2817434    set EMWS1.Neural2_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMCLASSIFICATION_LOOP temp;
2817435    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP has 36 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817436    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817437    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817438    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817439    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817439  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817440    set EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT;
2817441    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817442    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT.
NOTE: The data set WORK.TEMP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817444    data EMWS1.Neural2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMEVENTREPORT_LOOP;
2817445    set EMWS1.Neural2_EMEVENTREPORT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT_LOOP temp;
2817446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817447    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817448    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817449    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817450    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817450  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817451    set EMWS1.Neural2_PLOTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_PLOTDS;
2817452    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817453    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL2_PLOTDS.
NOTE: The data set WORK.TEMP has 52 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817455    data EMWS1.Neural2_PLOTDS_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_PLOTDS_LOOP;
2817456    set EMWS1.Neural2_PLOTDS_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_PLOTDS_LOOP temp;
2817457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 416 observations read from the data set EMWS1.NEURAL2_PLOTDS_LOOP.
NOTE: There were 52 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_PLOTDS_LOOP has 468 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817458    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817459    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817460    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817461    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817461  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817462    set EMWS1.Neural2_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_WEIGHTDS;
2817463    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817464    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 61 observations read from the data set EMWS1.NEURAL2_WEIGHTDS.
NOTE: The data set WORK.TEMP has 61 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817466    data EMWS1.Neural2_WEIGHTDS_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_WEIGHTDS_LOOP;
2817467    set EMWS1.Neural2_WEIGHTDS_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_WEIGHTDS_LOOP temp;
2817468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 488 observations read from the data set EMWS1.NEURAL2_WEIGHTDS_LOOP.
NOTE: There were 61 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_WEIGHTDS_LOOP has 549 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2817469    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2817470    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2817471    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2817472    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
2817472  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2817473    set EMWS1.Neural2_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMESTIMATE;
2817474    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2817475    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2817476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS1.NEURAL2_EMESTIMATE.
NOTE: The data set WORK.TEMP has 52 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2817477    data EMWS1.Neural2_EMESTIMATE_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMESTIMATE_LOOP;
2817478    set EMWS1.Neural2_EMESTIMATE_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMESTIMATE_LOOP temp;
2817479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 416 observations read from the data set EMWS1.NEURAL2_EMESTIMATE_LOOP.
NOTE: There were 52 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.NEURAL2_EMESTIMATE_LOOP has 468 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
