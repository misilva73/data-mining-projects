MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:29 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:05:29 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O12LDT3P "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O12LDT3P new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:29 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:29 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3477717    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477718    set EMWS1.Grp10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_EMINFO;
3477719    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3477720    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3477721    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3477722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477723    data WORK.M0NH2UHA;
MPRINT(EM_DIAGRAM):    data WORK.M0NH2UHA;
3477724    set WORK.M0NH2UHA;
MPRINT(EM_DIAGRAM):   set WORK.M0NH2UHA;
3477725    where upcase(NAME) in(
3477726    "DEPVAR"
3477727    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3477728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M0NH2UHA.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M0NH2UHA has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477729    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN 
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN EMWS1 Grp10_TRAIN 
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN 
EMWS1.Grp10_TRAIN EMWS1.Grp10_TRAIN EMWS1 Grp10_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp10_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural2_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_DepVar_DD out=EMWS1.Neural2_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3477776    data WORK.Neural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3477777    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3477778    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3477779       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3477780    set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
3477781    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3477782    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3477783    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3477784    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3477785    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3477786    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3477787    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3477788    end;
MPRINT(EM_DIAGRAM):   end;
3477789    output;
MPRINT(EM_DIAGRAM):   output;
3477790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3477791    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3477792    proc print data=WORK.Neural2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural2_EVENT noobs label;
3477793    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3477794    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3477795    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3477796    run;

NOTE: There were 1 observations read from the data set WORK.NEURAL2_EVENT.
NOTE: The PROCEDURE PRINT printed page 2306.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3477797    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3477798    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
3477799    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3477800    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3477801    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3477802    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3477803    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3477804    run;

NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2307.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3477805    title10;
MPRINT(EM_DIAGRAM):   title10;
3477806    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477807    set EMWS1.Grp10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_EMINFO;
3477808    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3477809    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3477810    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3477811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477812    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
3477813    filename empub "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
3477814    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477815    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3477816    set EMWS1.Grp10_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO end=eof;
3477817    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3477818    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3477819    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3477820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP10_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477821    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477822    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477823    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477824    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3477825    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477827    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_1.source";
3477828    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477829    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477830    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_1.source";
3477831    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477832    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477833    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477834    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477835    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477836    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12474,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477837    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477838    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477839    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477840    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3477841    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477843    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_1.source";
3477844    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477845    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477846    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_1.source";
3477847    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477848    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477849    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477850    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477851    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11509,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

3477853    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477854    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477855    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477856    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3477857    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12480,
      Last Modified=02 June 2018 17:05:29 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477859    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_2.source";
3477860    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=12634,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477861    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477862    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_2.source";
3477863    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=12671,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477864    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477865    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477866    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477867    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=24954,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3477869    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477870    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477871    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477872    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3477873    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11515,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477875    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_2.source";
3477876    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11670,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477877    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477878    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_2.source";
3477879    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11707,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477880    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477881    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477882    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477883    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23024,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477885    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477886    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477887    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477888    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3477889    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=24960,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477891    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_3.source";
3477892    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=25114,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477893    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477894    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_3.source";
3477895    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=25151,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477896    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477897    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477898    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477899    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=37434,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3477901    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477902    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477903    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477904    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3477905    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23030,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477907    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_3.source";
3477908    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23185,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477909    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477910    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_3.source";
3477911    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23222,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477912    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477913    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477914    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477915    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34539,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3477917    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477918    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477919    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477920    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3477921    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=37440,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477923    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_4.source";
3477924    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=37594,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477925    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477926    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_4.source";
3477927    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=37631,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477928    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477929    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477930    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477931    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49914,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477933    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477934    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477935    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477936    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3477937    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34545,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477939    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_4.source";
3477940    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=34700,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477941    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477942    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_4.source";
3477943    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=34737,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477944    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477945    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477946    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477947    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46054,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477949    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477950    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477951    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477952    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3477953    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=49920,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477955    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_5.source";
3477956    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=50074,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477957    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477958    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_5.source";
3477959    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=50111,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477960    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477961    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477962    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477963    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62394,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477965    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477966    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477967    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477968    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3477969    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46060,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477971    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_5.source";
3477972    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46215,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477973    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477974    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_5.source";
3477975    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46252,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477976    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477977    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477978    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477979    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=57569,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477981    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477982    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477983    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477984    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3477985    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3477986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=62400,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477987    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_6.source";
3477988    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=62554,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477989    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477990    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_6.source";
3477991    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=62591,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3477992    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3477993    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477994    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3477995    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3477996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74874,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3477997    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3477998    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3477999    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478000    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3478001    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478002    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=57575,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478003    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_6.source";
3478004    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57730,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478005    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478006    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_6.source";
3478007    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57767,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478008    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478009    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478010    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478011    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=69084,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478013    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478014    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478015    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478016    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3478017    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74880,
      Last Modified=02 June 2018 17:05:30 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478019    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_7.source";
3478020    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75034,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478021    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478022    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_7.source";
3478023    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=75071,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478024    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478025    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478026    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478027    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=87354,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478029    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478030    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478031    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478032    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3478033    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=69090,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478035    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_7.source";
3478036    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=69245,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478037    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478038    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_7.source";
3478039    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=69282,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478040    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478041    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478042    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478043    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=80599,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3478045    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478046    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478047    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478048    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3478049    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=87360,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478051    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_8.source";
3478052    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=87514,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478053    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478054    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_8.source";
3478055    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=87551,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478056    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478057    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478058    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478059    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=99834,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478061    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478062    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478063    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478064    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3478065    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=80605,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3478067    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_8.source";
3478068    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=80760,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478069    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478070    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_8.source";
3478071    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=80797,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478072    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478073    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478074    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478075    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92114,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

3478077    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478078    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478079    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478080    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3478081    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478082    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=99840,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478083    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_9.source";
3478084    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=99994,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478085    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478086    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_9.source";
3478087    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=100031,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478088    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478089    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478090    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478091    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=112314,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3478093    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478094    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478095    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478096    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3478097    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92120,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478099    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_9.source";
3478100    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92275,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478101    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478102    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_9.source";
3478103    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92312,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478104    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478105    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478106    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478107    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103629,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478109    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478110    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478111    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478112    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3478113    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478114    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=112320,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478115    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_10.source";
3478116    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=112475,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478117    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478118    filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMFLOWCODE_10.source";
3478119    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=112514,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 357 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478120    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478121    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478122    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3478123    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478124    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMFLOW is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=124797,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478125    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478126    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478127    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478128    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3478129    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3478130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=103635,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3478131    filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp10_LOOP.EMPUBLISHCODE_10.source";
3478132    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=103791,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478133    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478134    filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural2_LOOP.EMPUBLISHCODE_10.source";
3478135    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=103830,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 318 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
3478136    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3478137    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3478138    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3478139    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3478140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMPUB is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=115147,
      Last Modified=02 June 2018 17:05:31 o'clock,
      Create Time=22 May 2018 22:36:05 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3478141    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3478142    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP10_EMLOOPINFO.
NOTE: The data set EMWS1.NEURAL2_EMLOOPINFO has 10 observations and 3 variables.
3478143    proc print data=EMWS1.Neural2_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Neural2_EMLOOPINFO noobs label;
3478144    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3478145    run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL2_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2308.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3478146    title9;
MPRINT(EM_DIAGRAM):   title9;
3478147    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478148    *------------------------------------------------------------*;
3478149    * Neural2: Scoring DATA data;
3478150    *------------------------------------------------------------*;
3478151    data EMWS1.Neural2_TRAIN
3478152    / view=EMWS1.Neural2_TRAIN
3478153    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_TRAIN / view=EMWS1.Neural2_TRAIN ;
3478154    set EMWS1.Grp10_TRAIN
3478155    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_TRAIN ;
3478156    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas.
3478157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478158   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3478159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478160   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3478161   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3478162   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478163   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3478164   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478165   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3478166   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3478167   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3478168   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3478169   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3478170   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3478171   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3478172   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3478173   +LENGTH _WARN_ $4
3478174   +      F_DepVar  $ 12
3478175   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3478176   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3478177   +
3478178   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3478179   +
3478180   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3478181   +
3478182   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3478183   +
3478184   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3478185   +
3478186   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3478187   +
3478188   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3478189   +
3478190   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3478191   +
3478192   +      label S_RANGE_campaign_acceptance =
3478193   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3478194   +
3478195   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3478196   +
3478197   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3478198   +
3478199   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3478200   +
3478201   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3478202   +
3478203   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3478204   +
3478205   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3478206   +
3478207   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3478208   +
3478209   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3478210   +
3478211   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3478212   +
3478213   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3478214   +
3478215   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3478216   +
3478217   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3478218   +
3478219   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3478220   +
3478221   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3478222   +
3478223   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3478224   +
3478225   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3478226   +
3478227   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3478228   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3478229   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3478230   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3478231   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3478232   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3478233   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3478234   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3478235   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3478236   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3478237   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3478238   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3478239   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3478240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3478241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478242   +end;
MPRINT(EM_DIAGRAM):   end;
3478243   +else do;
MPRINT(EM_DIAGRAM):   else do;
3478244   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3478245   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3478246   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3478247   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3478248   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3478249   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3478250   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3478251   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3478252   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478253   +         end;
MPRINT(EM_DIAGRAM):   end;
3478254   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3478255   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3478256   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3478257   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478258   +            end;
MPRINT(EM_DIAGRAM):   end;
3478259   +         end;
MPRINT(EM_DIAGRAM):   end;
3478260   +      end;
MPRINT(EM_DIAGRAM):   end;
3478261   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3478262   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3478263   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3478264   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478265   +         end;
MPRINT(EM_DIAGRAM):   end;
3478266   +      end;
MPRINT(EM_DIAGRAM):   end;
3478267   +   end;
MPRINT(EM_DIAGRAM):   end;
3478268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3478269   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3478270   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3478271   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478272   +      end;
MPRINT(EM_DIAGRAM):   end;
3478273   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3478274   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3478275   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3478276   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3478277   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3478278   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3478279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478280   +         end;
MPRINT(EM_DIAGRAM):   end;
3478281   +      end;
MPRINT(EM_DIAGRAM):   end;
3478282   +   end;
MPRINT(EM_DIAGRAM):   end;
3478283   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3478284   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3478285   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3478286   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3478287   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3478288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3478289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478290   +   end;
MPRINT(EM_DIAGRAM):   end;
3478291   +end;
MPRINT(EM_DIAGRAM):   end;
3478292   +
3478293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478294   +*** Checking missing input Interval
3478295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3478296   +
3478297   +IF NMISS(
3478298   +   MntCard_Games ,
3478299   +   MntMagazines ,
3478300   +   NumCatalogPurchases ,
3478301   +   NumDealsPurchases ,
3478302   +   NumWebPurchases ,
3478303   +   RANGE_Frq ,
3478304   +   RANGE_Recency ,
3478305   +   RANGE_average_purchase ,
3478306   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3478307   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3478308   +
3478309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478310   +END;
MPRINT(EM_DIAGRAM):   END;
3478311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478312   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3478313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478315   +   S_MntCard_Games  =    -2.31156446837705 +     6.59510598470666 *
3478316   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31156446837705 + 6.59510598470666 * MntCard_Games ;
3478317   +   S_MntMagazines  =    -0.82993850659197 +     17.3846945258151 *
3478318   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82993850659197 + 17.3846945258151 * MntMagazines ;
3478319   +   S_NumCatalogPurchases  =    -3.15540482510862 +     13.6557751567801 *
3478320   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.15540482510862 + 13.6557751567801 * NumCatalogPurchases ;
3478321   +   S_NumDealsPurchases  =    -1.41430705305169 +     11.2350305819106 *
3478322   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41430705305169 + 11.2350305819106 * NumDealsPurchases ;
3478323   +   S_NumWebPurchases  =    -5.22401826640554 +     12.2322889441397 *
3478324   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22401826640554 + 12.2322889441397 * NumWebPurchases ;
3478325   +   S_RANGE_Frq  =     -1.3635769086371 +      4.2067525778295 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3635769086371 + 4.2067525778295 * RANGE_Frq ;
3478326   +   S_RANGE_Recency  =    -1.65294838876447 +     3.33689398469268 *
3478327   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65294838876447 + 3.33689398469268 * RANGE_Recency ;
3478328   +   S_RANGE_average_purchase  =    -1.04269542246556 +     5.17302041258597 *
3478329   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04269542246556 + 5.17302041258597 * RANGE_average_purchase ;
3478330   +   S_RANGE_campaign_acceptance
3478331   +          =    -0.47488645208526 +     5.72215312278801 *
3478332   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47488645208526 + 5.72215312278801 * RANGE_campaign_acceptance ;
3478333   +END;
MPRINT(EM_DIAGRAM):   END;
3478334   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478335   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3478336   +   ELSE S_MntCard_Games  =    -2.31156446837705 +     6.59510598470666 *
3478337   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31156446837705 + 6.59510598470666 * MntCard_Games ;
3478338   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3478339   +   ELSE S_MntMagazines  =    -0.82993850659197 +     17.3846945258151 *
3478340   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82993850659197 + 17.3846945258151 * MntMagazines ;
3478341   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3478342   +   ELSE S_NumCatalogPurchases
3478343   +          =    -3.15540482510862 +     13.6557751567801 * NumCatalogPurchases
3478344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.15540482510862 + 13.6557751567801 * NumCatalogPurchases ;
3478345   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3478346   +   ELSE S_NumDealsPurchases  =    -1.41430705305169 +     11.2350305819106 *
3478347   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41430705305169 + 11.2350305819106 * NumDealsPurchases ;
3478348   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3478349   +   ELSE S_NumWebPurchases  =    -5.22401826640554 +     12.2322889441397 *
3478350   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22401826640554 + 12.2322889441397 * NumWebPurchases ;
3478351   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3478352   +   ELSE S_RANGE_Frq  =     -1.3635769086371 +      4.2067525778295 * RANGE_Frq
3478353   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3635769086371 + 4.2067525778295 * RANGE_Frq ;
3478354   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3478355   +   ELSE S_RANGE_Recency  =    -1.65294838876447 +     3.33689398469268 *
3478356   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65294838876447 + 3.33689398469268 * RANGE_Recency ;
3478357   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3478358   +   ELSE S_RANGE_average_purchase
3478359   +          =    -1.04269542246556 +     5.17302041258597 *
3478360   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04269542246556 + 5.17302041258597 * RANGE_average_purchase ;
3478361   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3478362   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3478363   +   ELSE S_RANGE_campaign_acceptance
The SAS System

3478364   +          =    -0.47488645208526 +     5.72215312278801 *
3478365   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47488645208526 + 5.72215312278801 * RANGE_campaign_acceptance ;
3478366   +END;
MPRINT(EM_DIAGRAM):   END;
3478367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478368   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3478369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478371   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3478372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478373   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478374   +   H11  =    -0.21518959167306 * S_MntCard_Games  +    -0.06210359507781 *
3478375   +        S_MntMagazines  +    -0.15339706576075 * S_NumCatalogPurchases
3478376   +          +    -0.38045852747142 * S_NumDealsPurchases
3478377   +          +     0.59413199714834 * S_NumWebPurchases
3478378   +          +     0.23007089510057 * S_RANGE_Frq  +    -0.16820047282594 *
3478379   +        S_RANGE_Recency  +    -0.89061224128405 * S_RANGE_average_purchase
3478380   +          +    -0.56656141645824 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.21518959167306 * S_MntCard_Games + -0.06210359507781 * S_MntMagazines + -0.15339706576075 * S_NumCatalogPurchases + -0.38045852747142 * S_NumDealsPurchases + 0.59413199714834 * S_NumWebPurchases + 0.23007089510057 * 
S_RANGE_Frq + -0.16820047282594 * S_RANGE_Recency + -0.89061224128405 * S_RANGE_average_purchase + -0.56656141645824 * S_RANGE_campaign_acceptance ;
3478381   +   H12  =     1.57324601394081 * S_MntCard_Games  +     0.01880934238358 *
3478382   +        S_MntMagazines  +     0.91450968850396 * S_NumCatalogPurchases
3478383   +          +     1.01115474425001 * S_NumDealsPurchases
3478384   +          +     1.64341577325068 * S_NumWebPurchases
3478385   +          +     0.90539411141058 * S_RANGE_Frq  +     -2.0650626557677 *
3478386   +        S_RANGE_Recency  +     0.22010826704989 * S_RANGE_average_purchase
3478387   +          +     1.25932492895052 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.57324601394081 * S_MntCard_Games + 0.01880934238358 * S_MntMagazines + 0.91450968850396 * S_NumCatalogPurchases + 1.01115474425001 * S_NumDealsPurchases + 1.64341577325068 * S_NumWebPurchases + 0.90539411141058 * S_RANGE_Frq 
+ -2.0650626557677 * S_RANGE_Recency + 0.22010826704989 * S_RANGE_average_purchase + 1.25932492895052 * S_RANGE_campaign_acceptance ;
3478388   +   H13  =     1.83336756007907 * S_MntCard_Games  +     0.65486066189603 *
3478389   +        S_MntMagazines  +     4.46769074723863 * S_NumCatalogPurchases
3478390   +          +     1.68406266070005 * S_NumDealsPurchases
3478391   +          +     1.87559563692737 * S_NumWebPurchases
3478392   +          +      0.8262151835222 * S_RANGE_Frq  +    -5.72210305269959 *
3478393   +        S_RANGE_Recency  +     -0.5165708462315 * S_RANGE_average_purchase
3478394   +          +     1.36397011253976 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 1.83336756007907 * S_MntCard_Games + 0.65486066189603 * S_MntMagazines + 4.46769074723863 * S_NumCatalogPurchases + 1.68406266070005 * S_NumDealsPurchases + 1.87559563692737 * S_NumWebPurchases + 0.8262151835222 * S_RANGE_Frq + 
-5.72210305269959 * S_RANGE_Recency + -0.5165708462315 * S_RANGE_average_purchase + 1.36397011253976 * S_RANGE_campaign_acceptance ;
3478395   +   H14  =     0.35996337027488 * S_MntCard_Games  +    -0.19562528281173 *
3478396   +        S_MntMagazines  +     0.25988025229605 * S_NumCatalogPurchases
3478397   +          +     0.35946834558513 * S_NumDealsPurchases
3478398   +          +     0.25751527569426 * S_NumWebPurchases
3478399   +          +     -0.0156487278754 * S_RANGE_Frq  +    -1.08495198963965 *
3478400   +        S_RANGE_Recency  +    -0.81074974773725 * S_RANGE_average_purchase
3478401   +          +     0.40813406121972 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 0.35996337027488 * S_MntCard_Games + -0.19562528281173 * S_MntMagazines + 0.25988025229605 * S_NumCatalogPurchases + 0.35946834558513 * S_NumDealsPurchases + 0.25751527569426 * S_NumWebPurchases + -0.0156487278754 * S_RANGE_Frq 
+ -1.08495198963965 * S_RANGE_Recency + -0.81074974773725 * S_RANGE_average_purchase + 0.40813406121972 * S_RANGE_campaign_acceptance ;
3478402   +   H11  = H11  +     0.01845333133098 * Marital_StatusDivorced
3478403   +          +    -0.45887454163869 * Marital_StatusMarried
3478404   +          +     0.32296933208625 * Marital_StatusSingle
3478405   +          +     0.09195193602454 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01845333133098 * Marital_StatusDivorced + -0.45887454163869 * Marital_StatusMarried + 0.32296933208625 * Marital_StatusSingle + 0.09195193602454 * Marital_StatusTogether ;
3478406   +   H12  = H12  +     0.77410211017628 * Marital_StatusDivorced
3478407   +          +    -0.05361702587662 * Marital_StatusMarried
3478408   +          +    -0.24853964359431 * Marital_StatusSingle
3478409   +          +    -0.53898299587562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.77410211017628 * Marital_StatusDivorced + -0.05361702587662 * Marital_StatusMarried + -0.24853964359431 * Marital_StatusSingle + -0.53898299587562 * Marital_StatusTogether ;
3478410   +   H13  = H13  +    -2.08543813171107 * Marital_StatusDivorced
3478411   +          +     -0.1553040328917 * Marital_StatusMarried
3478412   +          +     1.19233727033357 * Marital_StatusSingle
3478413   +          +     0.56143018434213 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -2.08543813171107 * Marital_StatusDivorced + -0.1553040328917 * Marital_StatusMarried + 1.19233727033357 * Marital_StatusSingle + 0.56143018434213 * Marital_StatusTogether ;
3478414   +   H14  = H14  +     1.19120627670676 * Marital_StatusDivorced
3478415   +          +    -1.54455745098084 * Marital_StatusMarried
3478416   +          +      1.1036952308067 * Marital_StatusSingle
3478417   +          +       -1.30072673594 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.19120627670676 * Marital_StatusDivorced + -1.54455745098084 * Marital_StatusMarried + 1.1036952308067 * Marital_StatusSingle + -1.30072673594 * Marital_StatusTogether ;
3478418   +   H11  =     1.42107314783708 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.42107314783708 + H11 ;
3478419   +   H12  =    -4.18133415476034 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.18133415476034 + H12 ;
3478420   +   H13  =    -4.42926954372448 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -4.42926954372448 + H13 ;
3478421   +   H14  =     0.39909521124273 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.39909521124273 + H14 ;
3478422   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3478423   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3478424   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3478425   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3478426   +END;
MPRINT(EM_DIAGRAM):   END;
3478427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478428   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3478429   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3478430   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3478431   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3478432   +END;
MPRINT(EM_DIAGRAM):   END;
3478433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478434   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3478435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478436   +
3478437   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3478438   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3478439   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3478440   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3478441   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3478442   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3478443   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3478444   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3478445   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3478446   +end;
MPRINT(EM_DIAGRAM):   end;
3478447   +else do;
MPRINT(EM_DIAGRAM):   else do;
3478448   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3478449   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3478450   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3478451   +   end;
MPRINT(EM_DIAGRAM):   end;
3478452   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3478453   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3478454   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3478455   +   end;
MPRINT(EM_DIAGRAM):   end;
3478456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3478457   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3478458   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3478459   +   end;
MPRINT(EM_DIAGRAM):   end;
3478460   +end;
MPRINT(EM_DIAGRAM):   end;
3478461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478462   +   P_DepVar1  =    -7.06698666350446 * H11  +     2.91919266415309 * H12
3478463   +          +     3.01712564757281 * H13  +      6.5321791367424 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.06698666350446 * H11 + 2.91919266415309 * H12 + 3.01712564757281 * H13 + 6.5321791367424 * H14 ;
3478464   +   P_DepVar1  =    -1.30062463195005 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.30062463195005 + P_DepVar1 ;
3478465   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3478466   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3478467   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3478468   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3478469   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3478470   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3478471   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3478472   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3478473   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3478474   +END;
MPRINT(EM_DIAGRAM):   END;
3478475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478476   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3478477   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3478478   +END;
MPRINT(EM_DIAGRAM):   END;
3478479   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3478480   +   P_DepVar1  =     0.13881278538812;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13881278538812;
3478481   +   P_DepVar0  =     0.86118721461187;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86118721461187;
3478482   +END;
MPRINT(EM_DIAGRAM):   END;
3478483   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3478484   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3478485   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3478486   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3478487   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3478488   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3478489   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3478490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478491   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3478492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478493   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3478494   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3478495   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3478496   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3478497   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3478498   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3478499   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3478500   +END;
MPRINT(EM_DIAGRAM):   END;
3478501   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3478502   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3478503   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3478504   +drop
3478505   +S_MntCard_Games
3478506   +S_MntMagazines
3478507   +S_NumCatalogPurchases
3478508   +S_NumDealsPurchases
3478509   +S_NumWebPurchases
3478510   +S_RANGE_Frq
3478511   +S_RANGE_Recency
3478512   +S_RANGE_average_purchase
3478513   +S_RANGE_campaign_acceptance
3478514   +H11
3478515   +H12
3478516   +H13
3478517   +H14
3478518   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3478519   +end;
MPRINT(EM_DIAGRAM):   end;
3478520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478521   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3478522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478523   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3478524   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3478525   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478526   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3478527   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478528   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3478529   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3478530   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3478531   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3478532   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3478533   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3478534   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3478535   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3478536   +LENGTH _WARN_ $4
3478537   +      F_DepVar  $ 12
3478538   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3478539   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3478540   +
3478541   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3478542   +
3478543   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3478544   +
3478545   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3478546   +
3478547   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3478548   +
3478549   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3478550   +
3478551   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3478552   +
3478553   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3478554   +
3478555   +      label S_RANGE_campaign_acceptance =
3478556   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3478557   +
3478558   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3478559   +
3478560   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3478561   +
3478562   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3478563   +
3478564   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3478565   +
3478566   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3478567   +
3478568   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3478569   +
3478570   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3478571   +
3478572   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3478573   +
3478574   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3478575   +
3478576   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3478577   +
3478578   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3478579   +
3478580   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3478581   +
3478582   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3478583   +
3478584   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3478585   +
3478586   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3478587   +
3478588   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3478589   +
3478590   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3478591   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3478592   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3478593   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3478594   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3478595   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3478596   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3478597   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3478598   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3478599   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3478600   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3478601   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3478602   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3478603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3478604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478605   +end;
MPRINT(EM_DIAGRAM):   end;
3478606   +else do;
MPRINT(EM_DIAGRAM):   else do;
3478607   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3478608   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3478609   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3478610   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3478611   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3478612   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3478613   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3478614   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3478615   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478616   +         end;
MPRINT(EM_DIAGRAM):   end;
3478617   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3478618   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3478619   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3478620   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478621   +            end;
MPRINT(EM_DIAGRAM):   end;
3478622   +         end;
MPRINT(EM_DIAGRAM):   end;
3478623   +      end;
MPRINT(EM_DIAGRAM):   end;
3478624   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3478625   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3478626   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3478627   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478628   +         end;
MPRINT(EM_DIAGRAM):   end;
3478629   +      end;
MPRINT(EM_DIAGRAM):   end;
3478630   +   end;
MPRINT(EM_DIAGRAM):   end;
3478631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3478632   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3478633   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3478634   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478635   +      end;
MPRINT(EM_DIAGRAM):   end;
3478636   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3478637   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3478638   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3478639   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3478640   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3478641   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3478642   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478643   +         end;
MPRINT(EM_DIAGRAM):   end;
3478644   +      end;
MPRINT(EM_DIAGRAM):   end;
3478645   +   end;
MPRINT(EM_DIAGRAM):   end;
3478646   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3478647   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3478648   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3478649   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3478650   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3478651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3478652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478653   +   end;
MPRINT(EM_DIAGRAM):   end;
3478654   +end;
MPRINT(EM_DIAGRAM):   end;
3478655   +
3478656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478657   +*** Checking missing input Interval
3478658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3478659   +
3478660   +IF NMISS(
3478661   +   MntCard_Games ,
3478662   +   MntMagazines ,
3478663   +   NumCatalogPurchases ,
3478664   +   NumDealsPurchases ,
3478665   +   NumWebPurchases ,
3478666   +   RANGE_Frq ,
3478667   +   RANGE_Recency ,
3478668   +   RANGE_average_purchase ,
3478669   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3478670   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3478671   +
3478672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478673   +END;
MPRINT(EM_DIAGRAM):   END;
3478674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478675   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3478676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478678   +   S_MntCard_Games  =     -2.3314771633274 +     6.67100502055196 *
3478679   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3314771633274 + 6.67100502055196 * MntCard_Games ;
3478680   +   S_MntMagazines  =    -0.83638305485207 +     17.4475268444983 *
3478681   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83638305485207 + 17.4475268444983 * MntMagazines ;
3478682   +   S_NumCatalogPurchases  =    -3.11226970633025 +     13.4853011673147 *
3478683   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11226970633025 + 13.4853011673147 * NumCatalogPurchases ;
3478684   +   S_NumDealsPurchases  =     -1.4130845582166 +     11.1389570401509 *
3478685   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.4130845582166 + 11.1389570401509 * NumDealsPurchases ;
3478686   +   S_NumWebPurchases  =    -5.21604554420205 +     12.2533885502562 *
3478687   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21604554420205 + 12.2533885502562 * NumWebPurchases ;
3478688   +   S_RANGE_Frq  =    -1.37131150947471 +     4.23296862557682 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37131150947471 + 4.23296862557682 * RANGE_Frq ;
3478689   +   S_RANGE_Recency  =     -1.6802354044387 +     3.35515556979043 *
3478690   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6802354044387 + 3.35515556979043 * RANGE_Recency ;
3478691   +   S_RANGE_average_purchase  =    -1.03596514755581 +     5.12642322504067 *
3478692   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03596514755581 + 5.12642322504067 * RANGE_average_purchase ;
3478693   +   S_RANGE_campaign_acceptance
3478694   +          =    -0.47461743142322 +     5.75062782560987 *
3478695   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47461743142322 + 5.75062782560987 * RANGE_campaign_acceptance ;
3478696   +END;
MPRINT(EM_DIAGRAM):   END;
3478697   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478698   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3478699   +   ELSE S_MntCard_Games  =     -2.3314771633274 +     6.67100502055196 *
3478700   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3314771633274 + 6.67100502055196 * MntCard_Games ;
3478701   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3478702   +   ELSE S_MntMagazines  =    -0.83638305485207 +     17.4475268444983 *
3478703   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83638305485207 + 17.4475268444983 * MntMagazines ;
3478704   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3478705   +   ELSE S_NumCatalogPurchases
3478706   +          =    -3.11226970633025 +     13.4853011673147 * NumCatalogPurchases
3478707   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11226970633025 + 13.4853011673147 * NumCatalogPurchases ;
3478708   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3478709   +   ELSE S_NumDealsPurchases  =     -1.4130845582166 +     11.1389570401509 *
3478710   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.4130845582166 + 11.1389570401509 * NumDealsPurchases ;
3478711   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3478712   +   ELSE S_NumWebPurchases  =    -5.21604554420205 +     12.2533885502562 *
3478713   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21604554420205 + 12.2533885502562 * NumWebPurchases ;
3478714   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3478715   +   ELSE S_RANGE_Frq  =    -1.37131150947471 +     4.23296862557682 * RANGE_Frq
3478716   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37131150947471 + 4.23296862557682 * RANGE_Frq ;
3478717   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3478718   +   ELSE S_RANGE_Recency  =     -1.6802354044387 +     3.35515556979043 *
3478719   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6802354044387 + 3.35515556979043 * RANGE_Recency ;
3478720   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3478721   +   ELSE S_RANGE_average_purchase
3478722   +          =    -1.03596514755581 +     5.12642322504067 *
3478723   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03596514755581 + 5.12642322504067 * RANGE_average_purchase ;
3478724   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3478725   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3478726   +   ELSE S_RANGE_campaign_acceptance
3478727   +          =    -0.47461743142322 +     5.75062782560987 *
3478728   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47461743142322 + 5.75062782560987 * RANGE_campaign_acceptance ;
3478729   +END;
MPRINT(EM_DIAGRAM):   END;
3478730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478731   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3478732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478734   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3478735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478736   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478737   +   H11  =    -0.58664407240649 * S_MntCard_Games  +     0.04427564019395 *
3478738   +        S_MntMagazines  +    -0.21259311204646 * S_NumCatalogPurchases
3478739   +          +    -0.46686820572644 * S_NumDealsPurchases
3478740   +          +    -0.15770585887476 * S_NumWebPurchases
3478741   +          +    -0.11449695255476 * S_RANGE_Frq  +      0.8499404568581 *
3478742   +        S_RANGE_Recency  +    -0.13948699525353 * S_RANGE_average_purchase
3478743   +          +    -0.76495470450703 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.58664407240649 * S_MntCard_Games + 0.04427564019395 * S_MntMagazines + -0.21259311204646 * S_NumCatalogPurchases + -0.46686820572644 * S_NumDealsPurchases + -0.15770585887476 * S_NumWebPurchases + -0.11449695255476 * 
S_RANGE_Frq + 0.8499404568581 * S_RANGE_Recency + -0.13948699525353 * S_RANGE_average_purchase + -0.76495470450703 * S_RANGE_campaign_acceptance ;
3478744   +   H12  =     1.81486396170524 * S_MntCard_Games  +     0.89214424845629 *
3478745   +        S_MntMagazines  +     3.84695329004798 * S_NumCatalogPurchases
3478746   +          +     1.80491922996454 * S_NumDealsPurchases
3478747   +          +     0.59814719869096 * S_NumWebPurchases
3478748   +          +    -2.42719797402168 * S_RANGE_Frq  +    -2.09736702614838 *
3478749   +        S_RANGE_Recency  +     1.02783455289949 * S_RANGE_average_purchase
3478750   +          +     1.03548138383238 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.81486396170524 * S_MntCard_Games + 0.89214424845629 * S_MntMagazines + 3.84695329004798 * S_NumCatalogPurchases + 1.80491922996454 * S_NumDealsPurchases + 0.59814719869096 * S_NumWebPurchases + -2.42719797402168 * S_RANGE_Frq 
+ -2.09736702614838 * S_RANGE_Recency + 1.02783455289949 * S_RANGE_average_purchase + 1.03548138383238 * S_RANGE_campaign_acceptance ;
3478751   +   H13  =    -0.85391689715481 * S_MntCard_Games  +     -0.0386560888973 *
3478752   +        S_MntMagazines  +    -1.92483406816729 * S_NumCatalogPurchases
3478753   +          +    -0.03033489439656 * S_NumDealsPurchases
3478754   +          +    -1.40978645360092 * S_NumWebPurchases
3478755   +          +     0.60151449683119 * S_RANGE_Frq  +     1.89189484705669 *
3478756   +        S_RANGE_Recency  +    -4.88017912936048 * S_RANGE_average_purchase
3478757   +          +    -0.72511777397619 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.85391689715481 * S_MntCard_Games + -0.0386560888973 * S_MntMagazines + -1.92483406816729 * S_NumCatalogPurchases + -0.03033489439656 * S_NumDealsPurchases + -1.40978645360092 * S_NumWebPurchases + 0.60151449683119 * 
S_RANGE_Frq + 1.89189484705669 * S_RANGE_Recency + -4.88017912936048 * S_RANGE_average_purchase + -0.72511777397619 * S_RANGE_campaign_acceptance ;
3478758   +   H14  =    -0.43485028402545 * S_MntCard_Games  +     0.64172222839884 *
3478759   +        S_MntMagazines  +     -0.8784281996428 * S_NumCatalogPurchases
3478760   +          +    -2.24916526286567 * S_NumDealsPurchases
3478761   +          +    -0.68554758569158 * S_NumWebPurchases
3478762   +          +    -0.78258120150609 * S_RANGE_Frq  +     2.01136757259804 *
3478763   +        S_RANGE_Recency  +     0.67073472368748 * S_RANGE_average_purchase
3478764   +          +    -0.52719957093529 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.43485028402545 * S_MntCard_Games + 0.64172222839884 * S_MntMagazines + -0.8784281996428 * S_NumCatalogPurchases + -2.24916526286567 * S_NumDealsPurchases + -0.68554758569158 * S_NumWebPurchases + -0.78258120150609 * 
S_RANGE_Frq + 2.01136757259804 * S_RANGE_Recency + 0.67073472368748 * S_RANGE_average_purchase + -0.52719957093529 * S_RANGE_campaign_acceptance ;
3478765   +   H11  = H11  +    -0.32712535342374 * Marital_StatusDivorced
3478766   +          +     0.06559123499575 * Marital_StatusMarried
3478767   +          +    -0.12829467892161 * Marital_StatusSingle
3478768   +          +     0.36484202419169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.32712535342374 * Marital_StatusDivorced + 0.06559123499575 * Marital_StatusMarried + -0.12829467892161 * Marital_StatusSingle + 0.36484202419169 * Marital_StatusTogether ;
3478769   +   H12  = H12  +    -0.10405533552018 * Marital_StatusDivorced
3478770   +          +    -2.36230210800026 * Marital_StatusMarried
3478771   +          +     2.18091126929848 * Marital_StatusSingle
3478772   +          +    -0.54203498360915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10405533552018 * Marital_StatusDivorced + -2.36230210800026 * Marital_StatusMarried + 2.18091126929848 * Marital_StatusSingle + -0.54203498360915 * Marital_StatusTogether ;
3478773   +   H13  = H13  +     1.18422430961868 * Marital_StatusDivorced
3478774   +          +     0.61187170284031 * Marital_StatusMarried
3478775   +          +     0.90844802365293 * Marital_StatusSingle
3478776   +          +    -0.77529471575804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.18422430961868 * Marital_StatusDivorced + 0.61187170284031 * Marital_StatusMarried + 0.90844802365293 * Marital_StatusSingle + -0.77529471575804 * Marital_StatusTogether ;
3478777   +   H14  = H14  +    -1.05629915889261 * Marital_StatusDivorced
3478778   +          +     1.72560959666488 * Marital_StatusMarried
3478779   +          +    -1.28333761282975 * Marital_StatusSingle
3478780   +          +     2.07957856063684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.05629915889261 * Marital_StatusDivorced + 1.72560959666488 * Marital_StatusMarried + -1.28333761282975 * Marital_StatusSingle + 2.07957856063684 * Marital_StatusTogether ;
3478781   +   H11  =     1.67589148012169 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.67589148012169 + H11 ;
3478782   +   H12  =     0.63851137696779 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.63851137696779 + H12 ;
3478783   +   H13  =    -1.92524390148602 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.92524390148602 + H13 ;
3478784   +   H14  =    -1.83061373272693 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.83061373272693 + H14 ;
3478785   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3478786   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3478787   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3478788   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3478789   +END;
MPRINT(EM_DIAGRAM):   END;
3478790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478791   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3478792   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3478793   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3478794   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3478795   +END;
MPRINT(EM_DIAGRAM):   END;
3478796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478797   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3478798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478799   +
3478800   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3478801   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3478802   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3478803   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3478804   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3478805   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3478806   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3478807   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3478808   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3478809   +end;
MPRINT(EM_DIAGRAM):   end;
3478810   +else do;
MPRINT(EM_DIAGRAM):   else do;
3478811   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3478812   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3478813   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3478814   +   end;
MPRINT(EM_DIAGRAM):   end;
3478815   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3478816   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3478817   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3478818   +   end;
MPRINT(EM_DIAGRAM):   end;
3478819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3478820   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3478821   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3478822   +   end;
MPRINT(EM_DIAGRAM):   end;
3478823   +end;
MPRINT(EM_DIAGRAM):   end;
3478824   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3478825   +   P_DepVar1  =     -5.2259920780657 * H11  +     2.57293676402231 * H12
3478826   +          +     -2.8734803860115 * H13  +    -3.76254580589513 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.2259920780657 * H11 + 2.57293676402231 * H12 + -2.8734803860115 * H13 + -3.76254580589513 * H14 ;
3478827   +   P_DepVar1  =    -6.67432248025566 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67432248025566 + P_DepVar1 ;
3478828   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3478829   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3478830   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3478831   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3478832   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3478833   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3478834   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3478835   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3478836   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3478837   +END;
MPRINT(EM_DIAGRAM):   END;
3478838   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3478839   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3478840   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3478841   +END;
MPRINT(EM_DIAGRAM):   END;
3478842   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3478843   +   P_DepVar1  =     0.13534522176497;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13534522176497;
3478844   +   P_DepVar0  =     0.86465477823502;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86465477823502;
3478845   +END;
MPRINT(EM_DIAGRAM):   END;
3478846   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3478847   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3478848   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3478849   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3478850   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3478851   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3478852   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3478853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478854   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3478855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3478856   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3478857   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3478858   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3478859   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3478860   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3478861   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3478862   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3478863   +END;
MPRINT(EM_DIAGRAM):   END;
3478864   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3478865   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3478866   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3478867   +drop
3478868   +S_MntCard_Games
3478869   +S_MntMagazines
3478870   +S_NumCatalogPurchases
3478871   +S_NumDealsPurchases
3478872   +S_NumWebPurchases
3478873   +S_RANGE_Frq
3478874   +S_RANGE_Recency
3478875   +S_RANGE_average_purchase
3478876   +S_RANGE_campaign_acceptance
3478877   +H11
3478878   +H12
3478879   +H13
3478880   +H14
3478881   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3478882   +end;
MPRINT(EM_DIAGRAM):   end;
3478883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478884   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3478885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3478886   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3478887   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3478888   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478889   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3478890   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3478891   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3478892   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3478893   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3478894   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3478895   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3478896   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3478897   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3478898   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3478899   +LENGTH _WARN_ $4
3478900   +      F_DepVar  $ 12
3478901   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3478902   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3478903   +
3478904   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3478905   +
3478906   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3478907   +
3478908   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3478909   +
3478910   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3478911   +
3478912   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3478913   +
3478914   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3478915   +
3478916   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3478917   +
3478918   +      label S_RANGE_campaign_acceptance =
3478919   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3478920   +
3478921   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3478922   +
3478923   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3478924   +
3478925   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3478926   +
3478927   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3478928   +
3478929   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3478930   +
3478931   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3478932   +
3478933   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3478934   +
3478935   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3478936   +
3478937   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3478938   +
3478939   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3478940   +
3478941   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3478942   +
3478943   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3478944   +
3478945   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3478946   +
3478947   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3478948   +
3478949   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3478950   +
3478951   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3478952   +
3478953   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3478954   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3478955   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3478956   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3478957   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3478958   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3478959   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3478960   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3478961   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3478962   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3478963   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3478964   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3478965   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3478966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3478967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3478968   +end;
MPRINT(EM_DIAGRAM):   end;
3478969   +else do;
MPRINT(EM_DIAGRAM):   else do;
3478970   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3478971   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3478972   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3478973   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3478974   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3478975   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3478976   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3478977   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3478978   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478979   +         end;
MPRINT(EM_DIAGRAM):   end;
3478980   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3478981   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3478982   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3478983   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478984   +            end;
MPRINT(EM_DIAGRAM):   end;
3478985   +         end;
MPRINT(EM_DIAGRAM):   end;
3478986   +      end;
MPRINT(EM_DIAGRAM):   end;
3478987   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3478988   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3478989   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3478990   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478991   +         end;
MPRINT(EM_DIAGRAM):   end;
3478992   +      end;
MPRINT(EM_DIAGRAM):   end;
3478993   +   end;
MPRINT(EM_DIAGRAM):   end;
3478994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3478995   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3478996   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3478997   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3478998   +      end;
MPRINT(EM_DIAGRAM):   end;
3478999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3479000   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3479001   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3479002   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3479003   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3479004   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3479005   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479006   +         end;
MPRINT(EM_DIAGRAM):   end;
3479007   +      end;
MPRINT(EM_DIAGRAM):   end;
3479008   +   end;
MPRINT(EM_DIAGRAM):   end;
3479009   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3479010   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3479011   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3479012   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3479013   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3479014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3479015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479016   +   end;
MPRINT(EM_DIAGRAM):   end;
3479017   +end;
MPRINT(EM_DIAGRAM):   end;
3479018   +
3479019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479020   +*** Checking missing input Interval
3479021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3479022   +
3479023   +IF NMISS(
3479024   +   MntCard_Games ,
3479025   +   MntMagazines ,
3479026   +   NumCatalogPurchases ,
3479027   +   NumDealsPurchases ,
3479028   +   NumWebPurchases ,
3479029   +   RANGE_Frq ,
3479030   +   RANGE_Recency ,
3479031   +   RANGE_average_purchase ,
3479032   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3479033   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3479034   +
3479035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479036   +END;
MPRINT(EM_DIAGRAM):   END;
3479037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479038   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3479039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479040   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479041   +   S_MntCard_Games  =    -2.31546327157414 +     6.63981708621388 *
3479042   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31546327157414 + 6.63981708621388 * MntCard_Games ;
3479043   +   S_MntMagazines  =    -0.83545276379253 +     17.2809026314296 *
3479044   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83545276379253 + 17.2809026314296 * MntMagazines ;
3479045   +   S_NumCatalogPurchases  =    -3.11826971063088 +     13.4823557193844 *
3479046   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11826971063088 + 13.4823557193844 * NumCatalogPurchases ;
3479047   +   S_NumDealsPurchases  =    -1.40785748867734 +     11.2393331689822 *
3479048   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40785748867734 + 11.2393331689822 * NumDealsPurchases ;
3479049   +   S_NumWebPurchases  =    -5.24017296813187 +     12.2988257493464 *
3479050   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24017296813187 + 12.2988257493464 * NumWebPurchases ;
3479051   +   S_RANGE_Frq  =    -1.36310014060474 +     4.21335720799254 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36310014060474 + 4.21335720799254 * RANGE_Frq ;
3479052   +   S_RANGE_Recency  =    -1.65658304409189 +     3.33988344682397 *
3479053   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65658304409189 + 3.33988344682397 * RANGE_Recency ;
3479054   +   S_RANGE_average_purchase  =    -1.03709543371106 +     5.13785473062787 *
3479055   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03709543371106 + 5.13785473062787 * RANGE_average_purchase ;
3479056   +   S_RANGE_campaign_acceptance
3479057   +          =    -0.47664317866908 +     5.76666521497862 *
3479058   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47664317866908 + 5.76666521497862 * RANGE_campaign_acceptance ;
3479059   +END;
MPRINT(EM_DIAGRAM):   END;
3479060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479061   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3479062   +   ELSE S_MntCard_Games  =    -2.31546327157414 +     6.63981708621388 *
3479063   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31546327157414 + 6.63981708621388 * MntCard_Games ;
3479064   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3479065   +   ELSE S_MntMagazines  =    -0.83545276379253 +     17.2809026314296 *
3479066   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83545276379253 + 17.2809026314296 * MntMagazines ;
3479067   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3479068   +   ELSE S_NumCatalogPurchases
3479069   +          =    -3.11826971063088 +     13.4823557193844 * NumCatalogPurchases
3479070   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11826971063088 + 13.4823557193844 * NumCatalogPurchases ;
3479071   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3479072   +   ELSE S_NumDealsPurchases  =    -1.40785748867734 +     11.2393331689822 *
3479073   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40785748867734 + 11.2393331689822 * NumDealsPurchases ;
3479074   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3479075   +   ELSE S_NumWebPurchases  =    -5.24017296813187 +     12.2988257493464 *
3479076   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24017296813187 + 12.2988257493464 * NumWebPurchases ;
3479077   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3479078   +   ELSE S_RANGE_Frq  =    -1.36310014060474 +     4.21335720799254 * RANGE_Frq
3479079   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36310014060474 + 4.21335720799254 * RANGE_Frq ;
3479080   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3479081   +   ELSE S_RANGE_Recency  =    -1.65658304409189 +     3.33988344682397 *
3479082   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65658304409189 + 3.33988344682397 * RANGE_Recency ;
3479083   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3479084   +   ELSE S_RANGE_average_purchase
3479085   +          =    -1.03709543371106 +     5.13785473062787 *
3479086   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03709543371106 + 5.13785473062787 * RANGE_average_purchase ;
3479087   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3479088   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3479089   +   ELSE S_RANGE_campaign_acceptance
3479090   +          =    -0.47664317866908 +     5.76666521497862 *
3479091   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47664317866908 + 5.76666521497862 * RANGE_campaign_acceptance ;
3479092   +END;
MPRINT(EM_DIAGRAM):   END;
3479093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479094   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3479095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479097   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3479098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479100   +   H11  =    -0.95159763742737 * S_MntCard_Games  +    -0.05930033210208 *
3479101   +        S_MntMagazines  +    -0.46369377595598 * S_NumCatalogPurchases
3479102   +          +    -0.71828575527308 * S_NumDealsPurchases
3479103   +          +     0.72175915463572 * S_NumWebPurchases
3479104   +          +    -0.02721804114204 * S_RANGE_Frq  +     0.36483359370581 *
3479105   +        S_RANGE_Recency  +    -1.02511208521402 * S_RANGE_average_purchase
3479106   +          +    -1.00281357028663 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.95159763742737 * S_MntCard_Games + -0.05930033210208 * S_MntMagazines + -0.46369377595598 * S_NumCatalogPurchases + -0.71828575527308 * S_NumDealsPurchases + 0.72175915463572 * S_NumWebPurchases + -0.02721804114204 * 
S_RANGE_Frq + 0.36483359370581 * S_RANGE_Recency + -1.02511208521402 * S_RANGE_average_purchase + -1.00281357028663 * S_RANGE_campaign_acceptance ;
3479107   +   H12  =     0.88544323829992 * S_MntCard_Games  +     -0.1292100547113 *
3479108   +        S_MntMagazines  +     0.61355458725462 * S_NumCatalogPurchases
3479109   +          +     0.45609368663338 * S_NumDealsPurchases
3479110   +          +     1.14249602577347 * S_NumWebPurchases
3479111   +          +     0.32239591805483 * S_RANGE_Frq  +    -1.00627728554225 *
3479112   +        S_RANGE_Recency  +     0.00864309690338 * S_RANGE_average_purchase
3479113   +          +     0.64642973811332 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.88544323829992 * S_MntCard_Games + -0.1292100547113 * S_MntMagazines + 0.61355458725462 * S_NumCatalogPurchases + 0.45609368663338 * S_NumDealsPurchases + 1.14249602577347 * S_NumWebPurchases + 0.32239591805483 * S_RANGE_Frq 
+ -1.00627728554225 * S_RANGE_Recency + 0.00864309690338 * S_RANGE_average_purchase + 0.64642973811332 * S_RANGE_campaign_acceptance ;
3479114   +   H13  =     0.91465559043208 * S_MntCard_Games  +     1.60185256608225 *
3479115   +        S_MntMagazines  +     0.58220001015119 * S_NumCatalogPurchases
3479116   +          +     0.86485360711709 * S_NumDealsPurchases
3479117   +          +    -0.18411998400036 * S_NumWebPurchases
3479118   +          +     2.15550130645497 * S_RANGE_Frq  +    -2.75029813769576 *
3479119   +        S_RANGE_Recency  +     0.21418617747743 * S_RANGE_average_purchase
3479120   +          +     0.67174710486219 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.91465559043208 * S_MntCard_Games + 1.60185256608225 * S_MntMagazines + 0.58220001015119 * S_NumCatalogPurchases + 0.86485360711709 * S_NumDealsPurchases + -0.18411998400036 * S_NumWebPurchases + 2.15550130645497 * S_RANGE_Frq 
+ -2.75029813769576 * S_RANGE_Recency + 0.21418617747743 * S_RANGE_average_purchase + 0.67174710486219 * S_RANGE_campaign_acceptance ;
3479121   +   H14  =     0.02346304827756 * S_MntCard_Games  +    -0.17975920016533 *
3479122   +        S_MntMagazines  +     0.43171475323249 * S_NumCatalogPurchases
3479123   +          +     0.45804570016672 * S_NumDealsPurchases
3479124   +          +    -0.00327391077761 * S_NumWebPurchases
3479125   +          +    -0.40016334661428 * S_RANGE_Frq  +    -1.07476459817445 *
3479126   +        S_RANGE_Recency  +    -0.48388792657135 * S_RANGE_average_purchase
3479127   +          +     0.45359264368951 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 0.02346304827756 * S_MntCard_Games + -0.17975920016533 * S_MntMagazines + 0.43171475323249 * S_NumCatalogPurchases + 0.45804570016672 * S_NumDealsPurchases + -0.00327391077761 * S_NumWebPurchases + -0.40016334661428 * 
S_RANGE_Frq + -1.07476459817445 * S_RANGE_Recency + -0.48388792657135 * S_RANGE_average_purchase + 0.45359264368951 * S_RANGE_campaign_acceptance ;
3479128   +   H11  = H11  +    -0.05020702296064 * Marital_StatusDivorced
3479129   +          +    -0.27783775328566 * Marital_StatusMarried
3479130   +          +     0.41792170023956 * Marital_StatusSingle
3479131   +          +     0.66954209444883 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05020702296064 * Marital_StatusDivorced + -0.27783775328566 * Marital_StatusMarried + 0.41792170023956 * Marital_StatusSingle + 0.66954209444883 * Marital_StatusTogether ;
3479132   +   H12  = H12  +     0.03602057864252 * Marital_StatusDivorced
3479133   +          +    -0.27641128813992 * Marital_StatusMarried
3479134   +          +     0.06489930829034 * Marital_StatusSingle
3479135   +          +     -0.3814810531945 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03602057864252 * Marital_StatusDivorced + -0.27641128813992 * Marital_StatusMarried + 0.06489930829034 * Marital_StatusSingle + -0.3814810531945 * Marital_StatusTogether ;
3479136   +   H13  = H13  +    -0.97086102798257 * Marital_StatusDivorced
3479137   +          +     0.05055097297857 * Marital_StatusMarried
3479138   +          +    -2.47105525732925 * Marital_StatusSingle
3479139   +          +     3.91976123296698 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.97086102798257 * Marital_StatusDivorced + 0.05055097297857 * Marital_StatusMarried + -2.47105525732925 * Marital_StatusSingle + 3.91976123296698 * Marital_StatusTogether ;
3479140   +   H14  = H14  +     0.62636170131578 * Marital_StatusDivorced
3479141   +          +    -1.04521401952276 * Marital_StatusMarried
3479142   +          +     1.60656915217756 * Marital_StatusSingle
3479143   +          +    -1.00849875563632 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62636170131578 * Marital_StatusDivorced + -1.04521401952276 * Marital_StatusMarried + 1.60656915217756 * Marital_StatusSingle + -1.00849875563632 * Marital_StatusTogether ;
3479144   +   H11  =     2.71165461748586 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.71165461748586 + H11 ;
3479145   +   H12  =    -2.43153300571041 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.43153300571041 + H12 ;
3479146   +   H13  =      0.3107235037097 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.3107235037097 + H13 ;
3479147   +   H14  =    -0.02426852215646 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.02426852215646 + H14 ;
3479148   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3479149   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3479150   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3479151   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3479152   +END;
MPRINT(EM_DIAGRAM):   END;
3479153   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479154   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3479155   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3479156   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3479157   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3479158   +END;
MPRINT(EM_DIAGRAM):   END;
3479159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479160   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3479161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479162   +
3479163   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3479164   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3479165   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3479166   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3479167   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3479168   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3479169   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3479170   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479171   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479172   +end;
MPRINT(EM_DIAGRAM):   end;
3479173   +else do;
MPRINT(EM_DIAGRAM):   else do;
3479174   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3479175   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3479176   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3479177   +   end;
MPRINT(EM_DIAGRAM):   end;
3479178   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3479179   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3479180   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3479181   +   end;
MPRINT(EM_DIAGRAM):   end;
3479182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3479183   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479184   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479185   +   end;
MPRINT(EM_DIAGRAM):   end;
3479186   +end;
MPRINT(EM_DIAGRAM):   end;
3479187   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479188   +   P_DepVar1  =    -4.92720548468911 * H11  +     5.39612231889743 * H12
3479189   +          +     3.02975072305625 * H13  +     5.45129485619237 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.92720548468911 * H11 + 5.39612231889743 * H12 + 3.02975072305625 * H13 + 5.45129485619237 * H14 ;
3479190   +   P_DepVar1  =    -0.46564494162165 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46564494162165 + P_DepVar1 ;
3479191   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3479192   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3479193   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3479194   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3479195   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3479196   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3479197   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3479198   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3479199   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3479200   +END;
MPRINT(EM_DIAGRAM):   END;
3479201   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479202   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3479203   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3479204   +END;
MPRINT(EM_DIAGRAM):   END;
3479205   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3479206   +   P_DepVar1  =     0.13613749434644;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13613749434644;
3479207   +   P_DepVar0  =     0.86386250565355;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86386250565355;
3479208   +END;
MPRINT(EM_DIAGRAM):   END;
3479209   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3479210   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3479211   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3479212   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3479213   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3479214   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3479215   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3479216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479217   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3479218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479219   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3479220   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3479221   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3479222   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3479223   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3479224   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3479225   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3479226   +END;
MPRINT(EM_DIAGRAM):   END;
3479227   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479228   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3479229   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479230   +drop
3479231   +S_MntCard_Games
3479232   +S_MntMagazines
3479233   +S_NumCatalogPurchases
3479234   +S_NumDealsPurchases
3479235   +S_NumWebPurchases
3479236   +S_RANGE_Frq
3479237   +S_RANGE_Recency
3479238   +S_RANGE_average_purchase
3479239   +S_RANGE_campaign_acceptance
3479240   +H11
3479241   +H12
3479242   +H13
3479243   +H14
3479244   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3479245   +end;
MPRINT(EM_DIAGRAM):   end;
3479246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479247   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3479248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479249   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3479250   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3479251   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479252   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3479253   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479254   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3479255   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3479256   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3479257   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3479258   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3479259   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3479260   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3479261   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3479262   +LENGTH _WARN_ $4
3479263   +      F_DepVar  $ 12
3479264   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3479265   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3479266   +
3479267   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3479268   +
3479269   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3479270   +
3479271   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3479272   +
3479273   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3479274   +
3479275   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3479276   +
3479277   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3479278   +
3479279   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3479280   +
3479281   +      label S_RANGE_campaign_acceptance =
3479282   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3479283   +
3479284   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3479285   +
3479286   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3479287   +
3479288   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3479289   +
3479290   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3479291   +
3479292   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3479293   +
3479294   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3479295   +
3479296   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3479297   +
3479298   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3479299   +
3479300   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3479301   +
3479302   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3479303   +
3479304   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3479305   +
3479306   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3479307   +
3479308   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3479309   +
3479310   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3479311   +
3479312   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3479313   +
3479314   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3479315   +
3479316   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3479317   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3479318   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3479319   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3479320   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3479321   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3479322   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3479323   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3479324   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3479325   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3479326   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3479327   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3479328   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3479329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3479330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479331   +end;
MPRINT(EM_DIAGRAM):   end;
3479332   +else do;
MPRINT(EM_DIAGRAM):   else do;
3479333   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3479334   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3479335   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3479336   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3479337   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3479338   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3479339   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3479340   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3479341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479342   +         end;
MPRINT(EM_DIAGRAM):   end;
3479343   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3479344   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3479345   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3479346   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479347   +            end;
MPRINT(EM_DIAGRAM):   end;
3479348   +         end;
MPRINT(EM_DIAGRAM):   end;
3479349   +      end;
MPRINT(EM_DIAGRAM):   end;
3479350   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3479351   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3479352   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3479353   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479354   +         end;
MPRINT(EM_DIAGRAM):   end;
3479355   +      end;
MPRINT(EM_DIAGRAM):   end;
3479356   +   end;
MPRINT(EM_DIAGRAM):   end;
3479357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3479358   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3479359   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3479360   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479361   +      end;
MPRINT(EM_DIAGRAM):   end;
3479362   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3479363   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3479364   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3479365   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3479366   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3479367   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3479368   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479369   +         end;
MPRINT(EM_DIAGRAM):   end;
3479370   +      end;
MPRINT(EM_DIAGRAM):   end;
3479371   +   end;
MPRINT(EM_DIAGRAM):   end;
3479372   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3479373   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3479374   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3479375   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3479376   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3479377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3479378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479379   +   end;
MPRINT(EM_DIAGRAM):   end;
3479380   +end;
MPRINT(EM_DIAGRAM):   end;
3479381   +
3479382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479383   +*** Checking missing input Interval
3479384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3479385   +
3479386   +IF NMISS(
3479387   +   MntCard_Games ,
3479388   +   MntMagazines ,
3479389   +   NumCatalogPurchases ,
3479390   +   NumDealsPurchases ,
3479391   +   NumWebPurchases ,
3479392   +   RANGE_Frq ,
3479393   +   RANGE_Recency ,
3479394   +   RANGE_average_purchase ,
3479395   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3479396   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3479397   +
3479398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479399   +END;
MPRINT(EM_DIAGRAM):   END;
3479400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479401   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3479402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479403   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479404   +   S_MntCard_Games  =    -2.31794845074192 +      6.6165403464733 *
3479405   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31794845074192 + 6.6165403464733 * MntCard_Games ;
3479406   +   S_MntMagazines  =     -0.8457617351151 +     17.4200332414951 *
3479407   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8457617351151 + 17.4200332414951 * MntMagazines ;
3479408   +   S_NumCatalogPurchases  =    -3.09562753979671 +     13.4088989358536 *
3479409   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09562753979671 + 13.4088989358536 * NumCatalogPurchases ;
3479410   +   S_NumDealsPurchases  =    -1.40973685572431 +     11.1787722399161 *
3479411   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40973685572431 + 11.1787722399161 * NumDealsPurchases ;
3479412   +   S_NumWebPurchases  =    -5.23103772254043 +     12.2474028261424 *
3479413   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23103772254043 + 12.2474028261424 * NumWebPurchases ;
3479414   +   S_RANGE_Frq  =    -1.36705344962706 +     4.20086816738957 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36705344962706 + 4.20086816738957 * RANGE_Frq ;
3479415   +   S_RANGE_Recency  =    -1.66914546300377 +     3.36131125248371 *
3479416   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66914546300377 + 3.36131125248371 * RANGE_Recency ;
3479417   +   S_RANGE_average_purchase  =    -1.04689232103311 +      5.1803582366391 *
3479418   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04689232103311 + 5.1803582366391 * RANGE_average_purchase ;
3479419   +   S_RANGE_campaign_acceptance
3479420   +          =    -0.47446182923085 +      5.8029818101147 *
3479421   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47446182923085 + 5.8029818101147 * RANGE_campaign_acceptance ;
3479422   +END;
MPRINT(EM_DIAGRAM):   END;
3479423   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479424   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3479425   +   ELSE S_MntCard_Games  =    -2.31794845074192 +      6.6165403464733 *
3479426   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31794845074192 + 6.6165403464733 * MntCard_Games ;
3479427   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3479428   +   ELSE S_MntMagazines  =     -0.8457617351151 +     17.4200332414951 *
3479429   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8457617351151 + 17.4200332414951 * MntMagazines ;
3479430   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3479431   +   ELSE S_NumCatalogPurchases
3479432   +          =    -3.09562753979671 +     13.4088989358536 * NumCatalogPurchases
3479433   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09562753979671 + 13.4088989358536 * NumCatalogPurchases ;
3479434   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3479435   +   ELSE S_NumDealsPurchases  =    -1.40973685572431 +     11.1787722399161 *
3479436   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40973685572431 + 11.1787722399161 * NumDealsPurchases ;
3479437   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3479438   +   ELSE S_NumWebPurchases  =    -5.23103772254043 +     12.2474028261424 *
3479439   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23103772254043 + 12.2474028261424 * NumWebPurchases ;
3479440   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3479441   +   ELSE S_RANGE_Frq  =    -1.36705344962706 +     4.20086816738957 * RANGE_Frq
3479442   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36705344962706 + 4.20086816738957 * RANGE_Frq ;
3479443   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3479444   +   ELSE S_RANGE_Recency  =    -1.66914546300377 +     3.36131125248371 *
3479445   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66914546300377 + 3.36131125248371 * RANGE_Recency ;
3479446   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3479447   +   ELSE S_RANGE_average_purchase
3479448   +          =    -1.04689232103311 +      5.1803582366391 *
3479449   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04689232103311 + 5.1803582366391 * RANGE_average_purchase ;
3479450   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3479451   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3479452   +   ELSE S_RANGE_campaign_acceptance
3479453   +          =    -0.47446182923085 +      5.8029818101147 *
3479454   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47446182923085 + 5.8029818101147 * RANGE_campaign_acceptance ;
3479455   +END;
MPRINT(EM_DIAGRAM):   END;
3479456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479457   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3479458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479460   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3479461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479462   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479463   +   H11  =     0.27097674541538 * S_MntCard_Games  +    -0.42145206487387 *
3479464   +        S_MntMagazines  +     0.57342975468747 * S_NumCatalogPurchases
3479465   +          +     -0.4880869297994 * S_NumDealsPurchases
3479466   +          +     0.21831079418415 * S_NumWebPurchases
3479467   +          +     0.05751817466476 * S_RANGE_Frq  +    -0.78464038585433 *
3479468   +        S_RANGE_Recency  +    -0.59287029920038 * S_RANGE_average_purchase
3479469   +          +     0.29503605655266 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.27097674541538 * S_MntCard_Games + -0.42145206487387 * S_MntMagazines + 0.57342975468747 * S_NumCatalogPurchases + -0.4880869297994 * S_NumDealsPurchases + 0.21831079418415 * S_NumWebPurchases + 0.05751817466476 * S_RANGE_Frq 
+ -0.78464038585433 * S_RANGE_Recency + -0.59287029920038 * S_RANGE_average_purchase + 0.29503605655266 * S_RANGE_campaign_acceptance ;
3479470   +   H12  =     2.01563732353333 * S_MntCard_Games  +    -1.13525087324524 *
3479471   +        S_MntMagazines  +     0.47308333545062 * S_NumCatalogPurchases
3479472   +          +     1.46883250865313 * S_NumDealsPurchases
3479473   +          +     0.92573892944721 * S_NumWebPurchases
3479474   +          +     1.48876001099715 * S_RANGE_Frq  +    -1.43655552060551 *
3479475   +        S_RANGE_Recency  +      2.7848678010433 * S_RANGE_average_purchase
3479476   +          +      1.3882696849176 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.01563732353333 * S_MntCard_Games + -1.13525087324524 * S_MntMagazines + 0.47308333545062 * S_NumCatalogPurchases + 1.46883250865313 * S_NumDealsPurchases + 0.92573892944721 * S_NumWebPurchases + 1.48876001099715 * S_RANGE_Frq 
+ -1.43655552060551 * S_RANGE_Recency + 2.7848678010433 * S_RANGE_average_purchase + 1.3882696849176 * S_RANGE_campaign_acceptance ;
3479477   +   H13  =     0.35738615742778 * S_MntCard_Games  +     0.50020048231188 *
3479478   +        S_MntMagazines  +     0.10578456872503 * S_NumCatalogPurchases
3479479   +          +     0.95550481178545 * S_NumDealsPurchases
3479480   +          +      0.2727549995755 * S_NumWebPurchases
3479481   +          +    -0.16351598963122 * S_RANGE_Frq  +    -0.67914008967481 *
3479482   +        S_RANGE_Recency  +     0.57472204442916 * S_RANGE_average_purchase
3479483   +          +     0.70132558956805 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.35738615742778 * S_MntCard_Games + 0.50020048231188 * S_MntMagazines + 0.10578456872503 * S_NumCatalogPurchases + 0.95550481178545 * S_NumDealsPurchases + 0.2727549995755 * S_NumWebPurchases + -0.16351598963122 * S_RANGE_Frq 
+ -0.67914008967481 * S_RANGE_Recency + 0.57472204442916 * S_RANGE_average_purchase + 0.70132558956805 * S_RANGE_campaign_acceptance ;
3479484   +   H14  =    -2.39258052128248 * S_MntCard_Games  +     0.11619821834936 *
3479485   +        S_MntMagazines  +     -2.4931916841367 * S_NumCatalogPurchases
3479486   +          +    -1.41726844954188 * S_NumDealsPurchases
3479487   +          +     0.57969176169603 * S_NumWebPurchases
3479488   +          +     0.11066295439195 * S_RANGE_Frq  +     2.54448089194722 *
3479489   +        S_RANGE_Recency  +     0.90037372915142 * S_RANGE_average_purchase
3479490   +          +    -0.82025280459884 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -2.39258052128248 * S_MntCard_Games + 0.11619821834936 * S_MntMagazines + -2.4931916841367 * S_NumCatalogPurchases + -1.41726844954188 * S_NumDealsPurchases + 0.57969176169603 * S_NumWebPurchases + 0.11066295439195 * 
S_RANGE_Frq + 2.54448089194722 * S_RANGE_Recency + 0.90037372915142 * S_RANGE_average_purchase + -0.82025280459884 * S_RANGE_campaign_acceptance ;
3479491   +   H11  = H11  +     0.27693909097361 * Marital_StatusDivorced
3479492   +          +    -1.48328883105655 * Marital_StatusMarried
3479493   +          +     0.83633918483564 * Marital_StatusSingle
3479494   +          +    -1.14590972763604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27693909097361 * Marital_StatusDivorced + -1.48328883105655 * Marital_StatusMarried + 0.83633918483564 * Marital_StatusSingle + -1.14590972763604 * Marital_StatusTogether ;
3479495   +   H12  = H12  +    -0.48878138343554 * Marital_StatusDivorced
3479496   +          +     2.12128157671221 * Marital_StatusMarried
3479497   +          +    -2.73999821570886 * Marital_StatusSingle
3479498   +          +     3.13494720969484 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.48878138343554 * Marital_StatusDivorced + 2.12128157671221 * Marital_StatusMarried + -2.73999821570886 * Marital_StatusSingle + 3.13494720969484 * Marital_StatusTogether ;
3479499   +   H13  = H13  +    -0.23310592040664 * Marital_StatusDivorced
3479500   +          +     0.67807503690967 * Marital_StatusMarried
3479501   +          +    -0.61586064014749 * Marital_StatusSingle
3479502   +          +     0.12473686345761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23310592040664 * Marital_StatusDivorced + 0.67807503690967 * Marital_StatusMarried + -0.61586064014749 * Marital_StatusSingle + 0.12473686345761 * Marital_StatusTogether ;
3479503   +   H14  = H14  +    -3.97893890762608 * Marital_StatusDivorced
3479504   +          +     2.41858308859111 * Marital_StatusMarried
3479505   +          +    -5.72618336954809 * Marital_StatusSingle
3479506   +          +     1.53336202109456 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.97893890762608 * Marital_StatusDivorced + 2.41858308859111 * Marital_StatusMarried + -5.72618336954809 * Marital_StatusSingle + 1.53336202109456 * Marital_StatusTogether ;
3479507   +   H11  =    -0.80593517070457 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.80593517070457 + H11 ;
3479508   +   H12  =    -1.90160786475955 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.90160786475955 + H12 ;
3479509   +   H13  =    -1.22263184655973 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.22263184655973 + H13 ;
3479510   +   H14  =     0.10836610551326 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.10836610551326 + H14 ;
3479511   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3479512   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3479513   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3479514   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3479515   +END;
MPRINT(EM_DIAGRAM):   END;
3479516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479517   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3479518   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3479519   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3479520   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3479521   +END;
MPRINT(EM_DIAGRAM):   END;
3479522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479523   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3479524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479525   +
3479526   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3479527   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3479528   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3479529   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3479530   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3479531   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3479532   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3479533   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479534   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479535   +end;
MPRINT(EM_DIAGRAM):   end;
3479536   +else do;
MPRINT(EM_DIAGRAM):   else do;
3479537   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3479538   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3479539   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3479540   +   end;
MPRINT(EM_DIAGRAM):   end;
3479541   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3479542   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3479543   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3479544   +   end;
MPRINT(EM_DIAGRAM):   end;
3479545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3479546   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479547   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479548   +   end;
MPRINT(EM_DIAGRAM):   end;
3479549   +end;
MPRINT(EM_DIAGRAM):   end;
3479550   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479551   +   P_DepVar1  =     7.61381200617707 * H11  +     2.65978447688456 * H12
3479552   +          +     6.64998732577946 * H13  +    -2.53281811040002 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.61381200617707 * H11 + 2.65978447688456 * H12 + 6.64998732577946 * H13 + -2.53281811040002 * H14 ;
3479553   +   P_DepVar1  =    -2.42490318335132 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.42490318335132 + P_DepVar1 ;
3479554   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3479555   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3479556   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3479557   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3479558   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3479559   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3479560   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3479561   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3479562   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3479563   +END;
MPRINT(EM_DIAGRAM):   END;
3479564   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479565   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3479566   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3479567   +END;
MPRINT(EM_DIAGRAM):   END;
3479568   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3479569   +   P_DepVar1  =     0.13707451701931;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13707451701931;
3479570   +   P_DepVar0  =     0.86292548298068;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86292548298068;
3479571   +END;
MPRINT(EM_DIAGRAM):   END;
3479572   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3479573   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3479574   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3479575   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3479576   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3479577   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3479578   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3479579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479580   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3479581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479582   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3479583   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3479584   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3479585   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3479586   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3479587   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3479588   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3479589   +END;
MPRINT(EM_DIAGRAM):   END;
3479590   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479591   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3479592   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479593   +drop
3479594   +S_MntCard_Games
3479595   +S_MntMagazines
3479596   +S_NumCatalogPurchases
3479597   +S_NumDealsPurchases
3479598   +S_NumWebPurchases
3479599   +S_RANGE_Frq
3479600   +S_RANGE_Recency
3479601   +S_RANGE_average_purchase
3479602   +S_RANGE_campaign_acceptance
3479603   +H11
3479604   +H12
3479605   +H13
3479606   +H14
3479607   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3479608   +end;
MPRINT(EM_DIAGRAM):   end;
3479609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479610   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3479611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479612   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3479613   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3479614   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479615   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3479616   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479617   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3479618   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3479619   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3479620   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3479621   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3479622   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3479623   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3479624   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3479625   +LENGTH _WARN_ $4
3479626   +      F_DepVar  $ 12
3479627   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3479628   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3479629   +
3479630   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3479631   +
3479632   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3479633   +
3479634   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3479635   +
3479636   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3479637   +
3479638   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3479639   +
3479640   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3479641   +
3479642   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3479643   +
3479644   +      label S_RANGE_campaign_acceptance =
3479645   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3479646   +
3479647   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3479648   +
3479649   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3479650   +
3479651   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3479652   +
3479653   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3479654   +
3479655   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3479656   +
3479657   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3479658   +
3479659   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3479660   +
3479661   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3479662   +
3479663   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3479664   +
3479665   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3479666   +
3479667   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3479668   +
3479669   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3479670   +
3479671   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3479672   +
3479673   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3479674   +
3479675   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3479676   +
3479677   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3479678   +
3479679   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3479680   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3479681   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3479682   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3479683   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3479684   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3479685   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3479686   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3479687   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3479688   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3479689   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3479690   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3479691   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3479692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3479693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479694   +end;
MPRINT(EM_DIAGRAM):   end;
3479695   +else do;
MPRINT(EM_DIAGRAM):   else do;
3479696   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3479697   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3479698   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3479699   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3479700   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3479701   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3479702   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3479703   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3479704   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479705   +         end;
MPRINT(EM_DIAGRAM):   end;
3479706   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3479707   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3479708   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3479709   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479710   +            end;
MPRINT(EM_DIAGRAM):   end;
3479711   +         end;
MPRINT(EM_DIAGRAM):   end;
3479712   +      end;
MPRINT(EM_DIAGRAM):   end;
3479713   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3479714   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3479715   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3479716   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479717   +         end;
MPRINT(EM_DIAGRAM):   end;
3479718   +      end;
MPRINT(EM_DIAGRAM):   end;
3479719   +   end;
MPRINT(EM_DIAGRAM):   end;
3479720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3479721   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3479722   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3479723   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479724   +      end;
MPRINT(EM_DIAGRAM):   end;
3479725   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3479726   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3479727   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3479728   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3479729   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3479730   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3479731   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3479732   +         end;
MPRINT(EM_DIAGRAM):   end;
3479733   +      end;
MPRINT(EM_DIAGRAM):   end;
3479734   +   end;
MPRINT(EM_DIAGRAM):   end;
3479735   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3479736   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3479737   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3479738   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3479739   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3479740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3479741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479742   +   end;
MPRINT(EM_DIAGRAM):   end;
3479743   +end;
MPRINT(EM_DIAGRAM):   end;
3479744   +
3479745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479746   +*** Checking missing input Interval
3479747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3479748   +
3479749   +IF NMISS(
3479750   +   MntCard_Games ,
3479751   +   MntMagazines ,
3479752   +   NumCatalogPurchases ,
3479753   +   NumDealsPurchases ,
3479754   +   NumWebPurchases ,
3479755   +   RANGE_Frq ,
3479756   +   RANGE_Recency ,
3479757   +   RANGE_average_purchase ,
3479758   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3479759   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3479760   +
3479761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3479762   +END;
MPRINT(EM_DIAGRAM):   END;
3479763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479764   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3479765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479767   +   S_MntCard_Games  =    -2.33365199762263 +     6.64496562600808 *
3479768   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33365199762263 + 6.64496562600808 * MntCard_Games ;
3479769   +   S_MntMagazines  =    -0.83717196203092 +     17.3697736457069 *
3479770   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83717196203092 + 17.3697736457069 * MntMagazines ;
3479771   +   S_NumCatalogPurchases  =    -3.11726302007955 +     13.4865837242738 *
3479772   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11726302007955 + 13.4865837242738 * NumCatalogPurchases ;
3479773   +   S_NumDealsPurchases  =     -1.4111958946165 +     11.1996448217085 *
3479774   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.4111958946165 + 11.1996448217085 * NumDealsPurchases ;
3479775   +   S_NumWebPurchases  =    -5.23185914106725 +        12.2771775229 *
3479776   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23185914106725 + 12.2771775229 * NumWebPurchases ;
3479777   +   S_RANGE_Frq  =     -1.3603946264234 +      4.2206625418108 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3603946264234 + 4.2206625418108 * RANGE_Frq ;
3479778   +   S_RANGE_Recency  =    -1.66686959497139 +     3.35906763293638 *
3479779   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66686959497139 + 3.35906763293638 * RANGE_Recency ;
3479780   +   S_RANGE_average_purchase  =    -1.03730746994139 +     5.14308263365786 *
3479781   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03730746994139 + 5.14308263365786 * RANGE_average_purchase ;
3479782   +   S_RANGE_campaign_acceptance
3479783   +          =    -0.47415905331353 +      5.6617153987546 *
3479784   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47415905331353 + 5.6617153987546 * RANGE_campaign_acceptance ;
3479785   +END;
MPRINT(EM_DIAGRAM):   END;
3479786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479787   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3479788   +   ELSE S_MntCard_Games  =    -2.33365199762263 +     6.64496562600808 *
3479789   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33365199762263 + 6.64496562600808 * MntCard_Games ;
3479790   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3479791   +   ELSE S_MntMagazines  =    -0.83717196203092 +     17.3697736457069 *
3479792   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83717196203092 + 17.3697736457069 * MntMagazines ;
3479793   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3479794   +   ELSE S_NumCatalogPurchases
3479795   +          =    -3.11726302007955 +     13.4865837242738 * NumCatalogPurchases
3479796   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11726302007955 + 13.4865837242738 * NumCatalogPurchases ;
3479797   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3479798   +   ELSE S_NumDealsPurchases  =     -1.4111958946165 +     11.1996448217085 *
3479799   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.4111958946165 + 11.1996448217085 * NumDealsPurchases ;
3479800   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3479801   +   ELSE S_NumWebPurchases  =    -5.23185914106725 +        12.2771775229 *
3479802   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23185914106725 + 12.2771775229 * NumWebPurchases ;
3479803   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3479804   +   ELSE S_RANGE_Frq  =     -1.3603946264234 +      4.2206625418108 * RANGE_Frq
3479805   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3603946264234 + 4.2206625418108 * RANGE_Frq ;
3479806   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3479807   +   ELSE S_RANGE_Recency  =    -1.66686959497139 +     3.35906763293638 *
3479808   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66686959497139 + 3.35906763293638 * RANGE_Recency ;
3479809   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3479810   +   ELSE S_RANGE_average_purchase
3479811   +          =    -1.03730746994139 +     5.14308263365786 *
3479812   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03730746994139 + 5.14308263365786 * RANGE_average_purchase ;
3479813   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3479814   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3479815   +   ELSE S_RANGE_campaign_acceptance
3479816   +          =    -0.47415905331353 +      5.6617153987546 *
3479817   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47415905331353 + 5.6617153987546 * RANGE_campaign_acceptance ;
3479818   +END;
MPRINT(EM_DIAGRAM):   END;
3479819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479820   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3479821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479823   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3479824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479825   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479826   +   H11  =    -1.20166513010284 * S_MntCard_Games  +     0.87814444022471 *
3479827   +        S_MntMagazines  +    -1.52375265894652 * S_NumCatalogPurchases
3479828   +          +     0.66411203535248 * S_NumDealsPurchases
3479829   +          +    -1.51135962252052 * S_NumWebPurchases
3479830   +          +     0.04844124841059 * S_RANGE_Frq  +     2.35653997981589 *
3479831   +        S_RANGE_Recency  +     0.70094402615693 * S_RANGE_average_purchase
3479832   +          +    -1.47063107788616 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -1.20166513010284 * S_MntCard_Games + 0.87814444022471 * S_MntMagazines + -1.52375265894652 * S_NumCatalogPurchases + 0.66411203535248 * S_NumDealsPurchases + -1.51135962252052 * S_NumWebPurchases + 0.04844124841059 * 
S_RANGE_Frq + 2.35653997981589 * S_RANGE_Recency + 0.70094402615693 * S_RANGE_average_purchase + -1.47063107788616 * S_RANGE_campaign_acceptance ;
3479833   +   H12  =    -0.10018095371109 * S_MntCard_Games  +    -0.03220849594213 *
3479834   +        S_MntMagazines  +    -0.06373994199117 * S_NumCatalogPurchases
3479835   +          +    -0.40812267233813 * S_NumDealsPurchases
3479836   +          +      0.3397779962395 * S_NumWebPurchases
3479837   +          +    -0.15412477592589 * S_RANGE_Frq  +      0.3316667608018 *
3479838   +        S_RANGE_Recency  +    -0.13978985362291 * S_RANGE_average_purchase
3479839   +          +    -0.16412457083062 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.10018095371109 * S_MntCard_Games + -0.03220849594213 * S_MntMagazines + -0.06373994199117 * S_NumCatalogPurchases + -0.40812267233813 * S_NumDealsPurchases + 0.3397779962395 * S_NumWebPurchases + -0.15412477592589 * 
S_RANGE_Frq + 0.3316667608018 * S_RANGE_Recency + -0.13978985362291 * S_RANGE_average_purchase + -0.16412457083062 * S_RANGE_campaign_acceptance ;
3479840   +   H13  =    -2.80181902707167 * S_MntCard_Games  +    -3.42989742869599 *
3479841   +        S_MntMagazines  +    -3.68155920105875 * S_NumCatalogPurchases
3479842   +          +     -1.8429511005016 * S_NumDealsPurchases
3479843   +          +    -1.97721989029183 * S_NumWebPurchases
3479844   +          +     1.76018940957803 * S_RANGE_Frq  +     1.64257985048582 *
3479845   +        S_RANGE_Recency  +    -3.62734782980333 * S_RANGE_average_purchase
3479846   +          +    -3.97736696910839 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -2.80181902707167 * S_MntCard_Games + -3.42989742869599 * S_MntMagazines + -3.68155920105875 * S_NumCatalogPurchases + -1.8429511005016 * S_NumDealsPurchases + -1.97721989029183 * S_NumWebPurchases + 1.76018940957803 * 
S_RANGE_Frq + 1.64257985048582 * S_RANGE_Recency + -3.62734782980333 * S_RANGE_average_purchase + -3.97736696910839 * S_RANGE_campaign_acceptance ;
3479847   +   H14  =     1.38808059608473 * S_MntCard_Games  +    -0.04853175680039 *
3479848   +        S_MntMagazines  +     0.80389803835189 * S_NumCatalogPurchases
3479849   +          +     1.03570141014036 * S_NumDealsPurchases
3479850   +          +     1.69935018492612 * S_NumWebPurchases
3479851   +          +     0.49167186145492 * S_RANGE_Frq  +    -2.23253002671794 *
3479852   +        S_RANGE_Recency  +      0.1031921078093 * S_RANGE_average_purchase
3479853   +          +     1.25581958471462 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 1.38808059608473 * S_MntCard_Games + -0.04853175680039 * S_MntMagazines + 0.80389803835189 * S_NumCatalogPurchases + 1.03570141014036 * S_NumDealsPurchases + 1.69935018492612 * S_NumWebPurchases + 0.49167186145492 * S_RANGE_Frq 
+ -2.23253002671794 * S_RANGE_Recency + 0.1031921078093 * S_RANGE_average_purchase + 1.25581958471462 * S_RANGE_campaign_acceptance ;
3479854   +   H11  = H11  +    -3.05816750520044 * Marital_StatusDivorced
3479855   +          +     0.83971743732196 * Marital_StatusMarried
3479856   +          +    -3.00150956581766 * Marital_StatusSingle
3479857   +          +     1.04640872826216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -3.05816750520044 * Marital_StatusDivorced + 0.83971743732196 * Marital_StatusMarried + -3.00150956581766 * Marital_StatusSingle + 1.04640872826216 * Marital_StatusTogether ;
3479858   +   H12  = H12  +    -0.33281828437091 * Marital_StatusDivorced
3479859   +          +     0.05523929454438 * Marital_StatusMarried
3479860   +          +    -0.17598493161594 * Marital_StatusSingle
3479861   +          +     0.68618051709211 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.33281828437091 * Marital_StatusDivorced + 0.05523929454438 * Marital_StatusMarried + -0.17598493161594 * Marital_StatusSingle + 0.68618051709211 * Marital_StatusTogether ;
3479862   +   H13  = H13  +     3.83978668353026 * Marital_StatusDivorced
3479863   +          +    -0.49987008400828 * Marital_StatusMarried
3479864   +          +     1.05910041992932 * Marital_StatusSingle
3479865   +          +    -2.57816872028472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 3.83978668353026 * Marital_StatusDivorced + -0.49987008400828 * Marital_StatusMarried + 1.05910041992932 * Marital_StatusSingle + -2.57816872028472 * Marital_StatusTogether ;
3479866   +   H14  = H14  +    -0.70727379983715 * Marital_StatusDivorced
3479867   +          +    -0.20837801748244 * Marital_StatusMarried
3479868   +          +     -1.3056348463658 * Marital_StatusSingle
3479869   +          +     0.55518800554475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.70727379983715 * Marital_StatusDivorced + -0.20837801748244 * Marital_StatusMarried + -1.3056348463658 * Marital_StatusSingle + 0.55518800554475 * Marital_StatusTogether ;
3479870   +   H11  =     4.51476126469688 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 4.51476126469688 + H11 ;
3479871   +   H12  =     0.92293546988078 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.92293546988078 + H12 ;
3479872   +   H13  =    -0.08524560772109 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.08524560772109 + H13 ;
3479873   +   H14  =    -3.91364057834773 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -3.91364057834773 + H14 ;
3479874   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3479875   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3479876   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3479877   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3479878   +END;
MPRINT(EM_DIAGRAM):   END;
3479879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479880   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3479881   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3479882   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3479883   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3479884   +END;
MPRINT(EM_DIAGRAM):   END;
3479885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479886   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3479887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479888   +
3479889   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3479890   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3479891   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3479892   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3479893   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3479894   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3479895   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3479896   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479897   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479898   +end;
MPRINT(EM_DIAGRAM):   end;
3479899   +else do;
MPRINT(EM_DIAGRAM):   else do;
3479900   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3479901   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3479902   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3479903   +   end;
MPRINT(EM_DIAGRAM):   end;
3479904   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3479905   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3479906   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3479907   +   end;
MPRINT(EM_DIAGRAM):   end;
3479908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3479909   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3479910   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3479911   +   end;
MPRINT(EM_DIAGRAM):   end;
3479912   +end;
MPRINT(EM_DIAGRAM):   end;
3479913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3479914   +   P_DepVar1  =    -2.71783093261211 * H11  +    -6.03455714157428 * H12
3479915   +          +    -2.02154799751405 * H13  +     3.48879430410728 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.71783093261211 * H11 + -6.03455714157428 * H12 + -2.02154799751405 * H13 + 3.48879430410728 * H14 ;
3479916   +   P_DepVar1  =     1.92791168167485 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.92791168167485 + P_DepVar1 ;
3479917   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3479918   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3479919   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3479920   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3479921   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3479922   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3479923   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3479924   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3479925   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3479926   +END;
MPRINT(EM_DIAGRAM):   END;
3479927   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3479928   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3479929   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3479930   +END;
MPRINT(EM_DIAGRAM):   END;
3479931   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3479932   +   P_DepVar1  =     0.13897691263014;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13897691263014;
3479933   +   P_DepVar0  =     0.86102308736985;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86102308736985;
3479934   +END;
MPRINT(EM_DIAGRAM):   END;
3479935   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3479936   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3479937   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3479938   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3479939   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3479940   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3479941   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3479942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479943   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3479944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3479945   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3479946   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3479947   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3479948   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3479949   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3479950   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3479951   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3479952   +END;
MPRINT(EM_DIAGRAM):   END;
3479953   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479954   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3479955   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3479956   +drop
3479957   +S_MntCard_Games
3479958   +S_MntMagazines
3479959   +S_NumCatalogPurchases
3479960   +S_NumDealsPurchases
3479961   +S_NumWebPurchases
3479962   +S_RANGE_Frq
3479963   +S_RANGE_Recency
3479964   +S_RANGE_average_purchase
3479965   +S_RANGE_campaign_acceptance
3479966   +H11
3479967   +H12
3479968   +H13
3479969   +H14
3479970   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3479971   +end;
MPRINT(EM_DIAGRAM):   end;
3479972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479973   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3479974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3479975   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3479976   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3479977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479978   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3479979   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3479980   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3479981   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3479982   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3479983   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3479984   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3479985   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3479986   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3479987   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3479988   +LENGTH _WARN_ $4
3479989   +      F_DepVar  $ 12
3479990   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3479991   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3479992   +
3479993   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3479994   +
3479995   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3479996   +
3479997   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3479998   +
3479999   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3480000   +
3480001   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3480002   +
3480003   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3480004   +
3480005   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3480006   +
3480007   +      label S_RANGE_campaign_acceptance =
3480008   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3480009   +
3480010   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3480011   +
3480012   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3480013   +
3480014   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3480015   +
3480016   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3480017   +
3480018   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3480019   +
3480020   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3480021   +
3480022   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3480023   +
3480024   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3480025   +
3480026   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3480027   +
3480028   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480029   +
3480030   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3480031   +
3480032   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3480033   +
3480034   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3480035   +
3480036   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3480037   +
3480038   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3480039   +
3480040   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3480041   +
3480042   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3480043   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3480044   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3480045   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3480046   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3480047   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3480048   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3480049   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3480050   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3480051   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480052   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480053   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480054   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3480056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480057   +end;
MPRINT(EM_DIAGRAM):   end;
3480058   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480059   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3480060   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3480061   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480062   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3480063   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3480064   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3480065   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3480066   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3480067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480068   +         end;
MPRINT(EM_DIAGRAM):   end;
3480069   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3480070   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3480071   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3480072   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480073   +            end;
MPRINT(EM_DIAGRAM):   end;
3480074   +         end;
MPRINT(EM_DIAGRAM):   end;
3480075   +      end;
MPRINT(EM_DIAGRAM):   end;
3480076   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480077   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3480078   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3480079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480080   +         end;
MPRINT(EM_DIAGRAM):   end;
3480081   +      end;
MPRINT(EM_DIAGRAM):   end;
3480082   +   end;
MPRINT(EM_DIAGRAM):   end;
3480083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480084   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3480085   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3480086   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480087   +      end;
MPRINT(EM_DIAGRAM):   end;
3480088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480089   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3480090   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3480091   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3480092   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3480093   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3480094   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480095   +         end;
MPRINT(EM_DIAGRAM):   end;
3480096   +      end;
MPRINT(EM_DIAGRAM):   end;
3480097   +   end;
MPRINT(EM_DIAGRAM):   end;
3480098   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3480099   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480100   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480101   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480102   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3480104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480105   +   end;
MPRINT(EM_DIAGRAM):   end;
3480106   +end;
MPRINT(EM_DIAGRAM):   end;
3480107   +
3480108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480109   +*** Checking missing input Interval
3480110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3480111   +
3480112   +IF NMISS(
3480113   +   MntCard_Games ,
3480114   +   MntMagazines ,
3480115   +   NumCatalogPurchases ,
3480116   +   NumDealsPurchases ,
3480117   +   NumWebPurchases ,
3480118   +   RANGE_Frq ,
3480119   +   RANGE_Recency ,
3480120   +   RANGE_average_purchase ,
3480121   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3480122   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3480123   +
3480124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480125   +END;
MPRINT(EM_DIAGRAM):   END;
3480126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480127   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3480128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480129   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480130   +   S_MntCard_Games  =    -2.32172166483063 +     6.63106403138651 *
3480131   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32172166483063 + 6.63106403138651 * MntCard_Games ;
3480132   +   S_MntMagazines  =    -0.83846928953031 +     17.5763611670304 *
3480133   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83846928953031 + 17.5763611670304 * MntMagazines ;
3480134   +   S_NumCatalogPurchases  =     -3.1096594460943 +     13.4003729898173 *
3480135   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.1096594460943 + 13.4003729898173 * NumCatalogPurchases ;
3480136   +   S_NumDealsPurchases  =    -1.40932386997325 +     11.1791913132312 *
3480137   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40932386997325 + 11.1791913132312 * NumDealsPurchases ;
3480138   +   S_NumWebPurchases  =    -5.20438750907928 +     12.2155987914564 *
3480139   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.20438750907928 + 12.2155987914564 * NumWebPurchases ;
3480140   +   S_RANGE_Frq  =    -1.36793353933378 +     4.19804238584688 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36793353933378 + 4.19804238584688 * RANGE_Frq ;
3480141   +   S_RANGE_Recency  =      -1.665917420063 +      3.3528926556089 *
3480142   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.665917420063 + 3.3528926556089 * RANGE_Recency ;
3480143   +   S_RANGE_average_purchase  =    -1.04139293554519 +     5.15500943092228 *
3480144   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04139293554519 + 5.15500943092228 * RANGE_average_purchase ;
3480145   +   S_RANGE_campaign_acceptance
3480146   +          =    -0.46945499551264 +     5.74284751792168 *
3480147   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.46945499551264 + 5.74284751792168 * RANGE_campaign_acceptance ;
3480148   +END;
MPRINT(EM_DIAGRAM):   END;
3480149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480150   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3480151   +   ELSE S_MntCard_Games  =    -2.32172166483063 +     6.63106403138651 *
3480152   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32172166483063 + 6.63106403138651 * MntCard_Games ;
3480153   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3480154   +   ELSE S_MntMagazines  =    -0.83846928953031 +     17.5763611670304 *
3480155   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83846928953031 + 17.5763611670304 * MntMagazines ;
3480156   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3480157   +   ELSE S_NumCatalogPurchases
3480158   +          =     -3.1096594460943 +     13.4003729898173 * NumCatalogPurchases
3480159   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.1096594460943 + 13.4003729898173 * NumCatalogPurchases ;
3480160   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3480161   +   ELSE S_NumDealsPurchases  =    -1.40932386997325 +     11.1791913132312 *
3480162   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40932386997325 + 11.1791913132312 * NumDealsPurchases ;
3480163   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3480164   +   ELSE S_NumWebPurchases  =    -5.20438750907928 +     12.2155987914564 *
3480165   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.20438750907928 + 12.2155987914564 * NumWebPurchases ;
3480166   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3480167   +   ELSE S_RANGE_Frq  =    -1.36793353933378 +     4.19804238584688 * RANGE_Frq
3480168   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36793353933378 + 4.19804238584688 * RANGE_Frq ;
3480169   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3480170   +   ELSE S_RANGE_Recency  =      -1.665917420063 +      3.3528926556089 *
3480171   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.665917420063 + 3.3528926556089 * RANGE_Recency ;
3480172   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3480173   +   ELSE S_RANGE_average_purchase
3480174   +          =    -1.04139293554519 +     5.15500943092228 *
3480175   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04139293554519 + 5.15500943092228 * RANGE_average_purchase ;
3480176   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3480177   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3480178   +   ELSE S_RANGE_campaign_acceptance
3480179   +          =    -0.46945499551264 +     5.74284751792168 *
3480180   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.46945499551264 + 5.74284751792168 * RANGE_campaign_acceptance ;
3480181   +END;
MPRINT(EM_DIAGRAM):   END;
3480182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480183   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3480184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480186   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3480187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480188   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480189   +   H11  =     0.40537823711859 * S_MntCard_Games  +     0.86300583368803 *
3480190   +        S_MntMagazines  +     0.44071523292589 * S_NumCatalogPurchases
3480191   +          +     0.61873907623209 * S_NumDealsPurchases
3480192   +          +    -0.38897161100975 * S_NumWebPurchases
3480193   +          +     0.39842173725337 * S_RANGE_Frq  +    -0.76244505848389 *
3480194   +        S_RANGE_Recency  +    -0.17718136559087 * S_RANGE_average_purchase
3480195   +          +     0.39768127260047 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.40537823711859 * S_MntCard_Games + 0.86300583368803 * S_MntMagazines + 0.44071523292589 * S_NumCatalogPurchases + 0.61873907623209 * S_NumDealsPurchases + -0.38897161100975 * S_NumWebPurchases + 0.39842173725337 * S_RANGE_Frq 
+ -0.76244505848389 * S_RANGE_Recency + -0.17718136559087 * S_RANGE_average_purchase + 0.39768127260047 * S_RANGE_campaign_acceptance ;
3480196   +   H12  =     2.21251511947992 * S_MntCard_Games  +    -0.30241301704982 *
3480197   +        S_MntMagazines  +     0.40093736180104 * S_NumCatalogPurchases
3480198   +          +     1.31825829519464 * S_NumDealsPurchases
3480199   +          +     1.24106025876758 * S_NumWebPurchases
3480200   +          +     2.02862791283351 * S_RANGE_Frq  +    -1.49266135019022 *
3480201   +        S_RANGE_Recency  +     3.90303276947875 * S_RANGE_average_purchase
3480202   +          +     2.03249022570337 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 2.21251511947992 * S_MntCard_Games + -0.30241301704982 * S_MntMagazines + 0.40093736180104 * S_NumCatalogPurchases + 1.31825829519464 * S_NumDealsPurchases + 1.24106025876758 * S_NumWebPurchases + 2.02862791283351 * S_RANGE_Frq 
+ -1.49266135019022 * S_RANGE_Recency + 3.90303276947875 * S_RANGE_average_purchase + 2.03249022570337 * S_RANGE_campaign_acceptance ;
3480203   +   H13  =     0.56750095244226 * S_MntCard_Games  +     -0.2473620776099 *
3480204   +        S_MntMagazines  +     0.35059866314978 * S_NumCatalogPurchases
3480205   +          +     0.18043065038934 * S_NumDealsPurchases
3480206   +          +     0.82466813315332 * S_NumWebPurchases
3480207   +          +     0.05213608244622 * S_RANGE_Frq  +    -0.74358774806704 *
3480208   +        S_RANGE_Recency  +     0.04814831629328 * S_RANGE_average_purchase
3480209   +          +     0.53626586155471 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.56750095244226 * S_MntCard_Games + -0.2473620776099 * S_MntMagazines + 0.35059866314978 * S_NumCatalogPurchases + 0.18043065038934 * S_NumDealsPurchases + 0.82466813315332 * S_NumWebPurchases + 0.05213608244622 * S_RANGE_Frq 
+ -0.74358774806704 * S_RANGE_Recency + 0.04814831629328 * S_RANGE_average_purchase + 0.53626586155471 * S_RANGE_campaign_acceptance ;
3480210   +   H14  =     0.40795881676429 * S_MntCard_Games  +     0.91080913273251 *
3480211   +        S_MntMagazines  +    -0.41926313946551 * S_NumCatalogPurchases
3480212   +          +    -0.38792494607064 * S_NumDealsPurchases
3480213   +          +     0.69052548025581 * S_NumWebPurchases
3480214   +          +     1.15310917069851 * S_RANGE_Frq  +     0.78392830221604 *
3480215   +        S_RANGE_Recency  +    -0.04710315225299 * S_RANGE_average_purchase
3480216   +          +    -0.26960838783746 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 0.40795881676429 * S_MntCard_Games + 0.91080913273251 * S_MntMagazines + -0.41926313946551 * S_NumCatalogPurchases + -0.38792494607064 * S_NumDealsPurchases + 0.69052548025581 * S_NumWebPurchases + 1.15310917069851 * 
S_RANGE_Frq + 0.78392830221604 * S_RANGE_Recency + -0.04710315225299 * S_RANGE_average_purchase + -0.26960838783746 * S_RANGE_campaign_acceptance ;
3480217   +   H11  = H11  +      0.4184274752428 * Marital_StatusDivorced
3480218   +          +     0.10739283454837 * Marital_StatusMarried
3480219   +          +    -0.13287779203629 * Marital_StatusSingle
3480220   +          +    -1.45615684496595 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.4184274752428 * Marital_StatusDivorced + 0.10739283454837 * Marital_StatusMarried + -0.13287779203629 * Marital_StatusSingle + -1.45615684496595 * Marital_StatusTogether ;
3480221   +   H12  = H12  +    -1.86707045079453 * Marital_StatusDivorced
3480222   +          +      3.2751583590714 * Marital_StatusMarried
3480223   +          +     -4.4371344101509 * Marital_StatusSingle
3480224   +          +     3.51745474428269 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.86707045079453 * Marital_StatusDivorced + 3.2751583590714 * Marital_StatusMarried + -4.4371344101509 * Marital_StatusSingle + 3.51745474428269 * Marital_StatusTogether ;
3480225   +   H13  = H13  +       0.200313335424 * Marital_StatusDivorced
3480226   +          +     0.05332926588755 * Marital_StatusMarried
3480227   +          +     0.28099421851791 * Marital_StatusSingle
3480228   +          +    -0.39951033439742 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.200313335424 * Marital_StatusDivorced + 0.05332926588755 * Marital_StatusMarried + 0.28099421851791 * Marital_StatusSingle + -0.39951033439742 * Marital_StatusTogether ;
3480229   +   H14  = H14  +     0.18046514074743 * Marital_StatusDivorced
3480230   +          +     2.11753729018576 * Marital_StatusMarried
3480231   +          +    -2.46591719959114 * Marital_StatusSingle
3480232   +          +    -0.74038175528648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18046514074743 * Marital_StatusDivorced + 2.11753729018576 * Marital_StatusMarried + -2.46591719959114 * Marital_StatusSingle + -0.74038175528648 * Marital_StatusTogether ;
3480233   +   H11  =    -1.15243402779036 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.15243402779036 + H11 ;
3480234   +   H12  =    -0.86310188448761 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.86310188448761 + H12 ;
3480235   +   H13  =     -1.5581644524236 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.5581644524236 + H13 ;
3480236   +   H14  =    -0.00456723128744 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.00456723128744 + H14 ;
3480237   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3480238   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3480239   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3480240   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3480241   +END;
MPRINT(EM_DIAGRAM):   END;
3480242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480243   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3480244   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3480245   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3480246   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3480247   +END;
MPRINT(EM_DIAGRAM):   END;
3480248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480249   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3480250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480251   +
3480252   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3480253   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3480254   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480255   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3480256   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3480257   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480258   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3480259   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480260   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3480261   +end;
MPRINT(EM_DIAGRAM):   end;
3480262   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480263   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3480264   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3480265   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3480266   +   end;
MPRINT(EM_DIAGRAM):   end;
3480267   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3480268   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3480269   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3480270   +   end;
MPRINT(EM_DIAGRAM):   end;
3480271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480272   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480273   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3480274   +   end;
MPRINT(EM_DIAGRAM):   end;
3480275   +end;
MPRINT(EM_DIAGRAM):   end;
3480276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480277   +   P_DepVar1  =     4.93734731924067 * H11  +     2.99507663665038 * H12
3480278   +          +     6.31047353793964 * H13  +     -3.6438575378703 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.93734731924067 * H11 + 2.99507663665038 * H12 + 6.31047353793964 * H13 + -3.6438575378703 * H14 ;
3480279   +   P_DepVar1  =    -0.71411558742548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.71411558742548 + P_DepVar1 ;
3480280   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3480281   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3480282   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3480283   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3480284   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3480285   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3480286   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3480287   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3480288   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3480289   +END;
MPRINT(EM_DIAGRAM):   END;
3480290   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480291   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3480292   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3480293   +END;
MPRINT(EM_DIAGRAM):   END;
3480294   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3480295   +   P_DepVar1  =     0.13560090702947;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13560090702947;
3480296   +   P_DepVar0  =     0.86439909297052;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86439909297052;
3480297   +END;
MPRINT(EM_DIAGRAM):   END;
3480298   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3480299   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3480300   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3480301   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3480302   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3480303   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3480304   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3480305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480306   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3480307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480308   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3480309   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3480310   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3480311   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3480312   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3480313   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3480314   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3480315   +END;
MPRINT(EM_DIAGRAM):   END;
3480316   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3480317   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3480318   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3480319   +drop
3480320   +S_MntCard_Games
3480321   +S_MntMagazines
3480322   +S_NumCatalogPurchases
3480323   +S_NumDealsPurchases
3480324   +S_NumWebPurchases
3480325   +S_RANGE_Frq
3480326   +S_RANGE_Recency
3480327   +S_RANGE_average_purchase
3480328   +S_RANGE_campaign_acceptance
3480329   +H11
3480330   +H12
3480331   +H13
3480332   +H14
3480333   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3480334   +end;
MPRINT(EM_DIAGRAM):   end;
3480335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3480336   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3480337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3480338   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3480339   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3480340   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3480341   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3480342   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3480343   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3480344   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3480345   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3480346   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3480347   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3480348   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3480349   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3480350   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3480351   +LENGTH _WARN_ $4
3480352   +      F_DepVar  $ 12
3480353   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3480354   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3480355   +
3480356   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3480357   +
3480358   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3480359   +
3480360   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3480361   +
3480362   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3480363   +
3480364   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3480365   +
3480366   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3480367   +
3480368   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3480369   +
3480370   +      label S_RANGE_campaign_acceptance =
3480371   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3480372   +
3480373   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3480374   +
3480375   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3480376   +
3480377   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3480378   +
3480379   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3480380   +
3480381   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3480382   +
3480383   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3480384   +
3480385   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3480386   +
3480387   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3480388   +
3480389   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3480390   +
3480391   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480392   +
3480393   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3480394   +
3480395   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3480396   +
3480397   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3480398   +
3480399   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3480400   +
3480401   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3480402   +
3480403   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3480404   +
3480405   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3480406   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3480407   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3480408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3480409   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3480410   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3480411   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3480412   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3480413   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3480414   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480415   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480416   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480417   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3480419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480420   +end;
MPRINT(EM_DIAGRAM):   end;
3480421   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480422   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3480423   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3480424   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480425   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3480426   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3480427   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3480428   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3480429   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3480430   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480431   +         end;
MPRINT(EM_DIAGRAM):   end;
3480432   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3480433   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3480434   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3480435   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480436   +            end;
MPRINT(EM_DIAGRAM):   end;
3480437   +         end;
MPRINT(EM_DIAGRAM):   end;
3480438   +      end;
MPRINT(EM_DIAGRAM):   end;
3480439   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480440   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3480441   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3480442   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480443   +         end;
MPRINT(EM_DIAGRAM):   end;
3480444   +      end;
MPRINT(EM_DIAGRAM):   end;
3480445   +   end;
MPRINT(EM_DIAGRAM):   end;
3480446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480447   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3480448   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3480449   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480450   +      end;
MPRINT(EM_DIAGRAM):   end;
3480451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480452   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3480453   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3480454   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3480455   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3480456   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3480457   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480458   +         end;
MPRINT(EM_DIAGRAM):   end;
3480459   +      end;
MPRINT(EM_DIAGRAM):   end;
3480460   +   end;
MPRINT(EM_DIAGRAM):   end;
3480461   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3480462   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480463   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480464   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480465   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3480467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480468   +   end;
MPRINT(EM_DIAGRAM):   end;
3480469   +end;
MPRINT(EM_DIAGRAM):   end;
3480470   +
3480471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480472   +*** Checking missing input Interval
3480473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3480474   +
3480475   +IF NMISS(
3480476   +   MntCard_Games ,
3480477   +   MntMagazines ,
3480478   +   NumCatalogPurchases ,
3480479   +   NumDealsPurchases ,
3480480   +   NumWebPurchases ,
3480481   +   RANGE_Frq ,
3480482   +   RANGE_Recency ,
3480483   +   RANGE_average_purchase ,
3480484   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3480485   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3480486   +
3480487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480488   +END;
MPRINT(EM_DIAGRAM):   END;
3480489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480490   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3480491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480493   +   S_MntCard_Games  =    -2.32566901622815 +     6.62675550768494 *
3480494   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32566901622815 + 6.62675550768494 * MntCard_Games ;
3480495   +   S_MntMagazines  =    -0.83833893673669 +     17.3539259376186 *
3480496   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83833893673669 + 17.3539259376186 * MntMagazines ;
3480497   +   S_NumCatalogPurchases  =    -3.10580222135279 +     13.4664328633376 *
3480498   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10580222135279 + 13.4664328633376 * NumCatalogPurchases ;
3480499   +   S_NumDealsPurchases  =    -1.41036512227264 +     11.2086682392144 *
3480500   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41036512227264 + 11.2086682392144 * NumDealsPurchases ;
3480501   +   S_NumWebPurchases  =    -5.18578405186423 +     12.1737656630904 *
3480502   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.18578405186423 + 12.1737656630904 * NumWebPurchases ;
3480503   +   S_RANGE_Frq  =    -1.36570914571755 +     4.22091770312363 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36570914571755 + 4.22091770312363 * RANGE_Frq ;
3480504   +   S_RANGE_Recency  =    -1.65196701596613 +     3.33661306496431 *
3480505   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65196701596613 + 3.33661306496431 * RANGE_Recency ;
3480506   +   S_RANGE_average_purchase  =    -1.03999041798286 +     5.11900418743914 *
3480507   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03999041798286 + 5.11900418743914 * RANGE_average_purchase ;
3480508   +   S_RANGE_campaign_acceptance
3480509   +          =    -0.47683012986905 +     5.81023866522069 *
3480510   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47683012986905 + 5.81023866522069 * RANGE_campaign_acceptance ;
3480511   +END;
MPRINT(EM_DIAGRAM):   END;
3480512   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480513   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3480514   +   ELSE S_MntCard_Games  =    -2.32566901622815 +     6.62675550768494 *
3480515   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32566901622815 + 6.62675550768494 * MntCard_Games ;
3480516   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3480517   +   ELSE S_MntMagazines  =    -0.83833893673669 +     17.3539259376186 *
3480518   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83833893673669 + 17.3539259376186 * MntMagazines ;
3480519   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3480520   +   ELSE S_NumCatalogPurchases
3480521   +          =    -3.10580222135279 +     13.4664328633376 * NumCatalogPurchases
3480522   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10580222135279 + 13.4664328633376 * NumCatalogPurchases ;
3480523   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3480524   +   ELSE S_NumDealsPurchases  =    -1.41036512227264 +     11.2086682392144 *
3480525   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41036512227264 + 11.2086682392144 * NumDealsPurchases ;
3480526   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3480527   +   ELSE S_NumWebPurchases  =    -5.18578405186423 +     12.1737656630904 *
3480528   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.18578405186423 + 12.1737656630904 * NumWebPurchases ;
3480529   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3480530   +   ELSE S_RANGE_Frq  =    -1.36570914571755 +     4.22091770312363 * RANGE_Frq
3480531   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36570914571755 + 4.22091770312363 * RANGE_Frq ;
3480532   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3480533   +   ELSE S_RANGE_Recency  =    -1.65196701596613 +     3.33661306496431 *
3480534   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65196701596613 + 3.33661306496431 * RANGE_Recency ;
3480535   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3480536   +   ELSE S_RANGE_average_purchase
3480537   +          =    -1.03999041798286 +     5.11900418743914 *
3480538   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03999041798286 + 5.11900418743914 * RANGE_average_purchase ;
3480539   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3480540   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3480541   +   ELSE S_RANGE_campaign_acceptance
3480542   +          =    -0.47683012986905 +     5.81023866522069 *
3480543   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47683012986905 + 5.81023866522069 * RANGE_campaign_acceptance ;
3480544   +END;
MPRINT(EM_DIAGRAM):   END;
3480545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480546   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3480547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480549   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3480550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480551   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480552   +   H11  =    -1.99078124279021 * S_MntCard_Games  +    -2.57677671258674 *
3480553   +        S_MntMagazines  +    -0.57119038535153 * S_NumCatalogPurchases
3480554   +          +     6.00002833311921 * S_NumDealsPurchases
3480555   +          +    -2.06894608739513 * S_NumWebPurchases
3480556   +          +    -2.74918114690321 * S_RANGE_Frq  +    -0.71523517014041 *
3480557   +        S_RANGE_Recency  +     2.34905964819595 * S_RANGE_average_purchase
3480558   +          +    -1.21011047998039 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -1.99078124279021 * S_MntCard_Games + -2.57677671258674 * S_MntMagazines + -0.57119038535153 * S_NumCatalogPurchases + 6.00002833311921 * S_NumDealsPurchases + -2.06894608739513 * S_NumWebPurchases + -2.74918114690321 * 
S_RANGE_Frq + -0.71523517014041 * S_RANGE_Recency + 2.34905964819595 * S_RANGE_average_purchase + -1.21011047998039 * S_RANGE_campaign_acceptance ;
3480559   +   H12  =    -0.17796907220939 * S_MntCard_Games  +      0.1766280739958 *
3480560   +        S_MntMagazines  +    -0.19608002461057 * S_NumCatalogPurchases
3480561   +          +    -0.42117275267292 * S_NumDealsPurchases
3480562   +          +     0.18416379321253 * S_NumWebPurchases
3480563   +          +     0.17114106029508 * S_RANGE_Frq  +     0.53348547844022 *
3480564   +        S_RANGE_Recency  +     0.03106905265578 * S_RANGE_average_purchase
3480565   +          +    -0.31203098287819 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.17796907220939 * S_MntCard_Games + 0.1766280739958 * S_MntMagazines + -0.19608002461057 * S_NumCatalogPurchases + -0.42117275267292 * S_NumDealsPurchases + 0.18416379321253 * S_NumWebPurchases + 0.17114106029508 * 
S_RANGE_Frq + 0.53348547844022 * S_RANGE_Recency + 0.03106905265578 * S_RANGE_average_purchase + -0.31203098287819 * S_RANGE_campaign_acceptance ;
3480566   +   H13  =    -1.62052228197969 * S_MntCard_Games  +    -0.92947816225903 *
3480567   +        S_MntMagazines  +      -2.554973318951 * S_NumCatalogPurchases
3480568   +          +     0.07785502002185 * S_NumDealsPurchases
3480569   +          +    -2.76835867548817 * S_NumWebPurchases
3480570   +          +     0.80442036207394 * S_RANGE_Frq  +     1.72317698692754 *
3480571   +        S_RANGE_Recency  +    -6.57338524838029 * S_RANGE_average_purchase
3480572   +          +    -1.51036740216942 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.62052228197969 * S_MntCard_Games + -0.92947816225903 * S_MntMagazines + -2.554973318951 * S_NumCatalogPurchases + 0.07785502002185 * S_NumDealsPurchases + -2.76835867548817 * S_NumWebPurchases + 0.80442036207394 * 
S_RANGE_Frq + 1.72317698692754 * S_RANGE_Recency + -6.57338524838029 * S_RANGE_average_purchase + -1.51036740216942 * S_RANGE_campaign_acceptance ;
3480573   +   H14  =     1.22081025065353 * S_MntCard_Games  +     0.32300001813479 *
3480574   +        S_MntMagazines  +     0.34640799570748 * S_NumCatalogPurchases
3480575   +          +     0.11222129003533 * S_NumDealsPurchases
3480576   +          +     2.08004102142272 * S_NumWebPurchases
3480577   +          +     0.77957399132416 * S_RANGE_Frq  +    -1.31984990566252 *
3480578   +        S_RANGE_Recency  +       0.786157499993 * S_RANGE_average_purchase
3480579   +          +     0.44606768863213 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 1.22081025065353 * S_MntCard_Games + 0.32300001813479 * S_MntMagazines + 0.34640799570748 * S_NumCatalogPurchases + 0.11222129003533 * S_NumDealsPurchases + 2.08004102142272 * S_NumWebPurchases + 0.77957399132416 * S_RANGE_Frq 
+ -1.31984990566252 * S_RANGE_Recency + 0.786157499993 * S_RANGE_average_purchase + 0.44606768863213 * S_RANGE_campaign_acceptance ;
3480580   +   H11  = H11  +    -6.90881416541971 * Marital_StatusDivorced
3480581   +          +     5.22895561161197 * Marital_StatusMarried
3480582   +          +      2.1994135574997 * Marital_StatusSingle
3480583   +          +    -2.69988652560093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -6.90881416541971 * Marital_StatusDivorced + 5.22895561161197 * Marital_StatusMarried + 2.1994135574997 * Marital_StatusSingle + -2.69988652560093 * Marital_StatusTogether ;
3480584   +   H12  = H12  +    -0.11590996559238 * Marital_StatusDivorced
3480585   +          +    -0.01750822029069 * Marital_StatusMarried
3480586   +          +    -0.38106683420781 * Marital_StatusSingle
3480587   +          +     0.32992266074323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.11590996559238 * Marital_StatusDivorced + -0.01750822029069 * Marital_StatusMarried + -0.38106683420781 * Marital_StatusSingle + 0.32992266074323 * Marital_StatusTogether ;
3480588   +   H13  = H13  +    -1.36446224818749 * Marital_StatusDivorced
3480589   +          +    -0.68514521746406 * Marital_StatusMarried
3480590   +          +    -0.38283453186995 * Marital_StatusSingle
3480591   +          +    -4.69372202448851 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.36446224818749 * Marital_StatusDivorced + -0.68514521746406 * Marital_StatusMarried + -0.38283453186995 * Marital_StatusSingle + -4.69372202448851 * Marital_StatusTogether ;
3480592   +   H14  = H14  +    -2.99668945539283 * Marital_StatusDivorced
3480593   +          +    -1.64251562837726 * Marital_StatusMarried
3480594   +          +    -2.05182634514975 * Marital_StatusSingle
3480595   +          +    -1.91427467318923 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -2.99668945539283 * Marital_StatusDivorced + -1.64251562837726 * Marital_StatusMarried + -2.05182634514975 * Marital_StatusSingle + -1.91427467318923 * Marital_StatusTogether ;
3480596   +   H11  =     4.55554931841287 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 4.55554931841287 + H11 ;
3480597   +   H12  =      0.4980934825475 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.4980934825475 + H12 ;
3480598   +   H13  =    -1.00667598615787 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.00667598615787 + H13 ;
3480599   +   H14  =    -1.97041305642299 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.97041305642299 + H14 ;
3480600   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3480601   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3480602   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3480603   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3480604   +END;
MPRINT(EM_DIAGRAM):   END;
3480605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480606   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3480607   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3480608   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3480609   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3480610   +END;
MPRINT(EM_DIAGRAM):   END;
3480611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480612   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3480613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480614   +
3480615   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3480616   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3480617   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480618   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3480619   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3480620   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480621   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3480622   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480623   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3480624   +end;
MPRINT(EM_DIAGRAM):   end;
3480625   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480626   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3480627   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3480628   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3480629   +   end;
MPRINT(EM_DIAGRAM):   end;
3480630   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3480631   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3480632   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3480633   +   end;
MPRINT(EM_DIAGRAM):   end;
3480634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480635   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480636   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3480637   +   end;
MPRINT(EM_DIAGRAM):   end;
3480638   +end;
MPRINT(EM_DIAGRAM):   end;
3480639   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480640   +   P_DepVar1  =    -2.51798029802435 * H11  +    -10.4449196962588 * H12
3480641   +          +    -2.90917039781381 * H13  +     3.72704010181487 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.51798029802435 * H11 + -10.4449196962588 * H12 + -2.90917039781381 * H13 + 3.72704010181487 * H14 ;
3480642   +   P_DepVar1  =     -1.5940076973692 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5940076973692 + P_DepVar1 ;
3480643   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3480644   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3480645   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3480646   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3480647   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3480648   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3480649   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3480650   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3480651   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3480652   +END;
MPRINT(EM_DIAGRAM):   END;
3480653   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480654   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3480655   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3480656   +END;
MPRINT(EM_DIAGRAM):   END;
3480657   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3480658   +   P_DepVar1  =     0.13489871086556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13489871086556;
3480659   +   P_DepVar0  =     0.86510128913443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86510128913443;
3480660   +END;
MPRINT(EM_DIAGRAM):   END;
3480661   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3480662   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3480663   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3480664   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3480665   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3480666   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3480667   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3480668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480669   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3480670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480671   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3480672   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3480673   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3480674   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3480675   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3480676   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3480677   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3480678   +END;
MPRINT(EM_DIAGRAM):   END;
3480679   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3480680   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3480681   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3480682   +drop
3480683   +S_MntCard_Games
3480684   +S_MntMagazines
3480685   +S_NumCatalogPurchases
3480686   +S_NumDealsPurchases
3480687   +S_NumWebPurchases
3480688   +S_RANGE_Frq
3480689   +S_RANGE_Recency
3480690   +S_RANGE_average_purchase
3480691   +S_RANGE_campaign_acceptance
3480692   +H11
3480693   +H12
3480694   +H13
3480695   +H14
3480696   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3480697   +end;
MPRINT(EM_DIAGRAM):   end;
3480698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3480699   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3480700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3480701   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3480702   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3480703   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3480704   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3480705   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3480706   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3480707   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3480708   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3480709   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3480710   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3480711   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3480712   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3480713   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3480714   +LENGTH _WARN_ $4
3480715   +      F_DepVar  $ 12
3480716   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3480717   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3480718   +
3480719   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3480720   +
3480721   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3480722   +
3480723   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3480724   +
3480725   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3480726   +
3480727   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3480728   +
3480729   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3480730   +
3480731   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3480732   +
3480733   +      label S_RANGE_campaign_acceptance =
3480734   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3480735   +
3480736   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3480737   +
3480738   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3480739   +
3480740   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3480741   +
3480742   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3480743   +
3480744   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3480745   +
3480746   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3480747   +
3480748   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3480749   +
3480750   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3480751   +
3480752   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3480753   +
3480754   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480755   +
3480756   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3480757   +
3480758   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3480759   +
3480760   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3480761   +
3480762   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3480763   +
3480764   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3480765   +
3480766   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3480767   +
3480768   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3480769   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3480770   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3480771   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3480772   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3480773   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3480774   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3480775   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3480776   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3480777   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480778   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480779   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480780   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3480782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480783   +end;
MPRINT(EM_DIAGRAM):   end;
3480784   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480785   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3480786   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3480787   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480788   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3480789   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3480790   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3480791   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3480792   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3480793   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480794   +         end;
MPRINT(EM_DIAGRAM):   end;
3480795   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3480796   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3480797   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3480798   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480799   +            end;
MPRINT(EM_DIAGRAM):   end;
3480800   +         end;
MPRINT(EM_DIAGRAM):   end;
3480801   +      end;
MPRINT(EM_DIAGRAM):   end;
3480802   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480803   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3480804   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3480805   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480806   +         end;
MPRINT(EM_DIAGRAM):   end;
3480807   +      end;
MPRINT(EM_DIAGRAM):   end;
3480808   +   end;
MPRINT(EM_DIAGRAM):   end;
3480809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480810   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3480811   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3480812   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480813   +      end;
MPRINT(EM_DIAGRAM):   end;
3480814   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3480815   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3480816   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3480817   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3480818   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3480819   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3480820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3480821   +         end;
MPRINT(EM_DIAGRAM):   end;
3480822   +      end;
MPRINT(EM_DIAGRAM):   end;
3480823   +   end;
MPRINT(EM_DIAGRAM):   end;
3480824   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3480825   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3480826   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3480827   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3480828   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3480829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3480830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480831   +   end;
MPRINT(EM_DIAGRAM):   end;
3480832   +end;
MPRINT(EM_DIAGRAM):   end;
3480833   +
3480834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480835   +*** Checking missing input Interval
3480836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3480837   +
3480838   +IF NMISS(
3480839   +   MntCard_Games ,
3480840   +   MntMagazines ,
3480841   +   NumCatalogPurchases ,
3480842   +   NumDealsPurchases ,
3480843   +   NumWebPurchases ,
3480844   +   RANGE_Frq ,
3480845   +   RANGE_Recency ,
3480846   +   RANGE_average_purchase ,
3480847   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3480848   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3480849   +
3480850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3480851   +END;
MPRINT(EM_DIAGRAM):   END;
3480852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480853   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3480854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480855   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480856   +   S_MntCard_Games  =     -2.3061471677236 +     6.62411925379739 *
3480857   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3061471677236 + 6.62411925379739 * MntCard_Games ;
3480858   +   S_MntMagazines  =    -0.83644618203261 +     17.2055527557928 *
3480859   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83644618203261 + 17.2055527557928 * MntMagazines ;
3480860   +   S_NumCatalogPurchases  =    -3.12006402430299 +     13.5160200409435 *
3480861   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12006402430299 + 13.5160200409435 * NumCatalogPurchases ;
3480862   +   S_NumDealsPurchases  =    -1.41102881448386 +     11.1924289330432 *
3480863   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41102881448386 + 11.1924289330432 * NumDealsPurchases ;
3480864   +   S_NumWebPurchases  =    -5.24057308105718 +      12.271546597467 *
3480865   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24057308105718 + 12.271546597467 * NumWebPurchases ;
3480866   +   S_RANGE_Frq  =    -1.36420385813888 +     4.22157760848426 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36420385813888 + 4.22157760848426 * RANGE_Frq ;
3480867   +   S_RANGE_Recency  =    -1.65803902925655 +     3.34972940227475 *
3480868   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65803902925655 + 3.34972940227475 * RANGE_Recency ;
3480869   +   S_RANGE_average_purchase  =    -1.03776593003366 +     5.17054066293141 *
3480870   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03776593003366 + 5.17054066293141 * RANGE_average_purchase ;
3480871   +   S_RANGE_campaign_acceptance
3480872   +          =    -0.47401292353208 +     5.72192038652706 *
3480873   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47401292353208 + 5.72192038652706 * RANGE_campaign_acceptance ;
3480874   +END;
MPRINT(EM_DIAGRAM):   END;
3480875   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480876   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3480877   +   ELSE S_MntCard_Games  =     -2.3061471677236 +     6.62411925379739 *
3480878   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3061471677236 + 6.62411925379739 * MntCard_Games ;
3480879   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3480880   +   ELSE S_MntMagazines  =    -0.83644618203261 +     17.2055527557928 *
3480881   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83644618203261 + 17.2055527557928 * MntMagazines ;
3480882   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3480883   +   ELSE S_NumCatalogPurchases
3480884   +          =    -3.12006402430299 +     13.5160200409435 * NumCatalogPurchases
3480885   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12006402430299 + 13.5160200409435 * NumCatalogPurchases ;
3480886   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3480887   +   ELSE S_NumDealsPurchases  =    -1.41102881448386 +     11.1924289330432 *
3480888   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41102881448386 + 11.1924289330432 * NumDealsPurchases ;
3480889   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3480890   +   ELSE S_NumWebPurchases  =    -5.24057308105718 +      12.271546597467 *
3480891   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24057308105718 + 12.271546597467 * NumWebPurchases ;
3480892   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3480893   +   ELSE S_RANGE_Frq  =    -1.36420385813888 +     4.22157760848426 * RANGE_Frq
3480894   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36420385813888 + 4.22157760848426 * RANGE_Frq ;
3480895   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3480896   +   ELSE S_RANGE_Recency  =    -1.65803902925655 +     3.34972940227475 *
3480897   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65803902925655 + 3.34972940227475 * RANGE_Recency ;
3480898   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3480899   +   ELSE S_RANGE_average_purchase
3480900   +          =    -1.03776593003366 +     5.17054066293141 *
3480901   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03776593003366 + 5.17054066293141 * RANGE_average_purchase ;
3480902   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3480903   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3480904   +   ELSE S_RANGE_campaign_acceptance
3480905   +          =    -0.47401292353208 +     5.72192038652706 *
3480906   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47401292353208 + 5.72192038652706 * RANGE_campaign_acceptance ;
3480907   +END;
MPRINT(EM_DIAGRAM):   END;
3480908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480909   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3480910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480912   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3480913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480914   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3480915   +   H11  =    -0.84085392840898 * S_MntCard_Games  +    -0.06632767331811 *
3480916   +        S_MntMagazines  +    -0.51902229955706 * S_NumCatalogPurchases
3480917   +          +    -0.51079335948103 * S_NumDealsPurchases
3480918   +          +    -0.51236736824871 * S_NumWebPurchases
3480919   +          +    -0.21815401068497 * S_RANGE_Frq  +     1.06312975930581 *
3480920   +        S_RANGE_Recency  +    -0.32932357735513 * S_RANGE_average_purchase
3480921   +          +    -1.00005481405525 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.84085392840898 * S_MntCard_Games + -0.06632767331811 * S_MntMagazines + -0.51902229955706 * S_NumCatalogPurchases + -0.51079335948103 * S_NumDealsPurchases + -0.51236736824871 * S_NumWebPurchases + -0.21815401068497 * 
S_RANGE_Frq + 1.06312975930581 * S_RANGE_Recency + -0.32932357735513 * S_RANGE_average_purchase + -1.00005481405525 * S_RANGE_campaign_acceptance ;
3480922   +   H12  =     0.26729022814889 * S_MntCard_Games  +    -0.08272798533593 *
3480923   +        S_MntMagazines  +     0.19376857003897 * S_NumCatalogPurchases
3480924   +          +     0.83924298716214 * S_NumDealsPurchases
3480925   +          +    -0.03025455994063 * S_NumWebPurchases
3480926   +          +    -1.07836941827622 * S_RANGE_Frq  +    -0.24926396105368 *
3480927   +        S_RANGE_Recency  +     0.19525479496428 * S_RANGE_average_purchase
3480928   +          +     0.44149626307863 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.26729022814889 * S_MntCard_Games + -0.08272798533593 * S_MntMagazines + 0.19376857003897 * S_NumCatalogPurchases + 0.83924298716214 * S_NumDealsPurchases + -0.03025455994063 * S_NumWebPurchases + -1.07836941827622 * 
S_RANGE_Frq + -0.24926396105368 * S_RANGE_Recency + 0.19525479496428 * S_RANGE_average_purchase + 0.44149626307863 * S_RANGE_campaign_acceptance ;
3480929   +   H13  =    -1.04339016093567 * S_MntCard_Games  +     0.17402739732699 *
3480930   +        S_MntMagazines  +     -1.3192753012206 * S_NumCatalogPurchases
3480931   +          +    -0.69611690098417 * S_NumDealsPurchases
3480932   +          +    -0.45213064280598 * S_NumWebPurchases
3480933   +          +     0.68898849624792 * S_RANGE_Frq  +     2.11841535848534 *
3480934   +        S_RANGE_Recency  +    -2.36813364977242 * S_RANGE_average_purchase
3480935   +          +    -0.84229612563544 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.04339016093567 * S_MntCard_Games + 0.17402739732699 * S_MntMagazines + -1.3192753012206 * S_NumCatalogPurchases + -0.69611690098417 * S_NumDealsPurchases + -0.45213064280598 * S_NumWebPurchases + 0.68898849624792 * 
S_RANGE_Frq + 2.11841535848534 * S_RANGE_Recency + -2.36813364977242 * S_RANGE_average_purchase + -0.84229612563544 * S_RANGE_campaign_acceptance ;
3480936   +   H14  =    -0.90192904122583 * S_MntCard_Games  +    -1.10916462036723 *
3480937   +        S_MntMagazines  +    -1.25440323658795 * S_NumCatalogPurchases
3480938   +          +    -2.98411447551456 * S_NumDealsPurchases
3480939   +          +    -0.03862249576008 * S_NumWebPurchases
3480940   +          +    -1.56178268313126 * S_RANGE_Frq  +     3.63341570445644 *
3480941   +        S_RANGE_Recency  +     1.38467403332559 * S_RANGE_average_purchase
3480942   +          +    -0.91805089491933 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.90192904122583 * S_MntCard_Games + -1.10916462036723 * S_MntMagazines + -1.25440323658795 * S_NumCatalogPurchases + -2.98411447551456 * S_NumDealsPurchases + -0.03862249576008 * S_NumWebPurchases + -1.56178268313126 * 
S_RANGE_Frq + 3.63341570445644 * S_RANGE_Recency + 1.38467403332559 * S_RANGE_average_purchase + -0.91805089491933 * S_RANGE_campaign_acceptance ;
3480943   +   H11  = H11  +    -0.01339291874133 * Marital_StatusDivorced
3480944   +          +    -0.46476039538126 * Marital_StatusMarried
3480945   +          +     -0.1248759165448 * Marital_StatusSingle
3480946   +          +     0.27822576952513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01339291874133 * Marital_StatusDivorced + -0.46476039538126 * Marital_StatusMarried + -0.1248759165448 * Marital_StatusSingle + 0.27822576952513 * Marital_StatusTogether ;
3480947   +   H12  = H12  +     3.04776337179674 * Marital_StatusDivorced
3480948   +          +    -2.76159888087079 * Marital_StatusMarried
3480949   +          +     2.08067448006719 * Marital_StatusSingle
3480950   +          +    -2.72500211096495 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 3.04776337179674 * Marital_StatusDivorced + -2.76159888087079 * Marital_StatusMarried + 2.08067448006719 * Marital_StatusSingle + -2.72500211096495 * Marital_StatusTogether ;
3480951   +   H13  = H13  +     0.00592814807394 * Marital_StatusDivorced
3480952   +          +      0.9993082608617 * Marital_StatusMarried
3480953   +          +      0.0399231652124 * Marital_StatusSingle
3480954   +          +    -0.11706308039723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00592814807394 * Marital_StatusDivorced + 0.9993082608617 * Marital_StatusMarried + 0.0399231652124 * Marital_StatusSingle + -0.11706308039723 * Marital_StatusTogether ;
3480955   +   H14  = H14  +     -2.9427283610642 * Marital_StatusDivorced
3480956   +          +     2.30335388241854 * Marital_StatusMarried
3480957   +          +    -0.64954132281012 * Marital_StatusSingle
3480958   +          +     1.54845795971404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -2.9427283610642 * Marital_StatusDivorced + 2.30335388241854 * Marital_StatusMarried + -0.64954132281012 * Marital_StatusSingle + 1.54845795971404 * Marital_StatusTogether ;
3480959   +   H11  =     2.38100793491637 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.38100793491637 + H11 ;
3480960   +   H12  =     2.50151964840725 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.50151964840725 + H12 ;
3480961   +   H13  =     0.25489155779536 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.25489155779536 + H13 ;
3480962   +   H14  =    -2.49389063805424 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.49389063805424 + H14 ;
3480963   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3480964   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3480965   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3480966   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3480967   +END;
MPRINT(EM_DIAGRAM):   END;
3480968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3480969   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3480970   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3480971   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3480972   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3480973   +END;
MPRINT(EM_DIAGRAM):   END;
3480974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480975   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3480976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3480977   +
3480978   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3480979   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3480980   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3480981   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3480982   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3480983   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3480984   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3480985   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480986   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3480987   +end;
MPRINT(EM_DIAGRAM):   end;
3480988   +else do;
MPRINT(EM_DIAGRAM):   else do;
3480989   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3480990   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3480991   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3480992   +   end;
MPRINT(EM_DIAGRAM):   end;
3480993   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3480994   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3480995   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3480996   +   end;
MPRINT(EM_DIAGRAM):   end;
3480997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3480998   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3480999   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3481000   +   end;
MPRINT(EM_DIAGRAM):   end;
3481001   +end;
MPRINT(EM_DIAGRAM):   end;
3481002   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481003   +   P_DepVar1  =    -4.47459288631957 * H11  +     2.93340393867413 * H12
3481004   +          +    -4.36299402823251 * H13  +    -3.52632967301212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.47459288631957 * H11 + 2.93340393867413 * H12 + -4.36299402823251 * H13 + -3.52632967301212 * H14 ;
3481005   +   P_DepVar1  =    -7.77365536443336 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.77365536443336 + P_DepVar1 ;
3481006   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3481007   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3481008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3481009   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3481010   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3481011   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3481012   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3481013   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3481014   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3481015   +END;
MPRINT(EM_DIAGRAM):   END;
3481016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481017   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3481018   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3481019   +END;
MPRINT(EM_DIAGRAM):   END;
3481020   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3481021   +   P_DepVar1  =     0.13663186563776;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13663186563776;
3481022   +   P_DepVar0  =     0.86336813436223;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86336813436223;
3481023   +END;
MPRINT(EM_DIAGRAM):   END;
3481024   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3481025   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3481026   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3481027   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3481028   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3481029   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3481030   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3481031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481032   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3481033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481034   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3481035   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3481036   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3481037   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3481038   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3481039   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3481040   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3481041   +END;
MPRINT(EM_DIAGRAM):   END;
3481042   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481043   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3481044   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481045   +drop
3481046   +S_MntCard_Games
3481047   +S_MntMagazines
3481048   +S_NumCatalogPurchases
3481049   +S_NumDealsPurchases
3481050   +S_NumWebPurchases
3481051   +S_RANGE_Frq
3481052   +S_RANGE_Recency
3481053   +S_RANGE_average_purchase
3481054   +S_RANGE_campaign_acceptance
3481055   +H11
3481056   +H12
3481057   +H13
3481058   +H14
3481059   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3481060   +end;
MPRINT(EM_DIAGRAM):   end;
3481061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3481062   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3481063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3481064   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3481065   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3481066   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3481067   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3481068   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3481069   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3481070   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3481071   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3481072   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3481073   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3481074   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3481075   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3481076   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3481077   +LENGTH _WARN_ $4
3481078   +      F_DepVar  $ 12
3481079   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3481080   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3481081   +
3481082   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3481083   +
3481084   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3481085   +
3481086   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3481087   +
3481088   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3481089   +
3481090   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3481091   +
3481092   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3481093   +
3481094   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3481095   +
3481096   +      label S_RANGE_campaign_acceptance =
3481097   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3481098   +
3481099   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3481100   +
3481101   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3481102   +
3481103   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3481104   +
3481105   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3481106   +
3481107   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3481108   +
3481109   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3481110   +
3481111   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3481112   +
3481113   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3481114   +
3481115   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3481116   +
3481117   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3481118   +
3481119   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3481120   +
3481121   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3481122   +
3481123   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3481124   +
3481125   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3481126   +
3481127   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3481128   +
3481129   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3481130   +
3481131   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3481132   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3481133   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3481134   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3481135   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3481136   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3481137   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3481138   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3481139   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3481140   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3481141   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3481142   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3481143   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3481144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3481145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481146   +end;
MPRINT(EM_DIAGRAM):   end;
3481147   +else do;
MPRINT(EM_DIAGRAM):   else do;
3481148   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3481149   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3481150   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3481151   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3481152   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3481153   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3481154   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3481155   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3481156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481157   +         end;
MPRINT(EM_DIAGRAM):   end;
3481158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3481159   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3481160   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3481161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481162   +            end;
MPRINT(EM_DIAGRAM):   end;
3481163   +         end;
MPRINT(EM_DIAGRAM):   end;
3481164   +      end;
MPRINT(EM_DIAGRAM):   end;
3481165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3481166   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3481167   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3481168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481169   +         end;
MPRINT(EM_DIAGRAM):   end;
3481170   +      end;
MPRINT(EM_DIAGRAM):   end;
3481171   +   end;
MPRINT(EM_DIAGRAM):   end;
3481172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3481173   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3481174   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3481175   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481176   +      end;
MPRINT(EM_DIAGRAM):   end;
3481177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3481178   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3481179   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3481180   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3481181   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3481182   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3481183   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481184   +         end;
MPRINT(EM_DIAGRAM):   end;
3481185   +      end;
MPRINT(EM_DIAGRAM):   end;
3481186   +   end;
MPRINT(EM_DIAGRAM):   end;
3481187   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3481188   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3481189   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3481190   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3481191   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3481192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3481193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481194   +   end;
MPRINT(EM_DIAGRAM):   end;
3481195   +end;
MPRINT(EM_DIAGRAM):   end;
3481196   +
3481197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481198   +*** Checking missing input Interval
3481199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3481200   +
3481201   +IF NMISS(
3481202   +   MntCard_Games ,
3481203   +   MntMagazines ,
3481204   +   NumCatalogPurchases ,
3481205   +   NumDealsPurchases ,
3481206   +   NumWebPurchases ,
3481207   +   RANGE_Frq ,
3481208   +   RANGE_Recency ,
3481209   +   RANGE_average_purchase ,
3481210   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3481211   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3481212   +
3481213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481214   +END;
MPRINT(EM_DIAGRAM):   END;
3481215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481216   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3481217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481218   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481219   +   S_MntCard_Games  =    -2.32305063803042 +     6.62296326392696 *
3481220   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32305063803042 + 6.62296326392696 * MntCard_Games ;
3481221   +   S_MntMagazines  =    -0.83743715165094 +     17.2557683681788 *
3481222   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83743715165094 + 17.2557683681788 * MntMagazines ;
3481223   +   S_NumCatalogPurchases  =    -3.10529221517931 +     13.4443396287062 *
3481224   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10529221517931 + 13.4443396287062 * NumCatalogPurchases ;
3481225   +   S_NumDealsPurchases  =    -1.41942573823989 +     11.1591434336611 *
3481226   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41942573823989 + 11.1591434336611 * NumDealsPurchases ;
3481227   +   S_NumWebPurchases  =    -5.22935751211101 +     12.2529435207201 *
3481228   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22935751211101 + 12.2529435207201 * NumWebPurchases ;
3481229   +   S_RANGE_Frq  =    -1.36631161721433 +     4.23876448101209 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36631161721433 + 4.23876448101209 * RANGE_Frq ;
3481230   +   S_RANGE_Recency  =    -1.66510588698585 +     3.34389270312286 *
3481231   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66510588698585 + 3.34389270312286 * RANGE_Recency ;
3481232   +   S_RANGE_average_purchase  =    -1.03662703247946 +     5.13922454231074 *
3481233   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03662703247946 + 5.13922454231074 * RANGE_average_purchase ;
3481234   +   S_RANGE_campaign_acceptance
3481235   +          =    -0.48150797928749 +     5.76771283006363 *
3481236   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48150797928749 + 5.76771283006363 * RANGE_campaign_acceptance ;
3481237   +END;
MPRINT(EM_DIAGRAM):   END;
3481238   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481239   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3481240   +   ELSE S_MntCard_Games  =    -2.32305063803042 +     6.62296326392696 *
3481241   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32305063803042 + 6.62296326392696 * MntCard_Games ;
3481242   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3481243   +   ELSE S_MntMagazines  =    -0.83743715165094 +     17.2557683681788 *
3481244   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83743715165094 + 17.2557683681788 * MntMagazines ;
3481245   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3481246   +   ELSE S_NumCatalogPurchases
3481247   +          =    -3.10529221517931 +     13.4443396287062 * NumCatalogPurchases
3481248   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10529221517931 + 13.4443396287062 * NumCatalogPurchases ;
3481249   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3481250   +   ELSE S_NumDealsPurchases  =    -1.41942573823989 +     11.1591434336611 *
3481251   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41942573823989 + 11.1591434336611 * NumDealsPurchases ;
3481252   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3481253   +   ELSE S_NumWebPurchases  =    -5.22935751211101 +     12.2529435207201 *
3481254   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22935751211101 + 12.2529435207201 * NumWebPurchases ;
3481255   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3481256   +   ELSE S_RANGE_Frq  =    -1.36631161721433 +     4.23876448101209 * RANGE_Frq
3481257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36631161721433 + 4.23876448101209 * RANGE_Frq ;
3481258   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3481259   +   ELSE S_RANGE_Recency  =    -1.66510588698585 +     3.34389270312286 *
3481260   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66510588698585 + 3.34389270312286 * RANGE_Recency ;
3481261   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3481262   +   ELSE S_RANGE_average_purchase
3481263   +          =    -1.03662703247946 +     5.13922454231074 *
3481264   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03662703247946 + 5.13922454231074 * RANGE_average_purchase ;
3481265   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3481266   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3481267   +   ELSE S_RANGE_campaign_acceptance
3481268   +          =    -0.48150797928749 +     5.76771283006363 *
3481269   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48150797928749 + 5.76771283006363 * RANGE_campaign_acceptance ;
3481270   +END;
MPRINT(EM_DIAGRAM):   END;
3481271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481272   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3481273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481275   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3481276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481277   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481278   +   H11  =    -0.39747320333835 * S_MntCard_Games  +    -0.25183122929337 *
3481279   +        S_MntMagazines  +    -0.57773877568295 * S_NumCatalogPurchases
3481280   +          +     -0.6322169381628 * S_NumDealsPurchases
3481281   +          +      0.5252802099865 * S_NumWebPurchases
3481282   +          +     0.23485789050863 * S_RANGE_Frq  +    -0.07574564241971 *
3481283   +        S_RANGE_Recency  +    -0.65914660665246 * S_RANGE_average_purchase
3481284   +          +    -0.81529806931608 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.39747320333835 * S_MntCard_Games + -0.25183122929337 * S_MntMagazines + -0.57773877568295 * S_NumCatalogPurchases + -0.6322169381628 * S_NumDealsPurchases + 0.5252802099865 * S_NumWebPurchases + 0.23485789050863 * 
S_RANGE_Frq + -0.07574564241971 * S_RANGE_Recency + -0.65914660665246 * S_RANGE_average_purchase + -0.81529806931608 * S_RANGE_campaign_acceptance ;
3481285   +   H12  =     1.20158491407123 * S_MntCard_Games  +     0.29157626460589 *
3481286   +        S_MntMagazines  +     0.65840999134004 * S_NumCatalogPurchases
3481287   +          +     0.53843038360722 * S_NumDealsPurchases
3481288   +          +     1.28210274981786 * S_NumWebPurchases
3481289   +          +     0.73697515362549 * S_RANGE_Frq  +    -1.44164502696012 *
3481290   +        S_RANGE_Recency  +     0.23708411342304 * S_RANGE_average_purchase
3481291   +          +     0.62790597066881 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.20158491407123 * S_MntCard_Games + 0.29157626460589 * S_MntMagazines + 0.65840999134004 * S_NumCatalogPurchases + 0.53843038360722 * S_NumDealsPurchases + 1.28210274981786 * S_NumWebPurchases + 0.73697515362549 * S_RANGE_Frq 
+ -1.44164502696012 * S_RANGE_Recency + 0.23708411342304 * S_RANGE_average_purchase + 0.62790597066881 * S_RANGE_campaign_acceptance ;
3481292   +   H13  =     0.79913669001804 * S_MntCard_Games  +     0.51463308209166 *
3481293   +        S_MntMagazines  +     1.59364944460266 * S_NumCatalogPurchases
3481294   +          +     0.87208087897651 * S_NumDealsPurchases
3481295   +          +     0.66504425377177 * S_NumWebPurchases
3481296   +          +    -0.02933118675441 * S_RANGE_Frq  +    -2.52732528398839 *
3481297   +        S_RANGE_Recency  +     0.38444758941878 * S_RANGE_average_purchase
3481298   +          +     0.95012294848935 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.79913669001804 * S_MntCard_Games + 0.51463308209166 * S_MntMagazines + 1.59364944460266 * S_NumCatalogPurchases + 0.87208087897651 * S_NumDealsPurchases + 0.66504425377177 * S_NumWebPurchases + -0.02933118675441 * S_RANGE_Frq 
+ -2.52732528398839 * S_RANGE_Recency + 0.38444758941878 * S_RANGE_average_purchase + 0.95012294848935 * S_RANGE_campaign_acceptance ;
3481299   +   H14  =    -0.27694654560829 * S_MntCard_Games  +     -1.2311099665442 *
3481300   +        S_MntMagazines  +    -0.66153887083111 * S_NumCatalogPurchases
3481301   +          +      0.1794623946668 * S_NumDealsPurchases
3481302   +          +    -0.71091962201945 * S_NumWebPurchases
3481303   +          +    -0.40720505986114 * S_RANGE_Frq  +    -0.45786381523031 *
3481304   +        S_RANGE_Recency  +    -0.98056066826381 * S_RANGE_average_purchase
3481305   +          +      0.1188918651258 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.27694654560829 * S_MntCard_Games + -1.2311099665442 * S_MntMagazines + -0.66153887083111 * S_NumCatalogPurchases + 0.1794623946668 * S_NumDealsPurchases + -0.71091962201945 * S_NumWebPurchases + -0.40720505986114 * 
S_RANGE_Frq + -0.45786381523031 * S_RANGE_Recency + -0.98056066826381 * S_RANGE_average_purchase + 0.1188918651258 * S_RANGE_campaign_acceptance ;
3481306   +   H11  = H11  +    -0.58048496810146 * Marital_StatusDivorced
3481307   +          +    -0.31374219533616 * Marital_StatusMarried
3481308   +          +     0.53011056146455 * Marital_StatusSingle
3481309   +          +     0.43514875932913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.58048496810146 * Marital_StatusDivorced + -0.31374219533616 * Marital_StatusMarried + 0.53011056146455 * Marital_StatusSingle + 0.43514875932913 * Marital_StatusTogether ;
3481310   +   H12  = H12  +    -0.01485740060133 * Marital_StatusDivorced
3481311   +          +      0.0633317557359 * Marital_StatusMarried
3481312   +          +      -0.167359925907 * Marital_StatusSingle
3481313   +          +    -0.08355825292542 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.01485740060133 * Marital_StatusDivorced + 0.0633317557359 * Marital_StatusMarried + -0.167359925907 * Marital_StatusSingle + -0.08355825292542 * Marital_StatusTogether ;
3481314   +   H13  = H13  +     0.18543704566327 * Marital_StatusDivorced
3481315   +          +    -0.59482428144644 * Marital_StatusMarried
3481316   +          +     0.60377790114405 * Marital_StatusSingle
3481317   +          +     0.01729261240134 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18543704566327 * Marital_StatusDivorced + -0.59482428144644 * Marital_StatusMarried + 0.60377790114405 * Marital_StatusSingle + 0.01729261240134 * Marital_StatusTogether ;
3481318   +   H14  = H14  +     0.08644018468789 * Marital_StatusDivorced
3481319   +          +    -1.46189018350601 * Marital_StatusMarried
3481320   +          +     1.66381672788945 * Marital_StatusSingle
3481321   +          +    -1.01705305957212 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.08644018468789 * Marital_StatusDivorced + -1.46189018350601 * Marital_StatusMarried + 1.66381672788945 * Marital_StatusSingle + -1.01705305957212 * Marital_StatusTogether ;
3481322   +   H11  =     1.75584857347424 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.75584857347424 + H11 ;
3481323   +   H12  =    -3.58708107273373 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.58708107273373 + H12 ;
3481324   +   H13  =    -1.39264546682791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39264546682791 + H13 ;
3481325   +   H14  =     1.54301093968012 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.54301093968012 + H14 ;
3481326   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3481327   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3481328   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3481329   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3481330   +END;
MPRINT(EM_DIAGRAM):   END;
3481331   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481332   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3481333   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3481334   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3481335   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3481336   +END;
MPRINT(EM_DIAGRAM):   END;
3481337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481338   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3481339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481340   +
3481341   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3481342   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3481343   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3481344   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3481345   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3481346   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3481347   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3481348   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3481349   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3481350   +end;
MPRINT(EM_DIAGRAM):   end;
3481351   +else do;
MPRINT(EM_DIAGRAM):   else do;
3481352   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3481353   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3481354   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3481355   +   end;
MPRINT(EM_DIAGRAM):   end;
3481356   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3481357   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3481358   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3481359   +   end;
MPRINT(EM_DIAGRAM):   end;
3481360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3481361   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3481362   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3481363   +   end;
MPRINT(EM_DIAGRAM):   end;
3481364   +end;
MPRINT(EM_DIAGRAM):   end;
3481365   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481366   +   P_DepVar1  =    -5.78876508187939 * H11  +     6.85471535213297 * H12
3481367   +          +     5.43753421268608 * H13  +     5.73512129927081 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78876508187939 * H11 + 6.85471535213297 * H12 + 5.43753421268608 * H13 + 5.73512129927081 * H14 ;
3481368   +   P_DepVar1  =    -0.07610032788675 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.07610032788675 + P_DepVar1 ;
3481369   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3481370   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3481371   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3481372   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3481373   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3481374   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3481375   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3481376   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3481377   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3481378   +END;
MPRINT(EM_DIAGRAM):   END;
3481379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481380   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3481381   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3481382   +END;
MPRINT(EM_DIAGRAM):   END;
3481383   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3481384   +   P_DepVar1  =     0.13681368136813;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13681368136813;
3481385   +   P_DepVar0  =     0.86318631863186;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86318631863186;
3481386   +END;
MPRINT(EM_DIAGRAM):   END;
3481387   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3481388   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3481389   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3481390   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3481391   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3481392   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3481393   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3481394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481395   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3481396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481397   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3481398   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3481399   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3481400   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3481401   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3481402   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3481403   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3481404   +END;
MPRINT(EM_DIAGRAM):   END;
3481405   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481406   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3481407   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481408   +drop
3481409   +S_MntCard_Games
3481410   +S_MntMagazines
3481411   +S_NumCatalogPurchases
3481412   +S_NumDealsPurchases
3481413   +S_NumWebPurchases
3481414   +S_RANGE_Frq
3481415   +S_RANGE_Recency
3481416   +S_RANGE_average_purchase
3481417   +S_RANGE_campaign_acceptance
3481418   +H11
3481419   +H12
3481420   +H13
3481421   +H14
3481422   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3481423   +end;
MPRINT(EM_DIAGRAM):   end;
3481424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3481425   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3481426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3481427   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3481428   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3481429   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3481430   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3481431   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3481432   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3481433   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3481434   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3481435   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3481436   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3481437   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3481438   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3481439   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3481440   +LENGTH _WARN_ $4
3481441   +      F_DepVar  $ 12
3481442   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3481443   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3481444   +
3481445   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3481446   +
3481447   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3481448   +
3481449   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3481450   +
3481451   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3481452   +
3481453   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3481454   +
3481455   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3481456   +
3481457   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3481458   +
3481459   +      label S_RANGE_campaign_acceptance =
3481460   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
3481461   +
3481462   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3481463   +
3481464   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3481465   +
3481466   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3481467   +
3481468   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3481469   +
3481470   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3481471   +
3481472   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3481473   +
3481474   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3481475   +
3481476   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3481477   +
3481478   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3481479   +
3481480   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3481481   +
3481482   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3481483   +
3481484   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3481485   +
3481486   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3481487   +
3481488   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3481489   +
3481490   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3481491   +
3481492   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3481493   +
3481494   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3481495   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3481496   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
3481497   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3481498   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3481499   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3481500   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3481501   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3481502   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3481503   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3481504   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3481505   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3481506   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3481507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3481508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481509   +end;
MPRINT(EM_DIAGRAM):   end;
3481510   +else do;
MPRINT(EM_DIAGRAM):   else do;
3481511   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3481512   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3481513   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3481514   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3481515   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3481516   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3481517   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3481518   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3481519   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481520   +         end;
MPRINT(EM_DIAGRAM):   end;
3481521   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3481522   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3481523   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3481524   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481525   +            end;
MPRINT(EM_DIAGRAM):   end;
3481526   +         end;
MPRINT(EM_DIAGRAM):   end;
3481527   +      end;
MPRINT(EM_DIAGRAM):   end;
3481528   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3481529   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3481530   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3481531   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481532   +         end;
MPRINT(EM_DIAGRAM):   end;
3481533   +      end;
MPRINT(EM_DIAGRAM):   end;
3481534   +   end;
MPRINT(EM_DIAGRAM):   end;
3481535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3481536   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3481537   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3481538   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481539   +      end;
MPRINT(EM_DIAGRAM):   end;
3481540   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3481541   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3481542   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3481543   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3481544   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3481545   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3481546   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3481547   +         end;
MPRINT(EM_DIAGRAM):   end;
3481548   +      end;
MPRINT(EM_DIAGRAM):   end;
3481549   +   end;
MPRINT(EM_DIAGRAM):   end;
3481550   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3481551   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3481552   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3481553   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3481554   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3481555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3481556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481557   +   end;
MPRINT(EM_DIAGRAM):   end;
3481558   +end;
MPRINT(EM_DIAGRAM):   end;
3481559   +
3481560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481561   +*** Checking missing input Interval
3481562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3481563   +
3481564   +IF NMISS(
3481565   +   MntCard_Games ,
3481566   +   MntMagazines ,
3481567   +   NumCatalogPurchases ,
3481568   +   NumDealsPurchases ,
3481569   +   NumWebPurchases ,
3481570   +   RANGE_Frq ,
3481571   +   RANGE_Recency ,
3481572   +   RANGE_average_purchase ,
3481573   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
3481574   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3481575   +
3481576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3481577   +END;
MPRINT(EM_DIAGRAM):   END;
3481578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481579   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3481580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481581   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481582   +   S_MntCard_Games  =    -2.32306683642362 +     6.64440143064057 *
3481583   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32306683642362 + 6.64440143064057 * MntCard_Games ;
3481584   +   S_MntMagazines  =     -0.8326349550427 +     17.3213238239665 *
3481585   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8326349550427 + 17.3213238239665 * MntMagazines ;
3481586   +   S_NumCatalogPurchases  =    -3.11737047598908 +     13.4517200503034 *
3481587   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11737047598908 + 13.4517200503034 * NumCatalogPurchases ;
3481588   +   S_NumDealsPurchases  =    -1.40243414266772 +      11.066701075263 *
3481589   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40243414266772 + 11.066701075263 * NumDealsPurchases ;
3481590   +   S_NumWebPurchases  =    -5.19320795284518 +     12.1994437373791 *
3481591   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.19320795284518 + 12.1994437373791 * NumWebPurchases ;
3481592   +   S_RANGE_Frq  =     -1.3726315861319 +     4.21345365238671 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3726315861319 + 4.21345365238671 * RANGE_Frq ;
3481593   +   S_RANGE_Recency  =    -1.65546662453613 +     3.34191160413408 *
3481594   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65546662453613 + 3.34191160413408 * RANGE_Recency ;
3481595   +   S_RANGE_average_purchase  =    -1.04621472524172 +     5.15342531332181 *
3481596   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04621472524172 + 5.15342531332181 * RANGE_average_purchase ;
3481597   +   S_RANGE_campaign_acceptance
3481598   +          =     -0.4757305509719 +     5.72447160921904 *
3481599   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4757305509719 + 5.72447160921904 * RANGE_campaign_acceptance ;
3481600   +END;
MPRINT(EM_DIAGRAM):   END;
3481601   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481602   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3481603   +   ELSE S_MntCard_Games  =    -2.32306683642362 +     6.64440143064057 *
3481604   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32306683642362 + 6.64440143064057 * MntCard_Games ;
3481605   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3481606   +   ELSE S_MntMagazines  =     -0.8326349550427 +     17.3213238239665 *
3481607   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8326349550427 + 17.3213238239665 * MntMagazines ;
3481608   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3481609   +   ELSE S_NumCatalogPurchases
3481610   +          =    -3.11737047598908 +     13.4517200503034 * NumCatalogPurchases
3481611   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11737047598908 + 13.4517200503034 * NumCatalogPurchases ;
3481612   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3481613   +   ELSE S_NumDealsPurchases  =    -1.40243414266772 +      11.066701075263 *
3481614   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40243414266772 + 11.066701075263 * NumDealsPurchases ;
3481615   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3481616   +   ELSE S_NumWebPurchases  =    -5.19320795284518 +     12.1994437373791 *
3481617   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.19320795284518 + 12.1994437373791 * NumWebPurchases ;
3481618   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3481619   +   ELSE S_RANGE_Frq  =     -1.3726315861319 +     4.21345365238671 * RANGE_Frq
3481620   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3726315861319 + 4.21345365238671 * RANGE_Frq ;
3481621   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3481622   +   ELSE S_RANGE_Recency  =    -1.65546662453613 +     3.34191160413408 *
3481623   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65546662453613 + 3.34191160413408 * RANGE_Recency ;
3481624   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3481625   +   ELSE S_RANGE_average_purchase
3481626   +          =    -1.04621472524172 +     5.15342531332181 *
3481627   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04621472524172 + 5.15342531332181 * RANGE_average_purchase ;
3481628   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3481629   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
3481630   +   ELSE S_RANGE_campaign_acceptance
3481631   +          =     -0.4757305509719 +     5.72447160921904 *
3481632   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4757305509719 + 5.72447160921904 * RANGE_campaign_acceptance ;
3481633   +END;
MPRINT(EM_DIAGRAM):   END;
3481634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481635   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3481636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481638   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3481639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481640   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481641   +   H11  =     0.75525037431632 * S_MntCard_Games  +     -0.0602675572468 *
3481642   +        S_MntMagazines  +     0.52777427810495 * S_NumCatalogPurchases
3481643   +          +     0.27583533466874 * S_NumDealsPurchases
3481644   +          +     0.76271291879637 * S_NumWebPurchases
3481645   +          +     0.30340338019094 * S_RANGE_Frq  +    -1.02707640626287 *
3481646   +        S_RANGE_Recency  +    -0.38300412057701 * S_RANGE_average_purchase
3481647   +          +     0.68032298362558 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.75525037431632 * S_MntCard_Games + -0.0602675572468 * S_MntMagazines + 0.52777427810495 * S_NumCatalogPurchases + 0.27583533466874 * S_NumDealsPurchases + 0.76271291879637 * S_NumWebPurchases + 0.30340338019094 * S_RANGE_Frq 
+ -1.02707640626287 * S_RANGE_Recency + -0.38300412057701 * S_RANGE_average_purchase + 0.68032298362558 * S_RANGE_campaign_acceptance ;
3481648   +   H12  =     0.47806778642517 * S_MntCard_Games  +     0.05636363647243 *
3481649   +        S_MntMagazines  +      0.5084225157267 * S_NumCatalogPurchases
3481650   +          +     0.21187618261366 * S_NumDealsPurchases
3481651   +          +     0.17244894453521 * S_NumWebPurchases
3481652   +          +    -0.01760961858995 * S_RANGE_Frq  +    -0.72166427107812 *
3481653   +        S_RANGE_Recency  +     0.60977391024352 * S_RANGE_average_purchase
3481654   +          +      0.4497141957076 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.47806778642517 * S_MntCard_Games + 0.05636363647243 * S_MntMagazines + 0.5084225157267 * S_NumCatalogPurchases + 0.21187618261366 * S_NumDealsPurchases + 0.17244894453521 * S_NumWebPurchases + -0.01760961858995 * S_RANGE_Frq 
+ -0.72166427107812 * S_RANGE_Recency + 0.60977391024352 * S_RANGE_average_purchase + 0.4497141957076 * S_RANGE_campaign_acceptance ;
3481655   +   H13  =     0.22520686667104 * S_MntCard_Games  +     0.07008615610518 *
3481656   +        S_MntMagazines  +     0.27908300811076 * S_NumCatalogPurchases
3481657   +          +     0.58061061400439 * S_NumDealsPurchases
3481658   +          +    -0.29460176989457 * S_NumWebPurchases
3481659   +          +     -0.2087437154579 * S_RANGE_Frq  +    -0.43988038680839 *
3481660   +        S_RANGE_Recency  +     0.42921927126075 * S_RANGE_average_purchase
3481661   +          +     0.40092335605499 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.22520686667104 * S_MntCard_Games + 0.07008615610518 * S_MntMagazines + 0.27908300811076 * S_NumCatalogPurchases + 0.58061061400439 * S_NumDealsPurchases + -0.29460176989457 * S_NumWebPurchases + -0.2087437154579 * S_RANGE_Frq 
+ -0.43988038680839 * S_RANGE_Recency + 0.42921927126075 * S_RANGE_average_purchase + 0.40092335605499 * S_RANGE_campaign_acceptance ;
3481662   +   H14  =    -0.12114041230111 * S_MntCard_Games  +     2.82426882703342 *
3481663   +        S_MntMagazines  +      1.4703541186633 * S_NumCatalogPurchases
3481664   +          +    -1.39222263493324 * S_NumDealsPurchases
3481665   +          +    -0.01242310356622 * S_NumWebPurchases
3481666   +          +     -2.0244597584446 * S_RANGE_Frq  +     4.29554790292568 *
3481667   +        S_RANGE_Recency  +     1.66587267213908 * S_RANGE_average_purchase
3481668   +          +     -0.5030223320679 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.12114041230111 * S_MntCard_Games + 2.82426882703342 * S_MntMagazines + 1.4703541186633 * S_NumCatalogPurchases + -1.39222263493324 * S_NumDealsPurchases + -0.01242310356622 * S_NumWebPurchases + -2.0244597584446 * 
S_RANGE_Frq + 4.29554790292568 * S_RANGE_Recency + 1.66587267213908 * S_RANGE_average_purchase + -0.5030223320679 * S_RANGE_campaign_acceptance ;
3481669   +   H11  = H11  +    -1.48420315753577 * Marital_StatusDivorced
3481670   +          +    -1.10788973466081 * Marital_StatusMarried
3481671   +          +     0.99955126456583 * Marital_StatusSingle
3481672   +          +    -0.85325918804561 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -1.48420315753577 * Marital_StatusDivorced + -1.10788973466081 * Marital_StatusMarried + 0.99955126456583 * Marital_StatusSingle + -0.85325918804561 * Marital_StatusTogether ;
3481673   +   H12  = H12  +     -0.0230798511959 * Marital_StatusDivorced
3481674   +          +     0.53290050341248 * Marital_StatusMarried
3481675   +          +    -0.27349118697354 * Marital_StatusSingle
3481676   +          +      4.2093372055739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.0230798511959 * Marital_StatusDivorced + 0.53290050341248 * Marital_StatusMarried + -0.27349118697354 * Marital_StatusSingle + 4.2093372055739 * Marital_StatusTogether ;
3481677   +   H13  = H13  +     1.02169563403557 * Marital_StatusDivorced
3481678   +          +    -0.16256637908196 * Marital_StatusMarried
3481679   +          +    -0.91505977559829 * Marital_StatusSingle
3481680   +          +    -0.98393293754833 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.02169563403557 * Marital_StatusDivorced + -0.16256637908196 * Marital_StatusMarried + -0.91505977559829 * Marital_StatusSingle + -0.98393293754833 * Marital_StatusTogether ;
3481681   +   H14  = H14  +      0.2999547382482 * Marital_StatusDivorced
3481682   +          +     1.94590092915485 * Marital_StatusMarried
3481683   +          +    -1.81198870406739 * Marital_StatusSingle
3481684   +          +     0.61551797878247 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2999547382482 * Marital_StatusDivorced + 1.94590092915485 * Marital_StatusMarried + -1.81198870406739 * Marital_StatusSingle + 0.61551797878247 * Marital_StatusTogether ;
3481685   +   H11  =    -0.79889108856419 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.79889108856419 + H11 ;
3481686   +   H12  =     0.17812066021268 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.17812066021268 + H12 ;
3481687   +   H13  =    -1.15860140621335 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.15860140621335 + H13 ;
3481688   +   H14  =    -6.01942347095941 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -6.01942347095941 + H14 ;
3481689   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3481690   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3481691   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3481692   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3481693   +END;
MPRINT(EM_DIAGRAM):   END;
3481694   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481695   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3481696   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3481697   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3481698   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3481699   +END;
MPRINT(EM_DIAGRAM):   END;
3481700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481701   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3481702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481703   +
3481704   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3481705   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3481706   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3481707   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3481708   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3481709   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3481710   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3481711   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3481712   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3481713   +end;
MPRINT(EM_DIAGRAM):   end;
3481714   +else do;
MPRINT(EM_DIAGRAM):   else do;
3481715   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3481716   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3481717   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3481718   +   end;
MPRINT(EM_DIAGRAM):   end;
3481719   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3481720   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3481721   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3481722   +   end;
MPRINT(EM_DIAGRAM):   end;
3481723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3481724   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3481725   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3481726   +   end;
MPRINT(EM_DIAGRAM):   end;
3481727   +end;
MPRINT(EM_DIAGRAM):   end;
3481728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3481729   +   P_DepVar1  =     5.41128576998932 * H11  +     5.24924389532338 * H12
3481730   +          +     5.85075926215742 * H13  +    -2.65431976161038 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.41128576998932 * H11 + 5.24924389532338 * H12 + 5.85075926215742 * H13 + -2.65431976161038 * H14 ;
3481731   +   P_DepVar1  =     -5.4942687120233 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.4942687120233 + P_DepVar1 ;
3481732   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3481733   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3481734   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3481735   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3481736   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3481737   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3481738   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3481739   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3481740   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3481741   +END;
MPRINT(EM_DIAGRAM):   END;
3481742   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3481743   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3481744   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3481745   +END;
MPRINT(EM_DIAGRAM):   END;
3481746   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3481747   +   P_DepVar1  =     0.13534522176497;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13534522176497;
3481748   +   P_DepVar0  =     0.86465477823502;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86465477823502;
3481749   +END;
MPRINT(EM_DIAGRAM):   END;
3481750   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3481751   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3481752   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3481753   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3481754   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3481755   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3481756   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3481757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481758   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3481759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3481760   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3481761   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3481762   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3481763   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3481764   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3481765   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3481766   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3481767   +END;
MPRINT(EM_DIAGRAM):   END;
3481768   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481769   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3481770   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3481771   +drop
3481772   +S_MntCard_Games
3481773   +S_MntMagazines
3481774   +S_NumCatalogPurchases
3481775   +S_NumDealsPurchases
3481776   +S_NumWebPurchases
3481777   +S_RANGE_Frq
3481778   +S_RANGE_Recency
3481779   +S_RANGE_average_purchase
3481780   +S_RANGE_campaign_acceptance
3481781   +H11
3481782   +H12
3481783   +H13
3481784   +H14
3481785   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 ;
3481786   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3481787    run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP10_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3481788    quit;
3481789    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Neural2_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong 
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3481813    data EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT;
3481814    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3481815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3481816    data EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT;
3481817    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
3481818    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3481819    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3481820    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3481821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3481822    proc sort data=EMWS1.Neural2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_EMREPORTFIT nothreads;
3481823    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3481824    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL2_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3481825    %let _EMwarndup = 0;
3481826    %let _EMtargetdup =;
3481827    %let _EMASEtargetdup =;
3481828    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3481829    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
3481830    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3481831    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3481832    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3481833    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3481834    end;
MPRINT(EM_DIAGRAM):   end;
3481835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3481836    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3481837    * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
3481838    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural2_TRAIN out=WORK.M3PTBEO4 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PTBEO4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PTBEO4(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PTBEO4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PTBEO4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NV81W2 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10KHT4Q(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NV81W2;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3482191    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3482192    set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
3482193    where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3482194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (DATA='Neural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3482195    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMINFO;
3482196    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3482197    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3482198    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3482202    run;
3482203    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
3482204    set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
3482205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3482206    proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
3482207    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3482208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3482209    proc sort data = EMWS1.Grp10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3482210    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3482211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3482212    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3482213    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3482214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3482215    data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
3482216    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3482217    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3482218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3482219    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3482220    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3482221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3482222    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
      
3482223    proc sort data=EMWS1.Grp10_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp10_CMeta_TRAIN out=WORK.SUBSETINMETA;
3482224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3482225    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set EMWS1.GRP10_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3482226    proc sort data=EMWS1.Neural2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3482227    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3482228    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3482229    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3482230    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3482231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3482232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3482233    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3482234    set EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_CMeta_TRAIN;
3482235    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3482236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3482237    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3482238    set EMWS1.Neural2_TRAIN(keep=
3482239    F_DepVar
3482240    I_DepVar
3482241    P_DepVar0
3482242    P_DepVar1
3482243    R_DepVar0
3482244    R_DepVar1
3482245    U_DepVar
3482246    _WARN_
3482247    DepVar
3482248    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3482249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural2_2GMYHG3 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural2_2GMYHG3;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural2_2GMYHG3(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_2GMYHG3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_2GMYHG3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT 
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS 
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - 
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.2026698785172E-11 OVLMAX 0.9999999998 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / (2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * ((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3486536    %let grouptarget=0;
3486537    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3486538    set EMWS1.Grp10_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_EMLOOPINFO;
3486539    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3486540    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3486541    stop;
MPRINT(EM_DIAGRAM):   stop;
3486542    end;
MPRINT(EM_DIAGRAM):   end;
3486543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP10_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3486544    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3486545    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486546    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486547    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486547  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486548    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486549    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486550    set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
3486551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486552    data EMWS1.Neural2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMOUTFIT_LOOP;
3486553    set EMWS1.Neural2_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT_LOOP work.EMOUTFIT;
3486554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL2_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.NEURAL2_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486555    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3486556    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486557    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486558    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486558  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486559    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486560    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486561    set EMWS1.Neural2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMREPORTFIT;
3486562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486563    data EMWS1.Neural2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMREPORTFIT_LOOP;
3486564    set EMWS1.Neural2_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMREPORTFIT_LOOP work.EMREPORTFIT;
3486565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 210 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL2_EMREPORTFIT_LOOP has 219 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3486566    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3486567    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486568    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486569    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486569  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486570    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486571    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486572    set EMWS1.Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRANK;
3486573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486574    data EMWS1.Neural2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMRANK_LOOP;
3486575    set EMWS1.Neural2_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRANK_LOOP work.EMRANK;
3486576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.NEURAL2_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.NEURAL2_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3486577    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3486578    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486579    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486580    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486580  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486581    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486582    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486583    set EMWS1.Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMSCOREDIST;
3486584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486585    data EMWS1.Neural2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMSCOREDIST_LOOP;
3486586    set EMWS1.Neural2_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMSCOREDIST_LOOP work.EMSCOREDIST;
3486587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.NEURAL2_EMSCOREDIST_LOOP has 220 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486588    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3486589    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486590    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486591    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486591  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486592    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486593    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486594    set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMCLASSIFICATION;
3486595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486596    data EMWS1.Neural2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMCLASSIFICATION_LOOP;
3486597    set EMWS1.Neural2_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3486598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486599    proc sort data=EMWS1.Neural2_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_EMCLASSIFICATION_LOOP out=_temp;
3486600    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486601    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3486602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486603    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3486603  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount 
totalPercent);
3486604    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3486605    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3486606    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486607    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3486608    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3486609    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3486610    end;
MPRINT(EM_DIAGRAM):   end;
3486611    else do;
MPRINT(EM_DIAGRAM):   else do;
3486612    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3486613    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3486614    end;
MPRINT(EM_DIAGRAM):   end;
3486615    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3486616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486617    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3486617  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount 
eventPercent);
3486618    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3486619    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3486620    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486621    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3486622    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3486623    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3486624    end;
MPRINT(EM_DIAGRAM):   end;
3486625    else do;
MPRINT(EM_DIAGRAM):   else do;
3486626    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3486627    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3486628    end;
MPRINT(EM_DIAGRAM):   end;
3486629    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3486630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3486631    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3486631  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount 
neventPercent);
3486632    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3486633    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3486634    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486635    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3486636    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3486637    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3486638    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3486639    end;
MPRINT(EM_DIAGRAM):   end;
3486640    else do;
MPRINT(EM_DIAGRAM):   else do;
3486641    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3486642    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3486643    end;
MPRINT(EM_DIAGRAM):   end;
3486644    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3486645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3486646    data EMWS1.Neural2_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMMISC_LOOP;
3486647    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3486648    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486649    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3486649  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3486649  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3486650       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3486650  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3486650  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3486651       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3486651  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3486652    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3486653    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3486654    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3486655    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3486656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.NEURAL2_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3486657    proc sort data=EMWS1.Neural2_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_EMMISC_LOOP;
3486658    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3486659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_EMMISC_LOOP.
NOTE: The data set EMWS1.NEURAL2_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486660    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3486661    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3486662    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3486663    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3486663  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3486664    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3486665    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3486666    set EMWS1.Neural2_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT;
3486667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486668    data EMWS1.Neural2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMEVENTREPORT_LOOP;
3486669    set EMWS1.Neural2_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3486670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3486671    %let _cn = %sysfunc(getoption(CENTER));
3486672    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3486673    proc print data=EMWS1.Neural2_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMREPORTFIT_LOOP noobs label;
3486674    var STAT LABEL TRAIN
3486675    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3486676    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3486677    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3486678    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3486679    run;

NOTE: There were 219 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2309.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486680    title10;
MPRINT(EM_DIAGRAM):   title10;
3486681    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3486682    proc sort data=EMWS1.Neural2_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_EMCLASSIFICATION_LOOP nothreads;
3486683    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3486684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486685    %let _cn = %sysfunc(getoption(CENTER));
3486686    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3486687    proc print data=EMWS1.Neural2_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMCLASSIFICATION_LOOP noobs label;
3486688    var from into pct_row pct_col count percent
3486689    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3486690    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3486691    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3486692    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3486693    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3486694    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3486695    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3486696    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3486697    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3486698    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3486699    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3486700    run;

NOTE: There were 44 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2310.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3486701    title9;
MPRINT(EM_DIAGRAM):   title9;
3486702    title10;
MPRINT(EM_DIAGRAM):   title10;
3486703    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3486704    %let _cn = %sysfunc(getoption(CENTER));
3486705    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3486706    data EMWS1.Neural2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMEVENTREPORT_LOOP;
3486707    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3486707  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3486708    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3486708  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3486708  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3486708  ! FALSEEVENT
3486709    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3486709  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3486709  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3486710       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3486711    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3486712    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3486713    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3486714    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3486715    set EMWS1.Neural2_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMEVENTREPORT_LOOP;
3486716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3486717    proc print data=EMWS1.Neural2_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMEVENTREPORT_LOOP noobs label;
3486718    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3486719    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3486720    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3486721    run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2311.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486722    title10;
MPRINT(EM_DIAGRAM):   title10;
3486723    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3486724    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3486725    modify Neural2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3486726    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3486727    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3486727  ! ;
MPRINT(EM_DIAGRAM):   run;
3486728    run;

NOTE: MODIFY was successful for EMWS1.NEURAL2_EMRANK_LOOP.DATA.
3486729    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3486730    %let _cn = %sysfunc(getoption(CENTER));
3486731    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3486732    proc print data=EMWS1.Neural2_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMRANK_LOOP label noobs;
3486733    var
3486734    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3486735    by
3486736    notsorted DATAROLE
3486737    notsorted _WHERE_
3486738    notsorted TARGET
3486739    notsorted TARGETLABEL
3486740    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3486741    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3486742    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3486743    run;

NOTE: There were 220 observations read from the data set EMWS1.NEURAL2_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2312.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3486744    title10;
MPRINT(EM_DIAGRAM):   title10;
3486745    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3486746    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3486747    modify Neural2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3486748    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3486748  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3486749    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3486749  ! ;
MPRINT(EM_DIAGRAM):   run;
3486750    run;

NOTE: MODIFY was successful for EMWS1.NEURAL2_EMSCOREDIST_LOOP.DATA.
3486751    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3486752    %let _cn = %sysfunc(getoption(CENTER));
3486753    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3486754    proc print data=EMWS1.Neural2_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural2_EMSCOREDIST_LOOP label noobs;
3486755    var
3486756    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3486757    by
3486758    notsorted DATAROLE
3486759    notsorted _WHERE_
3486760    notsorted TARGET
3486761    notsorted TARGETLABEL
3486762    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3486763    where TARGET in(
3486764    "DepVar"
3486765    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3486766    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3486767    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3486768    run;

NOTE: There were 220 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2313.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3486769    title10;
MPRINT(EM_DIAGRAM):   title10;
3486770    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3486771    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:38 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:38 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural2\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ITERATIONPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_PLOTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="WEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_WEIGHTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="HISTWEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMESTIMATE_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural2_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
