*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:04:11 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:05 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:04:05 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3CGNI5E "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3CGNI5E new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMGROUP\EMLOG_10.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:05 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMGROUP\EMOUTPUT_10.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:05 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3353114    proc freq data=EMWS1.EndGrp6_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp6_VariableSet noprint;
3353115    table ROLE*LEVEL/out=WORK.EndGrp6META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp6META;
3353116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP6_VARIABLESET.
NOTE: The data set WORK.ENDGRP6META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
3353117    proc print data=WORK.EndGrp6META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp6META label noobs;
3353118    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3353119    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3353120    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3353121    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3353122    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP6META.
NOTE: The PROCEDURE PRINT printed page 2260.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3353123    title10;
MPRINT(EM_DIAGRAM):   title10;
3353124    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3353153    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3353154    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3353155    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3353156       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3353157    set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
3353158    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3353159    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3353160    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3353161    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3353162    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3353163    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3353164    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3353165    end;
MPRINT(EM_DIAGRAM):   end;
3353166    output;
MPRINT(EM_DIAGRAM):   output;
3353167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP6_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3353168    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3353169    proc print data=WORK.EndGrp6_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp6_EVENT noobs label;
3353170    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3353171    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3353172    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3353173    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP6_EVENT.
NOTE: The PROCEDURE PRINT printed page 2261.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3353174    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3353175    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
3353176    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3353177    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3353178    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3353179    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3353180    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3353181    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2262.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3353182    title10;
MPRINT(EM_DIAGRAM):   title10;
3353183    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp6: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=301;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.138010087116;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1880;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86198991288399;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3353656    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3353657    * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
3353658    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3353659    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3353660    %let EMEXCEPTIONSTRING=;
3353661    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3353662    * TRAIN: EndGrp6;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp6;
3353663    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3353664    %let EM_ACTION = TRAIN;
3353665    %let syscc = 0;
3353666    %macro main;
3353667       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3353668
3353669           filename temp catalog 'sashelp.emutil.endgp_train.source';
3353670           %include temp;
3353671           filename temp;
3353672
3353673           %train;
3353674
3353675       %end;
3353676       %else
3353677          %if %upcase(&EM_ACTION) = SCORE %then %do;
3353678
3353679           filename temp catalog 'sashelp.emutil.endgp_score.source';
3353680           %include temp;
3353681           filename temp;
3353682
3353683           %score;
3353684       %end;
3353685       %else
3353686       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3353687
3353688           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3353689           %include temp;
3353690           filename temp;
3353691
3353692           %postloop;
3353693
3353694       %end;
3353695
3353696       %doendm:
3353697    %mend main;
3353698
3353699    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3353700   +%macro copyModelDs(model=, key=);
3353701   +   %let modelDs  = &em_lib..&model._&key;
3353702   +   %let reportDs = &em_lib..&em_nodeid._&key;
3353703   +   %if %sysfunc(exist(&modelDs)) %then %do;
3353704   +       data &reportDs;
3353705   +          length ModelId $16;
3353706   +          retain ModelId "&model";
3353707   +          set &modelDs;
3353708   +       run;
3353709   +   %end;
3353710   +%mend copyModelDs;
3353711   +
3353712   +%macro traintarget(groupid=);
3353713   +   %em_getname(key=emoutfit, type=DATA);
3353714   +   %let targetname=;
3353715   +   data _null_;
3353716   +     set &em_lib..&groupid._&looptype;
3353717   +     where _LOOP_ = &EMLOOPNUMBER;
3353718   +     call symput('targetname', strip(_TARGET_));
3353719   +   run;
3353720   +   %let modelId =;
3353721   +   data _null_;
3353722   +      set &em_import_data_eminfo;
3353723   +      where key = 'MODEL' and TARGET = "&targetname";
3353724   +      call symput('modelId',   strip(data));
3353725   +   run;
3353726   +   %if "&modelId" ne "" %then %do;
3353727   +       %copyModelDs(model=&modelid, key=EMRANK);
3353728   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3353729   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3353730   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3353731   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3353732   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3353733   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3353734   +   %end;
3353735   +
3353736   +   %doendtgp:
3353737   +%mend;
3353738   +
3353739   +%macro trainboost(groupid=);
3353740   +
3353741   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3353742   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3353743   +
3353744   +   data _null_;
3353745   +      retain index 0;
3353746   +      set &boostinfoDs;
3353747   +      call symput('targetname', strip(_target_));
3353748   +   run;
3353749   +
3353750   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3353751   +       %let decmeta = ;
3353752   +       data _null_;
3353753   +          set &em_import_data_eminfo;
3353754   +          where (key='DECMETA' and TARGET="&targetname");
3353755   +          call symput('DECMETA', strip(data));
3353756   +       run;
3353757   +       %if "&decmeta" eq "" %then %do;
3353758   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3353759   +           %goto doendtb;
3353760   +       %end;
3353761   +
3353762   +       %let predictedVars=;
3353763   +       data _null_;
3353764   +          set &decmeta;
3353765   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3353766   +          else
3353767   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3353768   +          else
3353769   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3353770   +       run;
3353771   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3353772   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3353773   +       %end;
3353774   +   %end;
3353775   +
3353776   +   * ;
3353777   +   * ENDGROUP &NODEID : Boosting scoring ;
3353778   +   * ;
3353779   +   data &em_lib..&groupid._boostscore;
3353780   +      set &em_import_data;
3353781   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3353782   +      %if "%em_freq" ne "" %then %do ;
3353783   +          keep %em_freq ;
3353784   +      %end ;
3353785   +   run;
3353786   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3353787   +
3353788   +   %doendtb:
3353789   +
3353790   +%mend trainboost;
3353791   +
3353792   +%macro trainbag(groupid=);
3353793   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3353794   +   data _null_;
3353795   +      retain index 0;
3353796   +      set &baginfoDs;
3353797   +      call symput('targetname', strip(_target_));
3353798   +   run;
3353799   +
3353800   +   %let decmeta = ;
3353801   +   data _null_;
3353802   +       set &em_import_data_eminfo;
3353803   +       where (key='DECMETA' and TARGET="&targetname");
3353804   +       call symput('DECMETA', strip(data));
3353805   +   run;
3353806   +   %if "&decmeta" eq "" %then %do;
3353807   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3353808   +       %goto doendtg;
3353809   +   %end;
3353810   +
3353811   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3353812   +
3353813   +   %doendtg:
3353814   +%mend trainbag;
3353815   +
3353816   +%macro traingroup(groupid=);
3353817   +   %let targetNum = 0;
3353818   +
3353819   +   data _temp1;
3353820   +      set &em_lib..&groupid._eminfo;
3353821   +      where key='MODEL';
3353822   +   run;
3353823   +   data _temp2;
3353824   +      set &em_import_data_eminfo;
3353825   +      where key='MODEL';
3353826   +   run;
3353827   +   proc sort data=_temp1; by TARGET DATA;
3353828   +   proc sort data=_temp2; by TARGET DATA;
3353829   +   data _temp2;
3353830   +      merge _temp1(in=_a) _temp2(in=_b);
3353831   +      by TARGET DATA;
3353832   +      if ^_a and _b then output;
3353833   +   run;
3353834   +   data _null_;
3353835   +      retain index 0;
3353836   +      set _temp2 end=eof;
3353837   +      index +1;
3353838   +      where key ='MODEL';
3353839   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3353840   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3353841   +      if eof then
3353842   +         call symput('targetnum', strip(put(index, best.)));
3353843   +   run;
3353844   +   proc datasets lib=work nolist;
3353845   +      delete _temp1 _temp2;
3353846   +   run;
3353847   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3353848   +
3353849   +   %let modelString =;
3353850   +   %do i=1 %to &targetnum;
3353851   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3353852   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3353853   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3353854   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3353855   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3353856   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3353857   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3353858   +            %let modelString = &modelString &&modelid&i;
3353859   +       %end;
3353860   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3353861   +   %end;
3353862   +
3353863   +   %doendtgp:
3353864   +
3353865   +%mend traingroup;
3353866   +
3353867   +%macro getSize(data=, nobsvar=);
3353868   +
3353869   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3353870   +       %let dsid = %sysfunc(open(&data));
3353871   +       %if &dsid %then %do;
3353872   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3353873   +           %let dsid = %sysfunc(close(&dsid));
3353874   +       %end;
3353875   +   %end;
3353876   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3353877   +        proc sql;
3353878   +           reset noprint;
3353879   +           select count(*) into :&nobsvar from &data;
3353880   +        quit;
3353881   +   %end;
3353882   +
3353883   +%mend getsize;
3353884   +
3353885   +%macro train;
3353886   +
3353887   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3353888   +      %let EM_TOOLTYPE=UTILITY;
3353889   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3353890   +          proc delete data=&em_data_eminfo;
3353891   +          run;
3353892   +      %end;
3353893   +      %goto doendtr;
3353894   +   %end;
3353895   +
3353896   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3353897   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3353898   +       %goto doendtr;
3353899   +   %end;
3353900   +
3353901   +   %let xgroupid = ;
3353902   +   data _null_;
3353903   +      set &em_import_data_eminfo;
3353904   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3353905   +      call symput('XGROUPID',  strip(data));
3353906   +      call symput('LOOPTYPE', strip(key));
3353907   +   run;
3353908   +
3353909   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3353910   +       %let nDataObs=0;
3353911   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3353912   +
3353913   +       %let nStartObs=0;
3353914   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3353915   +
3353916   +       %if &nDataObs ne &nStartObs %then %do;
3353917   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3353918   +           %goto doendtr;
3353919   +       %end;
3353920   +
3353921   +       %trainboost(groupid=&xgroupid);
3353922   +   %end;
3353923   +   %else
3353924   +   %if "&looptype" eq "BAGINFO" %then %do;
3353925   +       %trainbag(groupid=&xgroupid);
3353926   +   %end;
3353927   +   %else
3353928   +   %if "&looptype" eq "GROUPINFO" %then %do;
3353929   +       %traingroup(groupid=&xgroupid);
3353930   +   %end;
3353931   +   %else
3353932   +   %if "&looptype" eq "TARGETINFO" %then %do;
3353933   +       %traintarget(groupid=&xgroupid);
3353934   +   %end;
3353935   +
3353936   +   data &em_data_eminfo;
3353937   +      length TARGET KEY $32  DATA $43;
3353938   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3353939   +   run;
3353940   +
3353941   +   %let EM_TOOLTYPE=MODEL;
3353942   +
3353943   +   %doendtr:
3353944   +
3353945   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp5_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP5_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG2_EMRANK.
NOTE: The data set EMWS1.ENDGRP6_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP6_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp6_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp6";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3353946    *------------------------------------------------------------*;
3353947    * End TRAIN: EndGrp6;
3353948    *------------------------------------------------------------*;
3353949
 
3353950    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3353951    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3353952    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3353953    ;
MPRINT(EM_DIAGRAM):   ;
3353954    ;
MPRINT(EM_DIAGRAM):   ;
3353955    ;
MPRINT(EM_DIAGRAM):   ;
3353956    ;
MPRINT(EM_DIAGRAM):   ;
3353957    quit;
MPRINT(EM_DIAGRAM):   quit;
3353958    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3353959    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3353960    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3353961    /*; *"; *'; */
3353962    ;
MPRINT(EM_DIAGRAM):   ;
3353963    run;
MPRINT(EM_DIAGRAM):   run;
3353964    quit;
MPRINT(EM_DIAGRAM):   quit;
3353965    /* Reset EM Options */
3353966    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3353967    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3353968    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:09 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:04:09 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1BKW7FX "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1BKW7FX new;
MPRINT(EM_DIAGRAM):   run;
3354070    %let EMEXCEPTIONSTRING=;
3354071    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3354072    * SCORE: EndGrp6;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp6;
3354073    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3354074    %let EM_ACTION = SCORE;
3354075    %let syscc = 0;
3354076    %macro main;
3354077       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3354078
3354079           filename temp catalog 'sashelp.emutil.endgp_train.source';
3354080           %include temp;
3354081           filename temp;
3354082
3354083           %train;
3354084
3354085       %end;
3354086       %else
3354087          %if %upcase(&EM_ACTION) = SCORE %then %do;
3354088
3354089           filename temp catalog 'sashelp.emutil.endgp_score.source';
3354090           %include temp;
3354091           filename temp;
3354092
3354093           %score;
3354094       %end;
3354095       %else
3354096       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3354097
3354098           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3354099           %include temp;
3354100           filename temp;
3354101
3354102           %postloop;
3354103
3354104       %end;
3354105
3354106       %doendm:
3354107    %mend main;
3354108
3354109    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3354110   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3354112   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3354113   +       data &out / view=&out;
3354114   +          set &data
3354116   +          %if "&prescore" = "Y" %then %do;
3354117   +              (obs=1)
3354118   +          %end;
3354120   +          ;
3354122   +          %inc &scoreref;
3354124   +          %if "&prescore" eq "Y" %then %do;
3354125   +              drop I_: R_:;
3354126   +          %end;
3354128   +       run;
3354129   +   %end;
3354131   +%mend scoretables;
3354133   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3354134   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3354135   +   data _null_;
3354136   +      retain index 0;
3354137   +      set &infoDs;
3354138   +      call symput('targetname', strip(_target_));
3354139   +      call symput('endloopnum', strip(_loop_));
3354140   +   run;
3354142   +   %let endgrp_decmeta=;
3354143   +   %let endgrp_decdata=;
3354145   +   data _null_;
3354146   +      set &em_import_data_eminfo;
3354147   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3354148   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3354149   +      else
3354150   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3354151   +      else call symput('MODELID', strip(data));
3354152   +   run;
3354154   +   %let headerString= Boosting;
3354155   +   %let prefixString= _BoostVar;
3354157   +   %if "&type" = "BAGINFO" %then %do;
3354158   +        %let headerString = Bagging;
3354159   +        %let prefixString= _BagVar;
3354160   +   %end;
3354162   +   %let targetType=;
3354163   +   %let predictedVars=;
3354164   +   data _null_;
3354165   +      retain index;
3354166   +      set &endgrp_decmeta end=eof;
3354167   +      length tempvar $200;
3354168   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3354169   +      else
3354170   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3354171   +      else
3354172   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3354173   +      else
3354174   +      if _TYPE_ = 'PREDICTED' then do;
3354175   +         index+1;
3354176   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3354177   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3354178   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3354179   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3354180   +      end;
3354181   +      if eof then
3354182   +         call symput('prednum', strip(put(index, best.)));
3354183   +   run;
3354185   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3354186   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3354188   +   filename loopflow "&em_user_loopflowcode";
3354189   +   filename looppub "&em_user_looppubcode";
3354191   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3354192   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3354194   +   %if "&emloopnumber" = "1" %then %do;
3354195   +       data _null_;
3354196   +          rc = fdelete('loopflow');
3354197   +          rc = fdelete('looppub');
3354198   +       run;
3354199   +       data _null_;
3354200   +          file loopflow;
3354201   +          put "&em_codebar;";
3354202   +          put "* &em_nodeid: ;" ;
3354203   +          put "* User: &sysuserid;";
3354204   +          put "* Date: &sysdate: &systime;";
3354205   +          put "&em_codebar ;";
3354206   +          put "* Ensemble Code;";
3354207   +          put "&em_codebar ;";
3354208   +          put "* &headerString: Loop=1;";
3354209   +          put "* Temporary Variables;";
3354210   +          %do i= 1 %to &prednum;
3354211   +              put "drop &&tempvars&i;";
3354212   +              put "&&tempvars&i = 0;";
3354213   +          %end;
3354214   +       run;
3354215   +       %em_copyfile(infref=loopflow, outfref=looppub);
3354216   +   %end;
3354218   +   %let j=&emloopnumber;
3354219   +   %do i = 1 %to &loopcodenum;
3354220   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3354221   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3354223   +       %if (&&loopnode&i eq &em_nodeid ) or
3354224   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3354225   +           data _null_;
3354226   +              file loopflow mod;
3354227   +              put "&em_codebar;";
3354228   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3354229   +              put "* User: &sysuserid;";
3354230   +              put "* Date: &sysdate: &systime;";
3354231   +              put "* &headerString: Loop=&j;";
3354232   +              put "&em_codebar;";
3354233   +           run;
3354234   +           data _null_;
3354235   +              file looppub mod;
3354236   +              put "&em_codebar;";
3354237   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3354238   +              put "* User: &sysuserid;";
3354239   +              put "* Date: &sysdate: &systime;";
3354240   +              put "* &headerString: Loop=&j;";
3354241   +              put "&em_codebar;";
3354242   +           run;
3354243   +       %end;
3354245   +       %if &&loopnode&i ne &em_nodeid %then %do;
3354246   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3354247   +               filename x catalog "&fsourceEntry";
3354248   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3354249   +               filename x;
3354251   +               filename y catalog "&psourceEntry";
3354252   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3354253   +               filename y;
3354254   +           %end;
3354255   +       %end;
3354256   +       %else %do;
3354257   +           %if "&j" ne "1" %then %do;
3354258   +               %let weight = %eval(&j-1);
3354259   +               data _null_;
3354260   +                  file loopflow mod;
3354261   +                  put "&em_codebar;";
3354262   +                  %if "&j" ne "&endloopnum" %then %do;
3354263   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3354264   +                  %end;
3354265   +                  %else %do;
3354266   +                      put "* &headerString: accumulate final probabilities;";
3354267   +                  %end;
3354268   +                  put "&em_codebar;";
3354269   +                  %do k=1 %to &prednum;
3354270   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3354271   +                  %end;
3354272   +               run;
3354273   +               data _null_;
3354274   +                  file looppub mod;
3354275   +                  put "&em_codebar;";
3354276   +                  %if "&j" ne "&endloopnum" %then %do;
3354277   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3354278   +                  %end;
3354279   +                  %else %do;
3354280   +                      put "* &headerString: accumulate final probabilities;";
3354281   +                  %end;
3354282   +                  %do k=1 %to &prednum;
3354283   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3354284   +                  %end;
3354285   +               run;
3354286   +           %end;
3354287   +           %if "&j" ne "&endloopnum" %then %do;
3354288   +               data _null_;
3354289   +                  file loopflow mod;
3354290   +                  put "&em_codebar;";
3354291   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3354292   +                  put "&em_codebar;";
3354293   +               %do k=1 %to &prednum;
3354294   +                  put "&&tempvars&k = &&predvars&k;";
3354295   +               %end;
3354296   +               run;
3354297   +               data _null_;
3354298   +                  file looppub mod;
3354299   +                  put "&em_codebar;";
3354300   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3354301   +                  put "&em_codebar;";
3354302   +               %do k=1 %to &prednum;
3354303   +                   put "&&tempvars&k = &&predvars&k;";
3354304   +               %end;
3354305   +               run;
3354306   +           %end;
3354308   +       %end;
3354309   +   %end;
3354311   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3354312   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3354314   +   filename loopflow;
3354315   +   filename looppub;
3354316   +   filename empub;
3354318   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3354319   +   %let gpTrain=;
3354320   +   %let gpValidate=;
3354321   +   %let gpTest=;
3354323   +   data _null_;
3354324   +      set &groupImportDs;
3354325   +      select(upcase(port));
3354326   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3354327   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3354328   +          when('TEST')     call symput('gpTest',     strip(dataset));
3354329   +       otherwise;
3354330   +      end;
3354331   +   run;
3354333   +   %if "&gpTrain" ne "" %then %do;
3354335   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3354337   +       %if &targetType ne INTERVAL %then %do;
3354338   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3354339   +       %end;
3354341   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3354343   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3354345   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3354346   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3354348   +       filename _decflow "&decflow";
3354349   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3354350   +       filename _decflow;
3354352   +   %end;
3354354   +   %if "&gpTrain" ne "" %then
3354355   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3354356   +   %if "&gpValidate" ne "" %then
3354357   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3354358   +   %if "&gpTest" ne "" %then
3354359   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3354361   +   filename emflow;
3354363   +%mend boostbagcode;
3354365   +%macro score;
3354367   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3354368   +   %inc _dec;
3354369   +   filename _dec;
3354371   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3354373   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3354374   +       %let emexceptionstring = nomodeltarget;
3354375   +       %goto doendpl;
3354376   +   %end;
3354378   +   %LET GROUPID=;
3354379   +   %let LOOPTYPE=;
3354380   +   data _null_;
3354381   +      set &em_import_data_eminfo;
3354382   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3354383   +      call symput('GROUPID',   strip(data));
3354384   +      call symput('LOOPTYPE', strip(key));
3354385   +   run;
3354387   +   %em_getname(key=PATH, type=DATA);
3354389   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3354390   +   %include temp;
3354391   +   filename temp;
3354393   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3354395   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3354396   +       %let deleteString = &em_nodeid._path;
3354397   +       proc datasets lib=&em_lib nolist;
3354398   +          delete &deleteString;
3354399   +       run;
3354400   +       quit;
3354401   +   %end;
3354403   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3354405   +   data score_path;
3354406   +      retain LOOPID &emloopnumber;
3354407   +      set score_path;
3354408   +   run;
3354410   +   proc append base=&em_user_path  data=score_path;
3354411   +   run;
3354413   +   %let EnsembleIndex=0;
3354414   +   data _null_;
3354415   +      retain index 0 ensembleIndex 0;
3354416   +      set score_Path end=eof;
3354417   +      if nodelabel = "&groupid" or index then do;
3354418   +         index + 1;
3354419   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3354420   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3354421   +      end;
3354422   +      if component='Ensemble' then ensembleIndex = index;
3354423   +      if eof then do;
3354424   +         call symput('loopcodenum', strip(put(index, best.)));
3354425   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3354426   +      end;
3354427   +   run;
3354429   +   proc datasets lib=work nolist;
3354430   +      delete score_Path;
3354431   +   run;
3354432   +   quit;
3354434   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3354435   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3354437   +   %doendpl:
3354439   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3354440   +/*
3354441   +       MACRO: EM_DECIDECODE
3354442   +
3354443   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3354444   +       SUPPORT: Taiyeong Lee
3354445   +
3354446   +       HISTORY: 01OCT04 Initial code
3354447   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3354448   +                to add the corresponding decision code
3354449   +
3354450   +*/
3354451   +
3354452   +
3354453   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3354454   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3354455   +
3354456   +    %do;
3354457   +    %let m_data      = &data;
3354458   +    %let m_decdata   = &decdata;
3354459   +    %let m_decmeta   = &decmeta;
3354460   +    %let m_noresfile = &noresfile;
3354461   +    %let m_resfile   = &resfile;
3354462   +    dm "afa c=sashelp.emutil.decidecode.scl";
3354463   +  %end;
3354464   +%mend EM_DECIDECODE;
3354465   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3354466   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3354467   +   proc display c=sashelp.emcore.pathscorecode.scl;
3354468   +   run;
3354469   +%mend EM_GETTRAINPATH;
3354470   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3354471    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3354472    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3354473    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3354474    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3354475    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3354476    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3354477    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3354478    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354479    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354480    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354481    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354482    output;
MPRINT(EM_GETTRAINPATH):   output;
3354483    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3354484    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3354485    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3354486    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3354487    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3354488    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354489    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354490    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354491    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354492    output;
MPRINT(EM_GETTRAINPATH):   output;
3354493    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3354494    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3354495    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3354496    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3354497    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3354498    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354499    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354500    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354501    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354502    output;
MPRINT(EM_GETTRAINPATH):   output;
3354503    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3354504    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3354505    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3354506    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3354507    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3354508    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354509    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354510    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354511    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354512    output;
MPRINT(EM_GETTRAINPATH):   output;
3354513    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3354514    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3354515    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3354516    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3354517    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3354518    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354519    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354520    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354521    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354522    output;
MPRINT(EM_GETTRAINPATH):   output;
3354523    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3354524    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3354525    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3354526    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3354527    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3354528    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354529    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354530    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354531    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354532    output;
MPRINT(EM_GETTRAINPATH):   output;
3354533    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3354534    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3354535    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3354536    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3354537    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3354538    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354539    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354540    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354541    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354542    output;
MPRINT(EM_GETTRAINPATH):   output;
3354543    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3354544    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3354545    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3354546    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3354547    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3354548    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354549    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354550    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354551    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354552    output;
MPRINT(EM_GETTRAINPATH):   output;
3354553    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3354554    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3354555    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3354556    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3354557    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3354558    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354559    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354560    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354561    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354562    output;
MPRINT(EM_GETTRAINPATH):   output;
3354563    nodelabel="Grp5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp5";
3354564    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3354565    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3354566    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3354567    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3354568    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354569    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354570    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354571    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354572    output;
MPRINT(EM_GETTRAINPATH):   output;
3354573    nodelabel="Reg2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg2";
3354574    parent="Grp5";
MPRINT(EM_GETTRAINPATH):   parent="Grp5";
3354575    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
3354576    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
3354577    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3354578    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354579    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354580    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354581    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354582    output;
MPRINT(EM_GETTRAINPATH):   output;
3354583    nodelabel="EndGrp6";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp6";
3354584    parent="Reg2";
MPRINT(EM_GETTRAINPATH):   parent="Reg2";
3354585    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3354586    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3354587    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3354588    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3354589    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3354590    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3354591    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3354592    output;
MPRINT(EM_GETTRAINPATH):   output;
3354593    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp6_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP6_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP6_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp5" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3354594    *------------------------------------------------------------*;
3354595    * End SCORE: EndGrp6;
3354596    *------------------------------------------------------------*;
3354597
 
3354598    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3354599    * EndGrp6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp6: Scoring DATA data;
3354600    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3354601    data EMWS1.EndGrp6_TRAIN
3354602    / view=EMWS1.EndGrp6_TRAIN
3354603    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_TRAIN / view=EMWS1.EndGrp6_TRAIN ;
3354604    set EMWS1.Reg2_TRAIN
3354605    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_TRAIN ;
3354606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3354607    quit;
 
3354609    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3354610    * EndGrp6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp6: Computing metadata for TRAIN data;
3354611    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp6_TRAIN out=WORK.M3EKME48 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EKME48;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EKME48(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3EKME48;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3EKME48;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M39A94UL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2EWUVB3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   set WORK.M39A94UL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp6";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3354957    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3354958    set EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO;
3354959    where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3354960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMINFO.
      WHERE (DATA='EndGrp6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3354961    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMINFO;
3354962    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3354963    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3354964    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3354968    run;
3354969    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
3354970    set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
3354971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3354972    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
3354973    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3354974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3354975    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3354976    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3354977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3354978    proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3354979    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3354980    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3354981    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
3354982    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3354983    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3354984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3354985    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3354986    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3354987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3354988    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:10 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:04:10 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2DB6B0J "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2DB6B0J new;
MPRINT(EM_DIAGRAM):   run;
3355012    data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT;
3355013    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3355014    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3355015    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3355016    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3355017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3355018    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
3355019    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3355020    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3355021    %let _EMwarndup = 0;
3355022    %let _EMtargetdup =;
3355023    %let _EMASEtargetdup =;
3355024    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3355025    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3355026    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3355027    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3355028    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3355029    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3355030    end;
MPRINT(EM_DIAGRAM):   end;
3355031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3355032    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
3355033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3355034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.REG2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3355035    proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3355036    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3355037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP6_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 19 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3355038    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3355039    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3355040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3355041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 19 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3355042    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3355043    set EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_CMeta_TRAIN;
3355044    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3355045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3355046    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3355047    set EMWS1.EndGrp6_TRAIN(keep=
3355048    F_DepVar
3355049    I_DepVar
3355050    P_DepVar0
3355051    P_DepVar1
3355052    R_DepVar0
3355053    R_DepVar1
3355054    U_DepVar
3355055    _WARN_
3355056    DepVar
3355057    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3355058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2181 observations read from the data set EMWS1.GRP5_TRAIN.
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2181 observations read from the data set EMWS1.REG2_TRAIN.
NOTE: There were 2181 observations read from the data set EMWS1.ENDGRP6_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2181 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3359245    %let _cn = %sysfunc(getoption(CENTER));
3359246    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3359247    proc print data=EMWS1.EndGrp6_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMREPORTFIT noobs label;
3359248    var STAT LABEL TRAIN
3359249    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3359250    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3359251    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3359252    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3359253    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2263.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3359254    title10;
MPRINT(EM_DIAGRAM):   title10;
3359255    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3359256    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION nothreads;
3359257    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3359258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3359259    %let _cn = %sysfunc(getoption(CENTER));
3359260    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3359261    proc print data=EMWS1.EndGrp6_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMCLASSIFICATION noobs label;
3359262    var from into pct_row pct_col count percent
3359263    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3359264    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3359265    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3359266    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3359267    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3359268    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3359269    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3359270    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3359271    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3359272    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3359273    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3359274    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2264.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359275    title9;
MPRINT(EM_DIAGRAM):   title9;
3359276    title10;
MPRINT(EM_DIAGRAM):   title10;
3359277    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3359278    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3359279    modify EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3359280    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3359281    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3359282    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMRANK.DATA.
3359283    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3359284    %let _cn = %sysfunc(getoption(CENTER));
3359285    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3359286    proc print data=EMWS1.EndGrp6_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMRANK label noobs;
3359287    var
3359288    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3359289    by
3359290    notsorted DATAROLE
3359291    notsorted TARGET
3359292    notsorted TARGETLABEL
3359293    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3359294    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3359295    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3359296    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2265.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3359297    title10;
MPRINT(EM_DIAGRAM):   title10;
3359298    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3359299    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3359300    modify EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3359301    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3359302    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3359303    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMSCOREDIST.DATA.
3359304    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3359305    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3359306    set EMWS1.Grp5_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp5_GROUPINFO;
3359307    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3359308    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3359309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP5_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3359310    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3359311    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3359312    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3359313    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3359314    set EMWS1.EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK;
3359315    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3359316    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3359317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3359318    data EMWS1.EndGrp6_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMRANK_LOOP;
3359319    set EMWS1.EndGrp6_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK_LOOP temp;
3359320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP6_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359321    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3359322    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3359323    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3359324    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3359325    set EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST;
3359326    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3359327    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3359328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3359329    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
3359330    set EMWS1.EndGrp6_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST_LOOP temp;
3359331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP has 200 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359332    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3359333    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3359334    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3359335    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3359336    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3359337    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3359338    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3359339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3359340    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
3359341    set EMWS1.EndGrp6_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT_LOOP temp;
3359342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT_LOOP has 10 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359343    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3359344    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3359345    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3359346    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3359347    set EMWS1.EndGrp6_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT;
3359348    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3359349    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3359350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359351    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
3359352    set EMWS1.EndGrp6_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT_LOOP temp;
3359353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP has 200 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3359354    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3359355    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3359356    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3359357    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3359358    set EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION;
3359359    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3359360    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3359361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3359362    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
3359363    set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP temp;
3359364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
