*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:36:30 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:36:25 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:36:25 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3IE50B3 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3IE50B3 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMGROUP\EMLOG_3.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:36:25 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMGROUP\EMOUTPUT_3.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:36:25 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
1015826    proc freq data=EMWS1.EndGrp6_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp6_VariableSet noprint;
1015827    table ROLE*LEVEL/out=WORK.EndGrp6META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp6META;
1015828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP6_VARIABLESET.
NOTE: The data set WORK.ENDGRP6META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
1015829    proc print data=WORK.EndGrp6META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp6META label noobs;
1015830    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1015831    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
1015832    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1015833    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1015834    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP6META.
NOTE: The PROCEDURE PRINT printed page 670.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015835    title10;
MPRINT(EM_DIAGRAM):   title10;
1015836    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1015865    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
1015866    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1015867    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1015868       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1015869    set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
1015870    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1015871    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1015872    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1015873    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1015874    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1015875    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1015876    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1015877    end;
MPRINT(EM_DIAGRAM):   end;
1015878    output;
MPRINT(EM_DIAGRAM):   output;
1015879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP6_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1015880    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1015881    proc print data=WORK.EndGrp6_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp6_EVENT noobs label;
1015882    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1015883    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1015884    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1015885    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP6_EVENT.
NOTE: The PROCEDURE PRINT printed page 671.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015886    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1015887    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
1015888    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1015889    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
1015890    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1015891    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1015892    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1015893    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 672.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1015894    title10;
MPRINT(EM_DIAGRAM):   title10;
1015895    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp6: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=303;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13722826086956;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1905;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86277173913043;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
1016368    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1016369    * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
1016370    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
1016371    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
1016372    %let EMEXCEPTIONSTRING=;
1016373    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1016374    * TRAIN: EndGrp6;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp6;
1016375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016376    %let EM_ACTION = TRAIN;
1016377    %let syscc = 0;
1016378    %macro main;
1016379       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1016380
1016381           filename temp catalog 'sashelp.emutil.endgp_train.source';
1016382           %include temp;
1016383           filename temp;
1016384
1016385           %train;
1016386
1016387       %end;
1016388       %else
1016389          %if %upcase(&EM_ACTION) = SCORE %then %do;
1016390
1016391           filename temp catalog 'sashelp.emutil.endgp_score.source';
1016392           %include temp;
1016393           filename temp;
1016394
1016395           %score;
1016396       %end;
1016397       %else
1016398       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1016399
1016400           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1016401           %include temp;
1016402           filename temp;
1016403
1016404           %postloop;
1016405
1016406       %end;
1016407
1016408       %doendm:
1016409    %mend main;
1016410
1016411    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
1016412   +%macro copyModelDs(model=, key=);
1016413   +   %let modelDs  = &em_lib..&model._&key;
1016414   +   %let reportDs = &em_lib..&em_nodeid._&key;
1016415   +   %if %sysfunc(exist(&modelDs)) %then %do;
1016416   +       data &reportDs;
1016417   +          length ModelId $16;
1016418   +          retain ModelId "&model";
1016419   +          set &modelDs;
1016420   +       run;
1016421   +   %end;
1016422   +%mend copyModelDs;
1016423   +
1016424   +%macro traintarget(groupid=);
1016425   +   %em_getname(key=emoutfit, type=DATA);
1016426   +   %let targetname=;
1016427   +   data _null_;
1016428   +     set &em_lib..&groupid._&looptype;
1016429   +     where _LOOP_ = &EMLOOPNUMBER;
1016430   +     call symput('targetname', strip(_TARGET_));
1016431   +   run;
1016432   +   %let modelId =;
1016433   +   data _null_;
1016434   +      set &em_import_data_eminfo;
1016435   +      where key = 'MODEL' and TARGET = "&targetname";
1016436   +      call symput('modelId',   strip(data));
1016437   +   run;
1016438   +   %if "&modelId" ne "" %then %do;
1016439   +       %copyModelDs(model=&modelid, key=EMRANK);
1016440   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
1016441   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
1016442   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
1016443   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
1016444   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
1016445   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1016446   +   %end;
1016447   +
1016448   +   %doendtgp:
1016449   +%mend;
1016450   +
1016451   +%macro trainboost(groupid=);
1016452   +
1016453   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
1016454   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
1016455   +
1016456   +   data _null_;
1016457   +      retain index 0;
1016458   +      set &boostinfoDs;
1016459   +      call symput('targetname', strip(_target_));
1016460   +   run;
1016461   +
1016462   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
1016463   +       %let decmeta = ;
1016464   +       data _null_;
1016465   +          set &em_import_data_eminfo;
1016466   +          where (key='DECMETA' and TARGET="&targetname");
1016467   +          call symput('DECMETA', strip(data));
1016468   +       run;
1016469   +       %if "&decmeta" eq "" %then %do;
1016470   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1016471   +           %goto doendtb;
1016472   +       %end;
1016473   +
1016474   +       %let predictedVars=;
1016475   +       data _null_;
1016476   +          set &decmeta;
1016477   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1016478   +          else
1016479   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1016480   +          else
1016481   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
1016482   +       run;
1016483   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
1016484   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
1016485   +       %end;
1016486   +   %end;
1016487   +
1016488   +   * ;
1016489   +   * ENDGROUP &NODEID : Boosting scoring ;
1016490   +   * ;
1016491   +   data &em_lib..&groupid._boostscore;
1016492   +      set &em_import_data;
1016493   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
1016494   +      %if "%em_freq" ne "" %then %do ;
1016495   +          keep %em_freq ;
1016496   +      %end ;
1016497   +   run;
1016498   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1016499   +
1016500   +   %doendtb:
1016501   +
1016502   +%mend trainboost;
1016503   +
1016504   +%macro trainbag(groupid=);
1016505   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
1016506   +   data _null_;
1016507   +      retain index 0;
1016508   +      set &baginfoDs;
1016509   +      call symput('targetname', strip(_target_));
1016510   +   run;
1016511   +
1016512   +   %let decmeta = ;
1016513   +   data _null_;
1016514   +       set &em_import_data_eminfo;
1016515   +       where (key='DECMETA' and TARGET="&targetname");
1016516   +       call symput('DECMETA', strip(data));
1016517   +   run;
1016518   +   %if "&decmeta" eq "" %then %do;
1016519   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1016520   +       %goto doendtg;
1016521   +   %end;
1016522   +
1016523   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1016524   +
1016525   +   %doendtg:
1016526   +%mend trainbag;
1016527   +
1016528   +%macro traingroup(groupid=);
1016529   +   %let targetNum = 0;
1016530   +
1016531   +   data _temp1;
1016532   +      set &em_lib..&groupid._eminfo;
1016533   +      where key='MODEL';
1016534   +   run;
1016535   +   data _temp2;
1016536   +      set &em_import_data_eminfo;
1016537   +      where key='MODEL';
1016538   +   run;
1016539   +   proc sort data=_temp1; by TARGET DATA;
1016540   +   proc sort data=_temp2; by TARGET DATA;
1016541   +   data _temp2;
1016542   +      merge _temp1(in=_a) _temp2(in=_b);
1016543   +      by TARGET DATA;
1016544   +      if ^_a and _b then output;
1016545   +   run;
1016546   +   data _null_;
1016547   +      retain index 0;
1016548   +      set _temp2 end=eof;
1016549   +      index +1;
1016550   +      where key ='MODEL';
1016551   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
1016552   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
1016553   +      if eof then
1016554   +         call symput('targetnum', strip(put(index, best.)));
1016555   +   run;
1016556   +   proc datasets lib=work nolist;
1016557   +      delete _temp1 _temp2;
1016558   +   run;
1016559   +   %if "&targetNum" eq "0" %then %goto doendtgp;
1016560   +
1016561   +   %let modelString =;
1016562   +   %do i=1 %to &targetnum;
1016563   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
1016564   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
1016565   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
1016566   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
1016567   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
1016568   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
1016569   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
1016570   +            %let modelString = &modelString &&modelid&i;
1016571   +       %end;
1016572   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1016573   +   %end;
1016574   +
1016575   +   %doendtgp:
1016576   +
1016577   +%mend traingroup;
1016578   +
1016579   +%macro getSize(data=, nobsvar=);
1016580   +
1016581   +   %if %sysfunc(exist(&data, DATA)) %then %do;
1016582   +       %let dsid = %sysfunc(open(&data));
1016583   +       %if &dsid %then %do;
1016584   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
1016585   +           %let dsid = %sysfunc(close(&dsid));
1016586   +       %end;
1016587   +   %end;
1016588   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
1016589   +        proc sql;
1016590   +           reset noprint;
1016591   +           select count(*) into :&nobsvar from &data;
1016592   +        quit;
1016593   +   %end;
1016594   +
1016595   +%mend getsize;
1016596   +
1016597   +%macro train;
1016598   +
1016599   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
1016600   +      %let EM_TOOLTYPE=UTILITY;
1016601   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
1016602   +          proc delete data=&em_data_eminfo;
1016603   +          run;
1016604   +      %end;
1016605   +      %goto doendtr;
1016606   +   %end;
1016607   +
1016608   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1016609   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1016610   +       %goto doendtr;
1016611   +   %end;
1016612   +
1016613   +   %let xgroupid = ;
1016614   +   data _null_;
1016615   +      set &em_import_data_eminfo;
1016616   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1016617   +      call symput('XGROUPID',  strip(data));
1016618   +      call symput('LOOPTYPE', strip(key));
1016619   +   run;
1016620   +
1016621   +   %if "&looptype" eq "BOOSTINFO" %then %do;
1016622   +       %let nDataObs=0;
1016623   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
1016624   +
1016625   +       %let nStartObs=0;
1016626   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
1016627   +
1016628   +       %if &nDataObs ne &nStartObs %then %do;
1016629   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
1016630   +           %goto doendtr;
1016631   +       %end;
1016632   +
1016633   +       %trainboost(groupid=&xgroupid);
1016634   +   %end;
1016635   +   %else
1016636   +   %if "&looptype" eq "BAGINFO" %then %do;
1016637   +       %trainbag(groupid=&xgroupid);
1016638   +   %end;
1016639   +   %else
1016640   +   %if "&looptype" eq "GROUPINFO" %then %do;
1016641   +       %traingroup(groupid=&xgroupid);
1016642   +   %end;
1016643   +   %else
1016644   +   %if "&looptype" eq "TARGETINFO" %then %do;
1016645   +       %traintarget(groupid=&xgroupid);
1016646   +   %end;
1016647   +
1016648   +   data &em_data_eminfo;
1016649   +      length TARGET KEY $32  DATA $43;
1016650   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
1016651   +   run;
1016652   +
1016653   +   %let EM_TOOLTYPE=MODEL;
1016654   +
1016655   +   %doendtr:
1016656   +
1016657   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp5_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP5_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG2_EMRANK.
NOTE: The data set EMWS1.ENDGRP6_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP6_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg2";
MPRINT(COPYMODELDS):   set EMWS1.Reg2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp6_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp6";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016658    *------------------------------------------------------------*;
1016659    * End TRAIN: EndGrp6;
1016660    *------------------------------------------------------------*;
1016661
 
1016662    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1016663    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
1016664    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016665    ;
MPRINT(EM_DIAGRAM):   ;
1016666    ;
MPRINT(EM_DIAGRAM):   ;
1016667    ;
MPRINT(EM_DIAGRAM):   ;
1016668    ;
MPRINT(EM_DIAGRAM):   ;
1016669    quit;
MPRINT(EM_DIAGRAM):   quit;
1016670    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016671    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
1016672    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016673    /*; *"; *'; */
1016674    ;
MPRINT(EM_DIAGRAM):   ;
1016675    run;
MPRINT(EM_DIAGRAM):   run;
1016676    quit;
MPRINT(EM_DIAGRAM):   quit;
1016677    /* Reset EM Options */
1016678    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
1016679    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
1016680    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:36:28 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:36:28 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0E8O_N_ "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0E8O_N_ new;
MPRINT(EM_DIAGRAM):   run;
1016782    %let EMEXCEPTIONSTRING=;
1016783    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1016784    * SCORE: EndGrp6;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp6;
1016785    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1016786    %let EM_ACTION = SCORE;
1016787    %let syscc = 0;
1016788    %macro main;
1016789       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1016790
1016791           filename temp catalog 'sashelp.emutil.endgp_train.source';
1016792           %include temp;
1016793           filename temp;
1016794
1016795           %train;
1016796
1016797       %end;
1016798       %else
1016799          %if %upcase(&EM_ACTION) = SCORE %then %do;
1016800
1016801           filename temp catalog 'sashelp.emutil.endgp_score.source';
1016802           %include temp;
1016803           filename temp;
1016804
1016805           %score;
1016806       %end;
1016807       %else
1016808       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1016809
1016810           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1016811           %include temp;
1016812           filename temp;
1016813
1016814           %postloop;
1016815
1016816       %end;
1016817
1016818       %doendm:
1016819    %mend main;
1016820
1016821    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
1016822   +%macro scoreTables(data=, out=, scoreref=, prescore=);
1016824   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
1016825   +       data &out / view=&out;
1016826   +          set &data
1016828   +          %if "&prescore" = "Y" %then %do;
1016829   +              (obs=1)
1016830   +          %end;
1016832   +          ;
1016834   +          %inc &scoreref;
1016836   +          %if "&prescore" eq "Y" %then %do;
1016837   +              drop I_: R_:;
1016838   +          %end;
1016840   +       run;
1016841   +   %end;
1016843   +%mend scoretables;
1016845   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
1016846   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
1016847   +   data _null_;
1016848   +      retain index 0;
1016849   +      set &infoDs;
1016850   +      call symput('targetname', strip(_target_));
1016851   +      call symput('endloopnum', strip(_loop_));
1016852   +   run;
1016854   +   %let endgrp_decmeta=;
1016855   +   %let endgrp_decdata=;
1016857   +   data _null_;
1016858   +      set &em_import_data_eminfo;
1016859   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
1016860   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
1016861   +      else
1016862   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
1016863   +      else call symput('MODELID', strip(data));
1016864   +   run;
1016866   +   %let headerString= Boosting;
1016867   +   %let prefixString= _BoostVar;
1016869   +   %if "&type" = "BAGINFO" %then %do;
1016870   +        %let headerString = Bagging;
1016871   +        %let prefixString= _BagVar;
1016872   +   %end;
1016874   +   %let targetType=;
1016875   +   %let predictedVars=;
1016876   +   data _null_;
1016877   +      retain index;
1016878   +      set &endgrp_decmeta end=eof;
1016879   +      length tempvar $200;
1016880   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
1016881   +      else
1016882   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1016883   +      else
1016884   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1016885   +      else
1016886   +      if _TYPE_ = 'PREDICTED' then do;
1016887   +         index+1;
1016888   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
1016889   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
1016890   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
1016891   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
1016892   +      end;
1016893   +      if eof then
1016894   +         call symput('prednum', strip(put(index, best.)));
1016895   +   run;
1016897   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
1016898   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
1016900   +   filename loopflow "&em_user_loopflowcode";
1016901   +   filename looppub "&em_user_looppubcode";
1016903   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
1016904   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
1016906   +   %if "&emloopnumber" = "1" %then %do;
1016907   +       data _null_;
1016908   +          rc = fdelete('loopflow');
1016909   +          rc = fdelete('looppub');
1016910   +       run;
1016911   +       data _null_;
1016912   +          file loopflow;
1016913   +          put "&em_codebar;";
1016914   +          put "* &em_nodeid: ;" ;
1016915   +          put "* User: &sysuserid;";
1016916   +          put "* Date: &sysdate: &systime;";
1016917   +          put "&em_codebar ;";
1016918   +          put "* Ensemble Code;";
1016919   +          put "&em_codebar ;";
1016920   +          put "* &headerString: Loop=1;";
1016921   +          put "* Temporary Variables;";
1016922   +          %do i= 1 %to &prednum;
1016923   +              put "drop &&tempvars&i;";
1016924   +              put "&&tempvars&i = 0;";
1016925   +          %end;
1016926   +       run;
1016927   +       %em_copyfile(infref=loopflow, outfref=looppub);
1016928   +   %end;
1016930   +   %let j=&emloopnumber;
1016931   +   %do i = 1 %to &loopcodenum;
1016932   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
1016933   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
1016935   +       %if (&&loopnode&i eq &em_nodeid ) or
1016936   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
1016937   +           data _null_;
1016938   +              file loopflow mod;
1016939   +              put "&em_codebar;";
1016940   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1016941   +              put "* User: &sysuserid;";
1016942   +              put "* Date: &sysdate: &systime;";
1016943   +              put "* &headerString: Loop=&j;";
1016944   +              put "&em_codebar;";
1016945   +           run;
1016946   +           data _null_;
1016947   +              file looppub mod;
1016948   +              put "&em_codebar;";
1016949   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1016950   +              put "* User: &sysuserid;";
1016951   +              put "* Date: &sysdate: &systime;";
1016952   +              put "* &headerString: Loop=&j;";
1016953   +              put "&em_codebar;";
1016954   +           run;
1016955   +       %end;
1016957   +       %if &&loopnode&i ne &em_nodeid %then %do;
1016958   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
1016959   +               filename x catalog "&fsourceEntry";
1016960   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
1016961   +               filename x;
1016963   +               filename y catalog "&psourceEntry";
1016964   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
1016965   +               filename y;
1016966   +           %end;
1016967   +       %end;
1016968   +       %else %do;
1016969   +           %if "&j" ne "1" %then %do;
1016970   +               %let weight = %eval(&j-1);
1016971   +               data _null_;
1016972   +                  file loopflow mod;
1016973   +                  put "&em_codebar;";
1016974   +                  %if "&j" ne "&endloopnum" %then %do;
1016975   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1016976   +                  %end;
1016977   +                  %else %do;
1016978   +                      put "* &headerString: accumulate final probabilities;";
1016979   +                  %end;
1016980   +                  put "&em_codebar;";
1016981   +                  %do k=1 %to &prednum;
1016982   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1016983   +                  %end;
1016984   +               run;
1016985   +               data _null_;
1016986   +                  file looppub mod;
1016987   +                  put "&em_codebar;";
1016988   +                  %if "&j" ne "&endloopnum" %then %do;
1016989   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1016990   +                  %end;
1016991   +                  %else %do;
1016992   +                      put "* &headerString: accumulate final probabilities;";
1016993   +                  %end;
1016994   +                  %do k=1 %to &prednum;
1016995   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1016996   +                  %end;
1016997   +               run;
1016998   +           %end;
1016999   +           %if "&j" ne "&endloopnum" %then %do;
1017000   +               data _null_;
1017001   +                  file loopflow mod;
1017002   +                  put "&em_codebar;";
1017003   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1017004   +                  put "&em_codebar;";
1017005   +               %do k=1 %to &prednum;
1017006   +                  put "&&tempvars&k = &&predvars&k;";
1017007   +               %end;
1017008   +               run;
1017009   +               data _null_;
1017010   +                  file looppub mod;
1017011   +                  put "&em_codebar;";
1017012   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1017013   +                  put "&em_codebar;";
1017014   +               %do k=1 %to &prednum;
1017015   +                   put "&&tempvars&k = &&predvars&k;";
1017016   +               %end;
1017017   +               run;
1017018   +           %end;
1017020   +       %end;
1017021   +   %end;
1017023   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
1017024   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
1017026   +   filename loopflow;
1017027   +   filename looppub;
1017028   +   filename empub;
1017030   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
1017031   +   %let gpTrain=;
1017032   +   %let gpValidate=;
1017033   +   %let gpTest=;
1017035   +   data _null_;
1017036   +      set &groupImportDs;
1017037   +      select(upcase(port));
1017038   +          when('DATA')     call symput('gpTrain',    strip(dataset));
1017039   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
1017040   +          when('TEST')     call symput('gpTest',     strip(dataset));
1017041   +       otherwise;
1017042   +      end;
1017043   +   run;
1017045   +   %if "&gpTrain" ne "" %then %do;
1017047   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
1017049   +       %if &targetType ne INTERVAL %then %do;
1017050   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
1017051   +       %end;
1017053   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
1017055   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
1017057   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
1017058   +                                                           noresfile=, resfile=%nrbquote(&decflow));
1017060   +       filename _decflow "&decflow";
1017061   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
1017062   +       filename _decflow;
1017064   +   %end;
1017066   +   %if "&gpTrain" ne "" %then
1017067   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
1017068   +   %if "&gpValidate" ne "" %then
1017069   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
1017070   +   %if "&gpTest" ne "" %then
1017071   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
1017073   +   filename emflow;
1017075   +%mend boostbagcode;
1017077   +%macro score;
1017079   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
1017080   +   %inc _dec;
1017081   +   filename _dec;
1017083   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
1017085   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1017086   +       %let emexceptionstring = nomodeltarget;
1017087   +       %goto doendpl;
1017088   +   %end;
1017090   +   %LET GROUPID=;
1017091   +   %let LOOPTYPE=;
1017092   +   data _null_;
1017093   +      set &em_import_data_eminfo;
1017094   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1017095   +      call symput('GROUPID',   strip(data));
1017096   +      call symput('LOOPTYPE', strip(key));
1017097   +   run;
1017099   +   %em_getname(key=PATH, type=DATA);
1017101   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
1017102   +   %include temp;
1017103   +   filename temp;
1017105   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
1017107   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
1017108   +       %let deleteString = &em_nodeid._path;
1017109   +       proc datasets lib=&em_lib nolist;
1017110   +          delete &deleteString;
1017111   +       run;
1017112   +       quit;
1017113   +   %end;
1017115   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
1017117   +   data score_path;
1017118   +      retain LOOPID &emloopnumber;
1017119   +      set score_path;
1017120   +   run;
1017122   +   proc append base=&em_user_path  data=score_path;
1017123   +   run;
1017125   +   %let EnsembleIndex=0;
1017126   +   data _null_;
1017127   +      retain index 0 ensembleIndex 0;
1017128   +      set score_Path end=eof;
1017129   +      if nodelabel = "&groupid" or index then do;
1017130   +         index + 1;
1017131   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
1017132   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
1017133   +      end;
1017134   +      if component='Ensemble' then ensembleIndex = index;
1017135   +      if eof then do;
1017136   +         call symput('loopcodenum', strip(put(index, best.)));
1017137   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
1017138   +      end;
1017139   +   run;
1017141   +   proc datasets lib=work nolist;
1017142   +      delete score_Path;
1017143   +   run;
1017144   +   quit;
1017146   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
1017147   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
1017149   +   %doendpl:
1017151   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
1017152   +/*
1017153   +       MACRO: EM_DECIDECODE
1017154   +
1017155   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
1017156   +       SUPPORT: Taiyeong Lee
1017157   +
1017158   +       HISTORY: 01OCT04 Initial code
1017159   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
1017160   +                to add the corresponding decision code
1017161   +
1017162   +*/
1017163   +
1017164   +
1017165   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
1017166   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
1017167   +
1017168   +    %do;
1017169   +    %let m_data      = &data;
1017170   +    %let m_decdata   = &decdata;
1017171   +    %let m_decmeta   = &decmeta;
1017172   +    %let m_noresfile = &noresfile;
1017173   +    %let m_resfile   = &resfile;
1017174   +    dm "afa c=sashelp.emutil.decidecode.scl";
1017175   +  %end;
1017176   +%mend EM_DECIDECODE;
1017177   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
1017178   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
1017179   +   proc display c=sashelp.emcore.pathscorecode.scl;
1017180   +   run;
1017181   +%mend EM_GETTRAINPATH;
1017182   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
1017183    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
1017184    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
1017185    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
1017186    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
1017187    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1017188    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
1017189    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
1017190    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017191    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017192    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017193    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017194    output;
MPRINT(EM_GETTRAINPATH):   output;
1017195    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
1017196    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
1017197    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
1017198    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
1017199    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1017200    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017201    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017202    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017203    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017204    output;
MPRINT(EM_GETTRAINPATH):   output;
1017205    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
1017206    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
1017207    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
1017208    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
1017209    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1017210    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017211    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017212    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017213    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017214    output;
MPRINT(EM_GETTRAINPATH):   output;
1017215    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
1017216    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
1017217    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1017218    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1017219    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1017220    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017221    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017222    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017223    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017224    output;
MPRINT(EM_GETTRAINPATH):   output;
1017225    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
1017226    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
1017227    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1017228    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1017229    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1017230    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017231    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017232    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017233    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017234    output;
MPRINT(EM_GETTRAINPATH):   output;
1017235    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
1017236    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
1017237    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1017238    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1017239    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1017240    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017241    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017242    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017243    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017244    output;
MPRINT(EM_GETTRAINPATH):   output;
1017245    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
1017246    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
1017247    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1017248    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1017249    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1017250    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017251    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017252    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017253    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017254    output;
MPRINT(EM_GETTRAINPATH):   output;
1017255    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
1017256    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
1017257    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1017258    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1017259    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1017260    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017261    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017262    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017263    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017264    output;
MPRINT(EM_GETTRAINPATH):   output;
1017265    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
1017266    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
1017267    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1017268    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1017269    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1017270    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017271    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017272    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017273    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017274    output;
MPRINT(EM_GETTRAINPATH):   output;
1017275    nodelabel="Grp5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp5";
1017276    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
1017277    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1017278    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
1017279    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1017280    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017281    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017282    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017283    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017284    output;
MPRINT(EM_GETTRAINPATH):   output;
1017285    nodelabel="Reg2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg2";
1017286    parent="Grp5";
MPRINT(EM_GETTRAINPATH):   parent="Grp5";
1017287    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
1017288    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
1017289    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1017290    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017291    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017292    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017293    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017294    output;
MPRINT(EM_GETTRAINPATH):   output;
1017295    nodelabel="EndGrp6";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp6";
1017296    parent="Reg2";
MPRINT(EM_GETTRAINPATH):   parent="Reg2";
1017297    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1017298    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
1017299    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1017300    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1017301    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1017302    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1017303    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1017304    output;
MPRINT(EM_GETTRAINPATH):   output;
1017305    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 3;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp6_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP6_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP6_PATH has 36 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp5" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1017306    *------------------------------------------------------------*;
1017307    * End SCORE: EndGrp6;
1017308    *------------------------------------------------------------*;
1017309
 
1017310    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1017311    * EndGrp6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp6: Scoring DATA data;
1017312    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1017313    data EMWS1.EndGrp6_TRAIN
1017314    / view=EMWS1.EndGrp6_TRAIN
1017315    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_TRAIN / view=EMWS1.EndGrp6_TRAIN ;
1017316    set EMWS1.Reg2_TRAIN
1017317    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_TRAIN ;
1017318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1017319    quit;
 
1017321    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
1017322    * EndGrp6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp6: Computing metadata for TRAIN data;
1017323    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp6_TRAIN out=WORK.M2VJRHBP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VJRHBP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VJRHBP(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VJRHBP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VJRHBP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0UZ3TDC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M358AWHI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UZ3TDC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp6";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1017669    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1017670    set EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO;
1017671    where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
1017672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMINFO.
      WHERE (DATA='EndGrp6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1017673    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMINFO;
1017674    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1017675    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1017676    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1017680    run;
1017681    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
1017682    set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
1017683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1017684    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
1017685    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1017686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1017687    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1017688    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1017689    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1017690    proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1017691    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1017692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1017693    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
1017694    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1017695    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1017696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1017697    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1017698    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1017699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1017700    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:36:29 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:36:29 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0E3LBJY "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0E3LBJY new;
MPRINT(EM_DIAGRAM):   run;
1017724    data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT;
1017725    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
1017726    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1017727    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1017728    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1017729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1017730    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
1017731    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1017732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1017733    %let _EMwarndup = 0;
1017734    %let _EMtargetdup =;
1017735    %let _EMASEtargetdup =;
1017736    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1017737    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
1017738    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1017739    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1017740    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1017741    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1017742    end;
MPRINT(EM_DIAGRAM):   end;
1017743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1017744    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
1017745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1017746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.REG2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 19 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1017747    proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
1017748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1017749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS1.ENDGRP6_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 19 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1017750    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1017751    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1017752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1017753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 19 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1017754    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1017755    set EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_CMeta_TRAIN;
1017756    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
1017757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1017758    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1017759    set EMWS1.EndGrp6_TRAIN(keep=
1017760    F_DepVar
1017761    I_DepVar
1017762    P_DepVar0
1017763    P_DepVar1
1017764    R_DepVar0
1017765    R_DepVar1
1017766    U_DepVar
1017767    _WARN_
1017768    DepVar
1017769    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1017770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2208 observations read from the data set EMWS1.GRP5_TRAIN.
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2208 observations read from the data set EMWS1.REG2_TRAIN.
NOTE: There were 2208 observations read from the data set EMWS1.ENDGRP6_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2208 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
1021957    %let _cn = %sysfunc(getoption(CENTER));
1021958    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1021959    proc print data=EMWS1.EndGrp6_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMREPORTFIT noobs label;
1021960    var STAT LABEL TRAIN
1021961    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
1021962    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1021963    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1021964    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1021965    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 673.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1021966    title10;
MPRINT(EM_DIAGRAM):   title10;
1021967    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1021968    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION nothreads;
1021969    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1021970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1021971    %let _cn = %sysfunc(getoption(CENTER));
1021972    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1021973    proc print data=EMWS1.EndGrp6_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMCLASSIFICATION noobs label;
1021974    var from into pct_row pct_col count percent
1021975    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1021976    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1021977    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1021978    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1021979    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1021980    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1021981    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1021982    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1021983    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1021984    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1021985    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1021986    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 674.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1021987    title9;
MPRINT(EM_DIAGRAM):   title9;
1021988    title10;
MPRINT(EM_DIAGRAM):   title10;
1021989    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1021990    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1021991    modify EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1021992    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1021993    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1021994    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMRANK.DATA.
1021995    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1021996    %let _cn = %sysfunc(getoption(CENTER));
1021997    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1021998    proc print data=EMWS1.EndGrp6_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMRANK label noobs;
1021999    var
1022000    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1022001    by
1022002    notsorted DATAROLE
1022003    notsorted TARGET
1022004    notsorted TARGETLABEL
1022005    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1022006    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1022007    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1022008    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMRANK.
NOTE: The PROCEDURE PRINT printed page 675.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1022009    title10;
MPRINT(EM_DIAGRAM):   title10;
1022010    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1022011    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1022012    modify EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1022013    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1022014    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1022015    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMSCOREDIST.DATA.
1022016    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
1022017    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1022018    set EMWS1.Grp5_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp5_GROUPINFO;
1022019    where _LOOP_=3;
MPRINT(EM_DIAGRAM):   where _LOOP_=3;
1022020    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
1022021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP5_GROUPINFO.
      WHERE _LOOP_=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1022022    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1022023    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1022024    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1022025    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1022026    set EMWS1.EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK;
1022027    _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
1022028    _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
1022029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1022030    data EMWS1.EndGrp6_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMRANK_LOOP;
1022031    set EMWS1.EndGrp6_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK_LOOP temp;
1022032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP6_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMRANK_LOOP has 60 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1022033    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1022034    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1022035    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1022036    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1022037    set EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST;
1022038    _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
1022039    _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
1022040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1022041    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
1022042    set EMWS1.EndGrp6_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST_LOOP temp;
1022043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP has 60 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1022044    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1022045    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1022046    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1022047    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1022048    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
1022049    _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
1022050    _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
1022051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1022052    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
1022053    set EMWS1.EndGrp6_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT_LOOP temp;
1022054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT_LOOP has 3 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1022055    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1022056    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1022057    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1022058    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1022059    set EMWS1.EndGrp6_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT;
1022060    _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
1022061    _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
1022062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1022063    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
1022064    set EMWS1.EndGrp6_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT_LOOP temp;
1022065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1022066    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1022067    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1022068    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1022069    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1022070    set EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION;
1022071    _LOOP_ =3;
MPRINT(EM_DIAGRAM):   _LOOP_ =3;
1022072    _WHERE_ ="^(cv_var =3)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =3)";
1022073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1022074    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
1022075    set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP temp;
1022076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP has 12 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
