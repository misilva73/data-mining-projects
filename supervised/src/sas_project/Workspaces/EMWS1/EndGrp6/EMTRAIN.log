MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:32 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:09:32 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2OMUEF1 "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2OMUEF1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:32 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:32 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
3750760    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3750761    set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
3750762    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3750763    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3750764    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3750765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3750766    data WORK.M2QXS5W7;
MPRINT(EM_DIAGRAM):    data WORK.M2QXS5W7;
3750767    set WORK.M2QXS5W7;
MPRINT(EM_DIAGRAM):   set WORK.M2QXS5W7;
3750768    where upcase(NAME) in(
3750769    "DEPVAR"
3750770    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3750771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M2QXS5W7.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M2QXS5W7 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3750772    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN 
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN 
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN 
EMWS1.Reg2_TRAIN EMWS1.Reg2_TRAIN EMWS1 Reg2_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg2_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3750801    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp6_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS 
ORDER);
3750802    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3750803    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3750803  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3750803  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3750804       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3750804  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3750804  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3750805    set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG2_DEPVAR_DM( where=(_TYPE_="TARGET"));
3750806    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3750807    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3750808    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3750809    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3750810    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3750811    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3750812    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3750813    end;
MPRINT(EM_DIAGRAM):   end;
3750814    output;
MPRINT(EM_DIAGRAM):   output;
3750815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP6_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3750816    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3750817    proc print data=WORK.EndGrp6_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp6_EVENT noobs label;
3750818    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3750819    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3750820    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3750821    run;

NOTE: There were 1 observations read from the data set WORK.ENDGRP6_EVENT.
NOTE: The PROCEDURE PRINT printed page 2450.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3750822    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
3750823    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg2_DepVar_DM noobs label;
3750824    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3750825    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
3750826    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3750826  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3750826  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3750827    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3750828    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3750829    run;

NOTE: There were 7 observations read from the data set EMWS1.REG2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2451.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3750830    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp6: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3751290    %let EMEXCEPTIONSTRING=;
3751291    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3751292    * POSTLOOP: EndGrp6;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp6;
3751293    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3751294    %let EM_ACTION = POSTLOOP;
3751295    %let syscc = 0;
3751296    %macro main;
3751297       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3751298    
3751299           filename temp catalog 'sashelp.emutil.endgp_train.source';
3751300           %include temp;
3751301           filename temp;
3751302    
3751303           %train;
3751304    
3751305       %end;
3751306       %else
3751307          %if %upcase(&EM_ACTION) = SCORE %then %do;
3751308    
3751309           filename temp catalog 'sashelp.emutil.endgp_score.source';
3751310           %include temp;
3751311           filename temp;
3751312    
3751313           %score;
3751314       %end;
3751315       %else
3751316       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3751317    
3751318           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3751319           %include temp;
3751320           filename temp;
3751321    
3751322           %postloop;
3751323    
3751324       %end;
3751325    
3751326       %doendm:
3751327    %mend main;
3751328    
3751329    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3751330   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3751332   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3751332  !+%then %do;
3751333   +       data &out / view=&out;
3751334   +          set &data
3751337   +          %if "&prescore" = "Y" %then %do;
3751338   +              (obs=1)
3751339   +          %end;
3751341   +          ;
3751343   +       %let fexist = %sysfunc(fexist(&scoreref));
3751344   +       %if &fexist %then %do;
3751345   +          %inc &scoreref;
3751346   +       %end;
3751348   +       %if "&prescore" eq "Y" %then %do;
3751349   +          drop I_: R_:;
3751350   +       %end;
3751352   +       run;
3751353   +   %end;
3751355   +%mend scoretables;
3751357   +%macro postboostbag(groupid=, type=);
3751358   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3751359   +   data _null_;
3751360   +      retain index 0;
3751361   +      set &infoDs;
3751362   +      call symput('targetname', strip(_target_));
3751363   +   run;
3751365   +   data _null_;
3751366   +      set &em_import_data_eminfo;
3751367   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3751368   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3751369   +      else call symput('MODELID', strip(data));
3751370   +   run;
3751372   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3751373   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3751375   +   filename loopflow "&em_user_loopflowcode";
3751376   +   filename looppub "&em_user_looppubcode";
3751378   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3751379   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3751381   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3751382   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3751384   +   filename loopflow;
3751385   +   filename looppub;
3751386   +   filename emflow;
3751387   +   filename empub;
3751389   +   %let EMGROUPASSMT = Y;
3751391   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3751391  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3751393   +   %em_getname(key=emoutfit, type=DATA);
3751394   +   %em_getname(key=emoutfit_loop, type=DATA);
3751396   +   data &em_user_emoutfit;
3751397   +      set &em_user_emoutfit_loop end=eof;
3751398   +      drop _LOOP_ _WHERE_;
3751399   +      if eof then output;
3751400   +   run;
3751402   +%mend postboostbag;
3751404   +%macro postgroup(groupid=, type=);
3751405   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3751406   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3751408   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3751409   +   %let _XValidation = 0;
3751411   +   data _null_;
3751412   +      retain index 0;
3751413   +      set &infoDs end=eof;
3751414   +      index + 1;
3751415   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3751415  !+ '"', '""'));
3751416   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3751417   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3751418   +         call symput('_XValidation', '1');
3751419   +   run;
3751421   +   %let grouptarget=;
3751422   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3751423   +   %if "&looptarget1" eq "" %then %do;
3751424   +      data _null_;
3751425   +         set &em_import_data_eminfo;
3751426   +         where key in('MODEL');
3751427   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3751427  !+'!!strip(target));
3751428   +      run;
3751429   +   %end;
3751431   +   %do j=1 %to &emloopnumber;
3751432   +       %let EnsembleIndex=0;
3751433   +       data _null_;
3751434   +          retain index 0 ensembleIndex 0;
3751435   +          set &em_user_path end=eof;
3751436   +          where LOOPID=&j;
3751437   +          if nodelabel = "&groupid" or index then do;
3751438   +             index + 1;
3751439   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3751440   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3751441   +             call symput('loopaccum'!!strip(put(index, best.)),
3751441  !+strip(accumulatedScoreCode));
3751442   +          end;
3751443   +          if component='Ensemble' then ensembleIndex = index;
3751444   +          if eof then do;
3751445   +             call symput('loopcodenum', strip(put(index, best.)));
3751446   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3751447   +          end;
3751448   +       run;
3751450   +       %do i = 1 %to &loopcodenum;
3751451   +           %let fsourceEntry =
3751451  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3751452   +           %let psourceEntry =
3751452  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3751454   +           %if (&&loopnode&i eq &em_nodeid ) or
3751455   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3751455  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3751457   +               data _null_;
3751458   +                  file emflow mod;
3751459   +                  put "&em_codebar;";
3751460   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3751461   +                  put "* User: &sysuserid;";
3751462   +                  put "* Date: &sysdate: &systime;";
3751463   +                  %if "&&loopwhere&j" ne "" %then %do;
3751464   +                      put "* Group: &&loopwhere&j;";
3751465   +                  %end;
3751466   +                  %if "&&looptarget&j" ne "" %then %do;
3751467   +                       put "* Target: &&looptarget&j;";
3751468   +                  %end;
3751469   +                  put "&em_codebar ;";
3751470   +               run;
3751471   +               data _null_;
3751472   +                   file empub mod;
3751473   +                   put "&em_codebar ;";
3751474   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3751475   +                   put "* User: &sysuserid;";
3751476   +                   put "* Date: &sysdate: &systime;";
3751477   +                   %if "&&loopwhere&j" ne "" %then %do;
3751478   +                       put "* Group: &&loopwhere&j;";
3751479   +                   %end;
3751480   +                   %if "&&looptarget&j" ne "" %then %do;
3751481   +                       put "* Target: &&looptarget&j;";
3751482   +                   %end;
3751483   +                   put "&em_codebar;";
3751484   +               run;
3751485   +           %end;
3751487   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3751488   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3751488  !+&i=&ensembleIndex) %then %do;
3751489   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3751489  !+ %do;
3751490   +                       filename y catalog "&psourceEntry";
3751491   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3751492   +                       filename y;
3751493   +                   %end;
3751494   +                   %else %do;
3751495   +                       filename x catalog "&fsourceEntry";
3751496   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3751497   +                       filename x;
3751498   +                   %end;
3751500   +                   filename y catalog "&psourceEntry";
3751501   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3751502   +                   filename y;
3751503   +               %end;
3751504   +           %end;
3751505   +           %else %do;
3751506   +              %if "&&loopwhere&j" ne "" %then %do;
3751507   +                  data _null_;
3751508   +                     file emflow mod;
3751509   +                     put 'end;';
3751510   +                  run;
3751511   +                  data _null_;
3751512   +                     file empub mod;
3751513   +                     put 'end;';
3751514   +                  run;
3751515   +               %end;
3751516   +           %end;
3751517   +       %end;
3751518   +   %end;
3751519   +   filename emflow;
3751520   +   filename empub;
3751522   +   /* Stratify Model Need to Recompute All Assessment Reports */
3751523   +   %if "&grouptarget" eq "" %then %do;
3751524   +       %let assessTarget=;
3751525   +       %do j=1 %to &emloopnumber;
3751526   +           %let targetname = &&looptarget&j;
3751527   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3751527  !+%do;
3751528   +               %let assesstarget = &assesstarget &targetname;
3751529   +               %let index = 1;
3751530   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3751530  !+%sysfunc(strip(&targetname)));
3751531   +                   %let index = %eval(&index + 1);
3751532   +               %end;
3751533   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3751533  !+,%str( ));
3751535   +               %if "&targetlevel" ne "INTERVAL" %then
3751536   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3751536  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3751537   +               %else
3751538   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3751538  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3751539   +           %end;
3751540   +       %end;
3751541   +   %end;
3751542   +   %else %do;
3751543   +       %do i=1 %to &em_num_target;
3751544   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3751545   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3751547   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3751548   +              %if "&targetlevel" ne "INTERVAL" %then
3751549   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3751549  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3751550   +              %else
3751551   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3751551  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3751552   +           %end;
3751553   +           %else %do;
3751554   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3751554  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3751555   +           %end;
3751556   +       %end;
3751557   +   %end;
3751558   +   %let EMGROUPASSMT = N;
3751559   +%mend postgroup;
3751561   +%macro posttarget(groupid=, type=);
3751562   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3751563   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3751565   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3751566   +   data _null_;
3751567   +      retain index 0;
3751568   +      set &infoDs end=eof;
3751569   +      index + 1;
3751570   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3751571   +   run;
3751573   +   %do j=1 %to &emloopnumber;
3751574   +       %let EnsembleIndex=0;
3751575   +       data _null_;
3751576   +          retain index 0 ensembleIndex 0;
3751577   +          set &em_user_path end=eof;
3751578   +          where LOOPID=&j;
3751579   +          if nodelabel = "&groupid" or index then do;
3751580   +             index + 1;
3751581   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3751582   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3751583   +             call symput('loopaccum'!!strip(put(index, best.)),
3751583  !+strip(accumulatedScoreCode));
3751584   +          end;
3751585   +          if component='Ensemble' then ensembleIndex = index;
3751586   +          if eof then do;
3751587   +             call symput('loopcodenum', strip(put(index, best.)));
3751588   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3751589   +          end;
3751590   +       run;
3751592   +       %do i = 1 %to &loopcodenum;
3751593   +           %let fsourceEntry =
3751593  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3751594   +           %let psourceEntry =
3751594  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3751596   +           %if (&&loopnode&i ne &em_nodeid ) and
3751597   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3751598   +               data _null_;
3751599   +                  file emflow mod;
3751600   +                  put "&em_codebar;";
3751601   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3751602   +                  put "* User: &sysuserid;";
3751603   +                  put "* Date: &sysdate: &systime;";
3751604   +                  put "* Target: &&looptarget&j;";
3751605   +                  put "&em_codebar ;";
3751606   +               run;
3751607   +               data _null_;
3751608   +                  file empub mod;
3751609   +                  put "&em_codebar ;";
3751610   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3751611   +                  put "* User: &sysuserid;";
3751612   +                  put "* Date: &sysdate: &systime;";
3751613   +                  put "* Target: &&looptarget&j;";
3751614   +                  put "&em_codebar;";
3751615   +               run;
3751617   +               filename x catalog "&fsourceEntry";
3751618   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3751619   +               filename x;
3751621   +               filename y catalog "&psourceEntry";
3751622   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3751623   +               filename y;
3751624   +           %end;
3751625   +       %end;
3751626   +   %end;
3751627   +   filename emflow;
3751628   +   filename empub;
3751630   +   %do j=1 %to &emloopnumber;
3751631   +       %let targetname = &&looptarget&j;
3751632   +       %let k = 1;
3751633   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3751633  !+%sysfunc(strip(&targetname)));
3751634   +           %let k = %eval(&k + 1);
3751635   +       %end;
3751636   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3751637   +       %if "&targetlevel" ne "INTERVAL" %then
3751638   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3751638  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3751639   +       %else
3751640   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3751640  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3751641   +       %let EMGROUPASSMT = N;
3751642   +   %end;
3751644   +%mend posttarget;
3751646   +%macro postloop;
3751648   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3751650   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3751650  !+%then %do;
3751651   +       %let emexceptionstring = nomodeltarget;
3751652   +       %goto doendpl;
3751653   +   %end;
3751655   +   %let targetName=;
3751656   +   %let endgrp_decmeta=;
3751658   +   data _null_;
3751659   +      set &em_import_data_eminfo;
3751660   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3751661   +      call symput('GROUPID',   strip(data));
3751662   +      call symput('LOOPTYPE', strip(key));
3751663   +   run;
3751665   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3751666   +   %include temp;
3751667   +   filename temp;
3751669   +   %em_getname(key=PATH, type=DATA);
3751671   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3751673   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3751675   +   %let gptrain=;
3751676   +   %let gpvalidate=;
3751677   +   %let gptest=;
3751679   +   data _null_;
3751680   +      set &groupImportDs;
3751681   +      select(upcase(port));
3751682   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3751683   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3751684   +          when('TEST')     call symput('gpTest',     strip(dataset));
3751685   +       otherwise;
3751686   +      end;
3751687   +   run;
3751688   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3751690   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3751690  !+%postboostbag(groupid=&groupid, type=&looptype);
3751691   +   %else
3751692   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3751692  !+type=&looptype);
3751693   +   %else
3751694   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3751694  !+type=&looptype);
3751696   +   %let deleteString = &em_nodeid._path;
3751698   +   proc sort data=&em_user_path nodupkey;
3751699   +      by nodelabel;
3751700   +   run;
3751701   +   %let loopnodenum=0;
3751702   +   data _null_;
3751703   +      retain index 0;
3751704   +      set &em_user_path end=eof;
3751705   +      if nodelabel = "&groupid" or index then do;
3751706   +         index + 1;
3751707   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3751708   +      end;
3751709   +      if eof then do;
3751710   +         call symput('loopnodenum', strip(put(index, best.)));
3751711   +      end;
3751712   +   run;
3751713   +   proc datasets lib=&em_lib nolist;
3751714   +      delete &deleteString;
3751715   +      delete
3751716   +      %do i = 1 %to &loopnodenum;
3751717   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3751718   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3751718  !+%do;
3751720   +              &loopcatalog
3751721   +          %end;
3751722   +          %if &i = &loopnodenum %then %do;
3751723   +              / mt=catalog;
3751724   +          %end;
3751725   +      %end;
3751726   +   run;
3751727   +   quit;
3751729   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3751731   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3751731  !+"BAGINFO")) %then %do;
3751733   +       %let targetType = ;
3751734   +       data _null_;
3751735   +          set &endgrp_decmeta;
3751736   +          where _TYPE_='TARGET';
3751737   +          call symput('TARGETTYPE', strip(level));
3751738   +       run;
3751740   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3751742   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3751742  !+prescore=Y);
3751744   +       %if &targetType ne 'INTERVAL' %then %do;
3751745   +           %makeClassificationVars(target=&target, data=&em_export_train,
3751745  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3751746   +       %end;
3751748   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3751750   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3751750  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3751752   +       filename empub;
3751754   +   %end;
3751756   +   %if "&gpTrain" ne "" %then
3751757   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3751758   +   %if "&gpValidate" ne "" %then
3751759   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3751759  !+out=&em_export_validate, scoreref=emflow);
3751760   +   %if "&gpTest" ne "" %then
3751761   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3751761  !+out=&em_export_test,     scoreref=emflow);
3751763   +   filename emflow;
3751765   +   %doendpl:
3751767   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Reg2_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3751768   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3751769   +   proc display c=sashelp.emcore.pathscorecode.scl;
3751770   +   run;
3751771   +%mend EM_GETTRAINPATH;
3751772   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp5_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 15 observations read from the data set EMWS1.GRP5_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp5_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)), 
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation', 
'1');
MPRINT(POSTGROUP):   run;

NOTE: There were 10 observations read from the data set EMWS1.GRP5_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Reg2_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!' 
'!!strip(target));
MPRINT(POSTGROUP):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6370,
      Last Modified=02 June 2018 17:09:34 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5627,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6588,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5845,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6594,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5851,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6811,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6068,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6848,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6105,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=7065,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6322,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12964,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11478,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13182,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11696,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13188,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11702,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13405,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11919,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13442,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11956,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13659,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=12173,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19558,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17329,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19776,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17547,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19782,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17553,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19999,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=17770,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=20036,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17807,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=20253,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=18024,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26150,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23178,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26368,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23396,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26374,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23402,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26591,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23619,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26628,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23656,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26845,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23873,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32744,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29029,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32962,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29247,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32968,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29253,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33185,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29470,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33222,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29507,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33439,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29724,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39338,
      Last Modified=02 June 2018 17:09:35 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34880,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39556,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35098,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39562,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35104,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39779,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35321,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39816,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35358,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=40033,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35575,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45932,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40731,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46150,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40949,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46156,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40955,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46373,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41172,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46410,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=41209,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46627,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41426,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52526,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46582,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52744,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46800,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52750,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46806,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52967,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47023,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53004,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47060,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53221,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47277,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59120,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52433,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59338,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52651,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)), 
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59344,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp5: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52657,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59562,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp5_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52875,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59601,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg2: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52914,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg2_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59819,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg2_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53132,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=65724,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp6: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58294,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMFLOW is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=65943,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;

NOTE: The file EMPUB is:
      
      Filename=C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58513,
      Last Modified=02 June 2018 17:09:36 o'clock,
      Create Time=02 June 2018 17:09:34 o'clock

NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;

NOTE: There were 7 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp6_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;

NOTE: There were 120 observations read from the data set EMWS1.ENDGRP6_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP6_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp6_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp5" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;

NOTE: There were 12 observations read from the data set EMWS1.ENDGRP6_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp6_path;
MPRINT(POSTLOOP):   delete Grp5_LOOP Reg2_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;

NOTE: Deleting EMWS1.ENDGRP6_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP5_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.REG2_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp6_TRAIN / view=EMWS1.EndGrp6_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMFLOWSCORE.sas.
3751773   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3751774   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3751775   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3751776   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3751777   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3751778   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3751779   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3751780   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3751781   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3751782   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3751783   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3751784   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3751785   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3751786   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3751787   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3751788   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3751789   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3751790   +
3751791   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3751792   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3751793   +
3751794   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3751795   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3751796   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3751797   +array REG2_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_1DRF [2] $12 _temporary_ ('1' '0' );
3751798   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3751799   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3751800   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3751801   +ARRAY REG2_1DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_1DRU[2] _TEMPORARY_ (1 0);
3751802   +
3751803   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3751804   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3751805   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3751806   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3751807   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3751808   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3751809   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3751810   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3751811   +end;
MPRINT(SCORETABLES):   end;
3751812   +else do;
MPRINT(SCORETABLES):   else do;
3751813   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3751814   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3751815   +   end;
MPRINT(SCORETABLES):   end;
3751816   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3751817   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3751818   +   end;
MPRINT(SCORETABLES):   end;
3751819   +   else do;
MPRINT(SCORETABLES):   else do;
3751820   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3751821   +   end;
MPRINT(SCORETABLES):   end;
3751822   +end;
MPRINT(SCORETABLES):   end;
3751823   +
3751824   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3751825   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3751826   +
3751827   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3751828   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3751829   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751830   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751831   +end;
MPRINT(SCORETABLES):   end;
3751832   +
3751833   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3751834   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3751835   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751836   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751837   +end;
MPRINT(SCORETABLES):   end;
3751838   +
3751839   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3751840   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3751841   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751842   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751843   +end;
MPRINT(SCORETABLES):   end;
3751844   +
3751845   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3751846   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3751847   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751848   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751849   +end;
MPRINT(SCORETABLES):   end;
3751850   +
3751851   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3751852   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3751853   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751854   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751855   +end;
MPRINT(SCORETABLES):   end;
3751856   +
3751857   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3751858   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3751859   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751860   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751861   +end;
MPRINT(SCORETABLES):   end;
3751862   +
3751863   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3751864   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3751865   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751866   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751867   +end;
MPRINT(SCORETABLES):   end;
3751868   +
3751869   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3751870   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3751871   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751872   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751873   +end;
MPRINT(SCORETABLES):   end;
3751874   +
3751875   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3751876   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3751877   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3751878   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3751879   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3751880   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3751881   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3751882   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3751883   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3751884   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3751885   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3751886   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3751887   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3751888   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751889   +end;
MPRINT(SCORETABLES):   end;
3751890   +else do;
MPRINT(SCORETABLES):   else do;
3751891   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3751892   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3751893   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3751894   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3751895   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3751896   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3751897   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3751898   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3751899   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3751900   +         end;
MPRINT(SCORETABLES):   end;
3751901   +         else do;
MPRINT(SCORETABLES):   else do;
3751902   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3751903   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3751904   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3751905   +            end;
MPRINT(SCORETABLES):   end;
3751906   +         end;
MPRINT(SCORETABLES):   end;
3751907   +      end;
MPRINT(SCORETABLES):   end;
3751908   +      else do;
MPRINT(SCORETABLES):   else do;
3751909   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3751910   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3751911   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3751912   +         end;
MPRINT(SCORETABLES):   end;
3751913   +      end;
MPRINT(SCORETABLES):   end;
3751914   +   end;
MPRINT(SCORETABLES):   end;
3751915   +   else do;
MPRINT(SCORETABLES):   else do;
3751916   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3751917   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3751918   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3751919   +      end;
MPRINT(SCORETABLES):   end;
3751920   +      else do;
MPRINT(SCORETABLES):   else do;
3751921   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3751922   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3751923   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3751924   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3751925   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3751926   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3751927   +         end;
MPRINT(SCORETABLES):   end;
3751928   +      end;
MPRINT(SCORETABLES):   end;
3751929   +   end;
MPRINT(SCORETABLES):   end;
3751930   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3751931   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3751932   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3751933   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3751934   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3751935   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3751936   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3751937   +   end;
MPRINT(SCORETABLES):   end;
3751938   +end;
MPRINT(SCORETABLES):   end;
3751939   +
3751940   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3751941   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3751942   +   _P0 = 0.1351107094;
MPRINT(SCORETABLES):   _P0 = 0.1351107094;
3751943   +   _P1 = 0.8648892906;
MPRINT(SCORETABLES):   _P1 = 0.8648892906;
3751944   +   goto REG2_1DR1;
MPRINT(SCORETABLES):   goto REG2_1DR1;
3751945   +end;
MPRINT(SCORETABLES):   end;
3751946   +
3751947   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3751948   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3751949   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3751950   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3751951   +
3751952   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3751953   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3751954   +_LP0 = _LP0 + (    1.08382118220002) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.08382118220002) * _TEMP * _1_0;
3751955   +_LP0 = _LP0 + (   -1.07679360881037) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.07679360881037) * _TEMP * _1_1;
3751956   +_LP0 = _LP0 + (    0.86989492278179) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.86989492278179) * _TEMP * _1_2;
3751957   +_LP0 = _LP0 + (   -1.56780564811476) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.56780564811476) * _TEMP * _1_3;
3751958   +
3751959   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3751960   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3751961   +_LP0 = _LP0 + (    15.4574457077022 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.4574457077022 * _TEMP);
3751962   +
3751963   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3751964   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3751965   +_LP0 = _LP0 + (    23.9633875319068 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.9633875319068 * _TEMP);
3751966   +
3751967   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3751968   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3751969   +_LP0 = _LP0 + (    22.2658582076307 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.2658582076307 * _TEMP);
3751970   +
3751971   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3751972   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3751973   +_LP0 = _LP0 + (    10.8598434064383 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 10.8598434064383 * _TEMP);
3751974   +
3751975   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3751976   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3751977   +_LP0 = _LP0 + (    2.29122897656302 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.29122897656302 * _TEMP);
3751978   +
3751979   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3751980   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3751981   +_LP0 = _LP0 + (    -12.930251414997 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.930251414997 * _TEMP);
3751982   +
3751983   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3751984   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3751985   +_LP0 = _LP0 + (    1.87640901365449 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.87640901365449 * _TEMP);
3751986   +
3751987   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3751988   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3751989   +_LP0 = _LP0 + (    14.0850034555722 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.0850034555722 * _TEMP);
3751990   +
3751991   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3751992   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3751993   +_TEMP =    -20.5294729936453 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.5294729936453 + _LP0;
3751994   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3751995   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3751996   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3751997   +end;
MPRINT(SCORETABLES):   end;
3751998   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3751999   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3752000   +
3752001   +REG2_1DR1:
3752002   +
3752003   +*** Residuals;
MPRINT(SCORETABLES):   REG2_1DR1: *** Residuals;
3752004   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3752005   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3752006   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3752007   +end;
MPRINT(SCORETABLES):   end;
3752008   +else do;
MPRINT(SCORETABLES):   else do;
3752009   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3752010   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3752011   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3752012   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3752013   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3752014   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3752015   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3752016   +   end;
MPRINT(SCORETABLES):   end;
3752017   +end;
MPRINT(SCORETABLES):   end;
3752018   +
3752019   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3752020   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3752021   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3752022   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3752023   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3752024   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3752025   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3752026   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3752027   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3752028   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3752029   +end;
MPRINT(SCORETABLES):   end;
3752030   +I_DepVar = REG2_1DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_1DRF[_IY];
3752031   +U_DepVar = REG2_1DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_1DRU[_IY];
3752032   +
3752033   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752034   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3752035   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752036   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752037   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3752038   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752039   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752040   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3752041   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752042   +end;
MPRINT(SCORETABLES):   end;
3752043   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752044   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3752045   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752046   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752047   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3752048   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752049   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3752050   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3752051   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752052   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3752053   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752054   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752055   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3752056   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752057   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752058   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3752059   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752060   +
3752061   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3752062   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3752063   +
3752064   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3752065   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3752066   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3752067   +array REG2_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_2DRF [2] $12 _temporary_ ('1' '0' );
3752068   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3752069   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3752070   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3752071   +ARRAY REG2_2DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_2DRU[2] _TEMPORARY_ (1 0);
3752072   +
3752073   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3752074   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3752075   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3752076   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3752077   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3752078   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752079   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3752080   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752081   +end;
MPRINT(SCORETABLES):   end;
3752082   +else do;
MPRINT(SCORETABLES):   else do;
3752083   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3752084   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3752085   +   end;
MPRINT(SCORETABLES):   end;
3752086   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3752087   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3752088   +   end;
MPRINT(SCORETABLES):   end;
3752089   +   else do;
MPRINT(SCORETABLES):   else do;
3752090   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752091   +   end;
MPRINT(SCORETABLES):   end;
3752092   +end;
MPRINT(SCORETABLES):   end;
3752093   +
3752094   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3752095   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3752096   +
3752097   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3752098   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3752099   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752100   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752101   +end;
MPRINT(SCORETABLES):   end;
3752102   +
3752103   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3752104   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3752105   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752106   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752107   +end;
MPRINT(SCORETABLES):   end;
3752108   +
3752109   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3752110   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3752111   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752112   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752113   +end;
MPRINT(SCORETABLES):   end;
3752114   +
3752115   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3752116   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3752117   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752118   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752119   +end;
MPRINT(SCORETABLES):   end;
3752120   +
3752121   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3752122   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3752123   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752124   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752125   +end;
MPRINT(SCORETABLES):   end;
3752126   +
3752127   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3752128   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3752129   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752130   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752131   +end;
MPRINT(SCORETABLES):   end;
3752132   +
3752133   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3752134   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3752135   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752136   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752137   +end;
MPRINT(SCORETABLES):   end;
3752138   +
3752139   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3752140   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3752141   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752142   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752143   +end;
MPRINT(SCORETABLES):   end;
3752144   +
3752145   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3752146   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3752147   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3752148   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3752149   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3752150   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3752151   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3752152   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3752153   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752154   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752155   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752156   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752157   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752158   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752159   +end;
MPRINT(SCORETABLES):   end;
3752160   +else do;
MPRINT(SCORETABLES):   else do;
3752161   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3752162   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3752163   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752164   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3752165   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3752166   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3752167   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3752168   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3752169   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752170   +         end;
MPRINT(SCORETABLES):   end;
3752171   +         else do;
MPRINT(SCORETABLES):   else do;
3752172   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3752173   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3752174   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752175   +            end;
MPRINT(SCORETABLES):   end;
3752176   +         end;
MPRINT(SCORETABLES):   end;
3752177   +      end;
MPRINT(SCORETABLES):   end;
3752178   +      else do;
MPRINT(SCORETABLES):   else do;
3752179   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3752180   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3752181   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752182   +         end;
MPRINT(SCORETABLES):   end;
3752183   +      end;
MPRINT(SCORETABLES):   end;
3752184   +   end;
MPRINT(SCORETABLES):   end;
3752185   +   else do;
MPRINT(SCORETABLES):   else do;
3752186   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3752187   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3752188   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752189   +      end;
MPRINT(SCORETABLES):   end;
3752190   +      else do;
MPRINT(SCORETABLES):   else do;
3752191   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3752192   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3752193   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3752194   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3752195   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3752196   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752197   +         end;
MPRINT(SCORETABLES):   end;
3752198   +      end;
MPRINT(SCORETABLES):   end;
3752199   +   end;
MPRINT(SCORETABLES):   end;
3752200   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3752201   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752202   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752203   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752204   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752205   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3752206   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752207   +   end;
MPRINT(SCORETABLES):   end;
3752208   +end;
MPRINT(SCORETABLES):   end;
3752209   +
3752210   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3752211   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3752212   +   _P0 = 0.1373175182;
MPRINT(SCORETABLES):   _P0 = 0.1373175182;
3752213   +   _P1 = 0.8626824818;
MPRINT(SCORETABLES):   _P1 = 0.8626824818;
3752214   +   goto REG2_2DR1;
MPRINT(SCORETABLES):   goto REG2_2DR1;
3752215   +end;
MPRINT(SCORETABLES):   end;
3752216   +
3752217   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3752218   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3752219   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3752220   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3752221   +
3752222   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3752223   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3752224   +_LP0 = _LP0 + (    1.03973137508584) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.03973137508584) * _TEMP * _1_0;
3752225   +_LP0 = _LP0 + (   -1.32757800484306) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.32757800484306) * _TEMP * _1_1;
3752226   +_LP0 = _LP0 + (    0.84532309543369) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.84532309543369) * _TEMP * _1_2;
3752227   +_LP0 = _LP0 + (   -1.76151780200022) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.76151780200022) * _TEMP * _1_3;
3752228   +
3752229   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3752230   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3752231   +_LP0 = _LP0 + (    15.8869738171815 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.8869738171815 * _TEMP);
3752232   +
3752233   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3752234   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3752235   +_LP0 = _LP0 + (    25.2290411792759 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 25.2290411792759 * _TEMP);
3752236   +
3752237   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3752238   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3752239   +_LP0 = _LP0 + (    23.1847224924413 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.1847224924413 * _TEMP);
3752240   +
3752241   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3752242   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3752243   +_LP0 = _LP0 + (     12.239361335779 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 12.239361335779 * _TEMP);
3752244   +
3752245   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3752246   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3752247   +_LP0 = _LP0 + (    2.58404392257037 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.58404392257037 * _TEMP);
3752248   +
3752249   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3752250   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3752251   +_LP0 = _LP0 + (    -13.375752894268 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.375752894268 * _TEMP);
3752252   +
The SAS System

3752253   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3752254   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3752255   +_LP0 = _LP0 + (    2.23878964012696 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.23878964012696 * _TEMP);
3752256   +
3752257   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3752258   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3752259   +_LP0 = _LP0 + (    14.5084743777562 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.5084743777562 * _TEMP);
3752260   +
3752261   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3752262   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3752263   +_TEMP =    -21.6827476452605 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -21.6827476452605 + _LP0;
3752264   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3752265   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3752266   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3752267   +end;
MPRINT(SCORETABLES):   end;
3752268   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3752269   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3752270   +
3752271   +REG2_2DR1:
3752272   +
3752273   +*** Residuals;
MPRINT(SCORETABLES):   REG2_2DR1: *** Residuals;
3752274   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3752275   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3752276   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3752277   +end;
MPRINT(SCORETABLES):   end;
3752278   +else do;
MPRINT(SCORETABLES):   else do;
3752279   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3752280   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3752281   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3752282   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3752283   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3752284   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3752285   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3752286   +   end;
MPRINT(SCORETABLES):   end;
3752287   +end;
MPRINT(SCORETABLES):   end;
3752288   +
3752289   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3752290   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3752291   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3752292   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3752293   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3752294   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3752295   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3752296   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3752297   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3752298   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3752299   +end;
MPRINT(SCORETABLES):   end;
3752300   +I_DepVar = REG2_2DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_2DRF[_IY];
3752301   +U_DepVar = REG2_2DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_2DRU[_IY];
3752302   +
3752303   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752304   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3752305   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752306   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752307   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3752308   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752309   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752310   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3752311   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752312   +end;
MPRINT(SCORETABLES):   end;
3752313   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752314   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3752315   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752316   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752317   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3752318   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752319   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3752320   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3752321   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752322   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3752323   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752324   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752325   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3752326   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752327   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752328   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3752329   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752330   +
3752331   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3752332   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3752333   +
3752334   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3752335   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3752336   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3752337   +array REG2_3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_3DRF [2] $12 _temporary_ ('1' '0' );
3752338   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3752339   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3752340   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3752341   +ARRAY REG2_3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_3DRU[2] _TEMPORARY_ (1 0);
3752342   +
3752343   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3752344   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3752345   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3752346   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3752347   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3752348   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752349   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3752350   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752351   +end;
MPRINT(SCORETABLES):   end;
3752352   +else do;
MPRINT(SCORETABLES):   else do;
3752353   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3752354   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3752355   +   end;
MPRINT(SCORETABLES):   end;
3752356   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3752357   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3752358   +   end;
MPRINT(SCORETABLES):   end;
3752359   +   else do;
MPRINT(SCORETABLES):   else do;
3752360   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752361   +   end;
MPRINT(SCORETABLES):   end;
3752362   +end;
MPRINT(SCORETABLES):   end;
3752363   +
3752364   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3752365   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3752366   +
3752367   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3752368   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3752369   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752370   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752371   +end;
MPRINT(SCORETABLES):   end;
3752372   +
3752373   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3752374   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3752375   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752376   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752377   +end;
MPRINT(SCORETABLES):   end;
3752378   +
3752379   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3752380   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3752381   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752382   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752383   +end;
MPRINT(SCORETABLES):   end;
3752384   +
3752385   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3752386   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3752387   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752388   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752389   +end;
MPRINT(SCORETABLES):   end;
3752390   +
3752391   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3752392   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3752393   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752394   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752395   +end;
MPRINT(SCORETABLES):   end;
3752396   +
3752397   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3752398   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3752399   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752400   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752401   +end;
MPRINT(SCORETABLES):   end;
3752402   +
3752403   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3752404   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3752405   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752406   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752407   +end;
MPRINT(SCORETABLES):   end;
3752408   +
3752409   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3752410   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3752411   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752412   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752413   +end;
MPRINT(SCORETABLES):   end;
3752414   +
3752415   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3752416   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3752417   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3752418   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3752419   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3752420   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3752421   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3752422   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3752423   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752424   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752425   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752426   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752427   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752428   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752429   +end;
MPRINT(SCORETABLES):   end;
3752430   +else do;
MPRINT(SCORETABLES):   else do;
3752431   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3752432   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3752433   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752434   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3752435   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3752436   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3752437   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3752438   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3752439   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752440   +         end;
MPRINT(SCORETABLES):   end;
3752441   +         else do;
MPRINT(SCORETABLES):   else do;
3752442   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3752443   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3752444   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752445   +            end;
MPRINT(SCORETABLES):   end;
3752446   +         end;
MPRINT(SCORETABLES):   end;
3752447   +      end;
MPRINT(SCORETABLES):   end;
3752448   +      else do;
MPRINT(SCORETABLES):   else do;
3752449   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3752450   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3752451   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752452   +         end;
MPRINT(SCORETABLES):   end;
3752453   +      end;
MPRINT(SCORETABLES):   end;
3752454   +   end;
MPRINT(SCORETABLES):   end;
3752455   +   else do;
MPRINT(SCORETABLES):   else do;
3752456   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3752457   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3752458   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752459   +      end;
MPRINT(SCORETABLES):   end;
3752460   +      else do;
MPRINT(SCORETABLES):   else do;
3752461   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3752462   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3752463   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3752464   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3752465   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3752466   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752467   +         end;
MPRINT(SCORETABLES):   end;
3752468   +      end;
MPRINT(SCORETABLES):   end;
3752469   +   end;
MPRINT(SCORETABLES):   end;
3752470   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3752471   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752472   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752473   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752474   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752475   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3752476   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752477   +   end;
MPRINT(SCORETABLES):   end;
3752478   +end;
MPRINT(SCORETABLES):   end;
3752479   +
3752480   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3752481   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3752482   +   _P0 = 0.1372282609;
MPRINT(SCORETABLES):   _P0 = 0.1372282609;
3752483   +   _P1 = 0.8627717391;
MPRINT(SCORETABLES):   _P1 = 0.8627717391;
3752484   +   goto REG2_3DR1;
MPRINT(SCORETABLES):   goto REG2_3DR1;
3752485   +end;
MPRINT(SCORETABLES):   end;
3752486   +
3752487   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3752488   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3752489   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3752490   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3752491   +
3752492   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3752493   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3752494   +_LP0 = _LP0 + (    0.98775893830545) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.98775893830545) * _TEMP * _1_0;
3752495   +_LP0 = _LP0 + (   -1.08817893873314) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.08817893873314) * _TEMP * _1_1;
3752496   +_LP0 = _LP0 + (    0.95743169945998) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.95743169945998) * _TEMP * _1_2;
3752497   +_LP0 = _LP0 + (   -1.48962607998302) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.48962607998302) * _TEMP * _1_3;
3752498   +
3752499   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3752500   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3752501   +_LP0 = _LP0 + (    14.9340936446007 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.9340936446007 * _TEMP);
3752502   +
3752503   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3752504   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3752505   +_LP0 = _LP0 + (    24.5528405832213 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.5528405832213 * _TEMP);
3752506   +
3752507   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3752508   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3752509   +_LP0 = _LP0 + (    22.4906349021422 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.4906349021422 * _TEMP);
3752510   +
3752511   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3752512   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3752513   +_LP0 = _LP0 + (    11.8148127449888 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.8148127449888 * _TEMP);
3752514   +
3752515   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3752516   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3752517   +_LP0 = _LP0 + (    2.26071146576305 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.26071146576305 * _TEMP);
3752518   +
3752519   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3752520   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3752521   +_LP0 = _LP0 + (   -12.9503148585842 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.9503148585842 * _TEMP);
3752522   +
3752523   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3752524   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3752525   +_LP0 = _LP0 + (    2.33589855642805 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.33589855642805 * _TEMP);
3752526   +
3752527   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3752528   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3752529   +_LP0 = _LP0 + (    14.3105339466722 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.3105339466722 * _TEMP);
3752530   +
3752531   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3752532   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3752533   +_TEMP =    -20.9668928232981 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.9668928232981 + _LP0;
3752534   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3752535   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3752536   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3752537   +end;
MPRINT(SCORETABLES):   end;
3752538   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3752539   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3752540   +
3752541   +REG2_3DR1:
3752542   +
3752543   +*** Residuals;
MPRINT(SCORETABLES):   REG2_3DR1: *** Residuals;
3752544   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3752545   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3752546   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3752547   +end;
MPRINT(SCORETABLES):   end;
3752548   +else do;
MPRINT(SCORETABLES):   else do;
3752549   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3752550   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3752551   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3752552   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3752553   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3752554   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3752555   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3752556   +   end;
MPRINT(SCORETABLES):   end;
3752557   +end;
MPRINT(SCORETABLES):   end;
3752558   +
3752559   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3752560   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3752561   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3752562   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3752563   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3752564   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3752565   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3752566   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3752567   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3752568   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3752569   +end;
MPRINT(SCORETABLES):   end;
3752570   +I_DepVar = REG2_3DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_3DRF[_IY];
3752571   +U_DepVar = REG2_3DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_3DRU[_IY];
3752572   +
3752573   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752574   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3752575   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752576   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752577   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3752578   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752579   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752580   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3752581   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752582   +end;
MPRINT(SCORETABLES):   end;
3752583   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752584   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3752585   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752586   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752587   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3752588   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752589   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3752590   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3752591   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752592   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3752593   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752594   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752595   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3752596   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752597   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752598   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3752599   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752600   +
3752601   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3752602   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3752603   +
3752604   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3752605   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3752606   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3752607   +array REG2_4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_4DRF [2] $12 _temporary_ ('1' '0' );
3752608   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3752609   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3752610   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3752611   +ARRAY REG2_4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_4DRU[2] _TEMPORARY_ (1 0);
3752612   +
3752613   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3752614   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3752615   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3752616   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3752617   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3752618   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752619   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3752620   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752621   +end;
MPRINT(SCORETABLES):   end;
3752622   +else do;
MPRINT(SCORETABLES):   else do;
3752623   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3752624   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3752625   +   end;
MPRINT(SCORETABLES):   end;
3752626   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3752627   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3752628   +   end;
MPRINT(SCORETABLES):   end;
3752629   +   else do;
MPRINT(SCORETABLES):   else do;
3752630   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752631   +   end;
MPRINT(SCORETABLES):   end;
3752632   +end;
MPRINT(SCORETABLES):   end;
3752633   +
3752634   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3752635   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3752636   +
3752637   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3752638   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3752639   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752640   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752641   +end;
MPRINT(SCORETABLES):   end;
3752642   +
3752643   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3752644   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3752645   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752646   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752647   +end;
MPRINT(SCORETABLES):   end;
3752648   +
3752649   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3752650   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3752651   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752652   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752653   +end;
MPRINT(SCORETABLES):   end;
3752654   +
3752655   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3752656   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3752657   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752658   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752659   +end;
MPRINT(SCORETABLES):   end;
3752660   +
3752661   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3752662   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3752663   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752664   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752665   +end;
MPRINT(SCORETABLES):   end;
3752666   +
3752667   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3752668   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3752669   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752670   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752671   +end;
MPRINT(SCORETABLES):   end;
3752672   +
3752673   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3752674   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3752675   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752676   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752677   +end;
MPRINT(SCORETABLES):   end;
3752678   +
3752679   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3752680   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3752681   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752682   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752683   +end;
MPRINT(SCORETABLES):   end;
3752684   +
3752685   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3752686   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3752687   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3752688   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3752689   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3752690   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3752691   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3752692   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3752693   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752694   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752695   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752696   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752697   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752698   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752699   +end;
MPRINT(SCORETABLES):   end;
3752700   +else do;
MPRINT(SCORETABLES):   else do;
3752701   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3752702   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3752703   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752704   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3752705   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3752706   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3752707   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3752708   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3752709   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752710   +         end;
MPRINT(SCORETABLES):   end;
3752711   +         else do;
MPRINT(SCORETABLES):   else do;
3752712   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3752713   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3752714   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752715   +            end;
MPRINT(SCORETABLES):   end;
3752716   +         end;
MPRINT(SCORETABLES):   end;
3752717   +      end;
MPRINT(SCORETABLES):   end;
3752718   +      else do;
MPRINT(SCORETABLES):   else do;
3752719   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3752720   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3752721   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752722   +         end;
MPRINT(SCORETABLES):   end;
3752723   +      end;
MPRINT(SCORETABLES):   end;
3752724   +   end;
MPRINT(SCORETABLES):   end;
3752725   +   else do;
MPRINT(SCORETABLES):   else do;
3752726   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3752727   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3752728   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752729   +      end;
MPRINT(SCORETABLES):   end;
3752730   +      else do;
MPRINT(SCORETABLES):   else do;
3752731   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3752732   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3752733   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3752734   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3752735   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3752736   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752737   +         end;
MPRINT(SCORETABLES):   end;
3752738   +      end;
MPRINT(SCORETABLES):   end;
3752739   +   end;
MPRINT(SCORETABLES):   end;
3752740   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3752741   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752742   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752743   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752744   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752745   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3752746   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752747   +   end;
MPRINT(SCORETABLES):   end;
3752748   +end;
MPRINT(SCORETABLES):   end;
3752749   +
3752750   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3752751   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3752752   +   _P0 = 0.138901498;
MPRINT(SCORETABLES):   _P0 = 0.138901498;
3752753   +   _P1 = 0.861098502;
MPRINT(SCORETABLES):   _P1 = 0.861098502;
3752754   +   goto REG2_4DR1;
MPRINT(SCORETABLES):   goto REG2_4DR1;
3752755   +end;
MPRINT(SCORETABLES):   end;
3752756   +
3752757   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3752758   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3752759   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3752760   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3752761   +
3752762   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3752763   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3752764   +_LP0 = _LP0 + (    0.95486531256982) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.95486531256982) * _TEMP * _1_0;
3752765   +_LP0 = _LP0 + (    -1.2007865927887) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.2007865927887) * _TEMP * _1_1;
3752766   +_LP0 = _LP0 + (    0.91841305432015) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91841305432015) * _TEMP * _1_2;
3752767   +_LP0 = _LP0 + (    -1.5073371389989) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.5073371389989) * _TEMP * _1_3;
3752768   +
3752769   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3752770   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3752771   +_LP0 = _LP0 + (    15.2176220888721 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.2176220888721 * _TEMP);
3752772   +
3752773   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3752774   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3752775   +_LP0 = _LP0 + (    24.6171105925537 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.6171105925537 * _TEMP);
3752776   +
3752777   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3752778   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3752779   +_LP0 = _LP0 + (    22.8827101667994 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.8827101667994 * _TEMP);
3752780   +
3752781   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3752782   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3752783   +_LP0 = _LP0 + (    10.8565124387467 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 10.8565124387467 * _TEMP);
3752784   +
3752785   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3752786   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3752787   +_LP0 = _LP0 + (     2.2808436248344 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.2808436248344 * _TEMP);
3752788   +
3752789   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3752790   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3752791   +_LP0 = _LP0 + (   -13.1056926957458 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.1056926957458 * _TEMP);
3752792   +
3752793   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3752794   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3752795   +_LP0 = _LP0 + (    1.98856515416006 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.98856515416006 * _TEMP);
3752796   +
3752797   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3752798   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3752799   +_LP0 = _LP0 + (     14.337460909291 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.337460909291 * _TEMP);
3752800   +
3752801   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3752802   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3752803   +_TEMP =    -20.6090756542618 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.6090756542618 + _LP0;
3752804   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3752805   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3752806   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3752807   +end;
MPRINT(SCORETABLES):   end;
3752808   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3752809   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3752810   +
3752811   +REG2_4DR1:
3752812   +
3752813   +*** Residuals;
MPRINT(SCORETABLES):   REG2_4DR1: *** Residuals;
3752814   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3752815   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3752816   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3752817   +end;
MPRINT(SCORETABLES):   end;
3752818   +else do;
MPRINT(SCORETABLES):   else do;
3752819   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3752820   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3752821   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3752822   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3752823   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3752824   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3752825   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3752826   +   end;
MPRINT(SCORETABLES):   end;
3752827   +end;
MPRINT(SCORETABLES):   end;
3752828   +
3752829   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3752830   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3752831   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3752832   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3752833   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3752834   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3752835   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3752836   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3752837   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3752838   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3752839   +end;
MPRINT(SCORETABLES):   end;
3752840   +I_DepVar = REG2_4DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_4DRF[_IY];
3752841   +U_DepVar = REG2_4DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_4DRU[_IY];
3752842   +
3752843   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752844   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3752845   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752846   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752847   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3752848   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752849   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752850   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3752851   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752852   +end;
MPRINT(SCORETABLES):   end;
3752853   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752854   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3752855   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752856   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752857   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3752858   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752859   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3752860   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3752861   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3752862   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3752863   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3752864   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3752865   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3752866   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3752867   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752868   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3752869   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3752870   +
3752871   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3752872   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3752873   +
3752874   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3752875   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3752876   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3752877   +array REG2_5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_5DRF [2] $12 _temporary_ ('1' '0' );
3752878   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3752879   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3752880   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3752881   +ARRAY REG2_5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_5DRU[2] _TEMPORARY_ (1 0);
3752882   +
3752883   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3752884   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3752885   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3752886   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3752887   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3752888   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752889   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3752890   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752891   +end;
MPRINT(SCORETABLES):   end;
3752892   +else do;
MPRINT(SCORETABLES):   else do;
3752893   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3752894   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3752895   +   end;
MPRINT(SCORETABLES):   end;
3752896   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3752897   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3752898   +   end;
MPRINT(SCORETABLES):   end;
3752899   +   else do;
MPRINT(SCORETABLES):   else do;
3752900   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3752901   +   end;
MPRINT(SCORETABLES):   end;
3752902   +end;
MPRINT(SCORETABLES):   end;
3752903   +
3752904   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3752905   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3752906   +
3752907   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3752908   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3752909   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752910   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752911   +end;
MPRINT(SCORETABLES):   end;
3752912   +
3752913   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3752914   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3752915   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752916   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752917   +end;
MPRINT(SCORETABLES):   end;
3752918   +
3752919   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3752920   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3752921   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752922   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752923   +end;
MPRINT(SCORETABLES):   end;
3752924   +
3752925   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3752926   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3752927   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752928   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752929   +end;
MPRINT(SCORETABLES):   end;
3752930   +
3752931   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3752932   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3752933   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752934   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752935   +end;
MPRINT(SCORETABLES):   end;
3752936   +
3752937   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3752938   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3752939   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752940   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752941   +end;
MPRINT(SCORETABLES):   end;
3752942   +
3752943   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3752944   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3752945   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752946   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752947   +end;
MPRINT(SCORETABLES):   end;
3752948   +
3752949   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3752950   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3752951   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752952   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752953   +end;
MPRINT(SCORETABLES):   end;
3752954   +
3752955   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3752956   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3752957   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3752958   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3752959   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3752960   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3752961   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3752962   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3752963   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3752964   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3752965   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3752966   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3752967   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3752968   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3752969   +end;
MPRINT(SCORETABLES):   end;
3752970   +else do;
MPRINT(SCORETABLES):   else do;
3752971   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3752972   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3752973   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3752974   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3752975   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3752976   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3752977   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3752978   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3752979   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752980   +         end;
MPRINT(SCORETABLES):   end;
3752981   +         else do;
MPRINT(SCORETABLES):   else do;
3752982   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3752983   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3752984   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752985   +            end;
MPRINT(SCORETABLES):   end;
3752986   +         end;
MPRINT(SCORETABLES):   end;
3752987   +      end;
MPRINT(SCORETABLES):   end;
3752988   +      else do;
MPRINT(SCORETABLES):   else do;
3752989   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3752990   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3752991   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752992   +         end;
MPRINT(SCORETABLES):   end;
3752993   +      end;
MPRINT(SCORETABLES):   end;
3752994   +   end;
MPRINT(SCORETABLES):   end;
3752995   +   else do;
MPRINT(SCORETABLES):   else do;
3752996   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3752997   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3752998   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3752999   +      end;
MPRINT(SCORETABLES):   end;
3753000   +      else do;
MPRINT(SCORETABLES):   else do;
3753001   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3753002   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3753003   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3753004   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3753005   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3753006   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753007   +         end;
MPRINT(SCORETABLES):   end;
3753008   +      end;
MPRINT(SCORETABLES):   end;
3753009   +   end;
MPRINT(SCORETABLES):   end;
3753010   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3753011   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753012   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753013   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753014   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753015   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3753016   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753017   +   end;
MPRINT(SCORETABLES):   end;
3753018   +end;
MPRINT(SCORETABLES):   end;
3753019   +
3753020   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3753021   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3753022   +   _P0 = 0.1349134002;
MPRINT(SCORETABLES):   _P0 = 0.1349134002;
3753023   +   _P1 = 0.8650865998;
MPRINT(SCORETABLES):   _P1 = 0.8650865998;
3753024   +   goto REG2_5DR1;
MPRINT(SCORETABLES):   goto REG2_5DR1;
3753025   +end;
MPRINT(SCORETABLES):   end;
3753026   +
3753027   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3753028   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3753029   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3753030   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3753031   +
3753032   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3753033   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3753034   +_LP0 = _LP0 + (    1.02123943599329) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.02123943599329) * _TEMP * _1_0;
3753035   +_LP0 = _LP0 + (   -1.30411324650074) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.30411324650074) * _TEMP * _1_1;
3753036   +_LP0 = _LP0 + (    0.89524115349818) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.89524115349818) * _TEMP * _1_2;
3753037   +_LP0 = _LP0 + (   -1.49233104573199) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.49233104573199) * _TEMP * _1_3;
3753038   +
3753039   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3753040   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3753041   +_LP0 = _LP0 + (    14.6344374766664 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.6344374766664 * _TEMP);
3753042   +
3753043   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3753044   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3753045   +_LP0 = _LP0 + (     24.546083168762 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.546083168762 * _TEMP);
3753046   +
3753047   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3753048   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3753049   +_LP0 = _LP0 + (    22.5566839038316 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.5566839038316 * _TEMP);
3753050   +
3753051   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3753052   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3753053   +_LP0 = _LP0 + (    11.0466943002319 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.0466943002319 * _TEMP);
3753054   +
3753055   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3753056   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3753057   +_LP0 = _LP0 + (    2.59639789117083 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.59639789117083 * _TEMP);
3753058   +
3753059   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3753060   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3753061   +_LP0 = _LP0 + (   -12.4335805396695 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.4335805396695 * _TEMP);
3753062   +
3753063   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3753064   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3753065   +_LP0 = _LP0 + (    2.07263820733337 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.07263820733337 * _TEMP);
3753066   +
3753067   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3753068   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3753069   +_LP0 = _LP0 + (    13.9126675565491 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.9126675565491 * _TEMP);
3753070   +
3753071   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3753072   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3753073   +_TEMP =    -20.6565168300029 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.6565168300029 + _LP0;
3753074   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3753075   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3753076   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3753077   +end;
MPRINT(SCORETABLES):   end;
3753078   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3753079   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3753080   +
3753081   +REG2_5DR1:
3753082   +
3753083   +*** Residuals;
MPRINT(SCORETABLES):   REG2_5DR1: *** Residuals;
3753084   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3753085   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3753086   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3753087   +end;
MPRINT(SCORETABLES):   end;
3753088   +else do;
MPRINT(SCORETABLES):   else do;
3753089   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3753090   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3753091   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3753092   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3753093   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3753094   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3753095   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3753096   +   end;
MPRINT(SCORETABLES):   end;
3753097   +end;
MPRINT(SCORETABLES):   end;
3753098   +
3753099   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3753100   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3753101   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3753102   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3753103   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3753104   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3753105   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3753106   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3753107   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3753108   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3753109   +end;
MPRINT(SCORETABLES):   end;
3753110   +I_DepVar = REG2_5DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_5DRF[_IY];
3753111   +U_DepVar = REG2_5DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_5DRU[_IY];
3753112   +
3753113   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753114   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3753115   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753116   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753117   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3753118   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753119   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753120   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3753121   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753122   +end;
MPRINT(SCORETABLES):   end;
3753123   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753124   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3753125   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753126   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753127   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3753128   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753129   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3753130   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3753131   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753132   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3753133   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753134   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753135   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3753136   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753137   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753138   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3753139   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753140   +
3753141   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3753142   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3753143   +
3753144   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3753145   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3753146   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3753147   +array REG2_6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_6DRF [2] $12 _temporary_ ('1' '0' );
3753148   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3753149   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3753150   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3753151   +ARRAY REG2_6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_6DRU[2] _TEMPORARY_ (1 0);
3753152   +
3753153   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3753154   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3753155   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3753156   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3753157   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3753158   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753159   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3753160   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753161   +end;
MPRINT(SCORETABLES):   end;
3753162   +else do;
MPRINT(SCORETABLES):   else do;
3753163   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3753164   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3753165   +   end;
MPRINT(SCORETABLES):   end;
3753166   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3753167   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3753168   +   end;
MPRINT(SCORETABLES):   end;
3753169   +   else do;
MPRINT(SCORETABLES):   else do;
3753170   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753171   +   end;
MPRINT(SCORETABLES):   end;
3753172   +end;
MPRINT(SCORETABLES):   end;
3753173   +
3753174   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3753175   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3753176   +
3753177   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3753178   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3753179   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753180   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753181   +end;
MPRINT(SCORETABLES):   end;
3753182   +
3753183   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3753184   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3753185   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753186   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753187   +end;
MPRINT(SCORETABLES):   end;
3753188   +
3753189   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3753190   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3753191   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753192   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753193   +end;
MPRINT(SCORETABLES):   end;
3753194   +
3753195   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3753196   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3753197   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753198   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753199   +end;
MPRINT(SCORETABLES):   end;
3753200   +
3753201   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3753202   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3753203   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753204   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753205   +end;
MPRINT(SCORETABLES):   end;
3753206   +
3753207   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3753208   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3753209   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753210   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753211   +end;
MPRINT(SCORETABLES):   end;
3753212   +
3753213   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3753214   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3753215   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753216   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753217   +end;
MPRINT(SCORETABLES):   end;
3753218   +
3753219   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3753220   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3753221   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753222   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753223   +end;
MPRINT(SCORETABLES):   end;
3753224   +
3753225   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3753226   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3753227   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3753228   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3753229   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3753230   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3753231   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3753232   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3753233   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753234   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753235   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753236   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753237   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753238   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753239   +end;
MPRINT(SCORETABLES):   end;
3753240   +else do;
MPRINT(SCORETABLES):   else do;
3753241   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3753242   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3753243   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753244   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3753245   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3753246   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3753247   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3753248   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3753249   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753250   +         end;
MPRINT(SCORETABLES):   end;
3753251   +         else do;
MPRINT(SCORETABLES):   else do;
3753252   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3753253   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3753254   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753255   +            end;
MPRINT(SCORETABLES):   end;
3753256   +         end;
MPRINT(SCORETABLES):   end;
3753257   +      end;
MPRINT(SCORETABLES):   end;
3753258   +      else do;
MPRINT(SCORETABLES):   else do;
3753259   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3753260   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3753261   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753262   +         end;
MPRINT(SCORETABLES):   end;
3753263   +      end;
MPRINT(SCORETABLES):   end;
3753264   +   end;
MPRINT(SCORETABLES):   end;
3753265   +   else do;
MPRINT(SCORETABLES):   else do;
3753266   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3753267   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3753268   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753269   +      end;
MPRINT(SCORETABLES):   end;
3753270   +      else do;
MPRINT(SCORETABLES):   else do;
3753271   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3753272   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3753273   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3753274   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3753275   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3753276   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753277   +         end;
MPRINT(SCORETABLES):   end;
3753278   +      end;
MPRINT(SCORETABLES):   end;
3753279   +   end;
MPRINT(SCORETABLES):   end;
3753280   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3753281   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753282   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753283   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753284   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753285   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3753286   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753287   +   end;
MPRINT(SCORETABLES):   end;
3753288   +end;
MPRINT(SCORETABLES):   end;
3753289   +
3753290   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3753291   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3753292   +   _P0 = 0.1372103589;
MPRINT(SCORETABLES):   _P0 = 0.1372103589;
3753293   +   _P1 = 0.8627896411;
MPRINT(SCORETABLES):   _P1 = 0.8627896411;
3753294   +   goto REG2_6DR1;
MPRINT(SCORETABLES):   goto REG2_6DR1;
3753295   +end;
MPRINT(SCORETABLES):   end;
3753296   +
3753297   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3753298   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3753299   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3753300   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3753301   +
3753302   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3753303   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3753304   +_LP0 = _LP0 + (    0.91640697621749) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91640697621749) * _TEMP * _1_0;
3753305   +_LP0 = _LP0 + (   -1.11234676381494) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.11234676381494) * _TEMP * _1_1;
3753306   +_LP0 = _LP0 + (    0.92136874190047) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.92136874190047) * _TEMP * _1_2;
3753307   +_LP0 = _LP0 + (   -1.53974292233492) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.53974292233492) * _TEMP * _1_3;
3753308   +
3753309   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3753310   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3753311   +_LP0 = _LP0 + (    15.5302756809822 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.5302756809822 * _TEMP);
3753312   +
3753313   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3753314   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3753315   +_LP0 = _LP0 + (    23.9304570102327 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.9304570102327 * _TEMP);
3753316   +
3753317   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3753318   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3753319   +_LP0 = _LP0 + (    22.5659427669915 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.5659427669915 * _TEMP);
3753320   +
3753321   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3753322   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3753323   +_LP0 = _LP0 + (    11.1751474299707 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.1751474299707 * _TEMP);
3753324   +
3753325   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3753326   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3753327   +_LP0 = _LP0 + (    2.08042291703518 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.08042291703518 * _TEMP);
3753328   +
3753329   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3753330   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3753331   +_LP0 = _LP0 + (   -13.2226222630421 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.2226222630421 * _TEMP);
3753332   +
3753333   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3753334   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3753335   +_LP0 = _LP0 + (    2.03807652770047 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.03807652770047 * _TEMP);
3753336   +
3753337   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3753338   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3753339   +_LP0 = _LP0 + (    14.6019420584568 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.6019420584568 * _TEMP);
3753340   +
3753341   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3753342   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3753343   +_TEMP =    -20.6311525889649 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.6311525889649 + _LP0;
3753344   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3753345   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3753346   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3753347   +end;
MPRINT(SCORETABLES):   end;
3753348   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3753349   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3753350   +
3753351   +REG2_6DR1:
3753352   +
3753353   +*** Residuals;
MPRINT(SCORETABLES):   REG2_6DR1: *** Residuals;
3753354   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3753355   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3753356   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3753357   +end;
MPRINT(SCORETABLES):   end;
3753358   +else do;
MPRINT(SCORETABLES):   else do;
3753359   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3753360   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3753361   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3753362   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3753363   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3753364   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3753365   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3753366   +   end;
MPRINT(SCORETABLES):   end;
3753367   +end;
MPRINT(SCORETABLES):   end;
3753368   +
3753369   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3753370   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3753371   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3753372   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3753373   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3753374   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3753375   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3753376   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3753377   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3753378   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3753379   +end;
MPRINT(SCORETABLES):   end;
3753380   +I_DepVar = REG2_6DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_6DRF[_IY];
3753381   +U_DepVar = REG2_6DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_6DRU[_IY];
3753382   +
3753383   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753384   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3753385   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753386   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753387   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3753388   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753389   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753390   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3753391   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753392   +end;
MPRINT(SCORETABLES):   end;
3753393   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753394   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3753395   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753396   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753397   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3753398   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753399   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3753400   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3753401   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753402   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3753403   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753404   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753405   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3753406   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753407   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753408   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3753409   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753410   +
3753411   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3753412   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3753413   +
3753414   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3753415   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3753416   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3753417   +array REG2_7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_7DRF [2] $12 _temporary_ ('1' '0' );
3753418   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3753419   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3753420   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3753421   +ARRAY REG2_7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_7DRU[2] _TEMPORARY_ (1 0);
3753422   +
3753423   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3753424   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3753425   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3753426   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3753427   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3753428   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753429   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3753430   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753431   +end;
MPRINT(SCORETABLES):   end;
3753432   +else do;
MPRINT(SCORETABLES):   else do;
3753433   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3753434   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3753435   +   end;
MPRINT(SCORETABLES):   end;
3753436   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3753437   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3753438   +   end;
MPRINT(SCORETABLES):   end;
3753439   +   else do;
MPRINT(SCORETABLES):   else do;
3753440   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753441   +   end;
MPRINT(SCORETABLES):   end;
3753442   +end;
MPRINT(SCORETABLES):   end;
3753443   +
3753444   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3753445   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3753446   +
3753447   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3753448   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3753449   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753450   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753451   +end;
MPRINT(SCORETABLES):   end;
3753452   +
3753453   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3753454   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3753455   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753456   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753457   +end;
MPRINT(SCORETABLES):   end;
3753458   +
3753459   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3753460   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3753461   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753462   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753463   +end;
MPRINT(SCORETABLES):   end;
3753464   +
3753465   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3753466   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3753467   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753468   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753469   +end;
MPRINT(SCORETABLES):   end;
3753470   +
3753471   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3753472   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3753473   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753474   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753475   +end;
MPRINT(SCORETABLES):   end;
3753476   +
3753477   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3753478   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3753479   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753480   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753481   +end;
MPRINT(SCORETABLES):   end;
3753482   +
3753483   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3753484   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3753485   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753486   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753487   +end;
MPRINT(SCORETABLES):   end;
3753488   +
3753489   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3753490   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3753491   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753492   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753493   +end;
MPRINT(SCORETABLES):   end;
3753494   +
3753495   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3753496   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3753497   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3753498   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3753499   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3753500   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3753501   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3753502   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3753503   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753504   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753505   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753506   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753507   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753508   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753509   +end;
MPRINT(SCORETABLES):   end;
3753510   +else do;
MPRINT(SCORETABLES):   else do;
3753511   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3753512   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3753513   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753514   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3753515   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3753516   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3753517   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3753518   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3753519   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753520   +         end;
MPRINT(SCORETABLES):   end;
3753521   +         else do;
MPRINT(SCORETABLES):   else do;
3753522   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3753523   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3753524   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753525   +            end;
MPRINT(SCORETABLES):   end;
3753526   +         end;
MPRINT(SCORETABLES):   end;
3753527   +      end;
MPRINT(SCORETABLES):   end;
3753528   +      else do;
MPRINT(SCORETABLES):   else do;
3753529   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3753530   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3753531   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753532   +         end;
MPRINT(SCORETABLES):   end;
3753533   +      end;
MPRINT(SCORETABLES):   end;
3753534   +   end;
MPRINT(SCORETABLES):   end;
3753535   +   else do;
MPRINT(SCORETABLES):   else do;
3753536   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3753537   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3753538   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753539   +      end;
MPRINT(SCORETABLES):   end;
3753540   +      else do;
MPRINT(SCORETABLES):   else do;
3753541   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3753542   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3753543   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3753544   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3753545   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3753546   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753547   +         end;
MPRINT(SCORETABLES):   end;
3753548   +      end;
MPRINT(SCORETABLES):   end;
3753549   +   end;
MPRINT(SCORETABLES):   end;
3753550   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3753551   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753552   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753553   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753554   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753555   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3753556   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753557   +   end;
MPRINT(SCORETABLES):   end;
3753558   +end;
MPRINT(SCORETABLES):   end;
3753559   +
3753560   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3753561   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3753562   +   _P0 = 0.1368421053;
MPRINT(SCORETABLES):   _P0 = 0.1368421053;
3753563   +   _P1 = 0.8631578947;
MPRINT(SCORETABLES):   _P1 = 0.8631578947;
3753564   +   goto REG2_7DR1;
MPRINT(SCORETABLES):   goto REG2_7DR1;
3753565   +end;
MPRINT(SCORETABLES):   end;
3753566   +
3753567   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3753568   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3753569   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3753570   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3753571   +
3753572   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3753573   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3753574   +_LP0 = _LP0 + (    0.96805428786906) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.96805428786906) * _TEMP * _1_0;
3753575   +_LP0 = _LP0 + (   -1.26065882312214) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.26065882312214) * _TEMP * _1_1;
3753576   +_LP0 = _LP0 + (    0.75528723467185) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.75528723467185) * _TEMP * _1_2;
3753577   +_LP0 = _LP0 + (   -1.42583687142439) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.42583687142439) * _TEMP * _1_3;
3753578   +
3753579   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3753580   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3753581   +_LP0 = _LP0 + (    14.9288197143528 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.9288197143528 * _TEMP);
3753582   +
3753583   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3753584   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3753585   +_LP0 = _LP0 + (    23.4683454753132 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.4683454753132 * _TEMP);
3753586   +
3753587   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3753588   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3753589   +_LP0 = _LP0 + (     22.535455344941 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.535455344941 * _TEMP);
3753590   +
3753591   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3753592   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3753593   +_LP0 = _LP0 + (    10.2726257446722 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 10.2726257446722 * _TEMP);
3753594   +
3753595   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3753596   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3753597   +_LP0 = _LP0 + (    2.14270191634128 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.14270191634128 * _TEMP);
3753598   +
3753599   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3753600   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3753601   +_LP0 = _LP0 + (     -12.75351280127 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.75351280127 * _TEMP);
3753602   +
3753603   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3753604   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3753605   +_LP0 = _LP0 + (    2.34297553533974 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.34297553533974 * _TEMP);
3753606   +
3753607   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3753608   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3753609   +_LP0 = _LP0 + (    14.0261065494502 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.0261065494502 * _TEMP);
3753610   +
3753611   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3753612   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3753613   +_TEMP =    -19.9389431944537 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -19.9389431944537 + _LP0;
3753614   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3753615   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3753616   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3753617   +end;
MPRINT(SCORETABLES):   end;
3753618   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3753619   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3753620   +
3753621   +REG2_7DR1:
3753622   +
3753623   +*** Residuals;
MPRINT(SCORETABLES):   REG2_7DR1: *** Residuals;
3753624   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3753625   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3753626   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3753627   +end;
MPRINT(SCORETABLES):   end;
3753628   +else do;
MPRINT(SCORETABLES):   else do;
3753629   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3753630   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3753631   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3753632   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3753633   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3753634   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3753635   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3753636   +   end;
MPRINT(SCORETABLES):   end;
3753637   +end;
MPRINT(SCORETABLES):   end;
3753638   +
3753639   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3753640   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3753641   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3753642   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3753643   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3753644   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3753645   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3753646   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3753647   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3753648   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3753649   +end;
MPRINT(SCORETABLES):   end;
3753650   +I_DepVar = REG2_7DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_7DRF[_IY];
3753651   +U_DepVar = REG2_7DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_7DRU[_IY];
3753652   +
3753653   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753654   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3753655   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753656   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753657   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3753658   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753659   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753660   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3753661   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753662   +end;
MPRINT(SCORETABLES):   end;
3753663   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753664   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3753665   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753666   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753667   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3753668   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753669   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3753670   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3753671   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753672   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3753673   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753674   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753675   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3753676   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753677   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753678   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3753679   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753680   +
3753681   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3753682   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3753683   +
3753684   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3753685   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3753686   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3753687   +array REG2_8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_8DRF [2] $12 _temporary_ ('1' '0' );
3753688   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3753689   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3753690   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3753691   +ARRAY REG2_8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_8DRU[2] _TEMPORARY_ (1 0);
3753692   +
3753693   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3753694   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3753695   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3753696   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3753697   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3753698   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753699   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3753700   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753701   +end;
MPRINT(SCORETABLES):   end;
3753702   +else do;
MPRINT(SCORETABLES):   else do;
3753703   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3753704   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3753705   +   end;
MPRINT(SCORETABLES):   end;
3753706   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3753707   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3753708   +   end;
MPRINT(SCORETABLES):   end;
3753709   +   else do;
MPRINT(SCORETABLES):   else do;
3753710   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753711   +   end;
MPRINT(SCORETABLES):   end;
3753712   +end;
MPRINT(SCORETABLES):   end;
3753713   +
3753714   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3753715   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3753716   +
3753717   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3753718   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3753719   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753720   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753721   +end;
MPRINT(SCORETABLES):   end;
3753722   +
3753723   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3753724   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3753725   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753726   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753727   +end;
MPRINT(SCORETABLES):   end;
3753728   +
3753729   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3753730   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3753731   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753732   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753733   +end;
MPRINT(SCORETABLES):   end;
3753734   +
3753735   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3753736   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3753737   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753738   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753739   +end;
MPRINT(SCORETABLES):   end;
3753740   +
3753741   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3753742   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3753743   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753744   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753745   +end;
MPRINT(SCORETABLES):   end;
3753746   +
3753747   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3753748   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3753749   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753750   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753751   +end;
MPRINT(SCORETABLES):   end;
3753752   +
3753753   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3753754   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3753755   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753756   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753757   +end;
MPRINT(SCORETABLES):   end;
3753758   +
3753759   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3753760   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3753761   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753762   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753763   +end;
MPRINT(SCORETABLES):   end;
3753764   +
3753765   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3753766   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3753767   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3753768   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3753769   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3753770   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3753771   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3753772   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3753773   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753774   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753775   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753776   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753777   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753778   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753779   +end;
MPRINT(SCORETABLES):   end;
3753780   +else do;
MPRINT(SCORETABLES):   else do;
3753781   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3753782   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3753783   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753784   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3753785   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3753786   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3753787   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3753788   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3753789   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753790   +         end;
MPRINT(SCORETABLES):   end;
3753791   +         else do;
MPRINT(SCORETABLES):   else do;
3753792   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3753793   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3753794   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753795   +            end;
MPRINT(SCORETABLES):   end;
3753796   +         end;
MPRINT(SCORETABLES):   end;
3753797   +      end;
MPRINT(SCORETABLES):   end;
3753798   +      else do;
MPRINT(SCORETABLES):   else do;
3753799   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3753800   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3753801   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753802   +         end;
MPRINT(SCORETABLES):   end;
3753803   +      end;
MPRINT(SCORETABLES):   end;
3753804   +   end;
MPRINT(SCORETABLES):   end;
3753805   +   else do;
MPRINT(SCORETABLES):   else do;
3753806   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3753807   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3753808   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753809   +      end;
MPRINT(SCORETABLES):   end;
3753810   +      else do;
MPRINT(SCORETABLES):   else do;
3753811   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3753812   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3753813   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3753814   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3753815   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3753816   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3753817   +         end;
MPRINT(SCORETABLES):   end;
3753818   +      end;
MPRINT(SCORETABLES):   end;
3753819   +   end;
MPRINT(SCORETABLES):   end;
3753820   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3753821   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3753822   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3753823   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3753824   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3753825   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3753826   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753827   +   end;
MPRINT(SCORETABLES):   end;
3753828   +end;
MPRINT(SCORETABLES):   end;
3753829   +
3753830   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3753831   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3753832   +   _P0 = 0.1351724138;
MPRINT(SCORETABLES):   _P0 = 0.1351724138;
3753833   +   _P1 = 0.8648275862;
MPRINT(SCORETABLES):   _P1 = 0.8648275862;
3753834   +   goto REG2_8DR1;
MPRINT(SCORETABLES):   goto REG2_8DR1;
3753835   +end;
MPRINT(SCORETABLES):   end;
3753836   +
3753837   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3753838   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3753839   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3753840   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3753841   +
3753842   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3753843   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3753844   +_LP0 = _LP0 + (    0.56789446409409) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.56789446409409) * _TEMP * _1_0;
3753845   +_LP0 = _LP0 + (   -1.07374360330539) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.07374360330539) * _TEMP * _1_1;
3753846   +_LP0 = _LP0 + (    1.02310475602251) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.02310475602251) * _TEMP * _1_2;
3753847   +_LP0 = _LP0 + (   -1.67367285910424) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.67367285910424) * _TEMP * _1_3;
3753848   +
3753849   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3753850   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3753851   +_LP0 = _LP0 + (    16.0000949200745 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 16.0000949200745 * _TEMP);
3753852   +
3753853   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3753854   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3753855   +_LP0 = _LP0 + (    26.8970080350955 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.8970080350955 * _TEMP);
3753856   +
3753857   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3753858   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3753859   +_LP0 = _LP0 + (    23.2532949167364 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.2532949167364 * _TEMP);
3753860   +
3753861   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3753862   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3753863   +_LP0 = _LP0 + (    12.6056359291059 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 12.6056359291059 * _TEMP);
3753864   +
3753865   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3753866   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3753867   +_LP0 = _LP0 + (    1.83714620298948 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.83714620298948 * _TEMP);
3753868   +
3753869   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3753870   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3753871   +_LP0 = _LP0 + (   -13.2991988031306 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.2991988031306 * _TEMP);
3753872   +
3753873   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3753874   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3753875   +_LP0 = _LP0 + (    2.22958475880093 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.22958475880093 * _TEMP);
3753876   +
3753877   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3753878   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3753879   +_LP0 = _LP0 + (    14.6532407473597 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.6532407473597 * _TEMP);
3753880   +
3753881   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3753882   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3753883   +_TEMP =    -22.2574088624272 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -22.2574088624272 + _LP0;
3753884   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3753885   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3753886   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3753887   +end;
MPRINT(SCORETABLES):   end;
3753888   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3753889   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3753890   +
3753891   +REG2_8DR1:
3753892   +
3753893   +*** Residuals;
MPRINT(SCORETABLES):   REG2_8DR1: *** Residuals;
3753894   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3753895   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3753896   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3753897   +end;
MPRINT(SCORETABLES):   end;
3753898   +else do;
MPRINT(SCORETABLES):   else do;
3753899   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3753900   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3753901   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3753902   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3753903   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3753904   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3753905   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3753906   +   end;
MPRINT(SCORETABLES):   end;
3753907   +end;
MPRINT(SCORETABLES):   end;
3753908   +
3753909   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3753910   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3753911   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3753912   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3753913   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3753914   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3753915   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3753916   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3753917   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3753918   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3753919   +end;
MPRINT(SCORETABLES):   end;
3753920   +I_DepVar = REG2_8DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_8DRF[_IY];
3753921   +U_DepVar = REG2_8DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_8DRU[_IY];
3753922   +
3753923   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753924   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3753925   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753926   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753927   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3753928   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753929   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753930   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3753931   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753932   +end;
MPRINT(SCORETABLES):   end;
3753933   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753934   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3753935   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753936   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753937   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3753938   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753939   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3753940   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3753941   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3753942   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3753943   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3753944   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3753945   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3753946   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3753947   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753948   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3753949   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3753950   +
3753951   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3753952   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3753953   +
3753954   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3753955   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3753956   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3753957   +array REG2_9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_9DRF [2] $12 _temporary_ ('1' '0' );
3753958   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3753959   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3753960   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3753961   +ARRAY REG2_9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_9DRU[2] _TEMPORARY_ (1 0);
3753962   +
3753963   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3753964   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3753965   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3753966   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3753967   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3753968   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3753969   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3753970   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753971   +end;
MPRINT(SCORETABLES):   end;
3753972   +else do;
MPRINT(SCORETABLES):   else do;
3753973   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3753974   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3753975   +   end;
MPRINT(SCORETABLES):   end;
3753976   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3753977   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3753978   +   end;
MPRINT(SCORETABLES):   end;
3753979   +   else do;
MPRINT(SCORETABLES):   else do;
3753980   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3753981   +   end;
MPRINT(SCORETABLES):   end;
3753982   +end;
MPRINT(SCORETABLES):   end;
3753983   +
3753984   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3753985   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3753986   +
3753987   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3753988   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3753989   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753990   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753991   +end;
MPRINT(SCORETABLES):   end;
3753992   +
3753993   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3753994   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3753995   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3753996   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3753997   +end;
MPRINT(SCORETABLES):   end;
3753998   +
3753999   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3754000   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3754001   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754002   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754003   +end;
MPRINT(SCORETABLES):   end;
3754004   +
3754005   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3754006   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3754007   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754008   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754009   +end;
MPRINT(SCORETABLES):   end;
3754010   +
3754011   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3754012   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3754013   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754014   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754015   +end;
MPRINT(SCORETABLES):   end;
3754016   +
3754017   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3754018   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3754019   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754020   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754021   +end;
MPRINT(SCORETABLES):   end;
3754022   +
3754023   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3754024   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3754025   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754026   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754027   +end;
MPRINT(SCORETABLES):   end;
3754028   +
3754029   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3754030   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3754031   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754032   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754033   +end;
MPRINT(SCORETABLES):   end;
3754034   +
3754035   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3754036   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3754037   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3754038   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3754039   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3754040   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3754041   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3754042   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3754043   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3754044   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3754045   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3754046   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3754047   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754048   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754049   +end;
MPRINT(SCORETABLES):   end;
3754050   +else do;
MPRINT(SCORETABLES):   else do;
3754051   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3754052   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3754053   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3754054   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3754055   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3754056   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3754057   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3754058   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3754059   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754060   +         end;
MPRINT(SCORETABLES):   end;
3754061   +         else do;
MPRINT(SCORETABLES):   else do;
3754062   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3754063   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3754064   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754065   +            end;
MPRINT(SCORETABLES):   end;
3754066   +         end;
MPRINT(SCORETABLES):   end;
3754067   +      end;
MPRINT(SCORETABLES):   end;
3754068   +      else do;
MPRINT(SCORETABLES):   else do;
3754069   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3754070   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3754071   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754072   +         end;
MPRINT(SCORETABLES):   end;
3754073   +      end;
MPRINT(SCORETABLES):   end;
3754074   +   end;
MPRINT(SCORETABLES):   end;
3754075   +   else do;
MPRINT(SCORETABLES):   else do;
3754076   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3754077   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3754078   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754079   +      end;
MPRINT(SCORETABLES):   end;
3754080   +      else do;
MPRINT(SCORETABLES):   else do;
3754081   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3754082   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3754083   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3754084   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3754085   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3754086   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754087   +         end;
MPRINT(SCORETABLES):   end;
3754088   +      end;
MPRINT(SCORETABLES):   end;
3754089   +   end;
MPRINT(SCORETABLES):   end;
3754090   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3754091   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3754092   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3754093   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3754094   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3754095   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3754096   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754097   +   end;
MPRINT(SCORETABLES):   end;
3754098   +end;
MPRINT(SCORETABLES):   end;
3754099   +
3754100   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3754101   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3754102   +   _P0 = 0.1360544218;
MPRINT(SCORETABLES):   _P0 = 0.1360544218;
3754103   +   _P1 = 0.8639455782;
MPRINT(SCORETABLES):   _P1 = 0.8639455782;
3754104   +   goto REG2_9DR1;
MPRINT(SCORETABLES):   goto REG2_9DR1;
3754105   +end;
MPRINT(SCORETABLES):   end;
3754106   +
3754107   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3754108   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3754109   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3754110   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3754111   +
3754112   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3754113   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3754114   +_LP0 = _LP0 + (    0.91184579971703) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91184579971703) * _TEMP * _1_0;
3754115   +_LP0 = _LP0 + (   -1.07755865431655) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.07755865431655) * _TEMP * _1_1;
3754116   +_LP0 = _LP0 + (    0.90755863679262) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.90755863679262) * _TEMP * _1_2;
3754117   +_LP0 = _LP0 + (   -1.59606767283156) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.59606767283156) * _TEMP * _1_3;
3754118   +
3754119   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3754120   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3754121   +_LP0 = _LP0 + (    15.1440162110917 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.1440162110917 * _TEMP);
3754122   +
3754123   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3754124   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3754125   +_LP0 = _LP0 + (     24.716559035434 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.716559035434 * _TEMP);
3754126   +
3754127   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3754128   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3754129   +_LP0 = _LP0 + (    22.2277273848496 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.2277273848496 * _TEMP);
3754130   +
3754131   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3754132   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3754133   +_LP0 = _LP0 + (    11.8613683818176 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.8613683818176 * _TEMP);
3754134   +
3754135   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3754136   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3754137   +_LP0 = _LP0 + (    1.83037461140879 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.83037461140879 * _TEMP);
3754138   +
3754139   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3754140   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3754141   +_LP0 = _LP0 + (   -13.3708553175962 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.3708553175962 * _TEMP);
3754142   +
3754143   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3754144   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3754145   +_LP0 = _LP0 + (    2.88776695714377 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.88776695714377 * _TEMP);
3754146   +
3754147   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3754148   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3754149   +_LP0 = _LP0 + (    14.2278287612502 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.2278287612502 * _TEMP);
3754150   +
3754151   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3754152   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3754153   +_TEMP =     -20.912379012815 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.912379012815 + _LP0;
3754154   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3754155   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3754156   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3754157   +end;
MPRINT(SCORETABLES):   end;
3754158   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3754159   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3754160   +
3754161   +REG2_9DR1:
3754162   +
3754163   +*** Residuals;
MPRINT(SCORETABLES):   REG2_9DR1: *** Residuals;
3754164   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3754165   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3754166   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3754167   +end;
MPRINT(SCORETABLES):   end;
3754168   +else do;
MPRINT(SCORETABLES):   else do;
3754169   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3754170   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3754171   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3754172   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3754173   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3754174   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3754175   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3754176   +   end;
MPRINT(SCORETABLES):   end;
3754177   +end;
MPRINT(SCORETABLES):   end;
3754178   +
3754179   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3754180   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3754181   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3754182   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3754183   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3754184   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3754185   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3754186   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3754187   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3754188   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3754189   +end;
MPRINT(SCORETABLES):   end;
3754190   +I_DepVar = REG2_9DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_9DRF[_IY];
3754191   +U_DepVar = REG2_9DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_9DRU[_IY];
3754192   +
3754193   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754194   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3754195   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754196   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3754197   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3754198   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3754199   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3754200   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3754201   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3754202   +end;
MPRINT(SCORETABLES):   end;
3754203   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3754204   +* Grp5: StartGroup;
MPRINT(SCORETABLES):   * Grp5: StartGroup;
3754205   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3754206   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3754207   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3754208   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3754209   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3754210   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3754211   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3754212   +* Reg2: Regression;
MPRINT(SCORETABLES):   * Reg2: Regression;
3754213   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3754214   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3754215   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3754216   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3754217   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754218   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3754219   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754220   +
3754221   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3754222   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3754223   +
3754224   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3754225   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3754226   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3754227   +array REG2_10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG2_10DRF [2] $12 _temporary_ ('1' '0' );
3754228   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3754229   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3754230   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3754231   +ARRAY REG2_10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG2_10DRU[2] _TEMPORARY_ (1 0);
3754232   +
3754233   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3754234   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3754235   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3754236   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3754237   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3754238   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3754239   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3754240   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3754241   +end;
MPRINT(SCORETABLES):   end;
3754242   +else do;
MPRINT(SCORETABLES):   else do;
3754243   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3754244   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3754245   +   end;
MPRINT(SCORETABLES):   end;
3754246   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3754247   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3754248   +   end;
MPRINT(SCORETABLES):   end;
3754249   +   else do;
MPRINT(SCORETABLES):   else do;
3754250   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3754251   +   end;
MPRINT(SCORETABLES):   end;
3754252   +end;
MPRINT(SCORETABLES):   end;
3754253   +
3754254   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3754255   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3754256   +
3754257   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3754258   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3754259   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754260   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754261   +end;
MPRINT(SCORETABLES):   end;
3754262   +
3754263   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3754264   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3754265   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754266   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754267   +end;
MPRINT(SCORETABLES):   end;
3754268   +
3754269   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3754270   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3754271   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754272   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754273   +end;
MPRINT(SCORETABLES):   end;
3754274   +
3754275   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3754276   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3754277   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754278   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754279   +end;
MPRINT(SCORETABLES):   end;
3754280   +
3754281   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3754282   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3754283   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754284   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754285   +end;
MPRINT(SCORETABLES):   end;
3754286   +
3754287   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3754288   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3754289   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754290   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754291   +end;
MPRINT(SCORETABLES):   end;
3754292   +
3754293   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3754294   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3754295   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754296   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754297   +end;
MPRINT(SCORETABLES):   end;
3754298   +
3754299   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3754300   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3754301   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754302   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754303   +end;
MPRINT(SCORETABLES):   end;
3754304   +
3754305   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3754306   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3754307   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3754308   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3754309   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3754310   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3754311   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3754312   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3754313   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3754314   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3754315   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3754316   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3754317   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3754318   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754319   +end;
MPRINT(SCORETABLES):   end;
3754320   +else do;
MPRINT(SCORETABLES):   else do;
3754321   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3754322   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3754323   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3754324   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3754325   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3754326   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3754327   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3754328   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3754329   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754330   +         end;
MPRINT(SCORETABLES):   end;
3754331   +         else do;
MPRINT(SCORETABLES):   else do;
3754332   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3754333   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3754334   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754335   +            end;
MPRINT(SCORETABLES):   end;
3754336   +         end;
MPRINT(SCORETABLES):   end;
3754337   +      end;
MPRINT(SCORETABLES):   end;
3754338   +      else do;
MPRINT(SCORETABLES):   else do;
3754339   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3754340   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3754341   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754342   +         end;
MPRINT(SCORETABLES):   end;
3754343   +      end;
MPRINT(SCORETABLES):   end;
3754344   +   end;
MPRINT(SCORETABLES):   end;
3754345   +   else do;
MPRINT(SCORETABLES):   else do;
3754346   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3754347   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3754348   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754349   +      end;
MPRINT(SCORETABLES):   end;
3754350   +      else do;
MPRINT(SCORETABLES):   else do;
3754351   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3754352   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3754353   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3754354   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3754355   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3754356   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3754357   +         end;
MPRINT(SCORETABLES):   end;
3754358   +      end;
MPRINT(SCORETABLES):   end;
3754359   +   end;
MPRINT(SCORETABLES):   end;
3754360   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3754361   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3754362   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3754363   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3754364   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3754365   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3754366   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3754367   +   end;
MPRINT(SCORETABLES):   end;
3754368   +end;
MPRINT(SCORETABLES):   end;
3754369   +
3754370   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3754371   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3754372   +   _P0 = 0.1380100871;
MPRINT(SCORETABLES):   _P0 = 0.1380100871;
3754373   +   _P1 = 0.8619899129;
MPRINT(SCORETABLES):   _P1 = 0.8619899129;
3754374   +   goto REG2_10DR1;
MPRINT(SCORETABLES):   goto REG2_10DR1;
3754375   +end;
MPRINT(SCORETABLES):   end;
3754376   +
3754377   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3754378   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3754379   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3754380   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3754381   +
3754382   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3754383   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3754384   +_LP0 = _LP0 + (    0.87959950746552) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.87959950746552) * _TEMP * _1_0;
3754385   +_LP0 = _LP0 + (   -1.19474455150329) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.19474455150329) * _TEMP * _1_1;
3754386   +_LP0 = _LP0 + (    0.85411901562392) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.85411901562392) * _TEMP * _1_2;
3754387   +_LP0 = _LP0 + (   -1.38458416769265) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.38458416769265) * _TEMP * _1_3;
3754388   +
3754389   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3754390   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3754391   +_LP0 = _LP0 + (    14.7038841145111 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.7038841145111 * _TEMP);
3754392   +
3754393   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3754394   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3754395   +_LP0 = _LP0 + (    23.6704534947384 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.6704534947384 * _TEMP);
3754396   +
3754397   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3754398   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3754399   +_LP0 = _LP0 + (    22.4665272959475 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.4665272959475 * _TEMP);
3754400   +
3754401   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3754402   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3754403   +_LP0 = _LP0 + (    9.71795014715035 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 9.71795014715035 * _TEMP);
3754404   +
3754405   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3754406   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3754407   +_LP0 = _LP0 + (    1.97699633886126 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.97699633886126 * _TEMP);
3754408   +
3754409   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3754410   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3754411   +_LP0 = _LP0 + (   -12.6402643546221 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.6402643546221 * _TEMP);
3754412   +
3754413   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3754414   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3754415   +_LP0 = _LP0 + (    2.08197583523948 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.08197583523948 * _TEMP);
3754416   +
3754417   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3754418   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3754419   +_LP0 = _LP0 + (    13.7874445019116 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.7874445019116 * _TEMP);
3754420   +
3754421   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3754422   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3754423   +_TEMP =     -19.539812725701 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -19.539812725701 + _LP0;
3754424   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3754425   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3754426   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3754427   +end;
MPRINT(SCORETABLES):   end;
3754428   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3754429   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3754430   +
3754431   +REG2_10DR1:
3754432   +
3754433   +*** Residuals;
MPRINT(SCORETABLES):   REG2_10DR1: *** Residuals;
3754434   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3754435   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3754436   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3754437   +end;
MPRINT(SCORETABLES):   end;
3754438   +else do;
MPRINT(SCORETABLES):   else do;
3754439   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3754440   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3754441   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3754442   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3754443   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3754444   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3754445   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3754446   +   end;
MPRINT(SCORETABLES):   end;
3754447   +end;
MPRINT(SCORETABLES):   end;
3754448   +
3754449   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3754450   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3754451   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3754452   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3754453   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3754454   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3754455   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3754456   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3754457   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3754458   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3754459   +end;
MPRINT(SCORETABLES):   end;
3754460   +I_DepVar = REG2_10DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG2_10DRF[_IY];
3754461   +U_DepVar = REG2_10DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG2_10DRU[_IY];
3754462   +
3754463   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754464   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3754465   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3754466   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3754467   +* EndGrp6: EndGroup;
MPRINT(SCORETABLES):   * EndGrp6: EndGroup;
3754468   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3754469   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3754470   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3754471   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3754472   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;

NOTE: DATA STEP view saved on file EMWS1.ENDGRP6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
      

MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3754473    *------------------------------------------------------------*;
3754474    * End POSTLOOP: EndGrp6;
3754475    *------------------------------------------------------------*;
3754476    

NOTE: There were 10 observations read from the data set EMWS1.GRP5_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP6_EMLOOPINFO has 10 observations and 3 variables.
3754477    proc print data=EMWS1.EndGrp6_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp6_EMLOOPINFO noobs label;
3754478    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3754479    run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP6_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2452.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3754480    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp6_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3754504    data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT;
3754505    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3754506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3754507    data EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT;
3754508    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3754509    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3754510    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3754510  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3754511    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3754512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3754513    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMREPORTFIT nothreads;
3754514    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3754515    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3754516    %let _EMwarndup = 0;
3754517    %let _EMtargetdup =;
3754518    %let _EMASEtargetdup =;
3754519    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3754520    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3754521    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3754522    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3754523    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3754524    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3754525    end;
MPRINT(EM_DIAGRAM):   end;
3754526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3754527    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3754528    * EndGrp6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp6: Computing metadata for TRAIN data;
3754529    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp6_TRAIN out=WORK.M3DAUV15 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DAUV15;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAUV15(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DAUV15;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAUV15;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0GJ4SSS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FSGODS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GJ4SSS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp6";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3754880    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3754881    set EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO;
3754882    where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3754883    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMINFO.
      WHERE (DATA='EndGrp6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3754884    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMINFO;
3754885    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3754886    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3754887    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.ENDGRP6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
3754891    run;
3754892    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
3754893    set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMINFO WORK.MODELTEMP_INFO;
3754894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3754895    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp6_EMINFO NOTHREADS;
3754896    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3754897    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3754898    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3754899    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3754900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.REG2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3754901    proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3754902    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3754903    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3754904    data EMWS1.EndGrp6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMINFO;
3754905    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3754906    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3754907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP6_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3754908    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3754909    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3754910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3754911    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE 
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp6: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp6: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3755371    %let EMEXCEPTIONSTRING=;
3755372    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3755373    * POSTLOOPREPORT: EndGrp6;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp6;
3755374    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3755375    %let EM_ACTION = POSTLOOPREPORT;
3755376    %let syscc = 0;
3755377    %macro main;
3755378       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3755379    
3755380           filename temp catalog 'sashelp.emutil.endgp_train.source';
3755381           %include temp;
3755382           filename temp;
3755383    
3755384           %train;
3755385    
3755386       %end;
3755387       %else
3755388          %if %upcase(&EM_ACTION) = SCORE %then %do;
3755389    
3755390           filename temp catalog 'sashelp.emutil.endgp_score.source';
3755391           %include temp;
3755392           filename temp;
3755393    
3755394           %score;
3755395       %end;
3755396       %else
3755397       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3755398    
3755399           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3755400           %include temp;
3755401           filename temp;
3755402    
3755403           %postloop;
3755404    
3755405       %end;
3755406    
3755407       %doendm:
3755408    %mend main;
3755409    
3755410    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
3755411    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3755412    * End POSTLOOPREPORT: EndGrp6;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp6;
3755413    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3755414    

3755415    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg2_CMeta_TRAIN out=WORK.SUBSETINMETA;
3755416    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3755417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.REG2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3755418    proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp6_VariableSet out=WORK.SUBSETVARSET(keep=NAME 
REPORT);
3755419    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3755420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3755421    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3755422    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3755423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3755424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3755425    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3755426    set EMWS1.EndGrp6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_CMeta_TRAIN;
3755427    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3755427  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 
'ASSESS', 'COST');
3755428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set EMWS1.ENDGRP6_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3755429    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3755430    set EMWS1.EndGrp6_TRAIN(keep=
3755431    F_DepVar
3755432    I_DepVar
3755433    P_DepVar0
3755434    P_DepVar1
3755435    R_DepVar0
3755436    R_DepVar1
3755437    U_DepVar
3755438    _WARN_
3755439    DepVar
3755440    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3755441    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP6_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP6_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp6_1JWVBSU nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp6_1JWVBSU;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp6_1JWVBSU(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp6_1JWVBSU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp6_1JWVBSU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ 
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN 
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = 
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;

MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;

MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing 
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS 
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC 
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB 
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST 
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE 
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS 
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;

MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;

MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;

MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 - 
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS 
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;

MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 7.7962145684455E-11 OVLMAX 0.9999998579 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;

MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 * 
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / 
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / ( 
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * 
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - 
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - 
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - 
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - 
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - 
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - 
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - 
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - 
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - 
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - 
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - 
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - 
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - 
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - 
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - 
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - 
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - 
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - 
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - 
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) 
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number 
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;

MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS = 
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE = 
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB = 
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP = 
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS 
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior 
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability" 
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative 
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS = 
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents" 
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound 
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage" 
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min 
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;

MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP = 
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS = 
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC 
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior 
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response" 
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of 
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative 
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC 
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative 
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best 
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift" 
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative % 
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift" 
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC = 
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3759728    %let grouptarget=0;
3759729    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3759730    set EMWS1.Grp5_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp5_EMLOOPINFO;
3759731    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3759732    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3759733    stop;
MPRINT(EM_DIAGRAM):   stop;
3759734    end;
MPRINT(EM_DIAGRAM):   end;
3759735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP5_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759736    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3759737    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759738    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759739    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759739  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759740    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759741    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759742    set EMWS1.EndGrp6_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT;
3759743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759744    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMOUTFIT_LOOP;
3759745    set EMWS1.EndGrp6_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMOUTFIT_LOOP work.EMOUTFIT;
3759746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS1.ENDGRP6_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMOUTFIT_LOOP has 11 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759747    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3759748    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759749    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759750    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759750  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759751    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759752    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759753    set EMWS1.EndGrp6_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT;
3759754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759755    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMREPORTFIT_LOOP;
3759756    set EMWS1.EndGrp6_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMREPORTFIT_LOOP work.EMREPORTFIT;
3759757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP has 209 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759758    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3759759    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759760    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759761    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759761  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759762    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759763    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759764    set EMWS1.EndGrp6_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK;
3759765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3759766    data EMWS1.EndGrp6_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMRANK_LOOP;
3759767    set EMWS1.EndGrp6_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMRANK_LOOP work.EMRANK;
3759768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP6_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP6_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759769    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3759770    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759771    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759772    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759772  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759773    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759774    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759775    set EMWS1.EndGrp6_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST;
3759776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759777    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMSCOREDIST_LOOP;
3759778    set EMWS1.EndGrp6_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMSCOREDIST_LOOP work.EMSCOREDIST;
3759779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP has 220 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759780    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3759781    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759782    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759783    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759783  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759784    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759785    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759786    set EMWS1.EndGrp6_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION;
3759787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

3759788    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMCLASSIFICATION_LOOP;
3759789    set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3759790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759791    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP out=_temp;
3759792    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3759793    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3759794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3759795    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3759795  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
totalCount totalPercent);
3759796    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3759797    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3759798    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3759799    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3759800    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3759801    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3759802    end;
MPRINT(EM_DIAGRAM):   end;
3759803    else do;
MPRINT(EM_DIAGRAM):   else do;
3759804    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3759805    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3759806    end;
MPRINT(EM_DIAGRAM):   end;
3759807    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3759808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3759809    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3759809  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
eventCount eventPercent);
3759810    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3759811    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3759812    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3759813    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3759814    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3759815    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3759816    end;
MPRINT(EM_DIAGRAM):   end;
3759817    else do;
MPRINT(EM_DIAGRAM):   else do;
3759818    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3759819    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3759820    end;
MPRINT(EM_DIAGRAM):   end;
3759821    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3759822    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759823    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3759823  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL 
neventCount neventPercent);
3759824    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3759825    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3759826    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3759827    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3759828    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then 
do;
3759829    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3759830    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3759831    end;
MPRINT(EM_DIAGRAM):   end;
3759832    else do;
MPRINT(EM_DIAGRAM):   else do;
3759833    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3759834    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3759835    end;
MPRINT(EM_DIAGRAM):   end;
3759836    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then 
output;
3759837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3759838    data EMWS1.EndGrp6_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMMISC_LOOP;
3759839    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3759840    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3759841    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3759841  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3759841  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3759842       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3759842  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3759842  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3759843       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3759843  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label" 
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent = 
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total 
Percentage" totalCount = "Total Count";
3759844    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3759845    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3759846    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3759847    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3759848    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP6_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

3759849    proc sort data=EMWS1.EndGrp6_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp6_EMMISC_LOOP;
3759850    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3759851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.ENDGRP6_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP6_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759852    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3759853    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3759854    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3759855    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3759855  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3759856    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3759857    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3759858    set EMWS1.EndGrp6_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMEVENTREPORT;
3759859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759860    data EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
3759861    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3759862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP6_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759863    %let _cn = %sysfunc(getoption(CENTER));
3759864    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3759865    proc print data=EMWS1.EndGrp6_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMREPORTFIT_LOOP noobs label;
3759866    var STAT LABEL TRAIN
3759867    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3759868    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3759869    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3759870    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3759871    run;

NOTE: There were 209 observations read from the data set EMWS1.ENDGRP6_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2453.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3759872    title10;
MPRINT(EM_DIAGRAM):   title10;
3759873    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3759874    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP nothreads;
3759875    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3759876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3759877    %let _cn = %sysfunc(getoption(CENTER));
3759878    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3759879    proc print data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMCLASSIFICATION_LOOP noobs label;
3759880    var from into pct_row pct_col count percent
3759881    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3759882    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3759883    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3759884    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3759885    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3759886    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3759887    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3759888    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3759889    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3759890    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3759891    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3759892    run;

NOTE: There were 44 observations read from the data set EMWS1.ENDGRP6_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2454.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3759893    title9;
MPRINT(EM_DIAGRAM):   title9;
3759894    title10;
MPRINT(EM_DIAGRAM):   title10;
3759895    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3759896    %let _cn = %sysfunc(getoption(CENTER));
3759897    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3759898    data EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
3759899    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3759899  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT 
FALSEEVENT TRUEEVENT 8;
3759900    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3759900  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3759900  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3759900  ! FALSEEVENT
3759901    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3759901  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3759901  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3759902       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target 
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True 
Positive" TRUENEVENT = "True Negative";
3759903    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3759904    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3759905    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3759906    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3759907    set EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp6_EMEVENTREPORT_LOOP;
3759908    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP6_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

3759909    proc print data=EMWS1.EndGrp6_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMEVENTREPORT_LOOP noobs label;
3759910    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3759911    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3759912    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3759913    run;

NOTE: There were 1 observations read from the data set EMWS1.ENDGRP6_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2455.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3759914    title10;
MPRINT(EM_DIAGRAM):   title10;
3759915    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3759916    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3759917    modify EndGrp6_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3759918    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3759919    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3759919  ! ;
MPRINT(EM_DIAGRAM):   run;
3759920    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMRANK_LOOP.DATA.
3759921    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

3759922    %let _cn = %sysfunc(getoption(CENTER));
3759923    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3759924    proc print data=EMWS1.EndGrp6_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMRANK_LOOP label noobs;
3759925    var
3759926    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3759927    by
3759928    notsorted DATAROLE
3759929    notsorted _WHERE_
3759930    notsorted TARGET
3759931    notsorted TARGETLABEL
3759932    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3759933    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3759934    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3759935    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP6_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2456.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3759936    title10;
MPRINT(EM_DIAGRAM):   title10;
3759937    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3759938    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3759939    modify EndGrp6_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp6_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3759940    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3759940  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3759941    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3759941  ! ;
MPRINT(EM_DIAGRAM):   run;
3759942    run;

NOTE: MODIFY was successful for EMWS1.ENDGRP6_EMSCOREDIST_LOOP.DATA.
3759943    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

3759944    %let _cn = %sysfunc(getoption(CENTER));
3759945    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3759946    proc print data=EMWS1.EndGrp6_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp6_EMSCOREDIST_LOOP label noobs;
3759947    var
3759948    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3759949    by
3759950    notsorted DATAROLE
3759951    notsorted _WHERE_
3759952    notsorted TARGET
3759953    notsorted TARGETLABEL
3759954    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted 
TARGETLABEL ;
3759955    where TARGET in(
3759956    "DepVar"
3759957    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3759958    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3759959    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3759960    run;

NOTE: There were 220 observations read from the data set EMWS1.ENDGRP6_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2457.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

3759961    title10;
MPRINT(EM_DIAGRAM):   title10;
3759962    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3759963    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:44 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMOUTPUT.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:44 o'clock" 
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp6\EMRUNSTATUS.xml' encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp6_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp6_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
