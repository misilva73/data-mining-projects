MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:19 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:05:19 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WOHKHT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WOHKHT new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMGROUP\EMLOG_11.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:19 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMGROUP\EMOUTPUT_11.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:19 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3463743    proc freq data=EMWS1.Grp2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Grp2_VariableSet noprint;
3463744    table ROLE*LEVEL/out=WORK.Grp2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Grp2META;
3463745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.GRP2_VARIABLESET.
NOTE: The data set WORK.GRP2META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

3463746    proc print data=WORK.Grp2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Grp2META label noobs;
3463747    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3463748    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3463749    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3463750    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3463751    run;

NOTE: There were 4 observations read from the data set WORK.GRP2META.
NOTE: The PROCEDURE PRINT printed page 2302.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3463752    title10;
MPRINT(EM_DIAGRAM):   title10;
3463753    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Grp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Grp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464076    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3464077    * Grp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Grp2: Generation of macros and macro variables;
3464078    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3464079    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

3464080    %let EMEXCEPTIONSTRING=;
3464081    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3464082    * TRAIN: Grp2;
MPRINT(EM_DIAGRAM):   * TRAIN: Grp2;
3464083    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464084    %let EM_ACTION = TRAIN;
3464085    %let syscc = 0;
3464086    %macro main;
3464087    
3464088       filename temp catalog 'sashelp.emutil.gp_macros.source';
3464089       %include temp;
3464090       filename temp;
3464091    
3464092       %SetProperties;
3464093    
3464094       %if %upcase(&EM_ACTION) = CREATE %then %do;
3464095    
3464096           filename temp catalog 'sashelp.emutil.gp_create.source';
3464097           %include temp;
3464098           filename temp;
3464099    
3464100           %create;
3464101       %end;
3464102       %else
3464103       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3464104    
3464105           filename temp catalog 'sashelp.emutil.gp_train.source';
3464106           %include temp;
3464107           filename temp;
3464108    
3464109           %train;
3464110       %end;
3464111       %else
3464112       %if %upcase(&EM_ACTION) = SCORE %then %do;
3464113    
3464114           filename temp catalog 'sashelp.emutil.gp_score.source';
3464115           %include temp;
3464116           filename temp;
3464117    
3464118           %score;
3464119       %end;
3464120       %else
3464121       %if %upcase(&EM_ACTION) = REPORT %then %do;
3464122    
3464123           filename temp catalog 'sashelp.emutil.gp_report.source';
3464124           %include temp;
3464125           filename temp;
3464126    
3464127           %report;
3464128    
3464129       %end;
3464130       %else
3464131       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3464132    
3464133           filename temp catalog 'sashelp.emutil.gp_postloop.source';
3464134           %include temp;
3464135           filename temp;
3464136    
3464137           %postloop;
3464138    
3464139       %end;
3464140    
3464141       %doendm:
3464142    %mend main;
3464143    
3464144    %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_MACROS.SOURCE.
3464145   +%macro SetProperties;
3464146   +   %em_checkmacro(name=EM_PROPERTY_MODE,            global=Y, value=STRATIFY);
3464147   +   %em_checkmacro(name=EM_PROPERTY_TARGETGROUP,     global=Y, value=Y);
3464148   +   %em_checkmacro(name=EM_PROPERTY_INDEXCOUNT,      global=Y, value=10);
3464149   +   %em_checkmacro(name=EM_PROPERTY_MINIMUMOBS,      global=Y, value=10);
3464150   +   %em_checkmacro(name=EM_PROPERTY_SIZETYPE,        global=Y, value=PERCENT);
3464151   +   %em_checkmacro(name=EM_PROPERTY_SIZEOBS,         global=Y, value=.);
3464152   +   %em_checkmacro(name=EM_PROPERTY_SIZEPERCENT,     global=Y, value=10);
3464153   +%mend SetProperties;
3464154   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_TRAIN.SOURCE.
3464155   +%macro scoreValidTest(data=, out=);
3464157   +   %if ("&data" ne "") and (%sysfunc(exist(&data, VIEW)) or %sysfunc(exist(&data))) %then %do;
3464158   +       data &out / view = &out;
3464159   +          retain _RESAMP_ 1;
3464160   +          set &data;
3464161   +       run;
3464162   +   %end;
3464164   +%mend scoreValidTest;
3464166   +%macro getVariables;
3464167   +   %if "&emloopnumber" = "1" %then %do;
3464168   +       data _null_;
3464169   +          retain numgoup 0;
3464170   +          set &em_data_variableset end=eof;
3464171   +          %if &em_num_target = 1 %then %do;
3464172   +              %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3464173   +                  where (role = 'TARGET' and level ^= 'INTERVAL' and grouprole in('BOOST', 'DEFAULT'));
3464174   +                  if role eq 'TARGET' then call symput('emboostvar', strip(NAME));
3464175   +              %end;
3464176   +              %else
3464177   +              %if &EM_PROPERTY_MODE = BAGGING %then %do;
3464178   +                  where (role = 'TARGET' and grouprole in('BAG', 'DEFAULT'));
3464179   +                  if role eq 'TARGET' then call symput('embagvar', strip(NAME));
3464180   +              %end;
3464181   +          %end;
3464182   +          %else %do;
3464183   +              where (grouprole= 'GROUP' or (role = 'TARGET' and grouprole in('BAG', 'BOOST')) or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
3464184   +              if grouprole eq 'BAG' then call symput('embagvar', strip(NAME));
3464185   +              else
3464186   +              if grouprole eq 'BOOST' then call symput('emboostvar', strip(NAME));
3464187   +          %end;
3464188   +          if grouprole = 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT') then do;
3464189   +             call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
3464190   +             numgroup + 1;
3464191   +          end;
3464192   +          if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
3464193   +       run;
3464194   +    %end;
3464195   +    %else %do;
3464196   +          %if "&EM_PROPERTY_MODE" = "STRATIFY" or "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3464197   +            data _null_;
3464198   +               retain numgoup 0;
3464199   +               set &em_data_variableset end=eof;
3464200   +               where (grouprole= 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
3464201   +               call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
3464202   +               numgroup + 1;
3464203   +               if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
3464204   +            run;
3464205   +          %end;
3464206   +            %else
3464207   +        %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3464208   +            %em_getName(key=BOOSTINFO,   type=DATA);
3464209   +            %if %sysfunc(exist(&em_user_boostinfo)) %then %do;
3464210   +                data _null_;
3464211   +                   set &em_user_boostinfo;
3464212   +                   call symput('emboostvar', strip(_TARGET_));
3464213   +                run;
3464214   +            %end;
3464215   +        %end;
3464216   +        %else
3464217   +            %if &EM_PROPERTY_MODE = BAGGING %then %do;
3464218   +                %em_getName(key=BAGINFO,   type=DATA);
3464219   +                %if %sysfunc(exist(&em_user_baginfo)) %then %do;
3464220   +                    data _null_;
3464221   +                       set &em_user_baginfo;
3464222   +                      call symput('embagvar', strip(_TARGET_));
3464223   +                    run;
3464224   +                %end;
3464225   +            %end;
3464226   +    %end;
3464227   +%mend getVariables;
3464229   +%macro gp_bag(targetname=);
3464230   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3464231   +        %put LOOP MODE:   &emloopmode ;
3464232   +        %put LOOP NUMBER: &emloopnumber;
3464233   +        %put BAGGING TARGET: &targetname;
3464234   +   %end;
3464236   +   filename temp catalog 'sashelp.emutil.gp_boostmacros.source';
3464237   +   %include temp;
3464238   +   filename temp;
3464240   +   %em_getName(key=BAGINFO,    type=DATA);
3464241   +   %em_getName(key=EMLOOPINFO, type=DATA);
3464243   +   %if &emloopnumber = 1 %then %do;
3464244   +       filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3464245   +       data _null_;
3464246   +          file gpdelta;
3464247   +          put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3464248   +          put "else if upcase(NAME) eq '_RESAMP_' then do;";
3464249   +          put "     LABEL='Bootstrap Frequency'; LEVEL='INTERVAL'; ROLE='FREQ';";
3464250   +          put "end;";
3464251   +       run;
3464252   +       filename gpdelta;
3464254   +       %if %sysfunc(exist(&em_user_baginfo)) %then %do;
3464255   +           proc datasets lib=&em_lib nolist;
3464256   +              delete &em_nodeid._baginfo;
3464257   +           run;
3464258   +       %end;
3464260   +       %if "%em_freq" ne "" %then %do;
3464261   +           proc means data=&em_import_data sum;
3464262   +              var %em_freq;
3464263   +              output out = _tempds sum=sumfreq;
3464264   +           run;
3464265   +           quit;
3464266   +           data _null_;
3464267   +              set _tempDs;
3464268   +              call symput('_sumfreq', put(sumfreq, best12.));
3464269   +           run;
3464270   +       %end;
3464271   +       %else %do;
3464272   +           proc sql noprint;
3464273   +              select count(*) into :_sumfreq
3464274   +              from &em_import_data;
3464275   +           quit;
3464276   +       %end;
3464278   +       %if "&em_property_SizeType" eq "PERCENT" %then %do;
3464279   +           data _null_;
3464280   +              call symput('_size', put(round(&_sumfreq*&em_property_sizepercent/100), best12.));
3464281   +           run;
3464282   +       %end;
3464283   +       %else
3464284   +           %let _size = &em_property_sizeobs;
3464286   +       data &em_user_baginfo;
3464287   +          length _LOOP_ 8 _TARGET_ $32 _SUMFREQ_ 8 _SIZE_ 8;
3464288   +          _LOOP_     =&EM_PROPERTY_INDEXCOUNT;
3464289   +          _TARGET_   ="&targetname";
3464290   +          _SUMFREQ_  =&_sumfreq;
3464291   +           _SIZE_    = &_size;
3464292   +          output;
3464293   +       run;
3464294   +       data &em_user_emloopinfo;
3464295   +          length MODE $8;
3464296   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3464297   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464298   +               _TARGET_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3464299   +           set &em_user_baginfo(keep=_LOOP_ _TARGET_);
3464300   +           MODE='Bagging';
3464301   +       run;
3464303   +       data &em_data_eminfo;
3464304   +          length TARGET KEY $32  DATA $43;
3464305   +          TARGET=''; KEY='BAGINFO'; DATA="&em_nodeid"; output;
3464306   +       run;
3464307   +   %end;
3464308   +   %else %do;
3464309   +      data _null_;
3464310   +         set &em_user_baginfo;
3464311   +         call symput('_sumfreq', put(_sumfreq_, best12.));
3464312   +         call symput('_size', put(_size_, best12.));
3464313   +      run;
3464314   +   %end;
3464316   +   %let bagsumFreq  = &_sumFreq;
3464317   +   %let bagSize     = &_Size;
3464319   +   %embag( _tra=&em_export_train, _train=&em_import_data, _seed=&em_property_randomseed, _freq=%em_freq,
3464320   +           _sumfreq=&bagsumfreq, _size=&bagsize, _loop=&emloopnumber);
3464322   +   %scoreValidTest(data=&em_import_validate, out=em_export_validate);
3464323   +   %scoreValidTest(data=&em_import_test,     out=em_export_test);
3464325   +   %doendbg:
3464327   +%mend gp_bag;
3464330   +%macro gp_boost(targetname=);
3464331   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3464332   +       %put LOOP MODE:   &emloopmode ;
3464333   +       %put LOOP NUMBER: &emloopnumber;
3464334   +        %put BAGGING TARGET: &targetname;
3464335   +   %end;
3464337   +   filename temp catalog 'sashelp.emutil.gp_boostmacros.source';
3464338   +   %include temp;
3464339   +   filename temp;
3464341   +   %em_getname(key=EMLOOPINFO, type=DATA);
3464342   +   %em_getname(key=BOOSTWEIGHT, type=DATA);
3464343   +   %em_getname(key=BOOSTSCORE,  type=DATA);
3464344   +   %em_getName(key=BOOSTINFO,   type=DATA);
3464346   +   %if &emloopnumber = 1 %then %do;
3464347   +       filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3464348   +       data _null_;
3464349   +          file gpdelta;
3464350   +          put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3464351   +          put "else if upcase(NAME) eq '_RESAMP_' then do;";
3464352   +          put "     LABEL='Arcing Frequency'; LEVEL='INTERVAL'; ROLE='FREQ';";
3464353   +          put "end;";
3464354   +       run;
3464355   +       filename gpdelta;
3464357   +       %let deleteString =;
3464358   +       %if %sysfunc(exist(&em_user_boostweight)) %then %let deleteString = &deleteString &em_nodeid._boostweight;
3464359   +       %if %sysfunc(exist(&em_user_boostscore))  %then %let deleteString = &deleteString &em_nodeid._boostscore;
3464360   +       %if "&deleteString" ne "" %then %do;
3464361   +           proc datasets lib=&em_lib nolist;
3464362   +              delete &deleteString;
3464363   +           run;
3464364   +       %end;
3464366   +       %emboost0( _train=&em_import_data, _dmboods=&em_user_boostweight, _target=&targetname, _freq=%em_freq);
3464368   +       data &em_user_boostinfo;
3464369   +          length _LOOP_ 8 _TARGET_ $32 _DMBOOST_DIVISOR_ 8 _SUMFREQ_ 8;
3464370   +          _LOOP_            =&EM_PROPERTY_INDEXCOUNT;
3464371   +          _TARGET_          ="&targetname";
3464372   +          _DMBOOST_DIVISOR_ =&_dmboodiv;
3464373   +          _SUMFREQ_         =&_sumfreq;
3464374   +       run;
3464375   +       data &em_user_emloopinfo;
3464376   +          length MODE $8;
3464377   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3464378   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464379   +               _TARGET_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3464380   +           set &em_user_boostinfo(keep=_LOOP_ _TARGET_);
3464381   +           MODE='Boosting';
3464382   +       run;
3464384   +       data &em_data_eminfo;
3464385   +          length TARGET KEY $32  DATA $43;
3464386   +          TARGET=''; KEY='BOOSTINFO'; DATA="&em_nodeid"; output;
3464387   +       run;
3464389   +   %end;
3464390   +   %else %do;
3464391   +       %global _dmboodiv;
3464392   +       %let dmboosf = %upcase(&targetname);
3464393   +       %if %sysfunc(length(&targetname))> 30 %then
3464394   +           %let dmboosf =  %substr(&targetname, 1, 30);
3464396   +       data _null_;
3464397   +          set &em_user_boostinfo;
3464398   +          call symput('_SUMFREQ',  strip(put(_sumfreq_,best12.)));
3464399   +       run;
3464401   +       %emboost2(_freq=%em_freq, _dmboods=&em_user_boostweight, _dmensds=&em_user_boostscore, _dmboosf=&dmboosf, _sumfreq=&_sumfreq);
3464403   +       data &em_user_boostinfo;
3464404   +          set &em_user_boostinfo;
3464405   +          _DMBOOST_DIVISOR_ =&_dmboodiv;
3464406   +       run;
3464408   +       %emboost1(_tra=&em_export_train, _TRAIN=&em_import_data, _FREQ=%em_freq, _dmboods=&em_user_boostweight, _dmboodiv=&_dmboodiv);
3464410   +   %end;
3464412   +    %scoreValidTest(data=&em_import_validate, out=em_export_validate);
3464413   +    %scoreValidTest(data=&em_import_test,     out=em_export_test);
3464415   +   %doendbst:
3464417   +%mend gp_boost;
3464419   +%macro gp_group(numgroupvar=, groupvar=);
3464420   +   %em_getname(key=GROUPINFO, type=DATA);
3464421   +   %em_getName(key=LOOPINFO,  type=DATA);
3464422   +   %em_getName(key=EMGROUPINFO, type=DATA);
3464424   +   %if &emloopnumber=1 or ^%sysfunc(exist(&em_user_groupinfo)) %then %do;
3464425   +       ods listing close;
3464426   +       %if &numgroupvar = 1 %then %do;
3464427   +           ods output onewayfreqs=temp;
3464428   +       %end;
3464429   +       %else %do;
3464430   +           ods output crosstabfreqs=temp;
3464431   +       %end;
3464432   +       proc freq data=&em_import_data;
3464433   +          table
3464435   +          %let tableString =;
3464436   +          %let freqString  =;
3464437   +          %do i=1 %to &numgroupvar;
3464438   +              %let tableString = &tableString %scan(&groupvar, &i, %str( ));
3464439   +              %if &i<&numgroupvar %then %let tableString = &tableString *;
3464440   +              %let freqString = &freqString.1;
3464441   +          %end;
3464442   +          &tableString / missing;
3464443   +       run;
3464444   +       ods listing;
3464445   +       %if &numgroupvar = 1 %then %do;
3464446   +           data _null_;
3464447   +              retain totalobs 0;
3464448   +              set temp end=eof;
3464449   +              totalobs + frequency;
3464450   +              if eof then
3464451   +                 call symput('_totalObs_', put(totalobs, best.));
3464452   +           run;
3464454   +           proc sort data=temp out=loopinfo nodupkey;
3464455   +              by &groupvar;
3464456   +              where frequency>=&em_property_minimumObs;
3464457   +           run;
3464458   +       %end;
3464459   +       %else %do;
3464460   +           data _null_;
3464461   +              set temp;
3464462   +              where _type_='00';
3464463   +              call symput('_totalObs_', put(frequency, best.));
3464464   +           run;
3464465   +           proc sort data=temp(drop=rowpercent colpercent) out=loopinfo nodupkey;
3464466   +              by &groupvar;
3464467   +              where _type_="&freqString" and frequency>=&em_property_minimumObs;
3464468   +           run;
3464469   +       %end;
3464471   +       %em_getname(key=PRECODE, type=FILE, extension=sas);
3464472   +       filename _pregrp "&em_user_precode";
3464474   +       %let dsid = %sysfunc(open(loopinfo));
3464475   +       %do i=1 %to &numgroupvar;
3464476   +           %let varname = %scan(&groupvar, &i, %str( ));
3464477   +           %let varnum  = %sysfunc(varnum(&dsid, &varname));
3464478   +           %let varfmt  = %sysfunc(varfmt(&dsid, &varnum));
3464479   +           %if %index(&varfmt, -) %then %do;
3464480   +               %let varfmt = %sysfunc(scan(&varfmt, 1,-)).;
3464481   +           %end;
3464483   +           %let vartype = %sysfunc(vartype(&dsid, &varnum));
3464484   +           %let varlen  = %sysfunc(varlen(&dsid, &varnum));
3464485   +           %let fmttype&i = &vartype;
3464486   +           %let fmtlen&i  = &varlen;
3464488   +           %let fmtvar&i =;
3464489   +           %let fmt&i    =;
3464490   +           %if "&varfmt" ne "" %then %do;
3464491   +              %let fmtvar&i  = _FORMAT&i._;
3464492   +              %let fmt&i     = &varfmt;
3464493   +           %end;
3464494   +       %end;
3464495   +       %let dsid = %sysfunc(close(&dsid));
3464497   +       data _null_;
3464498   +          %do i=1 %to &numgroupvar;
3464499   +              %if "&&fmt&i" ne "" %then %do;
3464500   +                  retain len_&i 0;
3464501   +              %end;
3464502   +          %end;
3464504   +          set loopinfo end=eof;
3464505   +          file _pregrp;
3464507   +          %do i=1 %to &numgroupvar;
3464508   +              %let varname = %scan(&groupvar, &i, %str( ));
3464509   +              %if "&&fmt&i" ne "" %then %do;
3464510   +                 if length(put(&varname, &&fmt&i)) > len_&i then
3464511   +                    len_&i = length(put(&varname, &&fmt&i));
3464512   +              %end;
3464513   +          %end;
3464515   +          if eof then do;
3464516   +             %do i=1 %to &numgroupvar;
3464517   +                 %let varname = %scan(&groupvar, &i, %str( ));
3464518   +                 %if "&&fmt&i" ne "" %then %do;
3464519   +                     put "length  &&fmtvar&i" len_&i "$" len_&i ";";
3464520   +                     put "drop &&fmtvar&i" len_&i ";";
3464521   +                     put "&&fmtvar&i" len_&i "= strip(put(&varname, &&fmt&i));";
3464522   +                     call symput('fmtnewlen'!!"&i", put(len_&i, best.));
3464523   +                     call symput('fmtnewvar'!!"&i", "&&fmtvar&i"!!strip(put(len_&i, best.)));
3464524   +                 %end;
3464525   +              %end;
3464526   +          end;
3464527   +      run;
3464529   +      data loopinfo;
3464530   +         set loopinfo;
3464531   +         %do i=1 %to &numgroupvar;
3464532   +             %let varname = %scan(&groupvar, &i, %str( ));
3464533   +             %if "&&fmt&i" ne "" %then %do;
3464534   +                 length  &&fmtnewvar&i $&&fmtnewlen&i;
3464535   +                 &&fmtnewvar&i = strip(put(&varname, &&fmt&i));
3464536   +             %end;
3464537   +         %end;
3464538   +      run;
3464539   +      filename _pregrp;
3464541   +      %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3464542   +          data temp;
3464543   +             length _LOOP_ 8 _WHERE_  _WHEREDESC_ $2000;
3464544   +             keep _LOOP_ _WHERE_ _WHEREDESC_ FREQUENCY;
3464545   +      %end;
3464546   +      %else %do;
3464547   +          data &em_user_groupinfo;
3464548   +             length _LOOP_ 8 _TARGET_ $32 _WHERE_  _WHEREDESC_ $2000;
3464549   +             keep _LOOP_ _TARGET_  _WHERE_ _WHEREDESC_ FREQUENCY;
3464550   +             retain _TARGET_ '';
3464551   +      %end;
3464553   +          set loopinfo;
3464554   +          _LOOP_= _N_;
3464555   +          _WHERE_ = '';
3464556   +          _WHEREDESC_  = '';
3464557   +          %do i=1 %to &numgroupvar;
3464558   +              %let varname = %scan(&groupvar, &i, %str( ));
3464559   +              %if "&&fmt&i" eq "" %then %do;
3464560   +                  %if "&&fmtType&i" eq "N" %then %do;
3464561   +                      _WHERE_     = strip(_WHERE_)!!" &Varname ="!!strip(put(&varname, best12.));
3464562   +                      _WHEREDESC_ = strip(_WHEREDESC_)!!" &Varname ="!!strip(put(&varname, best12.));
3464563   +                   %end;
3464564   +                  %else %do;
3464565   +                       _WHERE_ = strip(_WHERE_)!!" &Varname ='"!!tranwrd(strip(&varname), "'", "''")!!"'";
3464566   +                       _WHEREDESC_ = strip(_WHEREDESC_)!!" &Varname ="!!strip(&varname);
3464567   +                  %end;
3464568   +              %end;
3464569   +              %else %do;
3464570   +                       _WHERE_ = strip(_WHERE_)!!" &&fmtnewvar&i ='"!!tranwrd(strip(&&fmtnewvar&i), "'", "''")!!"'";
3464571   +                       _WHEREDESC_ = strip(_WHEREDESC_)!!" &VarName = "!!strip(&&fmtnewvar&i);
3464572   +              %end;
3464573   +              %if &i < &numgroupvar %then %do;
3464574   +                  _WHERE_ = strip(_WHERE_)!!' and ';
3464575   +                  _WHEREDESC_ = strip(_WHEREDESC_)!!' and ';
3464576   +              %end;
3464577   +          %end;
3464578   +          %if "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3464579   +              _WHERE_ = '^('!!strip(_WHERE_)!!')';
3464580   +              _WHEREDESC_ = '^('!!strip(_WHEREDESC_)!!')';
3464581   +              FREQUENCY = &_totalobs_ - FREQUENCY;
3464582   +          %end;
3464583   +      run;
3464585   +      %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3464586   +          data target;
3464587   +             length _TARGET_ $32;
3464588   +              %do i=1 %to &em_num_target;
3464589   +                  %let varname = %scan(%em_target, &i, %str( ));
3464590   +                  _TARGET_ = "&varname";
3464591   +                  output;
3464592   +              %end;
3464593   +          run;
3464594   +          proc sql;
3464595   +             create table &em_user_groupinfo as select * from  work.temp, work.target;
3464596   +          quit;
3464597   +          data &em_user_groupinfo;
3464598   +             set &em_user_groupinfo;
3464599   +             _LOOP_=_N_;
3464600   +          run;
3464601   +      %end;
3464603   +      data &em_data_eminfo;
3464604   +         length TARGET KEY $32  DATA $43;
3464605   +         TARGET=''; KEY='GROUPINFO'; DATA="&em_nodeid"; output;
3464606   +      run;
3464608   +      data &em_user_emloopinfo;
3464609   +         set &em_user_groupinfo;
3464610   +         %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3464611   +             label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464612   +                   _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))"
3464613   +                   _WHEREDESC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel,      NOQUOTE))"
3464614   +                   FREQUENCY   = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))";
3464615   +             keep _LOOP_ _TARGET_ _WHEREDESC_ FREQUENCY;
3464616   +         %end;
3464617   +         %else %do;
3464618   +             label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464619   +                   _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))"
3464620   +                   _WHEREDESC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel,      NOQUOTE))"
3464621   +                   FREQUENCY   = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))";
3464622   +             keep _LOOP_ _WHEREDESC_ FREQUENCY;
3464623   +         %end;
3464624   +      run;
3464626   +      proc datasets lib=work nolist;
3464627   +          delete temp loopinfo
3464628   +          %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3464629   +              target
3464630   +          %end;
3464631   +          ;
3464632   +      run;
3464634   +   %end;
3464636   +   filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3464637   +   %if (&EM_PROPERTY_TARGETGROUP= Y and &EM_NUM_TARGET>1) %then %do;
3464638   +       data _null_;
3464639   +          length quotedTarget $32;
3464640   +          set &em_user_groupinfo;
3464641   +          file gpdelta;
3464642   +          if _N_ = &emloopnumber then do;
3464643   +             quotedTarget = "'"!!strip(_TARGET_)!!"'";
3464644   +             put "if ROLE = 'TARGET' and NAME ne " quotedTarget " then delete;";
3464646   +             %do i=1 %to &numgroupvar;
3464647   +                 %let gvar = %upcase(%scan(&groupvar, &i, %str( )));
3464648   +                 put "if upcase(NAME)= '&gvar' then delete;";
3464649   +             %end;
3464650   +          end;
3464651   +       run;
3464652   +   %end;
3464653   +   %else %do;
3464654   +       data _null_;
3464655   +          set &em_user_groupinfo;
3464656   +          file gpdelta;
3464657   +          if _N_ = &emloopnumber then do;
3464658   +             %do i=1 %to &numgroupvar;
3464659   +              %let gvar = %upcase(%scan(&groupvar, &i, %str( )));
3464660   +                 put "if upcase(NAME)= '&gvar' then delete;";
3464661   +             %end;
3464662   +          end;
3464663   +       run;
3464664   +   %end;
3464665   +   filename gpdelta;
3464667   +   %let nobs=0;
3464668   +   %let dsid = %sysfunc(open(&em_user_groupinfo));
3464669   +   %if &dsid>0 %then %do;
3464670   +       %let nobs = %sysfunc(attrn(&dsid, NOBS));
3464671   +       %let dsid = %sysfunc(close(&dsid));
3464672   +   %end;
3464674   +   %if ^&nobs  %then
3464675   +       %let emloopmode =;
3464676   +   %else
3464677   +       %if &nobs< &emloopnumber %then
3464678   +           %let emloopmode = POSTLOOP;
3464679   +        %else
3464680   +        %let emloopmode = LOOP;
3464681   +%mend gp_group;
3464683   +%macro gp_Index;
3464685   +   %em_getName(key=INDEXINFO,  type=DATA);
3464686   +   %em_getName(key=EMLOOPINFO, type=DATA);
3464688   +   %if &emloopnumber=1 or ^%sysfunc(exist(&em_user_indexinfo)) %then %do;
3464689   +       data &em_user_indexinfo;
3464690   +          length _LOOP_ 8 _TARGET_ $32 _WHERE_ $8;
3464691   +          _LOOP_     =&EM_PROPERTY_INDEXCOUNT;
3464692   +          _TARGET_   ="";
3464693   +          _WHERE_    ="";
3464694   +          output;
3464695   +       run;
3464696   +       data &em_data_eminfo;
3464697   +          length TARGET KEY $32  DATA $43;
3464698   +          TARGET=''; KEY='INDEXINFO'; DATA="&em_nodeid"; output;
3464699   +       run;
3464701   +       data &em_user_emloopinfo;
3464702   +          length MODE $8;
3464703   +          label MODE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,       NOQUOTE))"
3464704   +                _LOOP_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464705   +          set &em_user_indexinfo(keep=_LOOP_ );
3464706   +          MODE='Index';
3464707   +       run;
3464708   +   %end;
3464710   +%mend gp_index;
3464712   +%macro gp_Target;
3464713   +   %let TargetName = %scan(%em_target, &emloopnumber);
3464714   +   %if "&targetName" eq "" %then %do;
3464715   +       %goto doendgpt;
3464716   +   %end;
3464718   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3464719   +       %put GP_TARGET;
3464720   +       %put &emLoopnumber &TargetName;
3464721   +   %end;
3464723   +   filename gpDelta "&EM_FILE_CDELTA_TRAIN";
3464724   +   data _null_;
3464725   +      file gpdelta;
3464726   +      put "if ROLE = 'TARGET' and NAME ne '&targetName' then delete;";
3464727   +   run;
3464728   +   filename gpdelta;
3464730   +   %if &emloopnumber eq 1 %then %do;
3464731   +       %em_getName(key=TARGETINFO,  type=DATA);
3464732   +       %em_getName(key=EMLOOPINFO,  type=DATA);
3464734   +       data &em_user_targetinfo;
3464735   +          length _LOOP_ 8 _TARGET_ $32 _WHERE_ $2000;
3464736   +          retain _LOOP_;
3464737   +          _WHERE_ = '';
3464738   +          %do i=1 %to &em_num_target;
3464739   +              %let varname = %scan(%em_target, &i, ' ');
3464740   +              _TARGET_ = "&varname";
3464741   +              _LOOP_+1;
3464742   +              output;
3464743   +           %end;
3464744   +       run;
3464745   +       data &em_user_emloopinfo;
3464746   +         set &em_user_targetinfo(keep=_LOOP_ _TARGET_);
3464747   +         label _LOOP_      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel, NOQUOTE))"
3464748   +               _TARGET_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,     NOQUOTE))";
3464749   +      run;
3464751   +       data &em_data_eminfo;
3464752   +          length TARGET KEY $32  DATA $43;
3464753   +          TARGET=''; KEY='TARGETINFO'; DATA="&em_nodeid"; output;
3464754   +       run;
3464755   +   %end;
3464757   +   %doendgpt:
3464758   +%mend gp_target;
3464760   +%macro train;
3464761   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3464762   +       %put LOOP MODE:   &emloopmode ;
3464763   +       %put LOOP NUMBER: &emloopnumber;
3464764   +   %end;
3464766   +   %if &emloopmode eq 'POSTLOOP' %then %goto doendmain;
3464768   +   %if ("&EM_PROPERTY_MODE" = "BOOSTING") or ("&EM_PROPERTY_MODE" = "BAGGING") %then %do;
3464770   +       %let hpdmFlag = 0;
3464771   +       %if %symexist(em_import_DATA_eminfo) %then %do;
3464772   +            data _null_;
3464773   +               set &em_import_DATA_eminfo;
3464774   +               where KEY = "HPDMSAMPLE";
3464775   +               call symput('hpdmFlag', '1');
3464776   +            run;
3464777   +       %end;
3464778   +       %if &hpdmFlag %then %do;
3464779   +           %let emexceptionstring = exception.server.EMTOOL.HPNOBOOSTBAG;
3464780   +           %goto doendmain;
3464781   +       %end;
3464782   +   %end;
3464784   +   %em_getname(key=EMLOOPINFO,  type=DATA);
3464785   +   %em_getname(key=GROUPINFO,  type=DATA);
3464786   +   %em_getname(key=BOOSTINFO,  type=DATA);
3464787   +   %em_getname(key=BAGINFO,    type=DATA);
3464788   +   %em_getname(key=TARGETINFO, type=DATA);
3464789   +   %em_getname(key=INDEXINFO,  type=DATA);
3464790   +   %em_getname(key=EMINFO,  type=DATA);
3464792   +   %if "&emloopnumber" = "1" %then %do;
3464793   +       %em_getname(key=PRECODE, type=FILE, extension=sas);
3464794   +       filename _pregrp "&em_user_precode";
3464795   +       data _null_;
3464796   +         rc = fdelete('_pregrp');
3464797   +       run;
3464798   +       filename _pregrp;
3464800   +       %let members =;
3464801   +       %if %sysfunc(exist(&em_user_emloopinfo)) %then %let members = &members %scan(&EM_USER_EMLOOPINFO,   2, .);
3464802   +       %if %sysfunc(exist(&em_user_groupinfo))  %then %let members = &members %scan(&EM_USER_GROUPINFO,  2, .);
3464803   +       %if %sysfunc(exist(&em_user_targetinfo)) %then %let members = &members %scan(&EM_USER_TARGETINFO, 2, .);
3464804   +       %if %sysfunc(exist(&em_user_boostinfo))  %then %let members = &members %scan(&EM_USER_BOOSTINFO,  2, .);
3464805   +       %if %sysfunc(exist(&em_user_baginfo))    %then %let members = &members %scan(&EM_USER_BAGINFO,    2, .);
3464806   +       %if %sysfunc(exist(&em_user_indexinfo))  %then %let members = &members %scan(&EM_USER_INDEXINFO,  2, .);
3464807   +       %if %sysfunc(exist(&em_user_eminfo))     %then %let members = &members %scan(&EM_USER_EMINFO,  2, .);
3464809   +       %if "&members" ne "" %then %do;
3464810   +           proc datasets lib=&em_lib nolist;
3464811   +              delete &members;
3464812   +           run;
3464813   +      %end;
3464814   +   %end;
3464816   +   %let emboostvar    =;
3464817   +   %let embagvar      =;
3464818   +   %let emgroupvar    =;
3464819   +   %let emnumgroupvar =;
3464820   +   %getVariables;
3464822   +   %if &EM_PROPERTY_MODE = TARGET %then %do;
3464823   +       %if &EM_NUM_TARGET>=1 %then %do;
3464824   +           %gp_target;
3464825   +           %if &emLoopNumber <= &EM_NUM_TARGET %then
3464826   +               %let emloopmode= LOOP;
3464827   +           %else
3464828   +              %let emloopmode = POSTLOOP;
3464829   +       %end;
3464830   +       %else %do;
3464831   +           %let emloopmode = ;
3464832   +           %let emexceptionstring = exception.server.METADATA.USE1TARGET;
3464833   +           %goto doendmain;
3464834   +       %end;
3464835   +   %end;
3464836   +   %else
3464837   +   %if &EM_PROPERTY_MODE = NOGROUP %then %do;
3464838   +       %let emloopmode=;
3464839   +       %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3464840   +           proc delete data=&em_data_eminfo;
3464841   +           run;
3464842   +       %end;
3464843   +   %end;
3464844   +   %else
3464845   +   %if &EM_PROPERTY_MODE = INDEX %then %do;
3464846   +       %gp_index;
3464847   +       %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then
3464848   +           %let emloopmode= LOOP;
3464849   +       %else
3464850   +           %let emloopmode= POSTLOOP;
3464851   +   %end;
3464852   +   %else
3464853   +   %if "&EM_PROPERTY_MODE" = "STRATIFY" or "&EM_PROPERTY_MODE" = "CROSSVALIDATION"  %then %do;
3464854   +       %if "&emloopnumber"="1" and "&emgroupvar" eq "" %then %do;
3464855   +           %let emloopmode = ;
3464856   +           %let emexceptionstring = exception.server.METADATA.USE1GROUPVAR;
3464857   +           %goto doendmain;
3464858   +       %end;
3464860   +       %gp_group(numgroupvar=&emnumgroupvar, groupvar=&emgroupvar);
3464861   +   %end;
3464862   +   %else
3464863   +   %if &EM_PROPERTY_MODE = BOOSTING %then %do;
3464864   +       %if "&emboostvar" eq "" %then %do;
3464865   +           %let emloopmode = ;
3464866   +           %let emexceptionstring = exception.server.METADATA.USE1BOOSTVAR;
3464867   +           %goto doendmain;
3464868   +       %end;
3464870   +       %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then %do;
3464871   +           %let emloopmode= LOOP;
3464872   +           %gp_boost(targetname=&emboostvar);
3464874   +       %end;
3464875   +       %else
3464876   +           %let emloopmode= POSTLOOP;
3464877   +   %end;
3464878   +   %else
3464879   +   %if &EM_PROPERTY_MODE = BAGGING %then %do;
3464880   +       %if "&embagvar" eq "" %then %do;
3464881   +           %let emloopmode = ;
3464882   +           %let emexceptionstring = exception.server.METADATA.USE1BAGVAR;
3464883   +           %goto doendmain;
3464884   +       %end;
3464886   +        %if  &emLoopNumber <= &EM_PROPERTY_INDEXCOUNT %then %do;
3464887   +           %let emloopmode= LOOP;
3464888   +           %gp_bag(targetname=&embagvar);
3464889   +       %end;
3464890   +       %else
3464891   +           %let emloopmode= POSTLOOP;
3464892   +   %end;
3464895   +   %if &emloopmode eq "" %then %do;
3464896   +       %let lib    = %scan(&em_data_eminfo, 1, .);
3464897   +       %let member = %scan(&em_data_eminfo, 2, .);
3464898   +       proc datasets lib=&lib nolist;
3464899   +          delete &member;
3464900   +       run;
3464901   +   %end;
3464903   +   %doendmain:
3464905   +   %if %index(&EM_DEBUG, _ALL_) %then %do;
3464906   +       %put NEW LOOP MODE: &emloopmode;
3464907   +   %end;
3464909   +   %if "&emloopmode" eq "POSTLOOP" %then %do;
3464910   +       filename temp catalog 'sashelp.emutil.gp_postloop.source';
3464911   +       %include temp;
3464912   +       filename temp;
3464914   +       %postloop;
3464915   +   %end;
3464917   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(GETVARIABLES):   data _null_;
MPRINT(GETVARIABLES):   retain numgoup 0;
MPRINT(GETVARIABLES):   set EMWS1.Grp2_VariableSet end=eof;
MPRINT(GETVARIABLES):   where (grouprole= 'GROUP' or (role = 'SEGMENT' and grouprole = 'DEFAULT'));
MPRINT(GETVARIABLES):   call symput('emgroupvar', strip(symget('emgroupvar'))!!' '!!strip(NAME));
MPRINT(GETVARIABLES):   numgroup + 1;
MPRINT(GETVARIABLES):   if eof then call symput('emnumgroupvar', strip(put(numgroup, best.)));
MPRINT(GETVARIABLES):   run;

NOTE: There were 1 observations read from the data set EMWS1.GRP2_VARIABLESET.
      WHERE (grouprole='GROUP') or ((role='SEGMENT') and (grouprole='DEFAULT'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):  ;
MPRINT(GP_GROUP):   filename gpDelta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\CDELTA_TRAIN.sas";
MPRINT(GP_GROUP):   data _null_;
MPRINT(GP_GROUP):   set EMWS1.Grp2_GROUPINFO;
MPRINT(GP_GROUP):   file gpdelta;
MPRINT(GP_GROUP):   if _N_ = 11 then do;
MPRINT(GP_GROUP):   put "if upcase(NAME)= 'CV_VAR' then delete;";
MPRINT(GP_GROUP):   end;
MPRINT(GP_GROUP):   run;

NOTE: The file GPDELTA is:
      Filename=C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Grp2\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:20 o'clock,
      Create Time=02 June 2018 16:26:37 o'clock

NOTE: 0 records were written to the file GPDELTA.
NOTE: There were 10 observations read from the data set EMWS1.GRP2_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(GP_GROUP):   filename gpdelta;
NOTE: Fileref GPDELTA has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename temp catalog 'sashelp.emutil.gp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_POSTLOOP.SOURCE.
3464919   +%macro postloop;
3464920   +   %let deleteString =;
3464921   +
3464922   +   %em_getname(key=boostweight, type=DATA);
3464923   +   %em_getname(key=boostscore,  type=DATA);
3464924   +
3464925   +   %if %sysfunc(exist(&em_user_boostweight)) %then %let deleteString = &deleteString &em_nodeid._boostweight;
3464926   +   %if %sysfunc(exist(&em_user_boostscore))  %then %let deleteString = &deleteString &em_nodeid._boostscore;
3464927   +   %if "&deleteString" ne "" %then %do;
3464928   +       proc datasets lib=&em_lib nolist;
3464929   +          delete &deleteString;
3464930   +       run;
3464931   +   %end;
3464932   +
3464933   +   %em_register(key=EMLOOPINFO,    type=DATA);
3464934   +   %em_getname(key=EMLOOPINFO,    type=DATA);
3464935   +    proc print data=&em_user_emloopinfo noobs label;
3464936   +       title9 'Group Summary';
3464937   +    run;
3464938   +    title9;
3464939   +
3464940   +   %em_report(key=EMLOOPINFO, VIEWTYPE=DATA, AUTODISPLAY=Y, DESCRIPTION=miningresult, BLOCK=Gp);
3464941   +
3464942   +%mend postloop;
3464943   +
3464944   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):  ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1 property $1 action $8 cas $1;
MPRINT(EM_REGISTER):   key = upcase("EMLOOPINFO");
MPRINT(EM_REGISTER):   type = upcase("DATA");
MPRINT(EM_REGISTER):   file = "Grp2_EMLOOPINFO";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   run;

NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   proc print data=EMWS1.Grp2_EMLOOPINFO noobs label;
MPRINT(POSTLOOP):   title9 'Group Summary';
MPRINT(POSTLOOP):   run;
NOTE: There were 10 observations read from the data set EMWS1.GRP2_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2303.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(POSTLOOP):   title9;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "EMLOOPINFO";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "miningresult";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Gp";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.17111512560914;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(POSTLOOP):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Grp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464945    *------------------------------------------------------------*;
3464946    * End TRAIN: Grp2;
3464947    *------------------------------------------------------------*;
3464948    

3464949    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3464950    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3464951    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464952    ;
MPRINT(EM_DIAGRAM):   ;
3464953    ;
MPRINT(EM_DIAGRAM):   ;
3464954    ;
MPRINT(EM_DIAGRAM):   ;
3464955    ;
MPRINT(EM_DIAGRAM):   ;
3464956    quit;
MPRINT(EM_DIAGRAM):   quit;
3464957    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464958    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3464959    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3464960    /*; *"; *'; */
3464961    ;
MPRINT(EM_DIAGRAM):   ;
3464962    run;
MPRINT(EM_DIAGRAM):   run;
3464963    quit;
MPRINT(EM_DIAGRAM):   quit;
3464964    /* Reset EM Options */
3464965    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3464966    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3464967    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
3464968    proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
3464969    by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
3464970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
