*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:05:49 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:40 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:05:40 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CWVJQ3 "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CWVJQ3 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:40 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:40 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3492273    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492274    set EMWS1.Grp13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_EMINFO;
3492275    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3492276    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3492277    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3492278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492279    data WORK.M3VAIU9V;
MPRINT(EM_DIAGRAM):    data WORK.M3VAIU9V;
3492280    set WORK.M3VAIU9V;
MPRINT(EM_DIAGRAM):   set WORK.M3VAIU9V;
3492281    where upcase(NAME) in(
3492282    "DEPVAR"
3492283    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3492284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3VAIU9V.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M3VAIU9V has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492285    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Grp13_TRAIN EMWS1.Grp13_TRAIN
EMWS1.Grp13_TRAIN EMWS1.Grp13_TRAIN EMWS1 Grp13_TRAIN
EMWS1.Grp13_TRAIN EMWS1.Grp13_TRAIN
EMWS1.Grp13_TRAIN EMWS1.Grp13_TRAIN EMWS1 Grp13_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp13_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural5_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_DepVar_DD
out=EMWS1.Neural5_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3492332    data WORK.Neural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3492333    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3492334    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3492334  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3492334  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3492335       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3492335  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3492335  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3492336    set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
3492337    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3492338    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3492339    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3492340    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3492341    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3492342    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3492343    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3492344    end;
MPRINT(EM_DIAGRAM):   end;
3492345    output;
MPRINT(EM_DIAGRAM):   output;
3492346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL5_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3492347    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3492348    proc print data=WORK.Neural5_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural5_EVENT noobs label;
3492349    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3492350    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3492351    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3492352    run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL5_EVENT.
NOTE: The PROCEDURE PRINT printed page 2314.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492353    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3492354    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural5_DepVar_DM noobs label;
3492355    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3492356    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3492357    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3492357  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3492357  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3492358    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3492359    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3492360    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2315.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3492361    title10;
MPRINT(EM_DIAGRAM):   title10;
3492362    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492363    set EMWS1.Grp13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_EMINFO;
3492364    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3492365    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3492366    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3492367    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492368    filename emflow "C:\Users\misil\Desktop\DM
3492368  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
3492369    filename empub "C:\Users\misil\Desktop\DM
3492369  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas";
3492370    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492371    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3492372    set EMWS1.Grp13_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_GROUPINFO end=eof;
3492373    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3492374    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3492375    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3492376    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP13_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492377    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492378    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492379    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492380    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3492381    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492383    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_1.source";
3492384    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492385    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492386    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_1.source";
3492387    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492388    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492389    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492390    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492391    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11609,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3492393    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492394    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492395    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492396    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3492397    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492399    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_1.source";
3492400    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492401    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492402    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_1.source";
3492403    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492404    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492405    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492406    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492407    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492408    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10644,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492409    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492410    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492411    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492412    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3492413    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11615,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492415    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_2.source";
3492416    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11769,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
The SAS System
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492417    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492418    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_2.source";
3492419    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11806,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492420    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492421    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492422    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492423    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23224,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492425    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492426    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492427    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492428    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3492429    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10650,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492431    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_2.source";
3492432    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10805,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492433    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492434    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_2.source";
3492435    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=10842,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492436    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492437    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492438    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492439    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21294,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492441    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492442    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492443    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492444    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3492445    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23230,
      Last Modified=02 June 2018 17:05:40 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492447    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_3.source";
3492448    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23384,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492449    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492450    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_3.source";
3492451    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23421,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492452    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492453    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492454    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492455    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34839,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492457    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492458    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492459    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492460    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3492461    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=21300,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492463    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_3.source";
3492464    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21455,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492465    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492466    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_3.source";
3492467    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=21492,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492468    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492469    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492470    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492471    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31944,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492473    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492474    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492475    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492476    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3492477    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34845,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492479    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_4.source";
3492480    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=34999,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492481    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492482    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_4.source";
3492483    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35036,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492484    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492485    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492486    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492487    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46454,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492489    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492490    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492491    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492492    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3492493    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=31950,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3492495    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_4.source";
3492496    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32105,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492497    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492498    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_4.source";
3492499    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32142,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492500    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492501    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492502    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492503    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42594,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492505    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492506    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492507    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492508    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3492509    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46460,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492511    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_5.source";
3492512    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46614,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492513    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492514    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_5.source";
3492515    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46651,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492516    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492517    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492518    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492519    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58069,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492521    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492522    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492523    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492524    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3492525    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42600,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492527    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_5.source";
3492528    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42755,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492529    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492530    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_5.source";
3492531    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42792,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492532    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492533    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492534    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492535    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53244,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492537    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492538    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492539    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492540    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3492541    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58075,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492543    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_6.source";
3492544    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=58229,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492545    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492546    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_6.source";
3492547    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=58266,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492548    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492549    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492550    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492551    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=69684,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492553    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492554    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492555    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492556    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3492557    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53250,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492559    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_6.source";
3492560    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53405,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492561    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492562    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_6.source";
3492563    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53442,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492564    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492565    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492566    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492567    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63894,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492569    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492570    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492571    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492572    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3492573    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=69690,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492575    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_7.source";
3492576    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=69844,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492577    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492578    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_7.source";
3492579    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=69881,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492580    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492581    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492582    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492583    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=81299,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492585    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492586    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492587    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492588    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3492589    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=63900,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492591    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_7.source";
3492592    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=64055,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492593    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492594    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_7.source";
3492595    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=64092,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492596    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492597    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492598    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492599    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74544,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3492601    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492602    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492603    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492604    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3492605    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=81305,
      Last Modified=02 June 2018 17:05:41 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492607    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_8.source";
3492608    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=81459,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492609    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492610    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_8.source";
3492611    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=81496,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492612    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492613    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492614    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492615    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92914,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492617    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492618    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492619    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492620    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3492621    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=74550,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492623    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_8.source";
3492624    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=74705,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492625    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492626    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_8.source";
3492627    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=74742,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492628    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492629    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492630    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492631    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85194,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492633    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492634    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492635    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492636    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3492637    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92920,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492639    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_9.source";
3492640    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=93074,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492641    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492642    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_9.source";
3492643    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=93111,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492644    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492645    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492646    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492647    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=104529,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492649    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492650    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492651    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492652    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3492653    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85200,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492655    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_9.source";
3492656    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=85355,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492657    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492658    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_9.source";
3492659    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=85392,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492660    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492661    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492662    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492663    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=95844,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492665    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492666    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492667    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492668    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3492669    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=104535,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3492671    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_10.source";
3492672    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=104690,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492673    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492674    filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMFLOWCODE_10.source";
3492675    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=104729,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 340 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492676    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492677    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492678    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3492679    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492680    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=116147,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492681    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492682    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492683    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492684    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3492685    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3492686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=95850,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3492687    filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp13_LOOP.EMPUBLISHCODE_10.source";
3492688    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96006,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492689    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492690    filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural5_LOOP.EMPUBLISHCODE_10.source";
3492691    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=96045,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 301 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3492692    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3492693    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3492694    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3492695    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3492696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=106497,
      Last Modified=02 June 2018 17:05:42 o'clock,
      Create Time=26 May 2018 18:44:06 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3492697    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3492698    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP13_EMLOOPINFO.
NOTE: The data set EMWS1.NEURAL5_EMLOOPINFO has 10 observations and 3 variables.
3492699    proc print data=EMWS1.Neural5_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Neural5_EMLOOPINFO noobs label;
3492700    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3492701    run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL5_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2316.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3492702    title9;
MPRINT(EM_DIAGRAM):   title9;
3492703    filename emflow "C:\Users\misil\Desktop\DM
3492703  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3492704    *------------------------------------------------------------*;
3492705    * Neural5: Scoring DATA data;
3492706    *------------------------------------------------------------*;
3492707    data EMWS1.Neural5_TRAIN
3492708    / view=EMWS1.Neural5_TRAIN
3492709    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_TRAIN / view=EMWS1.Neural5_TRAIN ;
3492710    set EMWS1.Grp13_TRAIN
3492711    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_TRAIN ;
3492712    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMFLOWSCORE.sas.
3492713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3492714   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3492715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3492716   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3492717   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3492718   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3492719   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3492720   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3492721   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3492722   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3492723   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3492724   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3492725   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3492726   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3492727   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3492728   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3492729   +LENGTH _WARN_ $4
3492730   +      F_DepVar  $ 12
3492731   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3492732   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3492733   +
3492734   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3492735   +
3492736   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3492737   +
3492738   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3492739   +
3492740   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3492741   +
3492742   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3492743   +
3492744   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3492745   +
3492746   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3492747   +
3492748   +      label S_RANGE_campaign_acceptance =
3492749   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3492750   +
3492751   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3492752   +
3492753   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3492754   +
3492755   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3492756   +
3492757   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3492758   +
3492759   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3492760   +
3492761   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3492762   +
3492763   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3492764   +
3492765   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3492766   +
3492767   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3492768   +
3492769   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3492770   +
3492771   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3492772   +
3492773   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3492774   +
3492775   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3492776   +
3492777   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3492778   +
3492779   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3492780   +
3492781   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3492782   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3492783   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3492784   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3492785   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3492786   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3492787   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3492788   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3492789   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3492790   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3492791   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3492792   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3492793   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3492794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3492795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3492796   +end;
MPRINT(EM_DIAGRAM):   end;
3492797   +else do;
MPRINT(EM_DIAGRAM):   else do;
3492798   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3492799   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3492800   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3492801   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3492802   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3492803   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3492804   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3492805   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3492806   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3492807   +         end;
MPRINT(EM_DIAGRAM):   end;
3492808   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3492809   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3492810   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3492811   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3492812   +            end;
MPRINT(EM_DIAGRAM):   end;
3492813   +         end;
MPRINT(EM_DIAGRAM):   end;
3492814   +      end;
MPRINT(EM_DIAGRAM):   end;
3492815   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3492816   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3492817   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3492818   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3492819   +         end;
MPRINT(EM_DIAGRAM):   end;
3492820   +      end;
MPRINT(EM_DIAGRAM):   end;
3492821   +   end;
MPRINT(EM_DIAGRAM):   end;
3492822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3492823   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3492824   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3492825   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3492826   +      end;
MPRINT(EM_DIAGRAM):   end;
3492827   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3492828   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3492829   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3492830   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3492831   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3492832   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3492833   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3492834   +         end;
MPRINT(EM_DIAGRAM):   end;
3492835   +      end;
MPRINT(EM_DIAGRAM):   end;
3492836   +   end;
MPRINT(EM_DIAGRAM):   end;
3492837   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3492838   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3492839   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3492840   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3492841   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3492842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3492843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3492844   +   end;
MPRINT(EM_DIAGRAM):   end;
3492845   +end;
MPRINT(EM_DIAGRAM):   end;
3492846   +
3492847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492848   +*** Checking missing input Interval
3492849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3492850   +
3492851   +IF NMISS(
3492852   +   MntCard_Games ,
3492853   +   MntMagazines ,
3492854   +   NumCatalogPurchases ,
3492855   +   NumDealsPurchases ,
3492856   +   NumWebPurchases ,
3492857   +   RANGE_Frq ,
3492858   +   RANGE_Recency ,
3492859   +   RANGE_average_purchase ,
3492860   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3492861   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3492862   +
3492863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3492864   +END;
MPRINT(EM_DIAGRAM):   END;
3492865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492866   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3492867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3492869   +   S_MntCard_Games  =    -2.28983962932209 +     6.58165118407799 *
3492870   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.28983962932209 + 6.58165118407799 * MntCard_Games ;
3492871   +   S_MntMagazines  =    -0.83314365520749 +     17.3433007723932 *
3492872   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83314365520749 + 17.3433007723932 * MntMagazines ;
3492873   +   S_NumCatalogPurchases  =    -3.10981122491491 +     13.4479395823894 *
3492874   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10981122491491 + 13.4479395823894 *
NumCatalogPurchases ;
3492875   +   S_NumDealsPurchases  =    -1.40177475658398 +     11.0975611291385 *
3492876   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40177475658398 + 11.0975611291385 *
NumDealsPurchases ;
3492877   +   S_NumWebPurchases  =    -5.21165776018221 +     12.2315311135602 *
3492878   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21165776018221 + 12.2315311135602 *
NumWebPurchases ;
3492879   +   S_RANGE_Frq  =    -1.37337343159936 +     4.23346160784445 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37337343159936 + 4.23346160784445 * RANGE_Frq ;
3492880   +   S_RANGE_Recency  =    -1.66024541228104 +     3.35465345710505 *
3492881   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66024541228104 + 3.35465345710505 * RANGE_Recency ;
3492882   +   S_RANGE_average_purchase  =    -1.04109544381139 +     5.11777957397942 *
3492883   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04109544381139 + 5.11777957397942 *
RANGE_average_purchase ;
3492884   +   S_RANGE_campaign_acceptance
3492885   +          =    -0.47849192521482 +     5.73668793173089 *
3492886   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47849192521482 + 5.73668793173089 *
RANGE_campaign_acceptance ;
3492887   +END;
MPRINT(EM_DIAGRAM):   END;
3492888   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3492889   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3492890   +   ELSE S_MntCard_Games  =    -2.28983962932209 +     6.58165118407799 *
3492891   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.28983962932209 + 6.58165118407799 *
MntCard_Games ;
3492892   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3492893   +   ELSE S_MntMagazines  =    -0.83314365520749 +     17.3433007723932 *
3492894   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83314365520749 + 17.3433007723932 *
MntMagazines ;
3492895   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3492896   +   ELSE S_NumCatalogPurchases
3492897   +          =    -3.10981122491491 +     13.4479395823894 * NumCatalogPurchases
3492898   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10981122491491 + 13.4479395823894 *
NumCatalogPurchases ;
3492899   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3492900   +   ELSE S_NumDealsPurchases  =    -1.40177475658398 +     11.0975611291385 *
3492901   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40177475658398 + 11.0975611291385 *
NumDealsPurchases ;
3492902   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3492903   +   ELSE S_NumWebPurchases  =    -5.21165776018221 +     12.2315311135602 *
3492904   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21165776018221 + 12.2315311135602 *
NumWebPurchases ;
3492905   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3492906   +   ELSE S_RANGE_Frq  =    -1.37337343159936 +     4.23346160784445 * RANGE_Frq
3492907   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37337343159936 + 4.23346160784445 * RANGE_Frq ;
3492908   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3492909   +   ELSE S_RANGE_Recency  =    -1.66024541228104 +     3.35465345710505 *
3492910   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66024541228104 + 3.35465345710505 *
RANGE_Recency ;
3492911   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3492912   +   ELSE S_RANGE_average_purchase
3492913   +          =    -1.04109544381139 +     5.11777957397942 *
3492914   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04109544381139 + 5.11777957397942 *
RANGE_average_purchase ;
3492915   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3492916   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3492917   +   ELSE S_RANGE_campaign_acceptance
3492918   +          =    -0.47849192521482 +     5.73668793173089 *
3492919   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47849192521482 + 5.73668793173089
* RANGE_campaign_acceptance ;
3492920   +END;
MPRINT(EM_DIAGRAM):   END;
3492921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492922   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3492923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492925   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3492926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492927   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3492928   +   H11  =    -0.06140043419447 * S_MntCard_Games  +     0.03598986021643 *
3492929   +        S_MntMagazines  +     0.17833091495305 * S_NumCatalogPurchases
3492930   +          +     0.19579417737467 * S_NumDealsPurchases
3492931   +          +    -0.15138495928525 * S_NumWebPurchases
3492932   +          +     0.26489047113139 * S_RANGE_Frq  +     -0.3115204165276 *
3492933   +        S_RANGE_Recency  +      0.1893750645733 * S_RANGE_average_purchase
3492934   +          +     0.16334171081273 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.06140043419447 * S_MntCard_Games + 0.03598986021643 *
S_MntMagazines + 0.17833091495305 * S_NumCatalogPurchases + 0.19579417737467 *
S_NumDealsPurchases + -0.15138495928525 * S_NumWebPurchases + 0.26489047113139 * S_RANGE_Frq +
-0.3115204165276 * S_RANGE_Recency + 0.1893750645733 * S_RANGE_average_purchase +
0.16334171081273 * S_RANGE_campaign_acceptance ;
3492935   +   H12  =     1.28977822634075 * S_MntCard_Games  +    -0.32527262210761 *
3492936   +        S_MntMagazines  +     0.45913124648718 * S_NumCatalogPurchases
3492937   +          +     0.89980313737262 * S_NumDealsPurchases
3492938   +          +     0.61217487431714 * S_NumWebPurchases
3492939   +          +    -0.03481713697397 * S_RANGE_Frq  +    -1.43231435096364 *
3492940   +        S_RANGE_Recency  +    -0.19580428882863 * S_RANGE_average_purchase
3492941   +          +      0.9460419269426 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.28977822634075 * S_MntCard_Games + -0.32527262210761 *
S_MntMagazines + 0.45913124648718 * S_NumCatalogPurchases + 0.89980313737262 *
S_NumDealsPurchases + 0.61217487431714 * S_NumWebPurchases + -0.03481713697397 * S_RANGE_Frq +
-1.43231435096364 * S_RANGE_Recency + -0.19580428882863 * S_RANGE_average_purchase +
0.9460419269426 * S_RANGE_campaign_acceptance ;
3492942   +   H13  =    -0.64474338741821 * S_MntCard_Games  +    -0.55362637922882 *
3492943   +        S_MntMagazines  +    -1.10732477574103 * S_NumCatalogPurchases
3492944   +          +     -0.3243024933742 * S_NumDealsPurchases
3492945   +          +    -0.96174416971968 * S_NumWebPurchases
3492946   +          +     1.03932216233991 * S_RANGE_Frq  +     1.39167457616833 *
3492947   +        S_RANGE_Recency  +     -3.3500997717423 * S_RANGE_average_purchase
3492948   +          +    -0.86461623275062 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.64474338741821 * S_MntCard_Games + -0.55362637922882 *
S_MntMagazines + -1.10732477574103 * S_NumCatalogPurchases + -0.3243024933742 *
S_NumDealsPurchases + -0.96174416971968 * S_NumWebPurchases + 1.03932216233991 * S_RANGE_Frq +
1.39167457616833 * S_RANGE_Recency + -3.3500997717423 * S_RANGE_average_purchase +
-0.86461623275062 * S_RANGE_campaign_acceptance ;
3492949   +   H11  = H11  +     0.37871470780857 * Marital_StatusDivorced
3492950   +          +     -0.2239323630089 * Marital_StatusMarried
3492951   +          +     0.21408448910216 * Marital_StatusSingle
3492952   +          +    -0.61014750819324 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.37871470780857 * Marital_StatusDivorced + -0.2239323630089
* Marital_StatusMarried + 0.21408448910216 * Marital_StatusSingle + -0.61014750819324 *
Marital_StatusTogether ;
3492953   +   H12  = H12  +     0.26249810191639 * Marital_StatusDivorced
3492954   +          +    -0.52738403737846 * Marital_StatusMarried
3492955   +          +     0.41916715295256 * Marital_StatusSingle
3492956   +          +    -0.40931218879187 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.26249810191639 * Marital_StatusDivorced +
-0.52738403737846 * Marital_StatusMarried + 0.41916715295256 * Marital_StatusSingle +
-0.40931218879187 * Marital_StatusTogether ;
3492957   +   H13  = H13  +     0.20233052555225 * Marital_StatusDivorced
3492958   +          +    -0.26838447292632 * Marital_StatusMarried
3492959   +          +     0.06981799690351 * Marital_StatusSingle
3492960   +          +    -0.39347008643125 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20233052555225 * Marital_StatusDivorced +
-0.26838447292632 * Marital_StatusMarried + 0.06981799690351 * Marital_StatusSingle +
-0.39347008643125 * Marital_StatusTogether ;
3492961   +   H11  =    -1.46845465152302 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.46845465152302 + H11 ;
3492962   +   H12  =    -2.05328175036776 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.05328175036776 + H12 ;
3492963   +   H13  =     0.10804508832877 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.10804508832877 + H13 ;
3492964   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3492965   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3492966   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3492967   +END;
MPRINT(EM_DIAGRAM):   END;
3492968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3492969   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3492970   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3492971   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3492972   +END;
MPRINT(EM_DIAGRAM):   END;
3492973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492974   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3492975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3492976   +
3492977   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3492978   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3492979   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3492980   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3492981   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3492982   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3492983   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3492984   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3492985   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3492986   +end;
MPRINT(EM_DIAGRAM):   end;
3492987   +else do;
MPRINT(EM_DIAGRAM):   else do;
3492988   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3492989   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3492990   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3492991   +   end;
MPRINT(EM_DIAGRAM):   end;
3492992   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3492993   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3492994   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3492995   +   end;
MPRINT(EM_DIAGRAM):   end;
3492996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3492997   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3492998   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3492999   +   end;
MPRINT(EM_DIAGRAM):   end;
3493000   +end;
MPRINT(EM_DIAGRAM):   end;
3493001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493002   +   P_DepVar1  =     7.55084057414187 * H11  +     4.39104563131069 * H12
3493003   +          +      -3.434354588888 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.55084057414187 * H11 + 4.39104563131069 * H12 +
-3.434354588888 * H13 ;
3493004   +   P_DepVar1  =     2.10866837839396 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10866837839396 + P_DepVar1 ;
3493005   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3493006   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3493007   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3493008   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3493009   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3493010   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3493011   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3493012   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3493013   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3493014   +END;
MPRINT(EM_DIAGRAM):   END;
3493015   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493016   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3493017   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3493018   +END;
MPRINT(EM_DIAGRAM):   END;
3493019   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3493020   +   P_DepVar1  =     0.13954545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13954545454545;
3493021   +   P_DepVar0  =     0.86045454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86045454545454;
3493022   +END;
MPRINT(EM_DIAGRAM):   END;
3493023   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3493024   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3493025   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3493026   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3493027   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3493028   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3493029   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3493030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493031   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3493032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493033   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3493034   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3493035   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3493036   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3493037   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3493038   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3493039   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3493040   +END;
MPRINT(EM_DIAGRAM):   END;
3493041   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493042   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3493043   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493044   +drop
3493045   +S_MntCard_Games
3493046   +S_MntMagazines
3493047   +S_NumCatalogPurchases
3493048   +S_NumDealsPurchases
3493049   +S_NumWebPurchases
3493050   +S_RANGE_Frq
3493051   +S_RANGE_Recency
3493052   +S_RANGE_average_purchase
3493053   +S_RANGE_campaign_acceptance
3493054   +H11
3493055   +H12
3493056   +H13
3493057   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3493058   +end;
MPRINT(EM_DIAGRAM):   end;
3493059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493060   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3493061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493062   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3493063   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3493064   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493065   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3493066   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493067   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3493068   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3493069   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3493070   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3493071   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3493072   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3493073   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3493074   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3493075   +LENGTH _WARN_ $4
3493076   +      F_DepVar  $ 12
3493077   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3493078   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3493079   +
3493080   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3493081   +
3493082   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3493083   +
3493084   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3493085   +
3493086   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3493087   +
3493088   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3493089   +
3493090   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3493091   +
3493092   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3493093   +
3493094   +      label S_RANGE_campaign_acceptance =
3493095   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3493096   +
3493097   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3493098   +
3493099   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3493100   +
3493101   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3493102   +
3493103   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3493104   +
3493105   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3493106   +
3493107   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3493108   +
3493109   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3493110   +
3493111   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3493112   +
3493113   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3493114   +
3493115   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3493116   +
3493117   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3493118   +
3493119   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3493120   +
3493121   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3493122   +
3493123   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3493124   +
3493125   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3493126   +
3493127   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3493128   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3493129   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3493130   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3493131   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3493132   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3493133   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3493134   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3493135   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3493136   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493137   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493138   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493139   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3493141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493142   +end;
MPRINT(EM_DIAGRAM):   end;
3493143   +else do;
MPRINT(EM_DIAGRAM):   else do;
3493144   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3493145   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3493146   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3493147   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3493148   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3493149   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3493150   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3493151   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3493152   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493153   +         end;
MPRINT(EM_DIAGRAM):   end;
3493154   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3493155   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3493156   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3493157   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493158   +            end;
MPRINT(EM_DIAGRAM):   end;
3493159   +         end;
MPRINT(EM_DIAGRAM):   end;
3493160   +      end;
MPRINT(EM_DIAGRAM):   end;
3493161   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493162   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3493163   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3493164   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493165   +         end;
MPRINT(EM_DIAGRAM):   end;
3493166   +      end;
MPRINT(EM_DIAGRAM):   end;
3493167   +   end;
MPRINT(EM_DIAGRAM):   end;
3493168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3493169   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3493170   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3493171   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493172   +      end;
MPRINT(EM_DIAGRAM):   end;
3493173   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493174   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3493175   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3493176   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3493177   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3493178   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3493179   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493180   +         end;
MPRINT(EM_DIAGRAM):   end;
3493181   +      end;
MPRINT(EM_DIAGRAM):   end;
3493182   +   end;
MPRINT(EM_DIAGRAM):   end;
3493183   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3493184   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493185   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493186   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493187   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3493189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493190   +   end;
MPRINT(EM_DIAGRAM):   end;
3493191   +end;
MPRINT(EM_DIAGRAM):   end;
3493192   +
3493193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493194   +*** Checking missing input Interval
3493195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3493196   +
3493197   +IF NMISS(
3493198   +   MntCard_Games ,
3493199   +   MntMagazines ,
3493200   +   NumCatalogPurchases ,
3493201   +   NumDealsPurchases ,
3493202   +   NumWebPurchases ,
3493203   +   RANGE_Frq ,
3493204   +   RANGE_Recency ,
3493205   +   RANGE_average_purchase ,
3493206   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3493207   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3493208   +
3493209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493210   +END;
MPRINT(EM_DIAGRAM):   END;
3493211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493212   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3493213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493214   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493215   +   S_MntCard_Games  =    -2.33199235794733 +     6.67696061329134 *
3493216   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33199235794733 + 6.67696061329134 * MntCard_Games ;
3493217   +   S_MntMagazines  =    -0.82878323377679 +     17.1959946545244 *
3493218   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82878323377679 + 17.1959946545244 * MntMagazines ;
3493219   +   S_NumCatalogPurchases  =    -3.13623627598254 +     13.6111660047523 *
3493220   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.13623627598254 + 13.6111660047523 *
NumCatalogPurchases ;
3493221   +   S_NumDealsPurchases  =    -1.41193477849919 +     11.0768482210704 *
3493222   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41193477849919 + 11.0768482210704 *
NumDealsPurchases ;
3493223   +   S_NumWebPurchases  =    -5.23390360027334 +     12.2613090384738 *
3493224   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23390360027334 + 12.2613090384738 *
NumWebPurchases ;
3493225   +   S_RANGE_Frq  =    -1.37876960327716 +     4.21396505931612 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.37876960327716 + 4.21396505931612 * RANGE_Frq ;
3493226   +   S_RANGE_Recency  =     -1.6599232375281 +     3.35939370487067 *
3493227   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6599232375281 + 3.35939370487067 * RANGE_Recency ;
3493228   +   S_RANGE_average_purchase  =    -1.04438291835965 +     5.17863614060588 *
3493229   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04438291835965 + 5.17863614060588 *
RANGE_average_purchase ;
3493230   +   S_RANGE_campaign_acceptance
3493231   +          =     -0.4731686687773 +     5.74401686616129 *
3493232   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4731686687773 + 5.74401686616129 *
RANGE_campaign_acceptance ;
3493233   +END;
MPRINT(EM_DIAGRAM):   END;
3493234   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493235   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3493236   +   ELSE S_MntCard_Games  =    -2.33199235794733 +     6.67696061329134 *
3493237   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33199235794733 + 6.67696061329134 *
MntCard_Games ;
3493238   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3493239   +   ELSE S_MntMagazines  =    -0.82878323377679 +     17.1959946545244 *
3493240   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82878323377679 + 17.1959946545244 *
MntMagazines ;
3493241   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3493242   +   ELSE S_NumCatalogPurchases
3493243   +          =    -3.13623627598254 +     13.6111660047523 * NumCatalogPurchases
3493244   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.13623627598254 + 13.6111660047523 *
NumCatalogPurchases ;
3493245   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3493246   +   ELSE S_NumDealsPurchases  =    -1.41193477849919 +     11.0768482210704 *
3493247   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41193477849919 + 11.0768482210704 *
NumDealsPurchases ;
3493248   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3493249   +   ELSE S_NumWebPurchases  =    -5.23390360027334 +     12.2613090384738 *
3493250   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23390360027334 + 12.2613090384738 *
NumWebPurchases ;
3493251   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3493252   +   ELSE S_RANGE_Frq  =    -1.37876960327716 +     4.21396505931612 * RANGE_Frq
3493253   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.37876960327716 + 4.21396505931612 * RANGE_Frq ;
3493254   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3493255   +   ELSE S_RANGE_Recency  =     -1.6599232375281 +     3.35939370487067 *
3493256   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6599232375281 + 3.35939370487067 *
RANGE_Recency ;
3493257   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3493258   +   ELSE S_RANGE_average_purchase
3493259   +          =    -1.04438291835965 +     5.17863614060588 *
3493260   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04438291835965 + 5.17863614060588 *
RANGE_average_purchase ;
3493261   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3493262   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3493263   +   ELSE S_RANGE_campaign_acceptance
3493264   +          =     -0.4731686687773 +     5.74401686616129 *
3493265   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4731686687773 + 5.74401686616129 *
RANGE_campaign_acceptance ;
3493266   +END;
MPRINT(EM_DIAGRAM):   END;
3493267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493268   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3493269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493271   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3493272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493273   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493274   +   H11  =    -2.66196306639925 * S_MntCard_Games  +    -2.75536273761879 *
3493275   +        S_MntMagazines  +    -3.38135570185845 * S_NumCatalogPurchases
3493276   +          +     4.05454553396371 * S_NumDealsPurchases
3493277   +          +     2.07480469587813 * S_NumWebPurchases
3493278   +          +      4.3742994931991 * S_RANGE_Frq  +     5.67809892434642 *
3493279   +        S_RANGE_Recency  +    -0.10571936977414 * S_RANGE_average_purchase
3493280   +          +    -4.96676410652301 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -2.66196306639925 * S_MntCard_Games + -2.75536273761879 *
S_MntMagazines + -3.38135570185845 * S_NumCatalogPurchases + 4.05454553396371 *
S_NumDealsPurchases + 2.07480469587813 * S_NumWebPurchases + 4.3742994931991 * S_RANGE_Frq +
5.67809892434642 * S_RANGE_Recency + -0.10571936977414 * S_RANGE_average_purchase +
-4.96676410652301 * S_RANGE_campaign_acceptance ;
3493281   +   H12  =     0.70089736015068 * S_MntCard_Games  +    -0.13925378822215 *
3493282   +        S_MntMagazines  +     0.53220589430737 * S_NumCatalogPurchases
3493283   +          +     0.45611777366582 * S_NumDealsPurchases
3493284   +          +     0.75717660364126 * S_NumWebPurchases
3493285   +          +     0.29744807183989 * S_RANGE_Frq  +    -1.01617720928806 *
3493286   +        S_RANGE_Recency  +    -0.19382419816816 * S_RANGE_average_purchase
3493287   +          +     0.60680698769474 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.70089736015068 * S_MntCard_Games + -0.13925378822215 *
S_MntMagazines + 0.53220589430737 * S_NumCatalogPurchases + 0.45611777366582 *
S_NumDealsPurchases + 0.75717660364126 * S_NumWebPurchases + 0.29744807183989 * S_RANGE_Frq +
-1.01617720928806 * S_RANGE_Recency + -0.19382419816816 * S_RANGE_average_purchase +
0.60680698769474 * S_RANGE_campaign_acceptance ;
3493288   +   H13  =     0.00628380844996 * S_MntCard_Games  +      0.0183903495273 *
3493289   +        S_MntMagazines  +     0.07729640525151 * S_NumCatalogPurchases
3493290   +          +     0.33267996942498 * S_NumDealsPurchases
3493291   +          +    -0.35698051729797 * S_NumWebPurchases
3493292   +          +     0.17214986292074 * S_RANGE_Frq  +    -0.31611267319821 *
3493293   +        S_RANGE_Recency  +     0.42226611529287 * S_RANGE_average_purchase
3493294   +          +     0.14535054136872 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.00628380844996 * S_MntCard_Games + 0.0183903495273 *
S_MntMagazines + 0.07729640525151 * S_NumCatalogPurchases + 0.33267996942498 *
S_NumDealsPurchases + -0.35698051729797 * S_NumWebPurchases + 0.17214986292074 * S_RANGE_Frq +
-0.31611267319821 * S_RANGE_Recency + 0.42226611529287 * S_RANGE_average_purchase +
0.14535054136872 * S_RANGE_campaign_acceptance ;
3493295   +   H11  = H11  +    -6.85769595538931 * Marital_StatusDivorced
3493296   +          +     2.51842275958696 * Marital_StatusMarried
3493297   +          +    -2.10202448549333 * Marital_StatusSingle
3493298   +          +     -1.3522118469644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -6.85769595538931 * Marital_StatusDivorced +
2.51842275958696 * Marital_StatusMarried + -2.10202448549333 * Marital_StatusSingle +
-1.3522118469644 * Marital_StatusTogether ;
3493299   +   H12  = H12  +    -0.05460887899266 * Marital_StatusDivorced
3493300   +          +    -0.12130750461863 * Marital_StatusMarried
3493301   +          +     0.09796399809087 * Marital_StatusSingle
3493302   +          +    -0.10287372972713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05460887899266 * Marital_StatusDivorced +
-0.12130750461863 * Marital_StatusMarried + 0.09796399809087 * Marital_StatusSingle +
-0.10287372972713 * Marital_StatusTogether ;
3493303   +   H13  = H13  +     0.32631221941723 * Marital_StatusDivorced
3493304   +          +    -0.32341295170572 * Marital_StatusMarried
3493305   +          +     0.42690013974792 * Marital_StatusSingle
3493306   +          +    -0.90125669940063 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.32631221941723 * Marital_StatusDivorced +
-0.32341295170572 * Marital_StatusMarried + 0.42690013974792 * Marital_StatusSingle +
-0.90125669940063 * Marital_StatusTogether ;
3493307   +   H11  =     12.0924052286905 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 12.0924052286905 + H11 ;
3493308   +   H12  =    -1.70867510018063 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.70867510018063 + H12 ;
3493309   +   H13  =     -1.5464424582156 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.5464424582156 + H13 ;
3493310   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3493311   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3493312   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3493313   +END;
MPRINT(EM_DIAGRAM):   END;
3493314   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493315   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3493316   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3493317   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3493318   +END;
MPRINT(EM_DIAGRAM):   END;
3493319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493320   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3493321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493322   +
3493323   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3493324   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3493325   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3493326   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3493327   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3493328   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3493329   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3493330   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3493331   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3493332   +end;
MPRINT(EM_DIAGRAM):   end;
3493333   +else do;
MPRINT(EM_DIAGRAM):   else do;
3493334   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3493335   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3493336   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3493337   +   end;
MPRINT(EM_DIAGRAM):   end;
3493338   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3493339   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3493340   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3493341   +   end;
MPRINT(EM_DIAGRAM):   end;
3493342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3493343   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3493344   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3493345   +   end;
MPRINT(EM_DIAGRAM):   end;
3493346   +end;
MPRINT(EM_DIAGRAM):   end;
3493347   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493348   +   P_DepVar1  =    -1.10499759960773 * H11  +     5.20870475172209 * H12
3493349   +          +       4.983439526308 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10499759960773 * H11 + 5.20870475172209 * H12 +
4.983439526308 * H13 ;
3493350   +   P_DepVar1  =     3.35192603200583 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.35192603200583 + P_DepVar1 ;
3493351   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3493352   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3493353   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3493354   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3493355   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3493356   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3493357   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3493358   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3493359   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3493360   +END;
MPRINT(EM_DIAGRAM):   END;
3493361   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493362   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3493363   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3493364   +END;
MPRINT(EM_DIAGRAM):   END;
3493365   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3493366   +   P_DepVar1  =     0.13694852941176;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13694852941176;
3493367   +   P_DepVar0  =     0.86305147058823;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86305147058823;
3493368   +END;
MPRINT(EM_DIAGRAM):   END;
3493369   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3493370   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3493371   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3493372   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3493373   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3493374   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3493375   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3493376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493377   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3493378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493379   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3493380   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3493381   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3493382   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3493383   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3493384   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3493385   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3493386   +END;
MPRINT(EM_DIAGRAM):   END;
3493387   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493388   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3493389   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493390   +drop
3493391   +S_MntCard_Games
3493392   +S_MntMagazines
3493393   +S_NumCatalogPurchases
3493394   +S_NumDealsPurchases
3493395   +S_NumWebPurchases
3493396   +S_RANGE_Frq
3493397   +S_RANGE_Recency
3493398   +S_RANGE_average_purchase
3493399   +S_RANGE_campaign_acceptance
3493400   +H11
3493401   +H12
3493402   +H13
3493403   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3493404   +end;
MPRINT(EM_DIAGRAM):   end;
3493405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493406   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3493407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493408   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3493409   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3493410   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493411   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3493412   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493413   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3493414   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3493415   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3493416   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3493417   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3493418   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3493419   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3493420   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3493421   +LENGTH _WARN_ $4
3493422   +      F_DepVar  $ 12
3493423   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3493424   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3493425   +
3493426   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3493427   +
3493428   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3493429   +
3493430   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3493431   +
3493432   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3493433   +
3493434   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3493435   +
3493436   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3493437   +
3493438   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3493439   +
3493440   +      label S_RANGE_campaign_acceptance =
3493441   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3493442   +
3493443   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3493444   +
3493445   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3493446   +
3493447   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3493448   +
3493449   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3493450   +
3493451   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3493452   +
3493453   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3493454   +
3493455   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3493456   +
3493457   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3493458   +
3493459   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3493460   +
3493461   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3493462   +
3493463   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3493464   +
3493465   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3493466   +
3493467   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3493468   +
3493469   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3493470   +
3493471   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3493472   +
3493473   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3493474   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3493475   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3493476   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3493477   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3493478   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3493479   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3493480   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3493481   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3493482   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493483   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493484   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493485   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3493487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493488   +end;
MPRINT(EM_DIAGRAM):   end;
3493489   +else do;
MPRINT(EM_DIAGRAM):   else do;
3493490   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3493491   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3493492   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3493493   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3493494   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3493495   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3493496   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3493497   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3493498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493499   +         end;
MPRINT(EM_DIAGRAM):   end;
3493500   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3493501   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3493502   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3493503   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493504   +            end;
MPRINT(EM_DIAGRAM):   end;
3493505   +         end;
MPRINT(EM_DIAGRAM):   end;
3493506   +      end;
MPRINT(EM_DIAGRAM):   end;
3493507   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493508   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3493509   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3493510   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493511   +         end;
MPRINT(EM_DIAGRAM):   end;
3493512   +      end;
MPRINT(EM_DIAGRAM):   end;
3493513   +   end;
MPRINT(EM_DIAGRAM):   end;
3493514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3493515   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3493516   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3493517   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493518   +      end;
MPRINT(EM_DIAGRAM):   end;
3493519   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493520   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3493521   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3493522   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3493523   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3493524   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3493525   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493526   +         end;
MPRINT(EM_DIAGRAM):   end;
3493527   +      end;
MPRINT(EM_DIAGRAM):   end;
3493528   +   end;
MPRINT(EM_DIAGRAM):   end;
3493529   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3493530   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493531   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493532   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493533   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3493535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493536   +   end;
MPRINT(EM_DIAGRAM):   end;
3493537   +end;
MPRINT(EM_DIAGRAM):   end;
3493538   +
3493539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493540   +*** Checking missing input Interval
3493541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3493542   +
3493543   +IF NMISS(
3493544   +   MntCard_Games ,
3493545   +   MntMagazines ,
3493546   +   NumCatalogPurchases ,
3493547   +   NumDealsPurchases ,
3493548   +   NumWebPurchases ,
3493549   +   RANGE_Frq ,
3493550   +   RANGE_Recency ,
3493551   +   RANGE_average_purchase ,
3493552   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3493553   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3493554   +
3493555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493556   +END;
MPRINT(EM_DIAGRAM):   END;
3493557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493558   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3493559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493560   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493561   +   S_MntCard_Games  =    -2.31477754696053 +     6.61701361908211 *
3493562   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31477754696053 + 6.61701361908211 * MntCard_Games ;
3493563   +   S_MntMagazines  =    -0.84216986551912 +     17.4993139013623 *
3493564   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84216986551912 + 17.4993139013623 * MntMagazines ;
3493565   +   S_NumCatalogPurchases  =    -3.12626823822056 +      13.521931819677 *
3493566   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12626823822056 + 13.521931819677 *
NumCatalogPurchases ;
3493567   +   S_NumDealsPurchases  =    -1.40486078440338 +     11.1762017659584 *
3493568   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40486078440338 + 11.1762017659584 *
NumDealsPurchases ;
3493569   +   S_NumWebPurchases  =    -5.24658249019259 +     12.3041974600148 *
3493570   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24658249019259 + 12.3041974600148 *
NumWebPurchases ;
3493571   +   S_RANGE_Frq  =    -1.36877299600845 +     4.20956162406265 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36877299600845 + 4.20956162406265 * RANGE_Frq ;
3493572   +   S_RANGE_Recency  =    -1.65749826807551 +     3.34866869497377 *
3493573   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65749826807551 + 3.34866869497377 * RANGE_Recency ;
3493574   +   S_RANGE_average_purchase  =    -1.04247520728677 +     5.13664761410314 *
3493575   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04247520728677 + 5.13664761410314 *
RANGE_average_purchase ;
3493576   +   S_RANGE_campaign_acceptance
3493577   +          =    -0.47561380144757 +     5.74629717001332 *
3493578   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47561380144757 + 5.74629717001332 *
RANGE_campaign_acceptance ;
3493579   +END;
MPRINT(EM_DIAGRAM):   END;
3493580   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493581   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3493582   +   ELSE S_MntCard_Games  =    -2.31477754696053 +     6.61701361908211 *
3493583   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31477754696053 + 6.61701361908211 *
MntCard_Games ;
3493584   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3493585   +   ELSE S_MntMagazines  =    -0.84216986551912 +     17.4993139013623 *
3493586   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84216986551912 + 17.4993139013623 *
MntMagazines ;
3493587   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3493588   +   ELSE S_NumCatalogPurchases
3493589   +          =    -3.12626823822056 +      13.521931819677 * NumCatalogPurchases
3493590   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12626823822056 + 13.521931819677 *
NumCatalogPurchases ;
3493591   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3493592   +   ELSE S_NumDealsPurchases  =    -1.40486078440338 +     11.1762017659584 *
3493593   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40486078440338 + 11.1762017659584 *
NumDealsPurchases ;
3493594   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3493595   +   ELSE S_NumWebPurchases  =    -5.24658249019259 +     12.3041974600148 *
3493596   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24658249019259 + 12.3041974600148 *
NumWebPurchases ;
3493597   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3493598   +   ELSE S_RANGE_Frq  =    -1.36877299600845 +     4.20956162406265 * RANGE_Frq
3493599   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36877299600845 + 4.20956162406265 * RANGE_Frq ;
3493600   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3493601   +   ELSE S_RANGE_Recency  =    -1.65749826807551 +     3.34866869497377 *
3493602   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65749826807551 + 3.34866869497377 *
RANGE_Recency ;
3493603   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3493604   +   ELSE S_RANGE_average_purchase
3493605   +          =    -1.04247520728677 +     5.13664761410314 *
3493606   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04247520728677 + 5.13664761410314 *
RANGE_average_purchase ;
3493607   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3493608   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3493609   +   ELSE S_RANGE_campaign_acceptance
3493610   +          =    -0.47561380144757 +     5.74629717001332 *
3493611   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47561380144757 + 5.74629717001332
* RANGE_campaign_acceptance ;
3493612   +END;
MPRINT(EM_DIAGRAM):   END;
3493613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493614   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3493615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493617   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3493618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493619   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493620   +   H11  =     0.84193898000692 * S_MntCard_Games  +    -0.22257651541824 *
3493621   +        S_MntMagazines  +     0.60323282757696 * S_NumCatalogPurchases
3493622   +          +     0.32361164653419 * S_NumDealsPurchases
3493623   +          +     0.89439025630432 * S_NumWebPurchases
3493624   +          +     0.28157916379497 * S_RANGE_Frq  +     -1.1380562170367 *
3493625   +        S_RANGE_Recency  +    -0.23926284593473 * S_RANGE_average_purchase
3493626   +          +     0.75329840032164 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.84193898000692 * S_MntCard_Games + -0.22257651541824 *
S_MntMagazines + 0.60323282757696 * S_NumCatalogPurchases + 0.32361164653419 *
S_NumDealsPurchases + 0.89439025630432 * S_NumWebPurchases + 0.28157916379497 * S_RANGE_Frq +
-1.1380562170367 * S_RANGE_Recency + -0.23926284593473 * S_RANGE_average_purchase +
0.75329840032164 * S_RANGE_campaign_acceptance ;
3493627   +   H12  =     0.09358631590681 * S_MntCard_Games  +     -0.0509595814614 *
3493628   +        S_MntMagazines  +     0.07951241046058 * S_NumCatalogPurchases
3493629   +          +     0.49189360874376 * S_NumDealsPurchases
3493630   +          +    -0.45037377700777 * S_NumWebPurchases
3493631   +          +    -0.05689471833226 * S_RANGE_Frq  +    -0.37447317482749 *
3493632   +        S_RANGE_Recency  +     0.18435554322326 * S_RANGE_average_purchase
3493633   +          +     0.21609421177875 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.09358631590681 * S_MntCard_Games + -0.0509595814614 *
S_MntMagazines + 0.07951241046058 * S_NumCatalogPurchases + 0.49189360874376 *
S_NumDealsPurchases + -0.45037377700777 * S_NumWebPurchases + -0.05689471833226 * S_RANGE_Frq
+ -0.37447317482749 * S_RANGE_Recency + 0.18435554322326 * S_RANGE_average_purchase +
0.21609421177875 * S_RANGE_campaign_acceptance ;
3493634   +   H13  =    -1.00588290179623 * S_MntCard_Games  +    -0.79866075670228 *
3493635   +        S_MntMagazines  +    -1.49682867882767 * S_NumCatalogPurchases
3493636   +          +    -0.51682119752508 * S_NumDealsPurchases
3493637   +          +    -1.12882463431466 * S_NumWebPurchases
3493638   +          +     0.78927498632692 * S_RANGE_Frq  +     1.94537508216435 *
3493639   +        S_RANGE_Recency  +    -3.42308097484112 * S_RANGE_average_purchase
3493640   +          +    -1.17912870762165 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.00588290179623 * S_MntCard_Games + -0.79866075670228 *
S_MntMagazines + -1.49682867882767 * S_NumCatalogPurchases + -0.51682119752508 *
S_NumDealsPurchases + -1.12882463431466 * S_NumWebPurchases + 0.78927498632692 * S_RANGE_Frq +
1.94537508216435 * S_RANGE_Recency + -3.42308097484112 * S_RANGE_average_purchase +
-1.17912870762165 * S_RANGE_campaign_acceptance ;
3493641   +   H11  = H11  +    -0.67403238007953 * Marital_StatusDivorced
3493642   +          +    -0.42166616956445 * Marital_StatusMarried
3493643   +          +     1.17073814998563 * Marital_StatusSingle
3493644   +          +    -0.08148594406503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.67403238007953 * Marital_StatusDivorced +
-0.42166616956445 * Marital_StatusMarried + 1.17073814998563 * Marital_StatusSingle +
-0.08148594406503 * Marital_StatusTogether ;
3493645   +   H12  = H12  +     0.85434553263546 * Marital_StatusDivorced
3493646   +          +    -0.11117193343789 * Marital_StatusMarried
3493647   +          +    -0.34239790581377 * Marital_StatusSingle
3493648   +          +    -0.87404606983261 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.85434553263546 * Marital_StatusDivorced +
-0.11117193343789 * Marital_StatusMarried + -0.34239790581377 * Marital_StatusSingle +
-0.87404606983261 * Marital_StatusTogether ;
3493649   +   H13  = H13  +     0.40433528801222 * Marital_StatusDivorced
3493650   +          +     -0.1614639922526 * Marital_StatusMarried
3493651   +          +     0.77660636233282 * Marital_StatusSingle
3493652   +          +    -2.36645880766925 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.40433528801222 * Marital_StatusDivorced + -0.1614639922526
* Marital_StatusMarried + 0.77660636233282 * Marital_StatusSingle + -2.36645880766925 *
Marital_StatusTogether ;
3493653   +   H11  =    -1.70027011261133 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.70027011261133 + H11 ;
3493654   +   H12  =     -0.9688510867078 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.9688510867078 + H12 ;
3493655   +   H13  =     0.03243742784941 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.03243742784941 + H13 ;
3493656   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3493657   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3493658   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3493659   +END;
MPRINT(EM_DIAGRAM):   END;
3493660   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493661   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3493662   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3493663   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3493664   +END;
MPRINT(EM_DIAGRAM):   END;
3493665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493666   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3493667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493668   +
3493669   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3493670   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3493671   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3493672   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3493673   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3493674   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3493675   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3493676   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3493677   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3493678   +end;
MPRINT(EM_DIAGRAM):   end;
3493679   +else do;
MPRINT(EM_DIAGRAM):   else do;
3493680   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3493681   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3493682   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3493683   +   end;
MPRINT(EM_DIAGRAM):   end;
3493684   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3493685   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3493686   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3493687   +   end;
MPRINT(EM_DIAGRAM):   end;
3493688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3493689   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3493690   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3493691   +   end;
MPRINT(EM_DIAGRAM):   end;
3493692   +end;
MPRINT(EM_DIAGRAM):   end;
3493693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493694   +   P_DepVar1  =     4.91493733417401 * H11  +     5.24854976874558 * H12
3493695   +          +    -3.25831635408183 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.91493733417401 * H11 + 5.24854976874558 * H12 +
-3.25831635408183 * H13 ;
3493696   +   P_DepVar1  =    -1.46703632550093 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.46703632550093 + P_DepVar1 ;
3493697   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3493698   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3493699   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3493700   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3493701   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3493702   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3493703   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3493704   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3493705   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3493706   +END;
MPRINT(EM_DIAGRAM):   END;
3493707   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493708   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3493709   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3493710   +END;
MPRINT(EM_DIAGRAM):   END;
3493711   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3493712   +   P_DepVar1  =     0.13911472448057;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13911472448057;
3493713   +   P_DepVar0  =     0.86088527551942;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86088527551942;
3493714   +END;
MPRINT(EM_DIAGRAM):   END;
3493715   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3493716   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3493717   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3493718   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3493719   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3493720   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3493721   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3493722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493723   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3493724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493725   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3493726   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3493727   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3493728   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3493729   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3493730   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3493731   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3493732   +END;
MPRINT(EM_DIAGRAM):   END;
3493733   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493734   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3493735   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3493736   +drop
3493737   +S_MntCard_Games
3493738   +S_MntMagazines
3493739   +S_NumCatalogPurchases
3493740   +S_NumDealsPurchases
3493741   +S_NumWebPurchases
3493742   +S_RANGE_Frq
3493743   +S_RANGE_Recency
3493744   +S_RANGE_average_purchase
3493745   +S_RANGE_campaign_acceptance
3493746   +H11
3493747   +H12
3493748   +H13
3493749   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3493750   +end;
MPRINT(EM_DIAGRAM):   end;
3493751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493752   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3493753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3493754   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3493755   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3493756   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493757   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3493758   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3493759   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3493760   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3493761   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3493762   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3493763   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3493764   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3493765   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3493766   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3493767   +LENGTH _WARN_ $4
3493768   +      F_DepVar  $ 12
3493769   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3493770   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3493771   +
3493772   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3493773   +
3493774   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3493775   +
3493776   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3493777   +
3493778   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3493779   +
3493780   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3493781   +
3493782   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3493783   +
3493784   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3493785   +
3493786   +      label S_RANGE_campaign_acceptance =
3493787   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3493788   +
3493789   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3493790   +
3493791   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3493792   +
3493793   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3493794   +
3493795   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3493796   +
3493797   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3493798   +
3493799   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3493800   +
3493801   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3493802   +
3493803   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3493804   +
3493805   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3493806   +
3493807   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3493808   +
3493809   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3493810   +
3493811   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3493812   +
3493813   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3493814   +
3493815   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3493816   +
3493817   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3493818   +
3493819   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3493820   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3493821   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3493822   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3493823   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3493824   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3493825   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3493826   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3493827   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3493828   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493829   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493830   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493831   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3493833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493834   +end;
MPRINT(EM_DIAGRAM):   end;
3493835   +else do;
MPRINT(EM_DIAGRAM):   else do;
3493836   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3493837   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3493838   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3493839   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3493840   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3493841   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3493842   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3493843   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3493844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493845   +         end;
MPRINT(EM_DIAGRAM):   end;
3493846   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3493847   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3493848   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3493849   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493850   +            end;
MPRINT(EM_DIAGRAM):   end;
3493851   +         end;
MPRINT(EM_DIAGRAM):   end;
3493852   +      end;
MPRINT(EM_DIAGRAM):   end;
3493853   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493854   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3493855   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3493856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493857   +         end;
MPRINT(EM_DIAGRAM):   end;
3493858   +      end;
MPRINT(EM_DIAGRAM):   end;
3493859   +   end;
MPRINT(EM_DIAGRAM):   end;
3493860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3493861   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3493862   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3493863   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493864   +      end;
MPRINT(EM_DIAGRAM):   end;
3493865   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3493866   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3493867   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3493868   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3493869   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3493870   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3493871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3493872   +         end;
MPRINT(EM_DIAGRAM):   end;
3493873   +      end;
MPRINT(EM_DIAGRAM):   end;
3493874   +   end;
MPRINT(EM_DIAGRAM):   end;
3493875   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3493876   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3493877   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3493878   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3493879   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3493880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3493881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493882   +   end;
MPRINT(EM_DIAGRAM):   end;
3493883   +end;
MPRINT(EM_DIAGRAM):   end;
3493884   +
3493885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493886   +*** Checking missing input Interval
3493887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3493888   +
3493889   +IF NMISS(
3493890   +   MntCard_Games ,
3493891   +   MntMagazines ,
3493892   +   NumCatalogPurchases ,
3493893   +   NumDealsPurchases ,
3493894   +   NumWebPurchases ,
3493895   +   RANGE_Frq ,
3493896   +   RANGE_Recency ,
3493897   +   RANGE_average_purchase ,
3493898   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3493899   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3493900   +
3493901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3493902   +END;
MPRINT(EM_DIAGRAM):   END;
3493903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493904   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3493905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493906   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493907   +   S_MntCard_Games  =    -2.32188489290036 +     6.64744953941408 *
3493908   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32188489290036 + 6.64744953941408 * MntCard_Games ;
3493909   +   S_MntMagazines  =    -0.82865241731119 +     17.2138976988378 *
3493910   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82865241731119 + 17.2138976988378 * MntMagazines ;
3493911   +   S_NumCatalogPurchases  =    -3.10620484441216 +     13.4871225063932 *
3493912   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10620484441216 + 13.4871225063932 *
NumCatalogPurchases ;
3493913   +   S_NumDealsPurchases  =    -1.41637372469605 +     11.1762971014097 *
3493914   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41637372469605 + 11.1762971014097 *
NumDealsPurchases ;
3493915   +   S_NumWebPurchases  =    -5.26636507461154 +     12.3251048706441 *
3493916   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.26636507461154 + 12.3251048706441 *
NumWebPurchases ;
3493917   +   S_RANGE_Frq  =    -1.35566667764449 +     4.22295714800789 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35566667764449 + 4.22295714800789 * RANGE_Frq ;
3493918   +   S_RANGE_Recency  =    -1.68519250318486 +     3.36357752302017 *
3493919   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.68519250318486 + 3.36357752302017 * RANGE_Recency ;
3493920   +   S_RANGE_average_purchase  =    -1.03130235446549 +     5.17228178233173 *
3493921   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03130235446549 + 5.17228178233173 *
RANGE_average_purchase ;
3493922   +   S_RANGE_campaign_acceptance
3493923   +          =    -0.46983906920481 +     5.88739855049229 *
3493924   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.46983906920481 + 5.88739855049229 *
RANGE_campaign_acceptance ;
3493925   +END;
MPRINT(EM_DIAGRAM):   END;
3493926   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3493927   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3493928   +   ELSE S_MntCard_Games  =    -2.32188489290036 +     6.64744953941408 *
3493929   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32188489290036 + 6.64744953941408 *
MntCard_Games ;
3493930   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3493931   +   ELSE S_MntMagazines  =    -0.82865241731119 +     17.2138976988378 *
3493932   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82865241731119 + 17.2138976988378 *
MntMagazines ;
3493933   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3493934   +   ELSE S_NumCatalogPurchases
3493935   +          =    -3.10620484441216 +     13.4871225063932 * NumCatalogPurchases
3493936   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10620484441216 + 13.4871225063932 *
NumCatalogPurchases ;
3493937   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3493938   +   ELSE S_NumDealsPurchases  =    -1.41637372469605 +     11.1762971014097 *
3493939   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41637372469605 + 11.1762971014097 *
NumDealsPurchases ;
3493940   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3493941   +   ELSE S_NumWebPurchases  =    -5.26636507461154 +     12.3251048706441 *
3493942   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.26636507461154 + 12.3251048706441 *
NumWebPurchases ;
3493943   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3493944   +   ELSE S_RANGE_Frq  =    -1.35566667764449 +     4.22295714800789 * RANGE_Frq
3493945   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35566667764449 + 4.22295714800789 * RANGE_Frq ;
3493946   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3493947   +   ELSE S_RANGE_Recency  =    -1.68519250318486 +     3.36357752302017 *
3493948   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.68519250318486 + 3.36357752302017 *
RANGE_Recency ;
3493949   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3493950   +   ELSE S_RANGE_average_purchase
3493951   +          =    -1.03130235446549 +     5.17228178233173 *
3493952   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03130235446549 + 5.17228178233173 *
RANGE_average_purchase ;
3493953   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3493954   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3493955   +   ELSE S_RANGE_campaign_acceptance
3493956   +          =    -0.46983906920481 +     5.88739855049229 *
3493957   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.46983906920481 + 5.88739855049229
* RANGE_campaign_acceptance ;
3493958   +END;
MPRINT(EM_DIAGRAM):   END;
3493959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493960   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3493961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493963   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3493964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3493965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3493966   +   H11  =    -0.40675319431836 * S_MntCard_Games  +     0.01598346967712 *
3493967   +        S_MntMagazines  +    -0.31950725288453 * S_NumCatalogPurchases
3493968   +          +    -0.41287776040332 * S_NumDealsPurchases
3493969   +          +    -0.14923611263934 * S_NumWebPurchases
3493970   +          +     0.03517916415374 * S_RANGE_Frq  +     0.75006651125758 *
3493971   +        S_RANGE_Recency  +    -0.01950089270188 * S_RANGE_average_purchase
3493972   +          +    -0.45968119054995 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.40675319431836 * S_MntCard_Games + 0.01598346967712 *
S_MntMagazines + -0.31950725288453 * S_NumCatalogPurchases + -0.41287776040332 *
S_NumDealsPurchases + -0.14923611263934 * S_NumWebPurchases + 0.03517916415374 * S_RANGE_Frq +
0.75006651125758 * S_RANGE_Recency + -0.01950089270188 * S_RANGE_average_purchase +
-0.45968119054995 * S_RANGE_campaign_acceptance ;
3493973   +   H12  =     1.40658588591847 * S_MntCard_Games  +    -0.91893027852957 *
3493974   +        S_MntMagazines  +     0.77673852652843 * S_NumCatalogPurchases
3493975   +          +     0.68683270630235 * S_NumDealsPurchases
3493976   +          +     1.64500661711228 * S_NumWebPurchases
3493977   +          +     0.38257084767676 * S_RANGE_Frq  +    -1.23110911909406 *
3493978   +        S_RANGE_Recency  +       4.006344626003 * S_RANGE_average_purchase
3493979   +          +     0.93185060777407 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.40658588591847 * S_MntCard_Games + -0.91893027852957 *
S_MntMagazines + 0.77673852652843 * S_NumCatalogPurchases + 0.68683270630235 *
S_NumDealsPurchases + 1.64500661711228 * S_NumWebPurchases + 0.38257084767676 * S_RANGE_Frq +
-1.23110911909406 * S_RANGE_Recency + 4.006344626003 * S_RANGE_average_purchase +
0.93185060777407 * S_RANGE_campaign_acceptance ;
3493980   +   H13  =    -0.81954944204034 * S_MntCard_Games  +    -0.67285989608477 *
3493981   +        S_MntMagazines  +    -1.04668403325653 * S_NumCatalogPurchases
3493982   +          +     4.82593876234078 * S_NumDealsPurchases
3493983   +          +    -0.74502439003326 * S_NumWebPurchases
3493984   +          +    -0.13331219061349 * S_RANGE_Frq  +     0.16064125498478 *
3493985   +        S_RANGE_Recency  +     1.03458528885397 * S_RANGE_average_purchase
3493986   +          +    -0.17178770989983 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.81954944204034 * S_MntCard_Games + -0.67285989608477 *
S_MntMagazines + -1.04668403325653 * S_NumCatalogPurchases + 4.82593876234078 *
S_NumDealsPurchases + -0.74502439003326 * S_NumWebPurchases + -0.13331219061349 * S_RANGE_Frq
+ 0.16064125498478 * S_RANGE_Recency + 1.03458528885397 * S_RANGE_average_purchase +
-0.17178770989983 * S_RANGE_campaign_acceptance ;
3493987   +   H11  = H11  +    -0.06991719918298 * Marital_StatusDivorced
3493988   +          +     0.10865038806807 * Marital_StatusMarried
3493989   +          +    -0.42880467963931 * Marital_StatusSingle
3493990   +          +     0.19675714204592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06991719918298 * Marital_StatusDivorced +
0.10865038806807 * Marital_StatusMarried + -0.42880467963931 * Marital_StatusSingle +
0.19675714204592 * Marital_StatusTogether ;
3493991   +   H12  = H12  +    -0.10353697700739 * Marital_StatusDivorced
3493992   +          +     1.01777873042803 * Marital_StatusMarried
3493993   +          +     -2.4459677125496 * Marital_StatusSingle
3493994   +          +     2.30081930790399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10353697700739 * Marital_StatusDivorced +
1.01777873042803 * Marital_StatusMarried + -2.4459677125496 * Marital_StatusSingle +
2.30081930790399 * Marital_StatusTogether ;
3493995   +   H13  = H13  +    -1.72572670910649 * Marital_StatusDivorced
3493996   +          +     5.41261592091147 * Marital_StatusMarried
3493997   +          +     2.85130134759246 * Marital_StatusSingle
3493998   +          +     6.42608688868014 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.72572670910649 * Marital_StatusDivorced +
5.41261592091147 * Marital_StatusMarried + 2.85130134759246 * Marital_StatusSingle +
6.42608688868014 * Marital_StatusTogether ;
3493999   +   H11  =     1.10584008164955 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.10584008164955 + H11 ;
3494000   +   H12  =    -0.46512917708835 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.46512917708835 + H12 ;
3494001   +   H13  =     1.92329980127888 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.92329980127888 + H13 ;
3494002   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3494003   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3494004   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3494005   +END;
MPRINT(EM_DIAGRAM):   END;
3494006   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494007   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3494008   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3494009   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3494010   +END;
MPRINT(EM_DIAGRAM):   END;
3494011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494012   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3494013   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494014   +
3494015   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3494016   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3494017   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494018   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3494019   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3494020   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494021   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3494022   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494023   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494024   +end;
MPRINT(EM_DIAGRAM):   end;
3494025   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494026   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3494027   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3494028   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3494029   +   end;
MPRINT(EM_DIAGRAM):   end;
3494030   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3494031   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3494032   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3494033   +   end;
MPRINT(EM_DIAGRAM):   end;
3494034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494035   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494036   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494037   +   end;
MPRINT(EM_DIAGRAM):   end;
3494038   +end;
MPRINT(EM_DIAGRAM):   end;
3494039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494040   +   P_DepVar1  =    -6.90819445353268 * H11  +     1.90668068315724 * H12
3494041   +          +    -1.96068978658102 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.90819445353268 * H11 + 1.90668068315724 * H12 +
-1.96068978658102 * H13 ;
3494042   +   P_DepVar1  =    -0.62058494918737 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.62058494918737 + P_DepVar1 ;
3494043   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3494044   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3494045   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3494046   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3494047   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3494048   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3494049   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3494050   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3494051   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3494052   +END;
MPRINT(EM_DIAGRAM):   END;
3494053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494054   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3494055   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3494056   +END;
MPRINT(EM_DIAGRAM):   END;
3494057   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3494058   +   P_DepVar1  =     0.13023679417122;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13023679417122;
3494059   +   P_DepVar0  =     0.86976320582877;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86976320582877;
3494060   +END;
MPRINT(EM_DIAGRAM):   END;
3494061   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3494062   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3494063   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3494064   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3494065   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3494066   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3494067   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3494068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494069   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3494070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494071   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3494072   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3494073   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3494074   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3494075   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3494076   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3494077   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3494078   +END;
MPRINT(EM_DIAGRAM):   END;
3494079   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494080   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3494081   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494082   +drop
3494083   +S_MntCard_Games
3494084   +S_MntMagazines
3494085   +S_NumCatalogPurchases
3494086   +S_NumDealsPurchases
3494087   +S_NumWebPurchases
3494088   +S_RANGE_Frq
3494089   +S_RANGE_Recency
3494090   +S_RANGE_average_purchase
3494091   +S_RANGE_campaign_acceptance
3494092   +H11
3494093   +H12
3494094   +H13
3494095   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3494096   +end;
MPRINT(EM_DIAGRAM):   end;
3494097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494098   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3494099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494100   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3494101   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3494102   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494103   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3494104   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494105   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3494106   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3494107   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3494108   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3494109   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3494110   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3494111   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3494112   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3494113   +LENGTH _WARN_ $4
3494114   +      F_DepVar  $ 12
3494115   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3494116   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3494117   +
3494118   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3494119   +
3494120   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3494121   +
3494122   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3494123   +
3494124   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3494125   +
3494126   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3494127   +
3494128   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3494129   +
3494130   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3494131   +
3494132   +      label S_RANGE_campaign_acceptance =
3494133   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3494134   +
3494135   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3494136   +
3494137   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3494138   +
3494139   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3494140   +
3494141   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3494142   +
3494143   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3494144   +
3494145   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3494146   +
3494147   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3494148   +
3494149   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3494150   +
3494151   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494152   +
3494153   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3494154   +
3494155   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3494156   +
3494157   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3494158   +
3494159   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3494160   +
3494161   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3494162   +
3494163   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3494164   +
3494165   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3494166   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3494167   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3494168   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3494169   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3494170   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3494171   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3494172   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3494173   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3494174   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494175   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494176   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494177   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3494179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494180   +end;
MPRINT(EM_DIAGRAM):   end;
3494181   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494182   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3494183   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3494184   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494185   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3494186   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3494187   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3494188   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3494189   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3494190   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494191   +         end;
MPRINT(EM_DIAGRAM):   end;
3494192   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3494193   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3494194   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3494195   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494196   +            end;
MPRINT(EM_DIAGRAM):   end;
3494197   +         end;
MPRINT(EM_DIAGRAM):   end;
3494198   +      end;
MPRINT(EM_DIAGRAM):   end;
3494199   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494200   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3494201   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3494202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494203   +         end;
MPRINT(EM_DIAGRAM):   end;
3494204   +      end;
MPRINT(EM_DIAGRAM):   end;
3494205   +   end;
MPRINT(EM_DIAGRAM):   end;
3494206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494207   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3494208   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3494209   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494210   +      end;
MPRINT(EM_DIAGRAM):   end;
3494211   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494212   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3494213   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3494214   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3494215   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3494216   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3494217   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494218   +         end;
MPRINT(EM_DIAGRAM):   end;
3494219   +      end;
MPRINT(EM_DIAGRAM):   end;
3494220   +   end;
MPRINT(EM_DIAGRAM):   end;
3494221   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3494222   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494223   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494224   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494225   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3494227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494228   +   end;
MPRINT(EM_DIAGRAM):   end;
3494229   +end;
MPRINT(EM_DIAGRAM):   end;
3494230   +
3494231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494232   +*** Checking missing input Interval
3494233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3494234   +
3494235   +IF NMISS(
3494236   +   MntCard_Games ,
3494237   +   MntMagazines ,
3494238   +   NumCatalogPurchases ,
3494239   +   NumDealsPurchases ,
3494240   +   NumWebPurchases ,
3494241   +   RANGE_Frq ,
3494242   +   RANGE_Recency ,
3494243   +   RANGE_average_purchase ,
3494244   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3494245   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3494246   +
3494247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494248   +END;
MPRINT(EM_DIAGRAM):   END;
3494249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494250   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3494251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494252   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494253   +   S_MntCard_Games  =    -2.32272337324185 +     6.63068741439965 *
3494254   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32272337324185 + 6.63068741439965 * MntCard_Games ;
3494255   +   S_MntMagazines  =    -0.83258266394378 +      17.217491799959 *
3494256   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83258266394378 + 17.217491799959 * MntMagazines ;
3494257   +   S_NumCatalogPurchases  =    -3.10404552156333 +     13.4145173693012 *
3494258   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10404552156333 + 13.4145173693012 *
NumCatalogPurchases ;
3494259   +   S_NumDealsPurchases  =    -1.40963503574269 +     11.2025269533909 *
3494260   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40963503574269 + 11.2025269533909 *
NumDealsPurchases ;
3494261   +   S_NumWebPurchases  =     -5.1938572210145 +     12.1697648143945 *
3494262   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.1938572210145 + 12.1697648143945 *
NumWebPurchases ;
3494263   +   S_RANGE_Frq  =     -1.3670753781431 +     4.21388982517033 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3670753781431 + 4.21388982517033 * RANGE_Frq ;
3494264   +   S_RANGE_Recency  =    -1.66831747386179 +     3.35097010643417 *
3494265   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66831747386179 + 3.35097010643417 * RANGE_Recency ;
3494266   +   S_RANGE_average_purchase  =    -1.04072152016298 +     5.18011758973657 *
3494267   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04072152016298 + 5.18011758973657 *
RANGE_average_purchase ;
3494268   +   S_RANGE_campaign_acceptance
3494269   +          =    -0.47562035447319 +     5.83727933651499 *
3494270   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47562035447319 + 5.83727933651499 *
RANGE_campaign_acceptance ;
3494271   +END;
MPRINT(EM_DIAGRAM):   END;
3494272   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494273   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3494274   +   ELSE S_MntCard_Games  =    -2.32272337324185 +     6.63068741439965 *
3494275   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32272337324185 + 6.63068741439965 *
MntCard_Games ;
3494276   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3494277   +   ELSE S_MntMagazines  =    -0.83258266394378 +      17.217491799959 *
3494278   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83258266394378 + 17.217491799959 * MntMagazines
;
3494279   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3494280   +   ELSE S_NumCatalogPurchases
3494281   +          =    -3.10404552156333 +     13.4145173693012 * NumCatalogPurchases
3494282   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10404552156333 + 13.4145173693012 *
NumCatalogPurchases ;
3494283   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3494284   +   ELSE S_NumDealsPurchases  =    -1.40963503574269 +     11.2025269533909 *
3494285   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40963503574269 + 11.2025269533909 *
NumDealsPurchases ;
3494286   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3494287   +   ELSE S_NumWebPurchases  =     -5.1938572210145 +     12.1697648143945 *
3494288   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.1938572210145 + 12.1697648143945 *
NumWebPurchases ;
3494289   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3494290   +   ELSE S_RANGE_Frq  =     -1.3670753781431 +     4.21388982517033 * RANGE_Frq
3494291   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3670753781431 + 4.21388982517033 * RANGE_Frq ;
3494292   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3494293   +   ELSE S_RANGE_Recency  =    -1.66831747386179 +     3.35097010643417 *
3494294   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66831747386179 + 3.35097010643417 *
RANGE_Recency ;
3494295   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3494296   +   ELSE S_RANGE_average_purchase
3494297   +          =    -1.04072152016298 +     5.18011758973657 *
3494298   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04072152016298 + 5.18011758973657 *
RANGE_average_purchase ;
3494299   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3494300   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3494301   +   ELSE S_RANGE_campaign_acceptance
3494302   +          =    -0.47562035447319 +     5.83727933651499 *
3494303   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47562035447319 + 5.83727933651499
* RANGE_campaign_acceptance ;
3494304   +END;
MPRINT(EM_DIAGRAM):   END;
3494305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494306   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3494307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494309   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3494310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494311   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494312   +   H11  =      0.8749992742945 * S_MntCard_Games  +    -0.11793440695834 *
3494313   +        S_MntMagazines  +     0.64111352713906 * S_NumCatalogPurchases
3494314   +          +     0.39519646496174 * S_NumDealsPurchases
3494315   +          +     1.00207258461145 * S_NumWebPurchases
3494316   +          +      0.1908540697556 * S_RANGE_Frq  +    -1.39774413543377 *
3494317   +        S_RANGE_Recency  +    -0.24305921127135 * S_RANGE_average_purchase
3494318   +          +     0.88160715211614 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.8749992742945 * S_MntCard_Games + -0.11793440695834 *
S_MntMagazines + 0.64111352713906 * S_NumCatalogPurchases + 0.39519646496174 *
S_NumDealsPurchases + 1.00207258461145 * S_NumWebPurchases + 0.1908540697556 * S_RANGE_Frq +
-1.39774413543377 * S_RANGE_Recency + -0.24305921127135 * S_RANGE_average_purchase +
0.88160715211614 * S_RANGE_campaign_acceptance ;
3494319   +   H12  =     0.26819947493666 * S_MntCard_Games  +    -0.02366193521279 *
3494320   +        S_MntMagazines  +     0.24986470288141 * S_NumCatalogPurchases
3494321   +          +     0.53416595685143 * S_NumDealsPurchases
3494322   +          +    -0.28235201582405 * S_NumWebPurchases
3494323   +          +    -0.00386993325486 * S_RANGE_Frq  +    -0.45199939056911 *
3494324   +        S_RANGE_Recency  +     0.13690082286508 * S_RANGE_average_purchase
3494325   +          +     0.32202763336965 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.26819947493666 * S_MntCard_Games + -0.02366193521279 *
S_MntMagazines + 0.24986470288141 * S_NumCatalogPurchases + 0.53416595685143 *
S_NumDealsPurchases + -0.28235201582405 * S_NumWebPurchases + -0.00386993325486 * S_RANGE_Frq
+ -0.45199939056911 * S_RANGE_Recency + 0.13690082286508 * S_RANGE_average_purchase +
0.32202763336965 * S_RANGE_campaign_acceptance ;
3494326   +   H13  =    -1.27642509088568 * S_MntCard_Games  +    -0.05227120446046 *
3494327   +        S_MntMagazines  +    -2.02935275591284 * S_NumCatalogPurchases
3494328   +          +    -0.19495745715858 * S_NumDealsPurchases
3494329   +          +    -1.26352191040993 * S_NumWebPurchases
3494330   +          +     1.09213494343578 * S_RANGE_Frq  +     2.22629565283368 *
3494331   +        S_RANGE_Recency  +    -5.57693828979226 * S_RANGE_average_purchase
3494332   +          +     -1.1996287030288 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.27642509088568 * S_MntCard_Games + -0.05227120446046 *
S_MntMagazines + -2.02935275591284 * S_NumCatalogPurchases + -0.19495745715858 *
S_NumDealsPurchases + -1.26352191040993 * S_NumWebPurchases + 1.09213494343578 * S_RANGE_Frq +
2.22629565283368 * S_RANGE_Recency + -5.57693828979226 * S_RANGE_average_purchase +
-1.1996287030288 * S_RANGE_campaign_acceptance ;
3494333   +   H11  = H11  +     -0.8028305884844 * Marital_StatusDivorced
3494334   +          +    -0.90454459184155 * Marital_StatusMarried
3494335   +          +      1.5283672651439 * Marital_StatusSingle
3494336   +          +    -0.25796304381221 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.8028305884844 * Marital_StatusDivorced +
-0.90454459184155 * Marital_StatusMarried + 1.5283672651439 * Marital_StatusSingle +
-0.25796304381221 * Marital_StatusTogether ;
3494337   +   H12  = H12  +     0.85532756201849 * Marital_StatusDivorced
3494338   +          +    -0.02826858345652 * Marital_StatusMarried
3494339   +          +    -0.45373711596982 * Marital_StatusSingle
3494340   +          +    -0.90666998228782 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.85532756201849 * Marital_StatusDivorced +
-0.02826858345652 * Marital_StatusMarried + -0.45373711596982 * Marital_StatusSingle +
-0.90666998228782 * Marital_StatusTogether ;
3494341   +   H13  = H13  +     0.65628815018069 * Marital_StatusDivorced
3494342   +          +    -0.69919500549826 * Marital_StatusMarried
3494343   +          +    -0.00175291872482 * Marital_StatusSingle
3494344   +          +    -3.58619571336651 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.65628815018069 * Marital_StatusDivorced +
-0.69919500549826 * Marital_StatusMarried + -0.00175291872482 * Marital_StatusSingle +
-3.58619571336651 * Marital_StatusTogether ;
3494345   +   H11  =     -1.6577549584553 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.6577549584553 + H11 ;
3494346   +   H12  =    -1.01330663475009 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.01330663475009 + H12 ;
3494347   +   H13  =     -0.5189778972746 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5189778972746 + H13 ;
3494348   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3494349   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3494350   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3494351   +END;
MPRINT(EM_DIAGRAM):   END;
3494352   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494353   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3494354   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3494355   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3494356   +END;
MPRINT(EM_DIAGRAM):   END;
3494357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494358   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3494359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494360   +
3494361   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3494362   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3494363   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494364   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3494365   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3494366   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494367   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3494368   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494369   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494370   +end;
MPRINT(EM_DIAGRAM):   end;
3494371   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494372   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3494373   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3494374   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3494375   +   end;
MPRINT(EM_DIAGRAM):   end;
3494376   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3494377   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3494378   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3494379   +   end;
MPRINT(EM_DIAGRAM):   end;
3494380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494381   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494382   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494383   +   end;
MPRINT(EM_DIAGRAM):   end;
3494384   +end;
MPRINT(EM_DIAGRAM):   end;
3494385   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494386   +   P_DepVar1  =     4.47654234890244 * H11  +     5.27031353345351 * H12
3494387   +          +    -2.71661656855895 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.47654234890244 * H11 + 5.27031353345351 * H12 +
-2.71661656855895 * H13 ;
3494388   +   P_DepVar1  =    -1.83566201953156 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.83566201953156 + P_DepVar1 ;
3494389   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3494390   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3494391   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3494392   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3494393   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3494394   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3494395   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3494396   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3494397   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3494398   +END;
MPRINT(EM_DIAGRAM):   END;
3494399   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494400   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3494401   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3494402   +END;
MPRINT(EM_DIAGRAM):   END;
3494403   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3494404   +   P_DepVar1  =     0.13527008624602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13527008624602;
3494405   +   P_DepVar0  =     0.86472991375397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86472991375397;
3494406   +END;
MPRINT(EM_DIAGRAM):   END;
3494407   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3494408   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3494409   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3494410   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3494411   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3494412   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3494413   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3494414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494415   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3494416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494417   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3494418   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3494419   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3494420   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3494421   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3494422   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3494423   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3494424   +END;
MPRINT(EM_DIAGRAM):   END;
3494425   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494426   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3494427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494428   +drop
3494429   +S_MntCard_Games
3494430   +S_MntMagazines
3494431   +S_NumCatalogPurchases
3494432   +S_NumDealsPurchases
3494433   +S_NumWebPurchases
3494434   +S_RANGE_Frq
3494435   +S_RANGE_Recency
3494436   +S_RANGE_average_purchase
3494437   +S_RANGE_campaign_acceptance
3494438   +H11
3494439   +H12
3494440   +H13
3494441   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3494442   +end;
MPRINT(EM_DIAGRAM):   end;
3494443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494444   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3494445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494446   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3494447   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3494448   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494449   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3494450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494451   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3494452   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3494453   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3494454   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3494455   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3494456   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3494457   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3494458   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3494459   +LENGTH _WARN_ $4
3494460   +      F_DepVar  $ 12
3494461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3494462   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3494463   +
3494464   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3494465   +
3494466   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3494467   +
3494468   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3494469   +
3494470   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3494471   +
3494472   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3494473   +
3494474   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3494475   +
3494476   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3494477   +
3494478   +      label S_RANGE_campaign_acceptance =
3494479   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3494480   +
3494481   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3494482   +
3494483   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3494484   +
3494485   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3494486   +
3494487   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3494488   +
3494489   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3494490   +
3494491   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3494492   +
3494493   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3494494   +
3494495   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3494496   +
3494497   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494498   +
3494499   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3494500   +
3494501   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3494502   +
3494503   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3494504   +
3494505   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3494506   +
3494507   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3494508   +
3494509   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3494510   +
3494511   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3494512   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3494513   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3494514   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3494515   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3494516   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3494517   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3494518   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3494519   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3494520   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494521   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494522   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494523   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3494525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494526   +end;
MPRINT(EM_DIAGRAM):   end;
3494527   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494528   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3494529   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3494530   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494531   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3494532   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3494533   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3494534   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3494535   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3494536   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494537   +         end;
MPRINT(EM_DIAGRAM):   end;
3494538   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3494539   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3494540   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3494541   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494542   +            end;
MPRINT(EM_DIAGRAM):   end;
3494543   +         end;
MPRINT(EM_DIAGRAM):   end;
3494544   +      end;
MPRINT(EM_DIAGRAM):   end;
3494545   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494546   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3494547   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3494548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494549   +         end;
MPRINT(EM_DIAGRAM):   end;
3494550   +      end;
MPRINT(EM_DIAGRAM):   end;
3494551   +   end;
MPRINT(EM_DIAGRAM):   end;
3494552   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494553   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3494554   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3494555   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494556   +      end;
MPRINT(EM_DIAGRAM):   end;
3494557   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494558   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3494559   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3494560   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3494561   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3494562   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3494563   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494564   +         end;
MPRINT(EM_DIAGRAM):   end;
3494565   +      end;
MPRINT(EM_DIAGRAM):   end;
3494566   +   end;
MPRINT(EM_DIAGRAM):   end;
3494567   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3494568   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494569   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494570   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494571   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3494573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494574   +   end;
MPRINT(EM_DIAGRAM):   end;
3494575   +end;
MPRINT(EM_DIAGRAM):   end;
3494576   +
3494577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494578   +*** Checking missing input Interval
3494579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3494580   +
3494581   +IF NMISS(
3494582   +   MntCard_Games ,
3494583   +   MntMagazines ,
3494584   +   NumCatalogPurchases ,
3494585   +   NumDealsPurchases ,
3494586   +   NumWebPurchases ,
3494587   +   RANGE_Frq ,
3494588   +   RANGE_Recency ,
3494589   +   RANGE_average_purchase ,
3494590   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3494591   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3494592   +
3494593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494594   +END;
MPRINT(EM_DIAGRAM):   END;
3494595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494596   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3494597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494599   +   S_MntCard_Games  =    -2.30130897437822 +     6.58322736665233 *
3494600   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30130897437822 + 6.58322736665233 * MntCard_Games ;
3494601   +   S_MntMagazines  =    -0.83583233839969 +     17.5264758755453 *
3494602   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83583233839969 + 17.5264758755453 * MntMagazines ;
3494603   +   S_NumCatalogPurchases  =     -3.1204589230829 +     13.5183764610246 *
3494604   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.1204589230829 + 13.5183764610246 *
NumCatalogPurchases ;
3494605   +   S_NumDealsPurchases  =    -1.41575384085047 +     11.2495668992566 *
3494606   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41575384085047 + 11.2495668992566 *
NumDealsPurchases ;
3494607   +   S_NumWebPurchases  =    -5.21631900721869 +     12.2256877016862 *
3494608   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21631900721869 + 12.2256877016862 *
NumWebPurchases ;
3494609   +   S_RANGE_Frq  =     -1.3662905200641 +     4.21996452019232 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3662905200641 + 4.21996452019232 * RANGE_Frq ;
3494610   +   S_RANGE_Recency  =    -1.66143290677214 +      3.3460560568046 *
3494611   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66143290677214 + 3.3460560568046 * RANGE_Recency ;
3494612   +   S_RANGE_average_purchase  =    -1.04545429433739 +     5.21052259019565 *
3494613   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04545429433739 + 5.21052259019565 *
RANGE_average_purchase ;
3494614   +   S_RANGE_campaign_acceptance
3494615   +          =    -0.48074270957083 +     5.78210161524979 *
3494616   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48074270957083 + 5.78210161524979 *
RANGE_campaign_acceptance ;
3494617   +END;
MPRINT(EM_DIAGRAM):   END;
3494618   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494619   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3494620   +   ELSE S_MntCard_Games  =    -2.30130897437822 +     6.58322736665233 *
3494621   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30130897437822 + 6.58322736665233 *
MntCard_Games ;
3494622   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3494623   +   ELSE S_MntMagazines  =    -0.83583233839969 +     17.5264758755453 *
3494624   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83583233839969 + 17.5264758755453 *
MntMagazines ;
3494625   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3494626   +   ELSE S_NumCatalogPurchases
3494627   +          =     -3.1204589230829 +     13.5183764610246 * NumCatalogPurchases
3494628   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.1204589230829 + 13.5183764610246 *
NumCatalogPurchases ;
3494629   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3494630   +   ELSE S_NumDealsPurchases  =    -1.41575384085047 +     11.2495668992566 *
3494631   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41575384085047 + 11.2495668992566 *
NumDealsPurchases ;
3494632   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3494633   +   ELSE S_NumWebPurchases  =    -5.21631900721869 +     12.2256877016862 *
3494634   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21631900721869 + 12.2256877016862 *
NumWebPurchases ;
3494635   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3494636   +   ELSE S_RANGE_Frq  =     -1.3662905200641 +     4.21996452019232 * RANGE_Frq
3494637   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3662905200641 + 4.21996452019232 * RANGE_Frq ;
3494638   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3494639   +   ELSE S_RANGE_Recency  =    -1.66143290677214 +      3.3460560568046 *
3494640   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66143290677214 + 3.3460560568046 *
RANGE_Recency ;
3494641   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3494642   +   ELSE S_RANGE_average_purchase
3494643   +          =    -1.04545429433739 +     5.21052259019565 *
3494644   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04545429433739 + 5.21052259019565 *
RANGE_average_purchase ;
3494645   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3494646   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3494647   +   ELSE S_RANGE_campaign_acceptance
3494648   +          =    -0.48074270957083 +     5.78210161524979 *
3494649   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48074270957083 + 5.78210161524979
* RANGE_campaign_acceptance ;
3494650   +END;
MPRINT(EM_DIAGRAM):   END;
3494651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494652   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3494653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494655   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3494656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494657   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494658   +   H11  =     1.37215403851385 * S_MntCard_Games  +     0.00408590389459 *
3494659   +        S_MntMagazines  +      0.6457974650956 * S_NumCatalogPurchases
3494660   +          +     1.03054362034612 * S_NumDealsPurchases
3494661   +          +     1.98924335951156 * S_NumWebPurchases
3494662   +          +     1.15247414496656 * S_RANGE_Frq  +    -1.46630966065953 *
3494663   +        S_RANGE_Recency  +     0.40965083285179 * S_RANGE_average_purchase
3494664   +          +     0.79060727033589 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 1.37215403851385 * S_MntCard_Games + 0.00408590389459 *
S_MntMagazines + 0.6457974650956 * S_NumCatalogPurchases + 1.03054362034612 *
S_NumDealsPurchases + 1.98924335951156 * S_NumWebPurchases + 1.15247414496656 * S_RANGE_Frq +
-1.46630966065953 * S_RANGE_Recency + 0.40965083285179 * S_RANGE_average_purchase +
0.79060727033589 * S_RANGE_campaign_acceptance ;
3494665   +   H12  =     0.26500697719493 * S_MntCard_Games  +    -0.04307155820084 *
3494666   +        S_MntMagazines  +     0.23613188440617 * S_NumCatalogPurchases
3494667   +          +     0.30854956795033 * S_NumDealsPurchases
3494668   +          +    -0.15244066846724 * S_NumWebPurchases
3494669   +          +    -0.10051313381774 * S_RANGE_Frq  +    -0.63918138364181 *
3494670   +        S_RANGE_Recency  +    -0.10318153433612 * S_RANGE_average_purchase
3494671   +          +     0.39572918184516 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.26500697719493 * S_MntCard_Games + -0.04307155820084 *
S_MntMagazines + 0.23613188440617 * S_NumCatalogPurchases + 0.30854956795033 *
S_NumDealsPurchases + -0.15244066846724 * S_NumWebPurchases + -0.10051313381774 * S_RANGE_Frq
+ -0.63918138364181 * S_RANGE_Recency + -0.10318153433612 * S_RANGE_average_purchase +
0.39572918184516 * S_RANGE_campaign_acceptance ;
3494672   +   H13  =    -1.05200577458724 * S_MntCard_Games  +    -0.18362589277947 *
3494673   +        S_MntMagazines  +    -1.37042551232048 * S_NumCatalogPurchases
3494674   +          +    -0.20745937220165 * S_NumDealsPurchases
3494675   +          +    -1.16224173832871 * S_NumWebPurchases
3494676   +          +     1.63952147800575 * S_RANGE_Frq  +     1.44524678551323 *
3494677   +        S_RANGE_Recency  +    -4.76791868530524 * S_RANGE_average_purchase
3494678   +          +    -1.34705207929118 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.05200577458724 * S_MntCard_Games + -0.18362589277947 *
S_MntMagazines + -1.37042551232048 * S_NumCatalogPurchases + -0.20745937220165 *
S_NumDealsPurchases + -1.16224173832871 * S_NumWebPurchases + 1.63952147800575 * S_RANGE_Frq +
1.44524678551323 * S_RANGE_Recency + -4.76791868530524 * S_RANGE_average_purchase +
-1.34705207929118 * S_RANGE_campaign_acceptance ;
3494679   +   H11  = H11  +    -0.64610284487915 * Marital_StatusDivorced
3494680   +          +    -0.00135421991867 * Marital_StatusMarried
3494681   +          +    -0.30878720509105 * Marital_StatusSingle
3494682   +          +     0.22990246163633 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.64610284487915 * Marital_StatusDivorced +
-0.00135421991867 * Marital_StatusMarried + -0.30878720509105 * Marital_StatusSingle +
0.22990246163633 * Marital_StatusTogether ;
3494683   +   H12  = H12  +     0.31643053433541 * Marital_StatusDivorced
3494684   +          +    -0.32557282849134 * Marital_StatusMarried
3494685   +          +     0.37757326513913 * Marital_StatusSingle
3494686   +          +    -0.57807077095004 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.31643053433541 * Marital_StatusDivorced +
-0.32557282849134 * Marital_StatusMarried + 0.37757326513913 * Marital_StatusSingle +
-0.57807077095004 * Marital_StatusTogether ;
3494687   +   H13  = H13  +      0.0809744891865 * Marital_StatusDivorced
3494688   +          +    -0.33686494581615 * Marital_StatusMarried
3494689   +          +     0.54050542087674 * Marital_StatusSingle
3494690   +          +    -2.11558545406345 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0809744891865 * Marital_StatusDivorced + -0.33686494581615
* Marital_StatusMarried + 0.54050542087674 * Marital_StatusSingle + -2.11558545406345 *
Marital_StatusTogether ;
3494691   +   H11  =    -3.93937662725973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -3.93937662725973 + H11 ;
3494692   +   H12  =    -0.45860889357006 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.45860889357006 + H12 ;
3494693   +   H13  =    -0.05547456938864 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.05547456938864 + H13 ;
3494694   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3494695   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3494696   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3494697   +END;
MPRINT(EM_DIAGRAM):   END;
3494698   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494699   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3494700   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3494701   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3494702   +END;
MPRINT(EM_DIAGRAM):   END;
3494703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494704   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3494705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494706   +
3494707   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3494708   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3494709   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494710   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3494711   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3494712   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494713   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3494714   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494715   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494716   +end;
MPRINT(EM_DIAGRAM):   end;
3494717   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494718   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3494719   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3494720   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3494721   +   end;
MPRINT(EM_DIAGRAM):   end;
3494722   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3494723   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3494724   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3494725   +   end;
MPRINT(EM_DIAGRAM):   end;
3494726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494727   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3494728   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3494729   +   end;
MPRINT(EM_DIAGRAM):   end;
3494730   +end;
MPRINT(EM_DIAGRAM):   end;
3494731   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494732   +   P_DepVar1  =     2.74008997196241 * H11  +     6.64876877128048 * H12
3494733   +          +    -2.46054625831103 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.74008997196241 * H11 + 6.64876877128048 * H12 +
-2.46054625831103 * H13 ;
3494734   +   P_DepVar1  =    -2.15161441935473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.15161441935473 + P_DepVar1 ;
3494735   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3494736   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3494737   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3494738   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3494739   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3494740   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3494741   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3494742   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3494743   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3494744   +END;
MPRINT(EM_DIAGRAM):   END;
3494745   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494746   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3494747   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3494748   +END;
MPRINT(EM_DIAGRAM):   END;
3494749   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3494750   +   P_DepVar1  =     0.13777372262773;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13777372262773;
3494751   +   P_DepVar0  =     0.86222627737226;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86222627737226;
3494752   +END;
MPRINT(EM_DIAGRAM):   END;
3494753   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3494754   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3494755   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3494756   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3494757   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3494758   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3494759   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3494760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494761   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3494762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494763   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3494764   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3494765   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3494766   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3494767   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3494768   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3494769   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3494770   +END;
MPRINT(EM_DIAGRAM):   END;
3494771   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494772   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3494773   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3494774   +drop
3494775   +S_MntCard_Games
3494776   +S_MntMagazines
3494777   +S_NumCatalogPurchases
3494778   +S_NumDealsPurchases
3494779   +S_NumWebPurchases
3494780   +S_RANGE_Frq
3494781   +S_RANGE_Recency
3494782   +S_RANGE_average_purchase
3494783   +S_RANGE_campaign_acceptance
3494784   +H11
3494785   +H12
3494786   +H13
3494787   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3494788   +end;
MPRINT(EM_DIAGRAM):   end;
3494789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494790   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3494791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3494792   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3494793   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3494794   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494795   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3494796   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3494797   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3494798   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3494799   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3494800   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3494801   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3494802   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3494803   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3494804   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3494805   +LENGTH _WARN_ $4
3494806   +      F_DepVar  $ 12
3494807   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3494808   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3494809   +
3494810   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3494811   +
3494812   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3494813   +
3494814   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3494815   +
3494816   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3494817   +
3494818   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3494819   +
3494820   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3494821   +
3494822   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3494823   +
3494824   +      label S_RANGE_campaign_acceptance =
3494825   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3494826   +
3494827   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3494828   +
3494829   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3494830   +
3494831   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3494832   +
3494833   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3494834   +
3494835   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3494836   +
3494837   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3494838   +
3494839   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3494840   +
3494841   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3494842   +
3494843   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3494844   +
3494845   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3494846   +
3494847   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3494848   +
3494849   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3494850   +
3494851   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3494852   +
3494853   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3494854   +
3494855   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3494856   +
3494857   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3494858   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3494859   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3494860   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3494861   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3494862   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3494863   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3494864   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3494865   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3494866   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494867   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494868   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494869   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3494871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494872   +end;
MPRINT(EM_DIAGRAM):   end;
3494873   +else do;
MPRINT(EM_DIAGRAM):   else do;
3494874   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3494875   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3494876   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3494877   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3494878   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3494879   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3494880   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3494881   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3494882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494883   +         end;
MPRINT(EM_DIAGRAM):   end;
3494884   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3494885   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3494886   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3494887   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494888   +            end;
MPRINT(EM_DIAGRAM):   end;
3494889   +         end;
MPRINT(EM_DIAGRAM):   end;
3494890   +      end;
MPRINT(EM_DIAGRAM):   end;
3494891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494892   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3494893   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3494894   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494895   +         end;
MPRINT(EM_DIAGRAM):   end;
3494896   +      end;
MPRINT(EM_DIAGRAM):   end;
3494897   +   end;
MPRINT(EM_DIAGRAM):   end;
3494898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3494899   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3494900   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3494901   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494902   +      end;
MPRINT(EM_DIAGRAM):   end;
3494903   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3494904   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3494905   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3494906   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3494907   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3494908   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3494909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3494910   +         end;
MPRINT(EM_DIAGRAM):   end;
3494911   +      end;
MPRINT(EM_DIAGRAM):   end;
3494912   +   end;
MPRINT(EM_DIAGRAM):   end;
3494913   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3494914   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3494915   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3494916   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3494917   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3494918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3494919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494920   +   end;
MPRINT(EM_DIAGRAM):   end;
3494921   +end;
MPRINT(EM_DIAGRAM):   end;
3494922   +
3494923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494924   +*** Checking missing input Interval
3494925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3494926   +
3494927   +IF NMISS(
3494928   +   MntCard_Games ,
3494929   +   MntMagazines ,
3494930   +   NumCatalogPurchases ,
3494931   +   NumDealsPurchases ,
3494932   +   NumWebPurchases ,
3494933   +   RANGE_Frq ,
3494934   +   RANGE_Recency ,
3494935   +   RANGE_average_purchase ,
3494936   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3494937   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3494938   +
3494939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3494940   +END;
MPRINT(EM_DIAGRAM):   END;
3494941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494942   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3494943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494944   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3494945   +   S_MntCard_Games  =    -2.32778939562618 +     6.63285208254973 *
3494946   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32778939562618 + 6.63285208254973 * MntCard_Games ;
3494947   +   S_MntMagazines  =    -0.83098409983169 +        17.1943049178 *
3494948   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83098409983169 + 17.1943049178 * MntMagazines ;
3494949   +   S_NumCatalogPurchases  =    -3.09864310149069 +     13.3919949779773 *
3494950   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.09864310149069 + 13.3919949779773 *
NumCatalogPurchases ;
3494951   +   S_NumDealsPurchases  =    -1.42078184595281 +     11.3301560548133 *
3494952   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42078184595281 + 11.3301560548133 *
NumDealsPurchases ;
3494953   +   S_NumWebPurchases  =    -5.23238637945202 +     12.2760353086253 *
3494954   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23238637945202 + 12.2760353086253 *
NumWebPurchases ;
3494955   +   S_RANGE_Frq  =     -1.3592604109501 +     4.20425377108718 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3592604109501 + 4.20425377108718 * RANGE_Frq ;
3494956   +   S_RANGE_Recency  =    -1.67964969243202 +     3.37240357451299 *
3494957   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67964969243202 + 3.37240357451299 * RANGE_Recency ;
3494958   +   S_RANGE_average_purchase  =    -1.03787032315359 +     5.14788735449515 *
3494959   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03787032315359 + 5.14788735449515 *
RANGE_average_purchase ;
3494960   +   S_RANGE_campaign_acceptance
3494961   +          =    -0.47389437764804 +     5.83295520089654 *
3494962   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47389437764804 + 5.83295520089654 *
RANGE_campaign_acceptance ;
3494963   +END;
MPRINT(EM_DIAGRAM):   END;
3494964   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3494965   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3494966   +   ELSE S_MntCard_Games  =    -2.32778939562618 +     6.63285208254973 *
3494967   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32778939562618 + 6.63285208254973 *
MntCard_Games ;
3494968   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3494969   +   ELSE S_MntMagazines  =    -0.83098409983169 +        17.1943049178 *
3494970   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83098409983169 + 17.1943049178 * MntMagazines ;
3494971   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3494972   +   ELSE S_NumCatalogPurchases
3494973   +          =    -3.09864310149069 +     13.3919949779773 * NumCatalogPurchases
3494974   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.09864310149069 + 13.3919949779773 *
NumCatalogPurchases ;
3494975   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3494976   +   ELSE S_NumDealsPurchases  =    -1.42078184595281 +     11.3301560548133 *
3494977   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42078184595281 + 11.3301560548133 *
NumDealsPurchases ;
3494978   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3494979   +   ELSE S_NumWebPurchases  =    -5.23238637945202 +     12.2760353086253 *
3494980   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23238637945202 + 12.2760353086253 *
NumWebPurchases ;
3494981   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3494982   +   ELSE S_RANGE_Frq  =     -1.3592604109501 +     4.20425377108718 * RANGE_Frq
3494983   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3592604109501 + 4.20425377108718 * RANGE_Frq ;
3494984   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3494985   +   ELSE S_RANGE_Recency  =    -1.67964969243202 +     3.37240357451299 *
3494986   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67964969243202 + 3.37240357451299 *
RANGE_Recency ;
3494987   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3494988   +   ELSE S_RANGE_average_purchase
3494989   +          =    -1.03787032315359 +     5.14788735449515 *
3494990   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03787032315359 + 5.14788735449515 *
RANGE_average_purchase ;
3494991   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3494992   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3494993   +   ELSE S_RANGE_campaign_acceptance
3494994   +          =    -0.47389437764804 +     5.83295520089654 *
3494995   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47389437764804 + 5.83295520089654
* RANGE_campaign_acceptance ;
3494996   +END;
MPRINT(EM_DIAGRAM):   END;
3494997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3494998   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3494999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495001   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3495002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495004   +   H11  =     0.14831547042484 * S_MntCard_Games  +     0.37204150146097 *
3495005   +        S_MntMagazines  +     0.24367214512756 * S_NumCatalogPurchases
3495006   +          +     0.43198137394583 * S_NumDealsPurchases
3495007   +          +     -0.4643581428992 * S_NumWebPurchases
3495008   +          +     0.12426998128504 * S_RANGE_Frq  +    -0.65433475387325 *
3495009   +        S_RANGE_Recency  +     0.03110172678973 * S_RANGE_average_purchase
3495010   +          +     0.34299903764434 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.14831547042484 * S_MntCard_Games + 0.37204150146097 *
S_MntMagazines + 0.24367214512756 * S_NumCatalogPurchases + 0.43198137394583 *
S_NumDealsPurchases + -0.4643581428992 * S_NumWebPurchases + 0.12426998128504 * S_RANGE_Frq +
-0.65433475387325 * S_RANGE_Recency + 0.03110172678973 * S_RANGE_average_purchase +
0.34299903764434 * S_RANGE_campaign_acceptance ;
3495011   +   H12  =     0.80851263098773 * S_MntCard_Games  +    -0.46640237680412 *
3495012   +        S_MntMagazines  +      0.4353532296927 * S_NumCatalogPurchases
3495013   +          +     0.28616760568856 * S_NumDealsPurchases
3495014   +          +     0.91819611771806 * S_NumWebPurchases
3495015   +          +    -0.04873838338126 * S_RANGE_Frq  +    -0.87782588445361 *
3495016   +        S_RANGE_Recency  +    -0.12855772091545 * S_RANGE_average_purchase
3495017   +          +     0.62455797332558 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.80851263098773 * S_MntCard_Games + -0.46640237680412 *
S_MntMagazines + 0.4353532296927 * S_NumCatalogPurchases + 0.28616760568856 *
S_NumDealsPurchases + 0.91819611771806 * S_NumWebPurchases + -0.04873838338126 * S_RANGE_Frq +
-0.87782588445361 * S_RANGE_Recency + -0.12855772091545 * S_RANGE_average_purchase +
0.62455797332558 * S_RANGE_campaign_acceptance ;
3495018   +   H13  =    -1.08886629806371 * S_MntCard_Games  +    -0.01575573771359 *
3495019   +        S_MntMagazines  +    -1.05370536451656 * S_NumCatalogPurchases
3495020   +          +    -0.55953407490871 * S_NumDealsPurchases
3495021   +          +    -1.31056475255581 * S_NumWebPurchases
3495022   +          +     1.69648563982767 * S_RANGE_Frq  +     1.67221649407186 *
3495023   +        S_RANGE_Recency  +    -5.76035091469345 * S_RANGE_average_purchase
3495024   +          +     -1.1581106770628 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.08886629806371 * S_MntCard_Games + -0.01575573771359 *
S_MntMagazines + -1.05370536451656 * S_NumCatalogPurchases + -0.55953407490871 *
S_NumDealsPurchases + -1.31056475255581 * S_NumWebPurchases + 1.69648563982767 * S_RANGE_Frq +
1.67221649407186 * S_RANGE_Recency + -5.76035091469345 * S_RANGE_average_purchase +
-1.1581106770628 * S_RANGE_campaign_acceptance ;
3495025   +   H11  = H11  +      0.8556140059582 * Marital_StatusDivorced
3495026   +          +    -0.38763940122924 * Marital_StatusMarried
3495027   +          +    -0.00477610178862 * Marital_StatusSingle
3495028   +          +    -0.91006195176535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.8556140059582 * Marital_StatusDivorced + -0.38763940122924
* Marital_StatusMarried + -0.00477610178862 * Marital_StatusSingle + -0.91006195176535 *
Marital_StatusTogether ;
3495029   +   H12  = H12  +    -0.78075673693947 * Marital_StatusDivorced
3495030   +          +     -0.2759078713732 * Marital_StatusMarried
3495031   +          +     0.91968539551972 * Marital_StatusSingle
3495032   +          +     -0.0812213033953 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.78075673693947 * Marital_StatusDivorced +
-0.2759078713732 * Marital_StatusMarried + 0.91968539551972 * Marital_StatusSingle +
-0.0812213033953 * Marital_StatusTogether ;
3495033   +   H13  = H13  +     -0.0885663218829 * Marital_StatusDivorced
3495034   +          +     -0.4217926257268 * Marital_StatusMarried
3495035   +          +     0.42801866421917 * Marital_StatusSingle
3495036   +          +    -1.31954363909804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.0885663218829 * Marital_StatusDivorced + -0.4217926257268
* Marital_StatusMarried + 0.42801866421917 * Marital_StatusSingle + -1.31954363909804 *
Marital_StatusTogether ;
3495037   +   H11  =    -1.12823200762359 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.12823200762359 + H11 ;
3495038   +   H12  =    -1.37408370163469 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.37408370163469 + H12 ;
3495039   +   H13  =     0.22820206841168 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.22820206841168 + H13 ;
3495040   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3495041   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3495042   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3495043   +END;
MPRINT(EM_DIAGRAM):   END;
3495044   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495045   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3495046   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3495047   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3495048   +END;
MPRINT(EM_DIAGRAM):   END;
3495049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495050   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3495051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495052   +
3495053   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3495054   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3495055   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495056   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3495057   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3495058   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495059   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3495060   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495061   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495062   +end;
MPRINT(EM_DIAGRAM):   end;
3495063   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495064   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3495065   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3495066   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3495067   +   end;
MPRINT(EM_DIAGRAM):   end;
3495068   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3495069   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3495070   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3495071   +   end;
MPRINT(EM_DIAGRAM):   end;
3495072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495073   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495074   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495075   +   end;
MPRINT(EM_DIAGRAM):   end;
3495076   +end;
MPRINT(EM_DIAGRAM):   end;
3495077   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495078   +   P_DepVar1  =     5.44826491077681 * H11  +      4.9480210518596 * H12
3495079   +          +     -2.6992826593195 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44826491077681 * H11 + 4.9480210518596 * H12 +
-2.6992826593195 * H13 ;
3495080   +   P_DepVar1  =    -1.01653046019131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.01653046019131 + P_DepVar1 ;
3495081   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3495082   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3495083   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3495084   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3495085   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3495086   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3495087   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3495088   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3495089   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3495090   +END;
MPRINT(EM_DIAGRAM):   END;
3495091   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495092   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3495093   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3495094   +END;
MPRINT(EM_DIAGRAM):   END;
3495095   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3495096   +   P_DepVar1  =     0.13491340018231;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13491340018231;
3495097   +   P_DepVar0  =     0.86508659981768;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86508659981768;
3495098   +END;
MPRINT(EM_DIAGRAM):   END;
3495099   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3495100   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3495101   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3495102   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3495103   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3495104   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3495105   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3495106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495107   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3495108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495109   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3495110   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3495111   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3495112   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3495113   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3495114   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3495115   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3495116   +END;
MPRINT(EM_DIAGRAM):   END;
3495117   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495118   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3495119   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495120   +drop
3495121   +S_MntCard_Games
3495122   +S_MntMagazines
3495123   +S_NumCatalogPurchases
3495124   +S_NumDealsPurchases
3495125   +S_NumWebPurchases
3495126   +S_RANGE_Frq
3495127   +S_RANGE_Recency
3495128   +S_RANGE_average_purchase
3495129   +S_RANGE_campaign_acceptance
3495130   +H11
3495131   +H12
3495132   +H13
3495133   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3495134   +end;
MPRINT(EM_DIAGRAM):   end;
3495135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495136   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3495137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495138   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3495139   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3495140   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495141   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3495142   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495143   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3495144   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3495145   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3495146   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3495147   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3495148   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3495149   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3495150   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3495151   +LENGTH _WARN_ $4
3495152   +      F_DepVar  $ 12
3495153   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3495154   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3495155   +
3495156   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3495157   +
3495158   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3495159   +
3495160   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3495161   +
3495162   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3495163   +
3495164   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3495165   +
3495166   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3495167   +
3495168   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3495169   +
3495170   +      label S_RANGE_campaign_acceptance =
3495171   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3495172   +
3495173   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3495174   +
3495175   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3495176   +
3495177   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3495178   +
3495179   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3495180   +
3495181   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3495182   +
3495183   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3495184   +
3495185   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3495186   +
3495187   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3495188   +
3495189   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495190   +
3495191   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3495192   +
3495193   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3495194   +
3495195   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3495196   +
3495197   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3495198   +
3495199   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3495200   +
3495201   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3495202   +
3495203   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3495204   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3495205   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3495206   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3495207   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3495208   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3495209   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3495210   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3495211   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3495212   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495213   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495214   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495215   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3495217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495218   +end;
MPRINT(EM_DIAGRAM):   end;
3495219   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495220   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3495221   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3495222   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495223   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3495224   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3495225   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3495226   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3495227   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3495228   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495229   +         end;
MPRINT(EM_DIAGRAM):   end;
3495230   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3495231   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3495232   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3495233   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495234   +            end;
MPRINT(EM_DIAGRAM):   end;
3495235   +         end;
MPRINT(EM_DIAGRAM):   end;
3495236   +      end;
MPRINT(EM_DIAGRAM):   end;
3495237   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495238   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3495239   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3495240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495241   +         end;
MPRINT(EM_DIAGRAM):   end;
3495242   +      end;
MPRINT(EM_DIAGRAM):   end;
3495243   +   end;
MPRINT(EM_DIAGRAM):   end;
3495244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495245   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3495246   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3495247   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495248   +      end;
MPRINT(EM_DIAGRAM):   end;
3495249   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495250   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3495251   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3495252   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3495253   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3495254   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3495255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495256   +         end;
MPRINT(EM_DIAGRAM):   end;
3495257   +      end;
MPRINT(EM_DIAGRAM):   end;
3495258   +   end;
MPRINT(EM_DIAGRAM):   end;
3495259   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3495260   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495261   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495262   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495263   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3495265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495266   +   end;
MPRINT(EM_DIAGRAM):   end;
3495267   +end;
MPRINT(EM_DIAGRAM):   end;
3495268   +
3495269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495270   +*** Checking missing input Interval
3495271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3495272   +
3495273   +IF NMISS(
3495274   +   MntCard_Games ,
3495275   +   MntMagazines ,
3495276   +   NumCatalogPurchases ,
3495277   +   NumDealsPurchases ,
3495278   +   NumWebPurchases ,
3495279   +   RANGE_Frq ,
3495280   +   RANGE_Recency ,
3495281   +   RANGE_average_purchase ,
3495282   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3495283   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3495284   +
3495285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495286   +END;
MPRINT(EM_DIAGRAM):   END;
3495287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495288   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3495289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495291   +   S_MntCard_Games  =     -2.3220779011842 +     6.65291175643999 *
3495292   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.3220779011842 + 6.65291175643999 * MntCard_Games ;
3495293   +   S_MntMagazines  =    -0.82930226480491 +     17.2520110095081 *
3495294   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82930226480491 + 17.2520110095081 * MntMagazines ;
3495295   +   S_NumCatalogPurchases  =    -3.11123544244492 +     13.4465556668407 *
3495296   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11123544244492 + 13.4465556668407 *
NumCatalogPurchases ;
3495297   +   S_NumDealsPurchases  =    -1.41571531812675 +     11.1712446598207 *
3495298   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41571531812675 + 11.1712446598207 *
NumDealsPurchases ;
3495299   +   S_NumWebPurchases  =    -5.22663616969868 +      12.251236937933 *
3495300   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22663616969868 + 12.251236937933 *
NumWebPurchases ;
3495301   +   S_RANGE_Frq  =    -1.35896916923355 +     4.21755669126277 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.35896916923355 + 4.21755669126277 * RANGE_Frq ;
3495302   +   S_RANGE_Recency  =    -1.66905575567851 +     3.35652906128383 *
3495303   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66905575567851 + 3.35652906128383 * RANGE_Recency ;
3495304   +   S_RANGE_average_purchase  =     -1.0345485466184 +     5.18701830207161 *
3495305   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0345485466184 + 5.18701830207161 *
RANGE_average_purchase ;
3495306   +   S_RANGE_campaign_acceptance
3495307   +          =    -0.47670085796184 +     5.78090199062142 *
3495308   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47670085796184 + 5.78090199062142 *
RANGE_campaign_acceptance ;
3495309   +END;
MPRINT(EM_DIAGRAM):   END;
3495310   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495311   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3495312   +   ELSE S_MntCard_Games  =     -2.3220779011842 +     6.65291175643999 *
3495313   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.3220779011842 + 6.65291175643999 *
MntCard_Games ;
3495314   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3495315   +   ELSE S_MntMagazines  =    -0.82930226480491 +     17.2520110095081 *
3495316   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82930226480491 + 17.2520110095081 *
MntMagazines ;
3495317   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3495318   +   ELSE S_NumCatalogPurchases
3495319   +          =    -3.11123544244492 +     13.4465556668407 * NumCatalogPurchases
3495320   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11123544244492 + 13.4465556668407 *
NumCatalogPurchases ;
3495321   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3495322   +   ELSE S_NumDealsPurchases  =    -1.41571531812675 +     11.1712446598207 *
3495323   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41571531812675 + 11.1712446598207 *
NumDealsPurchases ;
3495324   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3495325   +   ELSE S_NumWebPurchases  =    -5.22663616969868 +      12.251236937933 *
3495326   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22663616969868 + 12.251236937933 *
NumWebPurchases ;
3495327   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3495328   +   ELSE S_RANGE_Frq  =    -1.35896916923355 +     4.21755669126277 * RANGE_Frq
3495329   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.35896916923355 + 4.21755669126277 * RANGE_Frq ;
3495330   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3495331   +   ELSE S_RANGE_Recency  =    -1.66905575567851 +     3.35652906128383 *
3495332   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66905575567851 + 3.35652906128383 *
RANGE_Recency ;
3495333   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3495334   +   ELSE S_RANGE_average_purchase
3495335   +          =     -1.0345485466184 +     5.18701830207161 *
3495336   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0345485466184 + 5.18701830207161 *
RANGE_average_purchase ;
3495337   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3495338   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3495339   +   ELSE S_RANGE_campaign_acceptance
3495340   +          =    -0.47670085796184 +     5.78090199062142 *
3495341   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47670085796184 + 5.78090199062142
* RANGE_campaign_acceptance ;
3495342   +END;
MPRINT(EM_DIAGRAM):   END;
3495343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495344   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3495345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495347   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3495348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495349   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495350   +   H11  =     0.96738008606441 * S_MntCard_Games  +    -0.12159696031549 *
3495351   +        S_MntMagazines  +     0.75805802509878 * S_NumCatalogPurchases
3495352   +          +     0.47589623502324 * S_NumDealsPurchases
3495353   +          +     0.97822889038306 * S_NumWebPurchases
3495354   +          +     0.27493304392277 * S_RANGE_Frq  +     -1.4605875948422 *
3495355   +        S_RANGE_Recency  +    -0.35872669708601 * S_RANGE_average_purchase
3495356   +          +     0.89504926519702 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.96738008606441 * S_MntCard_Games + -0.12159696031549 *
S_MntMagazines + 0.75805802509878 * S_NumCatalogPurchases + 0.47589623502324 *
S_NumDealsPurchases + 0.97822889038306 * S_NumWebPurchases + 0.27493304392277 * S_RANGE_Frq +
-1.4605875948422 * S_RANGE_Recency + -0.35872669708601 * S_RANGE_average_purchase +
0.89504926519702 * S_RANGE_campaign_acceptance ;
3495357   +   H12  =     0.07773930092435 * S_MntCard_Games  +     0.00483716172753 *
3495358   +        S_MntMagazines  +     0.11105630167766 * S_NumCatalogPurchases
3495359   +          +     0.47005537448765 * S_NumDealsPurchases
3495360   +          +    -0.39226067300932 * S_NumWebPurchases
3495361   +          +    -0.00718736575429 * S_RANGE_Frq  +    -0.40075773477864 *
3495362   +        S_RANGE_Recency  +     0.23395510339946 * S_RANGE_average_purchase
3495363   +          +     0.25687666438207 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.07773930092435 * S_MntCard_Games + 0.00483716172753 *
S_MntMagazines + 0.11105630167766 * S_NumCatalogPurchases + 0.47005537448765 *
S_NumDealsPurchases + -0.39226067300932 * S_NumWebPurchases + -0.00718736575429 * S_RANGE_Frq
+ -0.40075773477864 * S_RANGE_Recency + 0.23395510339946 * S_RANGE_average_purchase +
0.25687666438207 * S_RANGE_campaign_acceptance ;
3495364   +   H13  =    -1.35185127819689 * S_MntCard_Games  +    -0.06947628369577 *
3495365   +        S_MntMagazines  +    -1.62652543468603 * S_NumCatalogPurchases
3495366   +          +    -0.52760102888462 * S_NumDealsPurchases
3495367   +          +    -1.59942299291304 * S_NumWebPurchases
3495368   +          +     1.50046102827548 * S_RANGE_Frq  +     2.13399623832358 *
3495369   +        S_RANGE_Recency  +    -5.10735597890376 * S_RANGE_average_purchase
3495370   +          +    -1.44015293944041 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.35185127819689 * S_MntCard_Games + -0.06947628369577 *
S_MntMagazines + -1.62652543468603 * S_NumCatalogPurchases + -0.52760102888462 *
S_NumDealsPurchases + -1.59942299291304 * S_NumWebPurchases + 1.50046102827548 * S_RANGE_Frq +
2.13399623832358 * S_RANGE_Recency + -5.10735597890376 * S_RANGE_average_purchase +
-1.44015293944041 * S_RANGE_campaign_acceptance ;
3495371   +   H11  = H11  +    -0.82982124873275 * Marital_StatusDivorced
3495372   +          +    -0.73636575679674 * Marital_StatusMarried
3495373   +          +     1.70542956163859 * Marital_StatusSingle
3495374   +          +    -0.37232536673454 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.82982124873275 * Marital_StatusDivorced +
-0.73636575679674 * Marital_StatusMarried + 1.70542956163859 * Marital_StatusSingle +
-0.37232536673454 * Marital_StatusTogether ;
3495375   +   H12  = H12  +     0.89099171600571 * Marital_StatusDivorced
3495376   +          +    -0.06470721629419 * Marital_StatusMarried
3495377   +          +    -0.53997171345571 * Marital_StatusSingle
3495378   +          +    -0.70663551245599 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.89099171600571 * Marital_StatusDivorced +
-0.06470721629419 * Marital_StatusMarried + -0.53997171345571 * Marital_StatusSingle +
-0.70663551245599 * Marital_StatusTogether ;
3495379   +   H13  = H13  +     0.46892603366926 * Marital_StatusDivorced
3495380   +          +    -0.30798079953478 * Marital_StatusMarried
3495381   +          +      0.7448956541199 * Marital_StatusSingle
3495382   +          +    -2.79948076135136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.46892603366926 * Marital_StatusDivorced +
-0.30798079953478 * Marital_StatusMarried + 0.7448956541199 * Marital_StatusSingle +
-2.79948076135136 * Marital_StatusTogether ;
3495383   +   H11  =     -1.9043745089916 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.9043745089916 + H11 ;
3495384   +   H12  =    -0.97340839912913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97340839912913 + H12 ;
3495385   +   H13  =     0.44236152197211 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.44236152197211 + H13 ;
3495386   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3495387   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3495388   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3495389   +END;
MPRINT(EM_DIAGRAM):   END;
3495390   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495391   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3495392   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3495393   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3495394   +END;
MPRINT(EM_DIAGRAM):   END;
3495395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495396   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3495397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495398   +
3495399   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3495400   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3495401   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495402   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3495403   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3495404   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495405   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3495406   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495407   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495408   +end;
MPRINT(EM_DIAGRAM):   end;
3495409   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495410   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3495411   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3495412   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3495413   +   end;
MPRINT(EM_DIAGRAM):   end;
3495414   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3495415   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3495416   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3495417   +   end;
MPRINT(EM_DIAGRAM):   end;
3495418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495419   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495420   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495421   +   end;
MPRINT(EM_DIAGRAM):   end;
3495422   +end;
MPRINT(EM_DIAGRAM):   end;
3495423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495424   +   P_DepVar1  =     4.84216602668946 * H11  +      5.2242888202027 * H12
3495425   +          +     -2.4442547825242 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.84216602668946 * H11 + 5.2242888202027 * H12 +
-2.4442547825242 * H13 ;
3495426   +   P_DepVar1  =    -1.02549391898506 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.02549391898506 + P_DepVar1 ;
3495427   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3495428   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3495429   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3495430   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3495431   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3495432   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3495433   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3495434   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3495435   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3495436   +END;
MPRINT(EM_DIAGRAM):   END;
3495437   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495438   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3495439   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3495440   +END;
MPRINT(EM_DIAGRAM):   END;
3495441   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3495442   +   P_DepVar1  =     0.13512283894449;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13512283894449;
3495443   +   P_DepVar0  =      0.8648771610555;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8648771610555;
3495444   +END;
MPRINT(EM_DIAGRAM):   END;
3495445   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3495446   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3495447   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3495448   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3495449   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3495450   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3495451   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3495452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495453   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3495454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495455   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3495456   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3495457   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3495458   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3495459   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3495460   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3495461   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3495462   +END;
MPRINT(EM_DIAGRAM):   END;
3495463   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495464   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3495465   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495466   +drop
3495467   +S_MntCard_Games
3495468   +S_MntMagazines
3495469   +S_NumCatalogPurchases
3495470   +S_NumDealsPurchases
3495471   +S_NumWebPurchases
3495472   +S_RANGE_Frq
3495473   +S_RANGE_Recency
3495474   +S_RANGE_average_purchase
3495475   +S_RANGE_campaign_acceptance
3495476   +H11
3495477   +H12
3495478   +H13
3495479   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3495480   +end;
MPRINT(EM_DIAGRAM):   end;
3495481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495482   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3495483   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495484   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3495485   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3495486   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495487   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3495488   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495489   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3495490   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3495491   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3495492   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3495493   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3495494   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3495495   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3495496   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3495497   +LENGTH _WARN_ $4
3495498   +      F_DepVar  $ 12
3495499   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3495500   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3495501   +
3495502   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3495503   +
3495504   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3495505   +
3495506   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3495507   +
3495508   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3495509   +
3495510   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3495511   +
3495512   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3495513   +
3495514   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3495515   +
3495516   +      label S_RANGE_campaign_acceptance =
3495517   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3495518   +
3495519   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3495520   +
3495521   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3495522   +
3495523   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3495524   +
3495525   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3495526   +
3495527   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3495528   +
3495529   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3495530   +
3495531   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3495532   +
3495533   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3495534   +
3495535   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495536   +
3495537   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3495538   +
3495539   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3495540   +
3495541   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3495542   +
3495543   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3495544   +
3495545   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3495546   +
3495547   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3495548   +
3495549   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3495550   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3495551   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3495552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3495553   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3495554   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3495555   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3495556   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3495557   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3495558   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495559   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495560   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495561   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3495563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495564   +end;
MPRINT(EM_DIAGRAM):   end;
3495565   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495566   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3495567   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3495568   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495569   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3495570   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3495571   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3495572   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3495573   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3495574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495575   +         end;
MPRINT(EM_DIAGRAM):   end;
3495576   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3495577   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3495578   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3495579   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495580   +            end;
MPRINT(EM_DIAGRAM):   end;
3495581   +         end;
MPRINT(EM_DIAGRAM):   end;
3495582   +      end;
MPRINT(EM_DIAGRAM):   end;
3495583   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495584   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3495585   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3495586   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495587   +         end;
MPRINT(EM_DIAGRAM):   end;
3495588   +      end;
MPRINT(EM_DIAGRAM):   end;
3495589   +   end;
MPRINT(EM_DIAGRAM):   end;
3495590   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495591   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3495592   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3495593   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495594   +      end;
MPRINT(EM_DIAGRAM):   end;
3495595   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495596   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3495597   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3495598   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3495599   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3495600   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3495601   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495602   +         end;
MPRINT(EM_DIAGRAM):   end;
3495603   +      end;
MPRINT(EM_DIAGRAM):   end;
3495604   +   end;
MPRINT(EM_DIAGRAM):   end;
3495605   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3495606   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495607   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495608   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495609   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3495611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495612   +   end;
MPRINT(EM_DIAGRAM):   end;
3495613   +end;
MPRINT(EM_DIAGRAM):   end;
3495614   +
3495615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495616   +*** Checking missing input Interval
3495617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3495618   +
3495619   +IF NMISS(
3495620   +   MntCard_Games ,
3495621   +   MntMagazines ,
3495622   +   NumCatalogPurchases ,
3495623   +   NumDealsPurchases ,
3495624   +   NumWebPurchases ,
3495625   +   RANGE_Frq ,
3495626   +   RANGE_Recency ,
3495627   +   RANGE_average_purchase ,
3495628   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3495629   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3495630   +
3495631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495632   +END;
MPRINT(EM_DIAGRAM):   END;
3495633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495634   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3495635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495637   +   S_MntCard_Games  =    -2.31160990778391 +     6.60673124746978 *
3495638   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31160990778391 + 6.60673124746978 * MntCard_Games ;
3495639   +   S_MntMagazines  =     -0.8313279178076 +     17.3781899787911 *
3495640   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8313279178076 + 17.3781899787911 * MntMagazines ;
3495641   +   S_NumCatalogPurchases  =    -3.10458665247157 +     13.4580416399331 *
3495642   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10458665247157 + 13.4580416399331 *
NumCatalogPurchases ;
3495643   +   S_NumDealsPurchases  =    -1.41080303640415 +     11.1572554145356 *
3495644   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41080303640415 + 11.1572554145356 *
NumDealsPurchases ;
3495645   +   S_NumWebPurchases  =    -5.15985895759176 +     12.1216692325881 *
3495646   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.15985895759176 + 12.1216692325881 *
NumWebPurchases ;
3495647   +   S_RANGE_Frq  =     -1.3685824581405 +     4.18353648826218 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.3685824581405 + 4.18353648826218 * RANGE_Frq ;
3495648   +   S_RANGE_Recency  =    -1.66030424870568 +     3.33882485786727 *
3495649   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66030424870568 + 3.33882485786727 * RANGE_Recency ;
3495650   +   S_RANGE_average_purchase  =    -1.04083938460256 +      5.1470050168564 *
3495651   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04083938460256 + 5.1470050168564 *
RANGE_average_purchase ;
3495652   +   S_RANGE_campaign_acceptance
3495653   +          =    -0.46901655747043 +     5.73748410109466 *
3495654   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.46901655747043 + 5.73748410109466 *
RANGE_campaign_acceptance ;
3495655   +END;
MPRINT(EM_DIAGRAM):   END;
3495656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495657   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3495658   +   ELSE S_MntCard_Games  =    -2.31160990778391 +     6.60673124746978 *
3495659   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31160990778391 + 6.60673124746978 *
MntCard_Games ;
3495660   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3495661   +   ELSE S_MntMagazines  =     -0.8313279178076 +     17.3781899787911 *
3495662   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8313279178076 + 17.3781899787911 * MntMagazines
;
3495663   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3495664   +   ELSE S_NumCatalogPurchases
3495665   +          =    -3.10458665247157 +     13.4580416399331 * NumCatalogPurchases
3495666   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10458665247157 + 13.4580416399331 *
NumCatalogPurchases ;
3495667   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3495668   +   ELSE S_NumDealsPurchases  =    -1.41080303640415 +     11.1572554145356 *
3495669   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41080303640415 + 11.1572554145356 *
NumDealsPurchases ;
3495670   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3495671   +   ELSE S_NumWebPurchases  =    -5.15985895759176 +     12.1216692325881 *
3495672   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.15985895759176 + 12.1216692325881 *
NumWebPurchases ;
3495673   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3495674   +   ELSE S_RANGE_Frq  =     -1.3685824581405 +     4.18353648826218 * RANGE_Frq
3495675   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.3685824581405 + 4.18353648826218 * RANGE_Frq ;
3495676   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3495677   +   ELSE S_RANGE_Recency  =    -1.66030424870568 +     3.33882485786727 *
3495678   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66030424870568 + 3.33882485786727 *
RANGE_Recency ;
3495679   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3495680   +   ELSE S_RANGE_average_purchase
3495681   +          =    -1.04083938460256 +      5.1470050168564 *
3495682   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04083938460256 + 5.1470050168564 *
RANGE_average_purchase ;
3495683   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3495684   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3495685   +   ELSE S_RANGE_campaign_acceptance
3495686   +          =    -0.46901655747043 +     5.73748410109466 *
3495687   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.46901655747043 + 5.73748410109466
* RANGE_campaign_acceptance ;
3495688   +END;
MPRINT(EM_DIAGRAM):   END;
3495689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495690   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3495691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495693   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3495694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495695   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495696   +   H11  =     0.83750706305841 * S_MntCard_Games  +    -0.12306002642555 *
3495697   +        S_MntMagazines  +     0.60061317275045 * S_NumCatalogPurchases
3495698   +          +     0.23925360802617 * S_NumDealsPurchases
3495699   +          +     0.75892936345796 * S_NumWebPurchases
3495700   +          +     0.31372946509422 * S_RANGE_Frq  +    -1.09414966066647 *
3495701   +        S_RANGE_Recency  +     -0.4887613415943 * S_RANGE_average_purchase
3495702   +          +      0.6641380111464 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.83750706305841 * S_MntCard_Games + -0.12306002642555 *
S_MntMagazines + 0.60061317275045 * S_NumCatalogPurchases + 0.23925360802617 *
S_NumDealsPurchases + 0.75892936345796 * S_NumWebPurchases + 0.31372946509422 * S_RANGE_Frq +
-1.09414966066647 * S_RANGE_Recency + -0.4887613415943 * S_RANGE_average_purchase +
0.6641380111464 * S_RANGE_campaign_acceptance ;
3495703   +   H12  =     0.13579493424763 * S_MntCard_Games  +     0.00664992821397 *
3495704   +        S_MntMagazines  +     0.16750820848711 * S_NumCatalogPurchases
3495705   +          +     0.77821729259292 * S_NumDealsPurchases
3495706   +          +    -0.33109480708754 * S_NumWebPurchases
3495707   +          +    -0.03947077520375 * S_RANGE_Frq  +    -0.65324872465715 *
3495708   +        S_RANGE_Recency  +     0.50531094455534 * S_RANGE_average_purchase
3495709   +          +     0.44365497599197 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.13579493424763 * S_MntCard_Games + 0.00664992821397 *
S_MntMagazines + 0.16750820848711 * S_NumCatalogPurchases + 0.77821729259292 *
S_NumDealsPurchases + -0.33109480708754 * S_NumWebPurchases + -0.03947077520375 * S_RANGE_Frq
+ -0.65324872465715 * S_RANGE_Recency + 0.50531094455534 * S_RANGE_average_purchase +
0.44365497599197 * S_RANGE_campaign_acceptance ;
3495710   +   H13  =    -1.68494036495129 * S_MntCard_Games  +    -0.12083704199497 *
3495711   +        S_MntMagazines  +    -1.81372551734748 * S_NumCatalogPurchases
3495712   +          +    -0.65681393238395 * S_NumDealsPurchases
3495713   +          +    -1.58270270998426 * S_NumWebPurchases
3495714   +          +     1.78314426590867 * S_RANGE_Frq  +      2.5449332171427 *
3495715   +        S_RANGE_Recency  +    -5.73401680738782 * S_RANGE_average_purchase
3495716   +          +    -1.79015563179553 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.68494036495129 * S_MntCard_Games + -0.12083704199497 *
S_MntMagazines + -1.81372551734748 * S_NumCatalogPurchases + -0.65681393238395 *
S_NumDealsPurchases + -1.58270270998426 * S_NumWebPurchases + 1.78314426590867 * S_RANGE_Frq +
2.5449332171427 * S_RANGE_Recency + -5.73401680738782 * S_RANGE_average_purchase +
-1.79015563179553 * S_RANGE_campaign_acceptance ;
3495717   +   H11  = H11  +    -0.79100045872066 * Marital_StatusDivorced
3495718   +          +    -0.60445132278271 * Marital_StatusMarried
3495719   +          +     1.43374582900897 * Marital_StatusSingle
3495720   +          +    -0.32309171825454 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79100045872066 * Marital_StatusDivorced +
-0.60445132278271 * Marital_StatusMarried + 1.43374582900897 * Marital_StatusSingle +
-0.32309171825454 * Marital_StatusTogether ;
3495721   +   H12  = H12  +     1.14004839111718 * Marital_StatusDivorced
3495722   +          +      0.0859807038843 * Marital_StatusMarried
3495723   +          +    -0.56072001449838 * Marital_StatusSingle
3495724   +          +    -0.81957015966934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 1.14004839111718 * Marital_StatusDivorced + 0.0859807038843
* Marital_StatusMarried + -0.56072001449838 * Marital_StatusSingle + -0.81957015966934 *
Marital_StatusTogether ;
3495725   +   H13  = H13  +     0.44129969614884 * Marital_StatusDivorced
3495726   +          +    -0.02522320030818 * Marital_StatusMarried
3495727   +          +       1.069815904116 * Marital_StatusSingle
3495728   +          +    -3.05339971544429 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.44129969614884 * Marital_StatusDivorced +
-0.02522320030818 * Marital_StatusMarried + 1.069815904116 * Marital_StatusSingle +
-3.05339971544429 * Marital_StatusTogether ;
3495729   +   H11  =    -1.42395136529001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.42395136529001 + H11 ;
3495730   +   H12  =    -1.53928203433104 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.53928203433104 + H12 ;
3495731   +   H13  =     0.62374640775038 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.62374640775038 + H13 ;
3495732   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3495733   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3495734   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3495735   +END;
MPRINT(EM_DIAGRAM):   END;
3495736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495737   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3495738   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3495739   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3495740   +END;
MPRINT(EM_DIAGRAM):   END;
3495741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495742   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3495743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495744   +
3495745   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3495746   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3495747   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495748   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3495749   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3495750   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495751   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3495752   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495753   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495754   +end;
MPRINT(EM_DIAGRAM):   end;
3495755   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495756   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3495757   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3495758   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3495759   +   end;
MPRINT(EM_DIAGRAM):   end;
3495760   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3495761   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3495762   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3495763   +   end;
MPRINT(EM_DIAGRAM):   end;
3495764   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495765   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3495766   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3495767   +   end;
MPRINT(EM_DIAGRAM):   end;
3495768   +end;
MPRINT(EM_DIAGRAM):   end;
3495769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495770   +   P_DepVar1  =       5.259592847362 * H11  +     4.99968859625792 * H12
3495771   +          +    -2.48935118566471 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.259592847362 * H11 + 4.99968859625792 * H12 +
-2.48935118566471 * H13 ;
3495772   +   P_DepVar1  =     -0.9753156712971 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.9753156712971 + P_DepVar1 ;
3495773   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3495774   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3495775   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3495776   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3495777   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3495778   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3495779   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3495780   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3495781   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3495782   +END;
MPRINT(EM_DIAGRAM):   END;
3495783   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3495784   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3495785   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3495786   +END;
MPRINT(EM_DIAGRAM):   END;
3495787   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3495788   +   P_DepVar1  =      0.1360544217687;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.1360544217687;
3495789   +   P_DepVar0  =     0.86394557823129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86394557823129;
3495790   +END;
MPRINT(EM_DIAGRAM):   END;
3495791   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3495792   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3495793   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3495794   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3495795   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3495796   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3495797   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3495798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495799   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3495800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495801   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3495802   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3495803   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3495804   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3495805   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3495806   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3495807   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3495808   +END;
MPRINT(EM_DIAGRAM):   END;
3495809   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495810   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3495811   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3495812   +drop
3495813   +S_MntCard_Games
3495814   +S_MntMagazines
3495815   +S_NumCatalogPurchases
3495816   +S_NumDealsPurchases
3495817   +S_NumWebPurchases
3495818   +S_RANGE_Frq
3495819   +S_RANGE_Recency
3495820   +S_RANGE_average_purchase
3495821   +S_RANGE_campaign_acceptance
3495822   +H11
3495823   +H12
3495824   +H13
3495825   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3495826   +end;
MPRINT(EM_DIAGRAM):   end;
3495827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495828   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3495829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3495830   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3495831   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3495832   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495833   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3495834   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3495835   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3495836   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3495837   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3495838   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3495839   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3495840   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3495841   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3495842   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3495843   +LENGTH _WARN_ $4
3495844   +      F_DepVar  $ 12
3495845   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3495846   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3495847   +
3495848   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3495849   +
3495850   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3495851   +
3495852   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3495853   +
3495854   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3495855   +
3495856   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3495857   +
3495858   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3495859   +
3495860   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3495861   +
3495862   +      label S_RANGE_campaign_acceptance =
3495863   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3495864   +
3495865   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3495866   +
3495867   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3495868   +
3495869   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3495870   +
3495871   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3495872   +
3495873   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3495874   +
3495875   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3495876   +
3495877   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3495878   +
3495879   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3495880   +
3495881   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3495882   +
3495883   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3495884   +
3495885   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3495886   +
3495887   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3495888   +
3495889   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3495890   +
3495891   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3495892   +
3495893   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3495894   +
3495895   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3495896   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3495897   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3495898   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3495899   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3495900   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3495901   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3495902   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3495903   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3495904   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495905   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495906   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495907   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3495909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495910   +end;
MPRINT(EM_DIAGRAM):   end;
3495911   +else do;
MPRINT(EM_DIAGRAM):   else do;
3495912   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3495913   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3495914   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3495915   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3495916   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3495917   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3495918   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3495919   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3495920   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495921   +         end;
MPRINT(EM_DIAGRAM):   end;
3495922   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3495923   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3495924   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3495925   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495926   +            end;
MPRINT(EM_DIAGRAM):   end;
3495927   +         end;
MPRINT(EM_DIAGRAM):   end;
3495928   +      end;
MPRINT(EM_DIAGRAM):   end;
3495929   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495930   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3495931   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3495932   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495933   +         end;
MPRINT(EM_DIAGRAM):   end;
3495934   +      end;
MPRINT(EM_DIAGRAM):   end;
3495935   +   end;
MPRINT(EM_DIAGRAM):   end;
3495936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3495937   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3495938   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3495939   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495940   +      end;
MPRINT(EM_DIAGRAM):   end;
3495941   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3495942   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3495943   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3495944   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3495945   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3495946   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3495947   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3495948   +         end;
MPRINT(EM_DIAGRAM):   end;
3495949   +      end;
MPRINT(EM_DIAGRAM):   end;
3495950   +   end;
MPRINT(EM_DIAGRAM):   end;
3495951   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3495952   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3495953   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3495954   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3495955   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3495956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3495957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495958   +   end;
MPRINT(EM_DIAGRAM):   end;
3495959   +end;
MPRINT(EM_DIAGRAM):   end;
3495960   +
3495961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495962   +*** Checking missing input Interval
3495963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3495964   +
3495965   +IF NMISS(
3495966   +   MntCard_Games ,
3495967   +   MntMagazines ,
3495968   +   NumCatalogPurchases ,
3495969   +   NumDealsPurchases ,
3495970   +   NumWebPurchases ,
3495971   +   RANGE_Frq ,
3495972   +   RANGE_Recency ,
3495973   +   RANGE_average_purchase ,
3495974   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3495975   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3495976   +
3495977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3495978   +END;
MPRINT(EM_DIAGRAM):   END;
3495979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495980   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3495981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3495982   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3495983   +   S_MntCard_Games  =    -2.32515076805437 +     6.66411277179852 *
3495984   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32515076805437 + 6.66411277179852 * MntCard_Games ;
3495985   +   S_MntMagazines  =    -0.83422384899092 +     17.2983453953919 *
3495986   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83422384899092 + 17.2983453953919 * MntMagazines ;
3495987   +   S_NumCatalogPurchases  =    -3.13456754474558 +     13.6193005964789 *
3495988   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.13456754474558 + 13.6193005964789 *
NumCatalogPurchases ;
3495989   +   S_NumDealsPurchases  =    -1.42384362740717 +     11.2791203965929 *
3495990   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42384362740717 + 11.2791203965929 *
NumDealsPurchases ;
3495991   +   S_NumWebPurchases  =    -5.27669246426392 +     12.3414696712185 *
3495992   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.27669246426392 + 12.3414696712185 *
NumWebPurchases ;
3495993   +   S_RANGE_Frq  =    -1.36365277596795 +     4.20592806484111 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36365277596795 + 4.20592806484111 * RANGE_Frq ;
3495994   +   S_RANGE_Recency  =    -1.66812948690867 +     3.35606481009998 *
3495995   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66812948690867 + 3.35606481009998 * RANGE_Recency ;
3495996   +   S_RANGE_average_purchase  =    -1.03955846350372 +     5.17833970767657 *
3495997   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03955846350372 + 5.17833970767657 *
RANGE_average_purchase ;
3495998   +   S_RANGE_campaign_acceptance
3495999   +          =    -0.46821065808265 +     5.77724337430798 *
3496000   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.46821065808265 + 5.77724337430798 *
RANGE_campaign_acceptance ;
3496001   +END;
MPRINT(EM_DIAGRAM):   END;
3496002   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3496003   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3496004   +   ELSE S_MntCard_Games  =    -2.32515076805437 +     6.66411277179852 *
3496005   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32515076805437 + 6.66411277179852 *
MntCard_Games ;
3496006   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3496007   +   ELSE S_MntMagazines  =    -0.83422384899092 +     17.2983453953919 *
3496008   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83422384899092 + 17.2983453953919 *
MntMagazines ;
3496009   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3496010   +   ELSE S_NumCatalogPurchases
3496011   +          =    -3.13456754474558 +     13.6193005964789 * NumCatalogPurchases
3496012   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.13456754474558 + 13.6193005964789 *
NumCatalogPurchases ;
3496013   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3496014   +   ELSE S_NumDealsPurchases  =    -1.42384362740717 +     11.2791203965929 *
3496015   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42384362740717 + 11.2791203965929 *
NumDealsPurchases ;
3496016   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3496017   +   ELSE S_NumWebPurchases  =    -5.27669246426392 +     12.3414696712185 *
3496018   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.27669246426392 + 12.3414696712185 *
NumWebPurchases ;
3496019   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3496020   +   ELSE S_RANGE_Frq  =    -1.36365277596795 +     4.20592806484111 * RANGE_Frq
3496021   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36365277596795 + 4.20592806484111 * RANGE_Frq ;
3496022   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3496023   +   ELSE S_RANGE_Recency  =    -1.66812948690867 +     3.35606481009998 *
3496024   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66812948690867 + 3.35606481009998 *
RANGE_Recency ;
3496025   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3496026   +   ELSE S_RANGE_average_purchase
3496027   +          =    -1.03955846350372 +     5.17833970767657 *
3496028   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03955846350372 + 5.17833970767657 *
RANGE_average_purchase ;
3496029   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3496030   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3496031   +   ELSE S_RANGE_campaign_acceptance
3496032   +          =    -0.46821065808265 +     5.77724337430798 *
3496033   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.46821065808265 + 5.77724337430798
* RANGE_campaign_acceptance ;
3496034   +END;
MPRINT(EM_DIAGRAM):   END;
3496035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496036   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3496037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496039   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3496040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3496042   +   H11  =     0.87001813312897 * S_MntCard_Games  +    -0.33848453449803 *
3496043   +        S_MntMagazines  +     0.55049108221365 * S_NumCatalogPurchases
3496044   +          +     0.33222299012994 * S_NumDealsPurchases
3496045   +          +     0.91828121990615 * S_NumWebPurchases
3496046   +          +     0.20111867016344 * S_RANGE_Frq  +    -1.19343312758587 *
3496047   +        S_RANGE_Recency  +    -0.10880259887038 * S_RANGE_average_purchase
3496048   +          +     0.75469908934892 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.87001813312897 * S_MntCard_Games + -0.33848453449803 *
S_MntMagazines + 0.55049108221365 * S_NumCatalogPurchases + 0.33222299012994 *
S_NumDealsPurchases + 0.91828121990615 * S_NumWebPurchases + 0.20111867016344 * S_RANGE_Frq +
-1.19343312758587 * S_RANGE_Recency + -0.10880259887038 * S_RANGE_average_purchase +
0.75469908934892 * S_RANGE_campaign_acceptance ;
3496049   +   H12  =       0.130218299814 * S_MntCard_Games  +     0.28333095702557 *
3496050   +        S_MntMagazines  +     0.11293648512122 * S_NumCatalogPurchases
3496051   +          +     0.52074890564042 * S_NumDealsPurchases
3496052   +          +    -0.59680157357676 * S_NumWebPurchases
3496053   +          +    -0.00212488934584 * S_RANGE_Frq  +    -0.42592641138012 *
3496054   +        S_RANGE_Recency  +     -0.0833994062201 * S_RANGE_average_purchase
3496055   +          +     0.28314715920496 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.130218299814 * S_MntCard_Games + 0.28333095702557 *
S_MntMagazines + 0.11293648512122 * S_NumCatalogPurchases + 0.52074890564042 *
S_NumDealsPurchases + -0.59680157357676 * S_NumWebPurchases + -0.00212488934584 * S_RANGE_Frq
+ -0.42592641138012 * S_RANGE_Recency + -0.0833994062201 * S_RANGE_average_purchase +
0.28314715920496 * S_RANGE_campaign_acceptance ;
3496056   +   H13  =    -1.08831753482605 * S_MntCard_Games  +    -0.00348425820564 *
3496057   +        S_MntMagazines  +    -1.66869089914579 * S_NumCatalogPurchases
3496058   +          +    -0.43590463585276 * S_NumDealsPurchases
3496059   +          +    -1.67924883044426 * S_NumWebPurchases
3496060   +          +     1.24759149808797 * S_RANGE_Frq  +     1.99779155631169 *
3496061   +        S_RANGE_Recency  +    -4.92065596716501 * S_RANGE_average_purchase
3496062   +          +    -1.12880617136423 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.08831753482605 * S_MntCard_Games + -0.00348425820564 *
S_MntMagazines + -1.66869089914579 * S_NumCatalogPurchases + -0.43590463585276 *
S_NumDealsPurchases + -1.67924883044426 * S_NumWebPurchases + 1.24759149808797 * S_RANGE_Frq +
1.99779155631169 * S_RANGE_Recency + -4.92065596716501 * S_RANGE_average_purchase +
-1.12880617136423 * S_RANGE_campaign_acceptance ;
3496063   +   H11  = H11  +     -0.3429438553579 * Marital_StatusDivorced
3496064   +          +    -0.58324772444407 * Marital_StatusMarried
3496065   +          +     1.21157089146838 * Marital_StatusSingle
3496066   +          +    -0.21830861815595 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.3429438553579 * Marital_StatusDivorced +
-0.58324772444407 * Marital_StatusMarried + 1.21157089146838 * Marital_StatusSingle +
-0.21830861815595 * Marital_StatusTogether ;
3496067   +   H12  = H12  +     0.69782615780998 * Marital_StatusDivorced
3496068   +          +      0.0010629040942 * Marital_StatusMarried
3496069   +          +    -0.29629270025047 * Marital_StatusSingle
3496070   +          +    -0.92523948084965 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.69782615780998 * Marital_StatusDivorced + 0.0010629040942
* Marital_StatusMarried + -0.29629270025047 * Marital_StatusSingle + -0.92523948084965 *
Marital_StatusTogether ;
3496071   +   H13  = H13  +     0.51129559987623 * Marital_StatusDivorced
3496072   +          +    -0.15740810021415 * Marital_StatusMarried
3496073   +          +     0.71579146822893 * Marital_StatusSingle
3496074   +          +    -2.61171238117809 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.51129559987623 * Marital_StatusDivorced +
-0.15740810021415 * Marital_StatusMarried + 0.71579146822893 * Marital_StatusSingle +
-2.61171238117809 * Marital_StatusTogether ;
3496075   +   H11  =    -1.71779577073371 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.71779577073371 + H11 ;
3496076   +   H12  =    -0.83288393401971 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.83288393401971 + H12 ;
3496077   +   H13  =     0.33367566413609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.33367566413609 + H13 ;
3496078   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3496079   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3496080   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3496081   +END;
MPRINT(EM_DIAGRAM):   END;
3496082   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3496083   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3496084   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3496085   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3496086   +END;
MPRINT(EM_DIAGRAM):   END;
3496087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496088   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3496089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496090   +
3496091   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3496092   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3496093   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3496094   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3496095   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3496096   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3496097   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3496098   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3496099   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3496100   +end;
MPRINT(EM_DIAGRAM):   end;
3496101   +else do;
MPRINT(EM_DIAGRAM):   else do;
3496102   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3496103   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3496104   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3496105   +   end;
MPRINT(EM_DIAGRAM):   end;
3496106   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3496107   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3496108   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3496109   +   end;
MPRINT(EM_DIAGRAM):   end;
3496110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3496111   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3496112   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3496113   +   end;
MPRINT(EM_DIAGRAM):   end;
3496114   +end;
MPRINT(EM_DIAGRAM):   end;
3496115   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3496116   +   P_DepVar1  =     4.70458363288169 * H11  +     4.69421850726771 * H12
3496117   +          +    -2.97648940345531 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.70458363288169 * H11 + 4.69421850726771 * H12 +
-2.97648940345531 * H13 ;
3496118   +   P_DepVar1  =    -1.76253226242947 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.76253226242947 + P_DepVar1 ;
3496119   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3496120   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3496121   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3496122   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3496123   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3496124   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3496125   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3496126   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3496127   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3496128   +END;
MPRINT(EM_DIAGRAM):   END;
3496129   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3496130   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3496131   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3496132   +END;
MPRINT(EM_DIAGRAM):   END;
3496133   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3496134   +   P_DepVar1  =     0.13003663003663;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13003663003663;
3496135   +   P_DepVar0  =     0.86996336996337;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86996336996337;
3496136   +END;
MPRINT(EM_DIAGRAM):   END;
3496137   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3496138   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3496139   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3496140   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3496141   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3496142   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3496143   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3496144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496145   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3496146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3496147   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3496148   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3496149   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3496150   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3496151   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3496152   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3496153   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3496154   +END;
MPRINT(EM_DIAGRAM):   END;
3496155   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3496156   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3496157   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3496158   +drop
3496159   +S_MntCard_Games
3496160   +S_MntMagazines
3496161   +S_NumCatalogPurchases
3496162   +S_NumDealsPurchases
3496163   +S_NumWebPurchases
3496164   +S_RANGE_Frq
3496165   +S_RANGE_Recency
3496166   +S_RANGE_average_purchase
3496167   +S_RANGE_campaign_acceptance
3496168   +H11
3496169   +H12
3496170   +H13
3496171   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 ;
3496172   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3496173    run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP13_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3496174    quit;
3496175    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Neural5_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3496199    data EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMOUTFIT;
3496200    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3496201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3496202    data EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMOUTFIT;
3496203    set EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT;
3496204    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3496205    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3496205  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3496206    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3496207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3496208    proc sort data=EMWS1.Neural5_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_EMREPORTFIT nothreads;
3496209    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3496210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL5_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3496211    %let _EMwarndup = 0;
3496212    %let _EMtargetdup =;
3496213    %let _EMASEtargetdup =;
3496214    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3496215    set EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT;
3496216    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3496217    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3496218    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3496219    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3496220    end;
MPRINT(EM_DIAGRAM):   end;
3496221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3496222    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3496223    * Neural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural5: Computing metadata for TRAIN data;
3496224    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural5_TRAIN out=WORK.M2Z73_T8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z73_T8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z73_T8(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z73_T8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z73_T8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3RJLXR5 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JXK129(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RJLXR5;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp13_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp13_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural5";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural5";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3496577    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3496578    set EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO;
3496579    where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3496580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_EMINFO.
      WHERE (DATA='Neural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3496581    data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMINFO;
3496582    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3496583    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3496584    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3496588    run;
3496589    data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMINFO;
3496590    set EMWS1.Neural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMINFO WORK.MODELTEMP_INFO;
3496591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3496592    proc sort data = EMWS1.Neural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural5_EMINFO NOTHREADS;
3496593    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3496594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3496595    proc sort data = EMWS1.Grp13_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp13_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3496596    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3496597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP13_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3496598    proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3496599    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3496600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3496601    data EMWS1.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMINFO;
3496602    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3496603    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3496604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3496605    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3496606    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3496607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3496608    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
3496609    proc sort data=EMWS1.Grp13_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp13_CMeta_TRAIN out=WORK.SUBSETINMETA;
3496610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3496611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.GRP13_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3496612    proc sort data=EMWS1.Neural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3496613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3496614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL5_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3496615    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3496616    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3496617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3496618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3496619    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3496620    set EMWS1.Neural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_CMeta_TRAIN;
3496621    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3496621  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3496622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3496623    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3496624    set EMWS1.Neural5_TRAIN(keep=
3496625    F_DepVar
3496626    I_DepVar
3496627    P_DepVar0
3496628    P_DepVar1
3496629    R_DepVar0
3496630    R_DepVar1
3496631    U_DepVar
3496632    _WARN_
3496633    DepVar
3496634    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3496635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.NEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.GRP13_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.NEURAL5_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural5_3G64KDZ nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural5_3G64KDZ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural5_3G64KDZ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural5_3G64KDZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural5_3G64KDZ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.5412607E-7 OVLMAX 0.9999908517 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
The SAS System
 
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3500922    %let grouptarget=0;
3500923    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3500924    set EMWS1.Grp13_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp13_EMLOOPINFO;
3500925    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3500926    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3500927    stop;
MPRINT(EM_DIAGRAM):   stop;
3500928    end;
MPRINT(EM_DIAGRAM):   end;
3500929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP13_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3500930    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3500931    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3500932    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3500933    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3500933  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3500934    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3500935    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3500936    set EMWS1.Neural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT;
3500937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3500938    data EMWS1.Neural5_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMOUTFIT_LOOP;
3500939    set EMWS1.Neural5_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMOUTFIT_LOOP work.EMOUTFIT;
3500940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL5_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.NEURAL5_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500941    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3500942    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3500943    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3500944    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3500944  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3500945    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3500946    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3500947    set EMWS1.Neural5_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMREPORTFIT;
3500948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500949    data EMWS1.Neural5_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMREPORTFIT_LOOP;
3500950    set EMWS1.Neural5_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMREPORTFIT_LOOP work.EMREPORTFIT;
3500951    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 210 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL5_EMREPORTFIT_LOOP has 219 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500952    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3500953    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3500954    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3500955    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3500955  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3500956    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3500957    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3500958    set EMWS1.Neural5_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMRANK;
3500959    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3500960    data EMWS1.Neural5_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMRANK_LOOP;
3500961    set EMWS1.Neural5_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMRANK_LOOP work.EMRANK;
3500962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.NEURAL5_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.NEURAL5_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500963    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3500964    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3500965    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3500966    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3500966  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3500967    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3500968    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3500969    set EMWS1.Neural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMSCOREDIST;
3500970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500971    data EMWS1.Neural5_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMSCOREDIST_LOOP;
3500972    set EMWS1.Neural5_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMSCOREDIST_LOOP work.EMSCOREDIST;
3500973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.NEURAL5_EMSCOREDIST_LOOP has 220 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3500974    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3500975    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3500976    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3500977    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3500977  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3500978    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3500979    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3500980    set EMWS1.Neural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMCLASSIFICATION;
3500981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500982    data EMWS1.Neural5_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMCLASSIFICATION_LOOP;
3500983    set EMWS1.Neural5_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3500984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3500985    proc sort data=EMWS1.Neural5_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_EMCLASSIFICATION_LOOP out=_temp;
3500986    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3500987    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3500988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3500989    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3500989  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount
totalPercent);
3500990    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3500991    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3500992    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3500993    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3500994    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3500995    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3500996    end;
MPRINT(EM_DIAGRAM):   end;
3500997    else do;
MPRINT(EM_DIAGRAM):   else do;
3500998    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3500999    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3501000    end;
MPRINT(EM_DIAGRAM):   end;
3501001    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3501002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3501003    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3501003  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount
eventPercent);
3501004    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3501005    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3501006    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3501007    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3501008    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3501009    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3501010    end;
MPRINT(EM_DIAGRAM):   end;
3501011    else do;
MPRINT(EM_DIAGRAM):   else do;
3501012    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3501013    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3501014    end;
MPRINT(EM_DIAGRAM):   end;
3501015    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3501016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3501017    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3501017  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
neventPercent);
3501018    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3501019    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3501020    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3501021    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3501022    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3501023    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3501024    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3501025    end;
MPRINT(EM_DIAGRAM):   end;
3501026    else do;
MPRINT(EM_DIAGRAM):   else do;
3501027    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3501028    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3501029    end;
MPRINT(EM_DIAGRAM):   end;
3501030    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3501031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3501032    data EMWS1.Neural5_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMMISC_LOOP;
3501033    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3501034    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3501035    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3501035  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3501035  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3501036       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3501036  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3501036  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3501037       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3501037  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3501038    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3501039    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3501040    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3501041    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3501042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.NEURAL5_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3501043    proc sort data=EMWS1.Neural5_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural5_EMMISC_LOOP;
3501044    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3501045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL5_EMMISC_LOOP.
NOTE: The data set EMWS1.NEURAL5_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3501046    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3501047    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3501048    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3501049    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3501049  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3501050    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3501051    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3501052    set EMWS1.Neural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMEVENTREPORT;
3501053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3501054    data EMWS1.Neural5_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMEVENTREPORT_LOOP;
3501055    set EMWS1.Neural5_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3501056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL5_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3501057    %let _cn = %sysfunc(getoption(CENTER));
3501058    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3501059    proc print data=EMWS1.Neural5_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMREPORTFIT_LOOP noobs label;
3501060    var STAT LABEL TRAIN
3501061    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3501062    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3501063    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3501064    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3501065    run;
 
NOTE: There were 219 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2317.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3501066    title10;
MPRINT(EM_DIAGRAM):   title10;
3501067    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3501068    proc sort data=EMWS1.Neural5_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural5_EMCLASSIFICATION_LOOP nothreads;
3501069    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3501070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3501071    %let _cn = %sysfunc(getoption(CENTER));
3501072    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3501073    proc print data=EMWS1.Neural5_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMCLASSIFICATION_LOOP noobs label;
3501074    var from into pct_row pct_col count percent
3501075    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3501076    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3501077    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3501078    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3501079    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3501080    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3501081    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3501082    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3501083    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3501084    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3501085    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3501086    run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL5_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2318.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3501087    title9;
MPRINT(EM_DIAGRAM):   title9;
3501088    title10;
MPRINT(EM_DIAGRAM):   title10;
3501089    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3501090    %let _cn = %sysfunc(getoption(CENTER));
3501091    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3501092    data EMWS1.Neural5_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural5_EMEVENTREPORT_LOOP;
3501093    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3501093  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3501094    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3501094  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3501094  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3501094  ! FALSEEVENT
3501095    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3501095  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3501095  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3501096       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3501097    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3501098    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3501099    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3501100    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3501101    set EMWS1.Neural5_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural5_EMEVENTREPORT_LOOP;
3501102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.NEURAL5_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3501103    proc print data=EMWS1.Neural5_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMEVENTREPORT_LOOP noobs label;
3501104    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3501105    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3501106    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3501107    run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL5_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2319.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3501108    title10;
MPRINT(EM_DIAGRAM):   title10;
3501109    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3501110    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3501111    modify Neural5_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural5_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3501112    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3501113    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3501113  ! ;
MPRINT(EM_DIAGRAM):   run;
3501114    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL5_EMRANK_LOOP.DATA.
3501115    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
3501116    %let _cn = %sysfunc(getoption(CENTER));
3501117    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3501118    proc print data=EMWS1.Neural5_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMRANK_LOOP label noobs;
3501119    var
3501120    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3501121    by
3501122    notsorted DATAROLE
3501123    notsorted _WHERE_
3501124    notsorted TARGET
3501125    notsorted TARGETLABEL
3501126    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3501127    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3501128    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3501129    run;
 
NOTE: There were 220 observations read from the data set EMWS1.NEURAL5_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2320.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3501130    title10;
MPRINT(EM_DIAGRAM):   title10;
3501131    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3501132    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3501133    modify Neural5_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural5_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3501134    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3501134  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3501135    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3501135  ! ;
MPRINT(EM_DIAGRAM):   run;
3501136    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL5_EMSCOREDIST_LOOP.DATA.
3501137    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
3501138    %let _cn = %sysfunc(getoption(CENTER));
3501139    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3501140    proc print data=EMWS1.Neural5_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural5_EMSCOREDIST_LOOP label noobs;
3501141    var
3501142    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3501143    by
3501144    notsorted DATAROLE
3501145    notsorted _WHERE_
3501146    notsorted TARGET
3501147    notsorted TARGETLABEL
3501148    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3501149    where TARGET in(
3501150    "DepVar"
3501151    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3501152    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3501153    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3501154    run;
 
NOTE: There were 220 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2321.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3501155    title10;
MPRINT(EM_DIAGRAM):   title10;
3501156    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3501157    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:48 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:05:48 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural5\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural5_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ITERATIONPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_PLOTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="WEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_WEIGHTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="HISTWEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMESTIMATE_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural5_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
