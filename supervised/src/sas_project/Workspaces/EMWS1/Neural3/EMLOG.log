*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:06:11 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:01 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:06:01 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FOITP6 "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FOITP6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:01 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:02 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3521915    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3521916    set EMWS1.Grp11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_EMINFO;
3521917    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3521918    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3521919    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3521920    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3521921    data WORK.M2C_UBS5;
MPRINT(EM_DIAGRAM):    data WORK.M2C_UBS5;
3521922    set WORK.M2C_UBS5;
MPRINT(EM_DIAGRAM):   set WORK.M2C_UBS5;
3521923    where upcase(NAME) in(
3521924    "DEPVAR"
3521925    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3521926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2C_UBS5.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M2C_UBS5 has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3521927    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Grp11_TRAIN EMWS1.Grp11_TRAIN
EMWS1.Grp11_TRAIN EMWS1.Grp11_TRAIN EMWS1 Grp11_TRAIN
EMWS1.Grp11_TRAIN EMWS1.Grp11_TRAIN
EMWS1.Grp11_TRAIN EMWS1.Grp11_TRAIN EMWS1 Grp11_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp11_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Neural3_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_DepVar_DD
out=EMWS1.Neural3_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3521974    data WORK.Neural3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3521975    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3521976    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3521976  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3521976  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3521977       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3521977  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3521977  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3521978    set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3521979    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3521980    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3521981    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3521982    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3521983    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3521984    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3521985    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3521986    end;
MPRINT(EM_DIAGRAM):   end;
3521987    output;
MPRINT(EM_DIAGRAM):   output;
3521988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3521989    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3521990    proc print data=WORK.Neural3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural3_EVENT noobs label;
3521991    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3521992    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3521993    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3521994    run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL3_EVENT.
NOTE: The PROCEDURE PRINT printed page 2330.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3521995    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3521996    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural3_DepVar_DM noobs label;
3521997    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3521998    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3521999    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3521999  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3521999  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3522000    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3522001    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3522002    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2331.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522003    title10;
MPRINT(EM_DIAGRAM):   title10;
3522004    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522005    set EMWS1.Grp11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_EMINFO;
3522006    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3522007    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3522008    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3522009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522010    filename emflow "C:\Users\misil\Desktop\DM
3522010  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas";
3522011    filename empub "C:\Users\misil\Desktop\DM
3522011  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas";
3522012    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522013    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3522014    set EMWS1.Grp11_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_GROUPINFO end=eof;
3522015    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3522016    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3522017    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3522018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP11_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3522019    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522020    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522021    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522022    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3522023    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3522025    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_1.source";
3522026    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522027    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522028    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_1.source";
3522029    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522030    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522031    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522032    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522033    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14214,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522035    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522036    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522037    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522038    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3522039    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522041    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_1.source";
3522042    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522043    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522044    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_1.source";
3522045    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522046    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522047    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522048    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522049    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13249,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522051    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522052    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522053    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522054    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3522055    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=14220,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3522057    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_2.source";
3522058    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14374,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522059    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522060    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_2.source";
3522061    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=14411,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522062    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522063    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522064    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522065    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28434,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522067    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522068    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522069    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522070    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3522071    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13255,
      Last Modified=02 June 2018 17:06:02 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522073    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_2.source";
3522074    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13410,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522075    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522076    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_2.source";
3522077    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13447,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522078    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522079    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522080    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522081    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26504,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522083    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522084    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522085    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522086    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3522087    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=28440,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522089    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_3.source";
3522090    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28594,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522091    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522092    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_3.source";
3522093    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=28631,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522094    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522095    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522096    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522097    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42654,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522099    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522100    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522101    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522102    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3522103    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26510,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3522105    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_3.source";
3522106    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26665,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522107    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522108    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_3.source";
3522109    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26702,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522110    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522111    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522112    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522113    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39759,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522115    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522116    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522117    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522118    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3522119    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=42660,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3522121    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_4.source";
3522122    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42814,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522123    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522124    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_4.source";
3522125    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=42851,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522126    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522127    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522128    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522129    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56874,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522131    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522132    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522133    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522134    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3522135    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39765,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522137    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_4.source";
3522138    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39920,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522139    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522140    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_4.source";
3522141    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39957,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522142    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522143    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522144    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522145    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53014,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522147    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522148    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522149    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522150    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3522151    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=56880,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522153    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_5.source";
3522154    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57034,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522155    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522156    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_5.source";
3522157    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=57071,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522158    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522159    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522160    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522161    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=71094,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522163    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522164    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522165    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522166    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3522167    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53020,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522169    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_5.source";
3522170    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53175,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522171    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522172    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_5.source";
3522173    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53212,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522174    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522175    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522176    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522177    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=66269,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522179    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522180    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522181    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522182    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3522183    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=71100,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522185    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_6.source";
3522186    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=71254,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522187    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522188    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_6.source";
3522189    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=71291,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522190    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522191    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522192    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522193    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85314,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522195    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522196    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522197    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522198    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3522199    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=66275,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522201    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_6.source";
3522202    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=66430,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522203    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522204    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_6.source";
3522205    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=66467,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522206    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522207    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522208    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522209    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=79524,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522211    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522212    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522213    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522214    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3522215    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=85320,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522217    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_7.source";
3522218    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=85474,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522219    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522220    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_7.source";
3522221    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=85511,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522222    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522223    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522224    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522225    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=99534,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522227    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522228    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522229    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522230    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3522231    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=79530,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522233    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_7.source";
3522234    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=79685,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522235    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522236    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_7.source";
3522237    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=79722,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522238    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522239    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522240    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522241    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92779,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522243    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522244    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522245    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522246    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3522247    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=99540,
      Last Modified=02 June 2018 17:06:03 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522249    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_8.source";
3522250    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=99694,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522251    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522252    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_8.source";
3522253    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=99731,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522254    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522255    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522256    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522257    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=113754,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522259    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522260    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522261    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522262    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3522263    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=92785,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522265    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_8.source";
3522266    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92940,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522267    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522268    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_8.source";
3522269    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=92977,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522270    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522271    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522272    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522273    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=106034,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522275    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522276    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522277    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522278    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3522279    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=113760,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522281    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_9.source";
3522282    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=113914,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522283    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522284    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_9.source";
3522285    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=113951,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522286    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522287    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522288    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522289    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=127974,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522291    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522292    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522293    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522294    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3522295    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=106040,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522297    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_9.source";
3522298    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=106195,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522299    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522300    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_9.source";
3522301    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=106232,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522302    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522303    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522304    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522305    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=119289,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522307    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522308    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522309    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522310    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3522311    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=127980,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522313    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_10.source";
3522314    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=128135,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522315    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522316    filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMFLOWCODE_10.source";
3522317    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=128174,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 392 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522318    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522319    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522320    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3522321    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=142197,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
3522323    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522324    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522325    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522326    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3522327    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3522328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=119295,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3522329    filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp11_LOOP.EMPUBLISHCODE_10.source";
3522330    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=119451,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522331    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522332    filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Neural3_LOOP.EMPUBLISHCODE_10.source";
3522333    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=119490,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 353 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 78.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3522334    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3522335    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3522336    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3522337    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3522338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=132547,
      Last Modified=02 June 2018 17:06:04 o'clock,
      Create Time=30 May 2018 20:25:45 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3522339    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3522340    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP11_EMLOOPINFO.
NOTE: The data set EMWS1.NEURAL3_EMLOOPINFO has 10 observations and 3 variables.
3522341    proc print data=EMWS1.Neural3_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Neural3_EMLOOPINFO noobs label;
3522342    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3522343    run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL3_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2332.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3522344    title9;
MPRINT(EM_DIAGRAM):   title9;
3522345    filename emflow "C:\Users\misil\Desktop\DM
3522345  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3522346    *------------------------------------------------------------*;
3522347    * Neural3: Scoring DATA data;
3522348    *------------------------------------------------------------*;
3522349    data EMWS1.Neural3_TRAIN
3522350    / view=EMWS1.Neural3_TRAIN
3522351    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_TRAIN / view=EMWS1.Neural3_TRAIN ;
3522352    set EMWS1.Grp11_TRAIN
3522353    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_TRAIN ;
3522354    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMFLOWSCORE.sas.
3522355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3522356   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3522357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3522358   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3522359   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3522360   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3522361   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3522362   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3522363   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3522364   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3522365   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3522366   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3522367   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3522368   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3522369   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3522370   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3522371   +LENGTH _WARN_ $4
3522372   +      F_DepVar  $ 12
3522373   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3522374   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3522375   +
3522376   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3522377   +
3522378   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3522379   +
3522380   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3522381   +
3522382   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3522383   +
3522384   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3522385   +
3522386   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3522387   +
3522388   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3522389   +
3522390   +      label S_RANGE_campaign_acceptance =
3522391   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3522392   +
3522393   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3522394   +
3522395   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3522396   +
3522397   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3522398   +
3522399   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3522400   +
3522401   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3522402   +
3522403   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3522404   +
3522405   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3522406   +
3522407   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3522408   +
3522409   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3522410   +
3522411   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3522412   +
3522413   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3522414   +
3522415   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3522416   +
3522417   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3522418   +
3522419   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3522420   +
3522421   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3522422   +
3522423   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3522424   +
3522425   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3522426   +
3522427   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3522428   +
3522429   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3522430   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3522431   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3522432   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3522433   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3522434   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3522435   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3522436   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3522437   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3522438   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3522439   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3522440   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3522441   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3522442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3522443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522444   +end;
MPRINT(EM_DIAGRAM):   end;
3522445   +else do;
MPRINT(EM_DIAGRAM):   else do;
3522446   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3522447   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3522448   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3522449   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3522450   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3522451   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3522452   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3522453   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3522454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522455   +         end;
MPRINT(EM_DIAGRAM):   end;
3522456   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3522457   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3522458   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3522459   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522460   +            end;
MPRINT(EM_DIAGRAM):   end;
3522461   +         end;
MPRINT(EM_DIAGRAM):   end;
3522462   +      end;
MPRINT(EM_DIAGRAM):   end;
3522463   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3522464   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3522465   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3522466   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522467   +         end;
MPRINT(EM_DIAGRAM):   end;
3522468   +      end;
MPRINT(EM_DIAGRAM):   end;
3522469   +   end;
MPRINT(EM_DIAGRAM):   end;
3522470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3522471   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3522472   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3522473   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522474   +      end;
MPRINT(EM_DIAGRAM):   end;
3522475   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3522476   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3522477   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3522478   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3522479   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3522480   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3522481   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522482   +         end;
MPRINT(EM_DIAGRAM):   end;
3522483   +      end;
MPRINT(EM_DIAGRAM):   end;
3522484   +   end;
MPRINT(EM_DIAGRAM):   end;
3522485   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3522486   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3522487   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3522488   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3522489   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3522490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3522491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522492   +   end;
MPRINT(EM_DIAGRAM):   end;
3522493   +end;
MPRINT(EM_DIAGRAM):   end;
3522494   +
3522495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522496   +*** Checking missing input Interval
3522497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3522498   +
3522499   +IF NMISS(
3522500   +   MntCard_Games ,
3522501   +   MntMagazines ,
3522502   +   NumCatalogPurchases ,
3522503   +   NumDealsPurchases ,
3522504   +   NumWebPurchases ,
3522505   +   RANGE_Frq ,
3522506   +   RANGE_Recency ,
3522507   +   RANGE_average_purchase ,
3522508   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3522509   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3522510   +
3522511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522512   +END;
MPRINT(EM_DIAGRAM):   END;
3522513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522514   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3522515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522516   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3522517   +   S_MntCard_Games  =    -2.31633152412107 +     6.63961214733305 *
3522518   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.31633152412107 + 6.63961214733305 * MntCard_Games ;
3522519   +   S_MntMagazines  =    -0.83310078749065 +     17.1782166230333 *
3522520   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83310078749065 + 17.1782166230333 * MntMagazines ;
3522521   +   S_NumCatalogPurchases  =    -3.10236382993447 +     13.4651364383093 *
3522522   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10236382993447 + 13.4651364383093 *
NumCatalogPurchases ;
3522523   +   S_NumDealsPurchases  =    -1.41419711263658 +     11.1260778670505 *
3522524   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41419711263658 + 11.1260778670505 *
NumDealsPurchases ;
3522525   +   S_NumWebPurchases  =    -5.22726584458503 +     12.2353034977895 *
3522526   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22726584458503 + 12.2353034977895 *
NumWebPurchases ;
3522527   +   S_RANGE_Frq  =    -1.36962723432313 +      4.2428882090185 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36962723432313 + 4.2428882090185 * RANGE_Frq ;
3522528   +   S_RANGE_Recency  =    -1.66023526942195 +     3.34270048889282 *
3522529   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66023526942195 + 3.34270048889282 * RANGE_Recency ;
3522530   +   S_RANGE_average_purchase  =    -1.03863097507694 +     5.19850795640987 *
3522531   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03863097507694 + 5.19850795640987 *
RANGE_average_purchase ;
3522532   +   S_RANGE_campaign_acceptance
The SAS System
 
3522533   +          =    -0.47147991349306 +      5.8517392691825 *
3522534   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47147991349306 + 5.8517392691825 *
RANGE_campaign_acceptance ;
3522535   +END;
MPRINT(EM_DIAGRAM):   END;
3522536   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3522537   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3522538   +   ELSE S_MntCard_Games  =    -2.31633152412107 +     6.63961214733305 *
3522539   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.31633152412107 + 6.63961214733305 *
MntCard_Games ;
3522540   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3522541   +   ELSE S_MntMagazines  =    -0.83310078749065 +     17.1782166230333 *
3522542   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83310078749065 + 17.1782166230333 *
MntMagazines ;
3522543   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3522544   +   ELSE S_NumCatalogPurchases
3522545   +          =    -3.10236382993447 +     13.4651364383093 * NumCatalogPurchases
3522546   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10236382993447 + 13.4651364383093 *
NumCatalogPurchases ;
3522547   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3522548   +   ELSE S_NumDealsPurchases  =    -1.41419711263658 +     11.1260778670505 *
3522549   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41419711263658 + 11.1260778670505 *
NumDealsPurchases ;
3522550   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3522551   +   ELSE S_NumWebPurchases  =    -5.22726584458503 +     12.2353034977895 *
3522552   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22726584458503 + 12.2353034977895 *
NumWebPurchases ;
3522553   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3522554   +   ELSE S_RANGE_Frq  =    -1.36962723432313 +      4.2428882090185 * RANGE_Frq
3522555   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36962723432313 + 4.2428882090185 * RANGE_Frq ;
3522556   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3522557   +   ELSE S_RANGE_Recency  =    -1.66023526942195 +     3.34270048889282 *
3522558   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66023526942195 + 3.34270048889282 *
RANGE_Recency ;
3522559   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3522560   +   ELSE S_RANGE_average_purchase
3522561   +          =    -1.03863097507694 +     5.19850795640987 *
3522562   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03863097507694 + 5.19850795640987 *
RANGE_average_purchase ;
3522563   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3522564   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3522565   +   ELSE S_RANGE_campaign_acceptance
3522566   +          =    -0.47147991349306 +      5.8517392691825 *
3522567   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47147991349306 + 5.8517392691825 *
RANGE_campaign_acceptance ;
3522568   +END;
MPRINT(EM_DIAGRAM):   END;
3522569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522570   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3522571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522573   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3522574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522575   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3522576   +   H11  =    -1.22558949531387 * S_MntCard_Games  +    -1.66941448358276 *
3522577   +        S_MntMagazines  +    -0.94882752074149 * S_NumCatalogPurchases
3522578   +          +     3.90637948210723 * S_NumDealsPurchases
3522579   +          +    -2.65451149062731 * S_NumWebPurchases
3522580   +          +    -1.56525431363556 * S_RANGE_Frq  +    -0.61797029359684 *
3522581   +        S_RANGE_Recency  +     1.67536570140412 * S_RANGE_average_purchase
3522582   +          +     0.50596458499798 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -1.22558949531387 * S_MntCard_Games + -1.66941448358276 *
S_MntMagazines + -0.94882752074149 * S_NumCatalogPurchases + 3.90637948210723 *
S_NumDealsPurchases + -2.65451149062731 * S_NumWebPurchases + -1.56525431363556 * S_RANGE_Frq
+ -0.61797029359684 * S_RANGE_Recency + 1.67536570140412 * S_RANGE_average_purchase +
0.50596458499798 * S_RANGE_campaign_acceptance ;
3522583   +   H12  =     1.31248150782156 * S_MntCard_Games  +    -1.01712760417753 *
3522584   +        S_MntMagazines  +     2.42532803134114 * S_NumCatalogPurchases
3522585   +          +    -1.56454694446098 * S_NumDealsPurchases
3522586   +          +    -1.24726454433722 * S_NumWebPurchases
3522587   +          +    -0.90770178054373 * S_RANGE_Frq  +     4.95278604292526 *
3522588   +        S_RANGE_Recency  +     4.11758336075909 * S_RANGE_average_purchase
3522589   +          +     1.66800620199538 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.31248150782156 * S_MntCard_Games + -1.01712760417753 *
S_MntMagazines + 2.42532803134114 * S_NumCatalogPurchases + -1.56454694446098 *
S_NumDealsPurchases + -1.24726454433722 * S_NumWebPurchases + -0.90770178054373 * S_RANGE_Frq
+ 4.95278604292526 * S_RANGE_Recency + 4.11758336075909 * S_RANGE_average_purchase +
1.66800620199538 * S_RANGE_campaign_acceptance ;
3522590   +   H13  =     0.01785786580617 * S_MntCard_Games  +    -0.01132857206622 *
3522591   +        S_MntMagazines  +     0.02637518940742 * S_NumCatalogPurchases
3522592   +          +    -0.47992650869841 * S_NumDealsPurchases
3522593   +          +     0.38334748116366 * S_NumWebPurchases
3522594   +          +     0.20928319946808 * S_RANGE_Frq  +     0.87702867546683 *
3522595   +        S_RANGE_Recency  +     0.19974111260909 * S_RANGE_average_purchase
3522596   +          +    -0.32340891120333 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.01785786580617 * S_MntCard_Games + -0.01132857206622 *
S_MntMagazines + 0.02637518940742 * S_NumCatalogPurchases + -0.47992650869841 *
S_NumDealsPurchases + 0.38334748116366 * S_NumWebPurchases + 0.20928319946808 * S_RANGE_Frq +
0.87702867546683 * S_RANGE_Recency + 0.19974111260909 * S_RANGE_average_purchase +
-0.32340891120333 * S_RANGE_campaign_acceptance ;
3522597   +   H14  =    -4.10906585860211 * S_MntCard_Games  +     2.04057056233911 *
3522598   +        S_MntMagazines  +    -1.50453734992329 * S_NumCatalogPurchases
3522599   +          +    -3.82659607848064 * S_NumDealsPurchases
3522600   +          +    -1.40783918349045 * S_NumWebPurchases
3522601   +          +      4.0131198500908 * S_RANGE_Frq  +     0.37772462944983 *
3522602   +        S_RANGE_Recency  +    -0.65616961251589 * S_RANGE_average_purchase
3522603   +          +    -2.92393221675515 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -4.10906585860211 * S_MntCard_Games + 2.04057056233911 *
S_MntMagazines + -1.50453734992329 * S_NumCatalogPurchases + -3.82659607848064 *
S_NumDealsPurchases + -1.40783918349045 * S_NumWebPurchases + 4.0131198500908 * S_RANGE_Frq +
0.37772462944983 * S_RANGE_Recency + -0.65616961251589 * S_RANGE_average_purchase +
-2.92393221675515 * S_RANGE_campaign_acceptance ;
3522604   +   H15  =    -0.59148592826859 * S_MntCard_Games  +     -0.0222458126715 *
3522605   +        S_MntMagazines  +    -0.61846044920731 * S_NumCatalogPurchases
3522606   +          +    -0.28338640014209 * S_NumDealsPurchases
3522607   +          +    -1.47933202359404 * S_NumWebPurchases
3522608   +          +    -0.57380673516098 * S_RANGE_Frq  +     0.97322506439351 *
3522609   +        S_RANGE_Recency  +    -0.37794530284539 * S_RANGE_average_purchase
3522610   +          +    -0.43749415849594 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -0.59148592826859 * S_MntCard_Games + -0.0222458126715 *
S_MntMagazines + -0.61846044920731 * S_NumCatalogPurchases + -0.28338640014209 *
S_NumDealsPurchases + -1.47933202359404 * S_NumWebPurchases + -0.57380673516098 * S_RANGE_Frq
+ 0.97322506439351 * S_RANGE_Recency + -0.37794530284539 * S_RANGE_average_purchase +
-0.43749415849594 * S_RANGE_campaign_acceptance ;
3522611   +   H16  =    -0.42669748322109 * S_MntCard_Games  +     0.10550941635442 *
3522612   +        S_MntMagazines  +     -0.4167601967823 * S_NumCatalogPurchases
3522613   +          +    -0.34096099755362 * S_NumDealsPurchases
3522614   +          +    -0.07248190840157 * S_NumWebPurchases
3522615   +          +    -0.22958755646084 * S_RANGE_Frq  +     0.72053732002326 *
3522616   +        S_RANGE_Recency  +      -0.162785507808 * S_RANGE_average_purchase
3522617   +          +    -0.38530952493279 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.42669748322109 * S_MntCard_Games + 0.10550941635442 *
S_MntMagazines + -0.4167601967823 * S_NumCatalogPurchases + -0.34096099755362 *
S_NumDealsPurchases + -0.07248190840157 * S_NumWebPurchases + -0.22958755646084 * S_RANGE_Frq
+ 0.72053732002326 * S_RANGE_Recency + -0.162785507808 * S_RANGE_average_purchase +
-0.38530952493279 * S_RANGE_campaign_acceptance ;
3522618   +   H11  = H11  +     1.50171768927758 * Marital_StatusDivorced
3522619   +          +     0.95176707041373 * Marital_StatusMarried
3522620   +          +    -1.84950070430003 * Marital_StatusSingle
3522621   +          +    -1.57815340010426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.50171768927758 * Marital_StatusDivorced + 0.95176707041373
* Marital_StatusMarried + -1.84950070430003 * Marital_StatusSingle + -1.57815340010426 *
Marital_StatusTogether ;
3522622   +   H12  = H12  +     2.01215584830451 * Marital_StatusDivorced
3522623   +          +    -3.11333130819204 * Marital_StatusMarried
3522624   +          +    -0.14244653389385 * Marital_StatusSingle
3522625   +          +     0.95537776535751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 2.01215584830451 * Marital_StatusDivorced +
-3.11333130819204 * Marital_StatusMarried + -0.14244653389385 * Marital_StatusSingle +
0.95537776535751 * Marital_StatusTogether ;
3522626   +   H13  = H13  +    -0.05262941667434 * Marital_StatusDivorced
3522627   +          +     0.20663673328033 * Marital_StatusMarried
3522628   +          +    -0.33057240096715 * Marital_StatusSingle
3522629   +          +     0.83900420264143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.05262941667434 * Marital_StatusDivorced +
0.20663673328033 * Marital_StatusMarried + -0.33057240096715 * Marital_StatusSingle +
0.83900420264143 * Marital_StatusTogether ;
3522630   +   H14  = H14  +    -3.39076454749667 * Marital_StatusDivorced
3522631   +          +     3.23761759914736 * Marital_StatusMarried
3522632   +          +    -3.22921147855652 * Marital_StatusSingle
3522633   +          +      3.6750091661749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.39076454749667 * Marital_StatusDivorced +
3.23761759914736 * Marital_StatusMarried + -3.22921147855652 * Marital_StatusSingle +
3.6750091661749 * Marital_StatusTogether ;
3522634   +   H15  = H15  +     1.57006327207668 * Marital_StatusDivorced
3522635   +          +     1.58503904200952 * Marital_StatusMarried
3522636   +          +     1.54004210369796 * Marital_StatusSingle
3522637   +          +     1.73180037331557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.57006327207668 * Marital_StatusDivorced + 1.58503904200952
* Marital_StatusMarried + 1.54004210369796 * Marital_StatusSingle + 1.73180037331557 *
Marital_StatusTogether ;
3522638   +   H16  = H16  +    -0.22161833116062 * Marital_StatusDivorced
3522639   +          +    -0.10914825538849 * Marital_StatusMarried
3522640   +          +     0.14648342834272 * Marital_StatusSingle
3522641   +          +    -0.68348354528897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22161833116062 * Marital_StatusDivorced +
-0.10914825538849 * Marital_StatusMarried + 0.14648342834272 * Marital_StatusSingle +
-0.68348354528897 * Marital_StatusTogether ;
3522642   +   H11  =     3.67581715064013 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 3.67581715064013 + H11 ;
3522643   +   H12  =    -1.68129625542952 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.68129625542952 + H12 ;
3522644   +   H13  =     0.07607048310671 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07607048310671 + H13 ;
3522645   +   H14  =     1.92017285754607 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.92017285754607 + H14 ;
3522646   +   H15  =     0.79331799676974 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.79331799676974 + H15 ;
3522647   +   H16  =     0.36866836777944 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.36866836777944 + H16 ;
3522648   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3522649   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3522650   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3522651   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3522652   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3522653   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3522654   +END;
MPRINT(EM_DIAGRAM):   END;
3522655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3522656   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3522657   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3522658   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3522659   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3522660   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3522661   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3522662   +END;
MPRINT(EM_DIAGRAM):   END;
3522663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522664   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3522665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522666   +
3522667   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3522668   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3522669   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3522670   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3522671   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3522672   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3522673   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3522674   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3522675   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3522676   +end;
MPRINT(EM_DIAGRAM):   end;
3522677   +else do;
MPRINT(EM_DIAGRAM):   else do;
3522678   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3522679   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3522680   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3522681   +   end;
MPRINT(EM_DIAGRAM):   end;
3522682   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3522683   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3522684   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3522685   +   end;
MPRINT(EM_DIAGRAM):   end;
3522686   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3522687   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3522688   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3522689   +   end;
MPRINT(EM_DIAGRAM):   end;
3522690   +end;
MPRINT(EM_DIAGRAM):   end;
3522691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3522692   +   P_DepVar1  =    -3.23737124831139 * H11  +      4.2027491469247 * H12
3522693   +          +     -8.8876156002287 * H13  +    -2.23763283094238 * H14
3522694   +          +    -3.89157577822682 * H15  +    -7.17373194065375 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.23737124831139 * H11 + 4.2027491469247 * H12 +
-8.8876156002287 * H13 + -2.23763283094238 * H14 + -3.89157577822682 * H15 + -7.17373194065375
* H16 ;
3522695   +   P_DepVar1  =    -3.90045568356704 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.90045568356704 + P_DepVar1 ;
3522696   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3522697   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3522698   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3522699   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3522700   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3522701   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3522702   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3522703   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3522704   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3522705   +END;
MPRINT(EM_DIAGRAM):   END;
3522706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3522707   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3522708   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3522709   +END;
MPRINT(EM_DIAGRAM):   END;
3522710   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3522711   +   P_DepVar1  =     0.13535911602209;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13535911602209;
3522712   +   P_DepVar0  =      0.8646408839779;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8646408839779;
3522713   +END;
MPRINT(EM_DIAGRAM):   END;
3522714   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3522715   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3522716   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3522717   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3522718   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3522719   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3522720   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3522721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522722   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3522723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522724   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3522725   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3522726   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3522727   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3522728   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3522729   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3522730   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3522731   +END;
MPRINT(EM_DIAGRAM):   END;
3522732   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3522733   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3522734   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3522735   +drop
3522736   +S_MntCard_Games
3522737   +S_MntMagazines
3522738   +S_NumCatalogPurchases
3522739   +S_NumDealsPurchases
3522740   +S_NumWebPurchases
3522741   +S_RANGE_Frq
3522742   +S_RANGE_Recency
3522743   +S_RANGE_average_purchase
3522744   +S_RANGE_campaign_acceptance
3522745   +H11
3522746   +H12
3522747   +H13
3522748   +H14
3522749   +H15
3522750   +H16
3522751   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3522752   +end;
MPRINT(EM_DIAGRAM):   end;
3522753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3522754   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3522755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3522756   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3522757   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3522758   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3522759   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3522760   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3522761   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3522762   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3522763   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3522764   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3522765   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3522766   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3522767   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3522768   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3522769   +LENGTH _WARN_ $4
3522770   +      F_DepVar  $ 12
3522771   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3522772   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3522773   +
3522774   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3522775   +
3522776   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3522777   +
3522778   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3522779   +
3522780   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3522781   +
3522782   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3522783   +
3522784   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3522785   +
3522786   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3522787   +
3522788   +      label S_RANGE_campaign_acceptance =
3522789   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3522790   +
3522791   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3522792   +
3522793   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3522794   +
3522795   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3522796   +
3522797   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3522798   +
3522799   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3522800   +
3522801   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3522802   +
3522803   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3522804   +
3522805   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3522806   +
3522807   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3522808   +
3522809   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3522810   +
3522811   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3522812   +
3522813   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3522814   +
3522815   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3522816   +
3522817   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3522818   +
3522819   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3522820   +
3522821   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3522822   +
3522823   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3522824   +
3522825   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3522826   +
3522827   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3522828   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3522829   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3522830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3522831   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3522832   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3522833   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3522834   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3522835   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3522836   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3522837   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3522838   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3522839   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3522840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3522841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522842   +end;
MPRINT(EM_DIAGRAM):   end;
3522843   +else do;
MPRINT(EM_DIAGRAM):   else do;
3522844   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3522845   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3522846   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3522847   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3522848   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3522849   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3522850   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3522851   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3522852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522853   +         end;
MPRINT(EM_DIAGRAM):   end;
3522854   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3522855   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3522856   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3522857   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522858   +            end;
MPRINT(EM_DIAGRAM):   end;
3522859   +         end;
MPRINT(EM_DIAGRAM):   end;
3522860   +      end;
MPRINT(EM_DIAGRAM):   end;
3522861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3522862   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3522863   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3522864   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522865   +         end;
MPRINT(EM_DIAGRAM):   end;
3522866   +      end;
MPRINT(EM_DIAGRAM):   end;
3522867   +   end;
MPRINT(EM_DIAGRAM):   end;
3522868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3522869   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3522870   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3522871   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522872   +      end;
MPRINT(EM_DIAGRAM):   end;
3522873   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3522874   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3522875   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3522876   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3522877   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3522878   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3522879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3522880   +         end;
MPRINT(EM_DIAGRAM):   end;
3522881   +      end;
MPRINT(EM_DIAGRAM):   end;
3522882   +   end;
MPRINT(EM_DIAGRAM):   end;
3522883   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3522884   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3522885   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3522886   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3522887   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3522888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3522889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522890   +   end;
MPRINT(EM_DIAGRAM):   end;
3522891   +end;
MPRINT(EM_DIAGRAM):   end;
3522892   +
3522893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522894   +*** Checking missing input Interval
3522895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3522896   +
3522897   +IF NMISS(
3522898   +   MntCard_Games ,
3522899   +   MntMagazines ,
3522900   +   NumCatalogPurchases ,
3522901   +   NumDealsPurchases ,
3522902   +   NumWebPurchases ,
3522903   +   RANGE_Frq ,
3522904   +   RANGE_Recency ,
3522905   +   RANGE_average_purchase ,
3522906   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3522907   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3522908   +
3522909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3522910   +END;
MPRINT(EM_DIAGRAM):   END;
3522911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522912   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3522913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522914   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3522915   +   S_MntCard_Games  =     -2.2973847559683 +     6.60591387040517 *
3522916   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.2973847559683 + 6.60591387040517 * MntCard_Games ;
3522917   +   S_MntMagazines  =    -0.83561820910834 +     17.4804551619825 *
3522918   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83561820910834 + 17.4804551619825 * MntMagazines ;
3522919   +   S_NumCatalogPurchases  =    -3.12840084058165 +      13.569936576812 *
3522920   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12840084058165 + 13.569936576812 *
NumCatalogPurchases ;
3522921   +   S_NumDealsPurchases  =    -1.42218990824448 +     11.2388115529769 *
3522922   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42218990824448 + 11.2388115529769 *
NumDealsPurchases ;
3522923   +   S_NumWebPurchases  =    -5.28857180555686 +     12.3740044600605 *
3522924   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.28857180555686 + 12.3740044600605 *
NumWebPurchases ;
3522925   +   S_RANGE_Frq  =      -1.364025459792 +     4.21918803337606 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.364025459792 + 4.21918803337606 * RANGE_Frq ;
3522926   +   S_RANGE_Recency  =     -1.6619605088771 +     3.34949554514339 *
3522927   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6619605088771 + 3.34949554514339 * RANGE_Recency ;
3522928   +   S_RANGE_average_purchase  =    -1.03977751595811 +     5.18933408962766 *
3522929   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03977751595811 + 5.18933408962766 *
RANGE_average_purchase ;
3522930   +   S_RANGE_campaign_acceptance
3522931   +          =    -0.47019785088739 +     5.76531885038011 *
3522932   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47019785088739 + 5.76531885038011 *
RANGE_campaign_acceptance ;
3522933   +END;
MPRINT(EM_DIAGRAM):   END;
3522934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3522935   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3522936   +   ELSE S_MntCard_Games  =     -2.2973847559683 +     6.60591387040517 *
3522937   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.2973847559683 + 6.60591387040517 *
MntCard_Games ;
3522938   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3522939   +   ELSE S_MntMagazines  =    -0.83561820910834 +     17.4804551619825 *
3522940   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83561820910834 + 17.4804551619825 *
MntMagazines ;
3522941   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3522942   +   ELSE S_NumCatalogPurchases
3522943   +          =    -3.12840084058165 +      13.569936576812 * NumCatalogPurchases
3522944   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12840084058165 + 13.569936576812 *
NumCatalogPurchases ;
3522945   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3522946   +   ELSE S_NumDealsPurchases  =    -1.42218990824448 +     11.2388115529769 *
3522947   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42218990824448 + 11.2388115529769 *
NumDealsPurchases ;
3522948   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3522949   +   ELSE S_NumWebPurchases  =    -5.28857180555686 +     12.3740044600605 *
3522950   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.28857180555686 + 12.3740044600605 *
NumWebPurchases ;
3522951   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3522952   +   ELSE S_RANGE_Frq  =      -1.364025459792 +     4.21918803337606 * RANGE_Frq
3522953   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.364025459792 + 4.21918803337606 * RANGE_Frq ;
3522954   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3522955   +   ELSE S_RANGE_Recency  =     -1.6619605088771 +     3.34949554514339 *
3522956   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6619605088771 + 3.34949554514339 *
RANGE_Recency ;
3522957   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3522958   +   ELSE S_RANGE_average_purchase
3522959   +          =    -1.03977751595811 +     5.18933408962766 *
3522960   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03977751595811 + 5.18933408962766 *
RANGE_average_purchase ;
3522961   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3522962   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3522963   +   ELSE S_RANGE_campaign_acceptance
3522964   +          =    -0.47019785088739 +     5.76531885038011 *
3522965   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47019785088739 + 5.76531885038011
* RANGE_campaign_acceptance ;
3522966   +END;
MPRINT(EM_DIAGRAM):   END;
3522967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522968   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3522969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522971   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3522972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3522973   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3522974   +   H11  =     0.54290636922379 * S_MntCard_Games  +    -0.93895559389981 *
3522975   +        S_MntMagazines  +     1.55581224511384 * S_NumCatalogPurchases
3522976   +          +     0.04061917830552 * S_NumDealsPurchases
3522977   +          +     1.02456123736901 * S_NumWebPurchases
3522978   +          +     0.41568892481891 * S_RANGE_Frq  +    -2.26386456314846 *
3522979   +        S_RANGE_Recency  +     -0.5661394899616 * S_RANGE_average_purchase
3522980   +          +     1.09296391351338 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.54290636922379 * S_MntCard_Games + -0.93895559389981 *
S_MntMagazines + 1.55581224511384 * S_NumCatalogPurchases + 0.04061917830552 *
S_NumDealsPurchases + 1.02456123736901 * S_NumWebPurchases + 0.41568892481891 * S_RANGE_Frq +
-2.26386456314846 * S_RANGE_Recency + -0.5661394899616 * S_RANGE_average_purchase +
1.09296391351338 * S_RANGE_campaign_acceptance ;
3522981   +   H12  =    -0.01738706236547 * S_MntCard_Games  +    -1.01410871760836 *
3522982   +        S_MntMagazines  +     1.27953799601246 * S_NumCatalogPurchases
3522983   +          +    -2.52061589482997 * S_NumDealsPurchases
3522984   +          +    -1.18837278088751 * S_NumWebPurchases
3522985   +          +    -0.85186130811275 * S_RANGE_Frq  +     5.58364045266412 *
3522986   +        S_RANGE_Recency  +     3.47956856812744 * S_RANGE_average_purchase
3522987   +          +     0.06417330085822 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.01738706236547 * S_MntCard_Games + -1.01410871760836 *
S_MntMagazines + 1.27953799601246 * S_NumCatalogPurchases + -2.52061589482997 *
S_NumDealsPurchases + -1.18837278088751 * S_NumWebPurchases + -0.85186130811275 * S_RANGE_Frq
+ 5.58364045266412 * S_RANGE_Recency + 3.47956856812744 * S_RANGE_average_purchase +
0.06417330085822 * S_RANGE_campaign_acceptance ;
3522988   +   H13  =    -0.49684984522422 * S_MntCard_Games  +    -0.02428861170389 *
3522989   +        S_MntMagazines  +     0.03333683681007 * S_NumCatalogPurchases
3522990   +          +    -0.64225196906613 * S_NumDealsPurchases
3522991   +          +     0.38433612032424 * S_NumWebPurchases
3522992   +          +    -0.04259126399527 * S_RANGE_Frq  +       1.071831891537 *
3522993   +        S_RANGE_Recency  +     0.67898467598409 * S_RANGE_average_purchase
3522994   +          +    -0.54013721897031 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.49684984522422 * S_MntCard_Games + -0.02428861170389 *
S_MntMagazines + 0.03333683681007 * S_NumCatalogPurchases + -0.64225196906613 *
S_NumDealsPurchases + 0.38433612032424 * S_NumWebPurchases + -0.04259126399527 * S_RANGE_Frq +
1.071831891537 * S_RANGE_Recency + 0.67898467598409 * S_RANGE_average_purchase +
-0.54013721897031 * S_RANGE_campaign_acceptance ;
3522995   +   H14  =     -4.8135270171394 * S_MntCard_Games  +     0.74014018361062 *
3522996   +        S_MntMagazines  +    -3.74343169911544 * S_NumCatalogPurchases
3522997   +          +    -3.72578643906049 * S_NumDealsPurchases
3522998   +          +    -1.23670196665382 * S_NumWebPurchases
3522999   +          +     3.96046211665957 * S_RANGE_Frq  +    -0.10635173117595 *
3523000   +        S_RANGE_Recency  +    -2.43795169539141 * S_RANGE_average_purchase
3523001   +          +    -4.06689833953857 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -4.8135270171394 * S_MntCard_Games + 0.74014018361062 *
S_MntMagazines + -3.74343169911544 * S_NumCatalogPurchases + -3.72578643906049 *
S_NumDealsPurchases + -1.23670196665382 * S_NumWebPurchases + 3.96046211665957 * S_RANGE_Frq +
-0.10635173117595 * S_RANGE_Recency + -2.43795169539141 * S_RANGE_average_purchase +
-4.06689833953857 * S_RANGE_campaign_acceptance ;
3523002   +   H15  =    -0.91298966186163 * S_MntCard_Games  +     0.00853606923314 *
3523003   +        S_MntMagazines  +    -1.15406179003289 * S_NumCatalogPurchases
3523004   +          +    -0.64080411107407 * S_NumDealsPurchases
3523005   +          +    -2.63713343912379 * S_NumWebPurchases
3523006   +          +    -0.93571265498126 * S_RANGE_Frq  +     2.15525444218734 *
3523007   +        S_RANGE_Recency  +    -1.03017813493002 * S_RANGE_average_purchase
3523008   +          +    -0.80377808950519 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -0.91298966186163 * S_MntCard_Games + 0.00853606923314 *
S_MntMagazines + -1.15406179003289 * S_NumCatalogPurchases + -0.64080411107407 *
S_NumDealsPurchases + -2.63713343912379 * S_NumWebPurchases + -0.93571265498126 * S_RANGE_Frq
+ 2.15525444218734 * S_RANGE_Recency + -1.03017813493002 * S_RANGE_average_purchase +
-0.80377808950519 * S_RANGE_campaign_acceptance ;
3523009   +   H16  =    -0.47934019611129 * S_MntCard_Games  +    -0.88570498784286 *
3523010   +        S_MntMagazines  +    -0.23164520132183 * S_NumCatalogPurchases
3523011   +          +    -0.24620095225319 * S_NumDealsPurchases
3523012   +          +     -0.1408344464005 * S_NumWebPurchases
3523013   +          +    -0.09718325184752 * S_RANGE_Frq  +     0.74745150771946 *
3523014   +        S_RANGE_Recency  +    -1.49865781221189 * S_RANGE_average_purchase
3523015   +          +     -0.6137430133391 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.47934019611129 * S_MntCard_Games + -0.88570498784286 *
S_MntMagazines + -0.23164520132183 * S_NumCatalogPurchases + -0.24620095225319 *
S_NumDealsPurchases + -0.1408344464005 * S_NumWebPurchases + -0.09718325184752 * S_RANGE_Frq +
0.74745150771946 * S_RANGE_Recency + -1.49865781221189 * S_RANGE_average_purchase +
-0.6137430133391 * S_RANGE_campaign_acceptance ;
3523016   +   H11  = H11  +     1.07516723252485 * Marital_StatusDivorced
3523017   +          +    -2.83159745491497 * Marital_StatusMarried
3523018   +          +     2.78325595468818 * Marital_StatusSingle
3523019   +          +    -2.21751295482324 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.07516723252485 * Marital_StatusDivorced +
-2.83159745491497 * Marital_StatusMarried + 2.78325595468818 * Marital_StatusSingle +
-2.21751295482324 * Marital_StatusTogether ;
3523020   +   H12  = H12  +    -6.44223931670744 * Marital_StatusDivorced
3523021   +          +     0.14537870699669 * Marital_StatusMarried
3523022   +          +    -0.34883750729053 * Marital_StatusSingle
3523023   +          +     3.28750329843119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -6.44223931670744 * Marital_StatusDivorced +
0.14537870699669 * Marital_StatusMarried + -0.34883750729053 * Marital_StatusSingle +
3.28750329843119 * Marital_StatusTogether ;
3523024   +   H13  = H13  +    -1.71651602300424 * Marital_StatusDivorced
3523025   +          +     0.09983067084375 * Marital_StatusMarried
3523026   +          +    -0.36747783969903 * Marital_StatusSingle
3523027   +          +     0.72427006638514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.71651602300424 * Marital_StatusDivorced +
0.09983067084375 * Marital_StatusMarried + -0.36747783969903 * Marital_StatusSingle +
0.72427006638514 * Marital_StatusTogether ;
3523028   +   H14  = H14  +     5.18606432818366 * Marital_StatusDivorced
3523029   +          +    -0.64633946044005 * Marital_StatusMarried
3523030   +          +     0.76037550531355 * Marital_StatusSingle
3523031   +          +    -3.09012147556829 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 5.18606432818366 * Marital_StatusDivorced +
-0.64633946044005 * Marital_StatusMarried + 0.76037550531355 * Marital_StatusSingle +
-3.09012147556829 * Marital_StatusTogether ;
3523032   +   H15  = H15  +     4.58695387888866 * Marital_StatusDivorced
3523033   +          +     1.79993337111784 * Marital_StatusMarried
3523034   +          +        2.02114250202 * Marital_StatusSingle
3523035   +          +     1.96470945021415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 4.58695387888866 * Marital_StatusDivorced + 1.79993337111784
* Marital_StatusMarried + 2.02114250202 * Marital_StatusSingle + 1.96470945021415 *
Marital_StatusTogether ;
3523036   +   H16  = H16  +    -0.11605317280313 * Marital_StatusDivorced
3523037   +          +    -0.48500807008578 * Marital_StatusMarried
3523038   +          +     1.48744714404026 * Marital_StatusSingle
3523039   +          +    -1.77253702964789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.11605317280313 * Marital_StatusDivorced +
-0.48500807008578 * Marital_StatusMarried + 1.48744714404026 * Marital_StatusSingle +
-1.77253702964789 * Marital_StatusTogether ;
3523040   +   H11  =    -2.99766672524883 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.99766672524883 + H11 ;
3523041   +   H12  =    -1.29040244970056 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.29040244970056 + H12 ;
3523042   +   H13  =     0.56272021442163 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.56272021442163 + H13 ;
3523043   +   H14  =     2.99786115876293 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 2.99786115876293 + H14 ;
3523044   +   H15  =      2.5389089303019 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 2.5389089303019 + H15 ;
3523045   +   H16  =    -0.98898377916628 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.98898377916628 + H16 ;
3523046   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3523047   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3523048   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3523049   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3523050   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3523051   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3523052   +END;
MPRINT(EM_DIAGRAM):   END;
3523053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523054   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3523055   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3523056   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3523057   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3523058   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3523059   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3523060   +END;
MPRINT(EM_DIAGRAM):   END;
3523061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523062   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3523063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523064   +
3523065   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3523066   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3523067   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3523068   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3523069   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3523070   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3523071   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3523072   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523073   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523074   +end;
MPRINT(EM_DIAGRAM):   end;
3523075   +else do;
MPRINT(EM_DIAGRAM):   else do;
3523076   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3523077   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3523078   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3523079   +   end;
MPRINT(EM_DIAGRAM):   end;
3523080   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3523081   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3523082   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3523083   +   end;
MPRINT(EM_DIAGRAM):   end;
3523084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3523085   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523086   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523087   +   end;
MPRINT(EM_DIAGRAM):   end;
3523088   +end;
MPRINT(EM_DIAGRAM):   end;
3523089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523090   +   P_DepVar1  =     4.47862511063634 * H11  +     4.74091197512304 * H12
3523091   +          +    -9.70116002225741 * H13  +    -3.26932535075891 * H14
3523092   +          +    -4.32422392288032 * H15  +    -5.52052703018753 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.47862511063634 * H11 + 4.74091197512304 * H12 +
-9.70116002225741 * H13 + -3.26932535075891 * H14 + -4.32422392288032 * H15 +
-5.52052703018753 * H16 ;
3523093   +   P_DepVar1  =     -4.7459559965517 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.7459559965517 + P_DepVar1 ;
3523094   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3523095   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3523096   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3523097   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3523098   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3523099   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3523100   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3523101   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3523102   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3523103   +END;
MPRINT(EM_DIAGRAM):   END;
3523104   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523105   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3523106   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3523107   +END;
MPRINT(EM_DIAGRAM):   END;
3523108   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3523109   +   P_DepVar1  =     0.13520871143375;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13520871143375;
3523110   +   P_DepVar0  =     0.86479128856624;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86479128856624;
3523111   +END;
MPRINT(EM_DIAGRAM):   END;
3523112   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3523113   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3523114   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3523115   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3523116   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3523117   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3523118   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3523119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523120   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3523121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523122   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3523123   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3523124   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3523125   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3523126   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3523127   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3523128   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3523129   +END;
MPRINT(EM_DIAGRAM):   END;
3523130   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523131   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3523132   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523133   +drop
3523134   +S_MntCard_Games
3523135   +S_MntMagazines
3523136   +S_NumCatalogPurchases
3523137   +S_NumDealsPurchases
3523138   +S_NumWebPurchases
3523139   +S_RANGE_Frq
3523140   +S_RANGE_Recency
3523141   +S_RANGE_average_purchase
3523142   +S_RANGE_campaign_acceptance
3523143   +H11
3523144   +H12
3523145   +H13
3523146   +H14
3523147   +H15
3523148   +H16
3523149   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3523150   +end;
MPRINT(EM_DIAGRAM):   end;
3523151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523152   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3523153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523154   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3523155   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3523156   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523157   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3523158   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523159   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3523160   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3523161   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3523162   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3523163   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3523164   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3523165   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3523166   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3523167   +LENGTH _WARN_ $4
3523168   +      F_DepVar  $ 12
3523169   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3523170   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3523171   +
3523172   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3523173   +
3523174   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3523175   +
3523176   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3523177   +
3523178   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3523179   +
3523180   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3523181   +
3523182   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3523183   +
3523184   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3523185   +
3523186   +      label S_RANGE_campaign_acceptance =
3523187   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3523188   +
3523189   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3523190   +
3523191   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3523192   +
3523193   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3523194   +
3523195   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3523196   +
3523197   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3523198   +
3523199   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3523200   +
3523201   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3523202   +
3523203   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3523204   +
3523205   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3523206   +
3523207   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3523208   +
3523209   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3523210   +
3523211   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3523212   +
3523213   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3523214   +
3523215   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3523216   +
3523217   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3523218   +
3523219   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3523220   +
3523221   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3523222   +
3523223   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3523224   +
3523225   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3523226   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3523227   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3523228   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3523229   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3523230   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3523231   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3523232   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3523233   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3523234   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3523235   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3523236   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3523237   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3523238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3523239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523240   +end;
MPRINT(EM_DIAGRAM):   end;
3523241   +else do;
MPRINT(EM_DIAGRAM):   else do;
3523242   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3523243   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3523244   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3523245   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3523246   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3523247   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3523248   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3523249   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3523250   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523251   +         end;
MPRINT(EM_DIAGRAM):   end;
3523252   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3523253   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3523254   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3523255   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523256   +            end;
MPRINT(EM_DIAGRAM):   end;
3523257   +         end;
MPRINT(EM_DIAGRAM):   end;
3523258   +      end;
MPRINT(EM_DIAGRAM):   end;
3523259   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3523260   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3523261   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3523262   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523263   +         end;
MPRINT(EM_DIAGRAM):   end;
3523264   +      end;
MPRINT(EM_DIAGRAM):   end;
3523265   +   end;
MPRINT(EM_DIAGRAM):   end;
3523266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3523267   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3523268   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3523269   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523270   +      end;
MPRINT(EM_DIAGRAM):   end;
3523271   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3523272   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3523273   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3523274   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3523275   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3523276   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3523277   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523278   +         end;
MPRINT(EM_DIAGRAM):   end;
3523279   +      end;
MPRINT(EM_DIAGRAM):   end;
3523280   +   end;
MPRINT(EM_DIAGRAM):   end;
3523281   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3523282   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3523283   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3523284   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3523285   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3523286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3523287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523288   +   end;
MPRINT(EM_DIAGRAM):   end;
3523289   +end;
MPRINT(EM_DIAGRAM):   end;
3523290   +
3523291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523292   +*** Checking missing input Interval
3523293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3523294   +
3523295   +IF NMISS(
3523296   +   MntCard_Games ,
3523297   +   MntMagazines ,
3523298   +   NumCatalogPurchases ,
3523299   +   NumDealsPurchases ,
3523300   +   NumWebPurchases ,
3523301   +   RANGE_Frq ,
3523302   +   RANGE_Recency ,
3523303   +   RANGE_average_purchase ,
3523304   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3523305   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3523306   +
3523307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523308   +END;
MPRINT(EM_DIAGRAM):   END;
3523309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523310   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3523311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523313   +   S_MntCard_Games  =    -2.30904212357119 +      6.6128259130159 *
3523314   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30904212357119 + 6.6128259130159 * MntCard_Games ;
3523315   +   S_MntMagazines  =    -0.83238740556457 +     17.2867559070278 *
3523316   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83238740556457 + 17.2867559070278 * MntMagazines ;
3523317   +   S_NumCatalogPurchases  =    -3.13777787988529 +     13.5898301483557 *
3523318   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.13777787988529 + 13.5898301483557 *
NumCatalogPurchases ;
3523319   +   S_NumDealsPurchases  =    -1.41566198989916 +     11.2100551713153 *
3523320   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41566198989916 + 11.2100551713153 *
NumDealsPurchases ;
3523321   +   S_NumWebPurchases  =    -5.23286447719619 +     12.2594293185447 *
3523322   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.23286447719619 + 12.2594293185447 *
NumWebPurchases ;
3523323   +   S_RANGE_Frq  =    -1.36371107344636 +     4.21452272368577 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36371107344636 + 4.21452272368577 * RANGE_Frq ;
3523324   +   S_RANGE_Recency  =    -1.68321602612361 +     3.38058460082703 *
3523325   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.68321602612361 + 3.38058460082703 * RANGE_Recency ;
3523326   +   S_RANGE_average_purchase  =    -1.03516471680442 +     5.13991313823254 *
3523327   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03516471680442 + 5.13991313823254 *
RANGE_average_purchase ;
3523328   +   S_RANGE_campaign_acceptance
3523329   +          =    -0.47836958972481 +      5.7378102778515 *
3523330   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47836958972481 + 5.7378102778515 *
RANGE_campaign_acceptance ;
3523331   +END;
MPRINT(EM_DIAGRAM):   END;
3523332   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523333   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3523334   +   ELSE S_MntCard_Games  =    -2.30904212357119 +      6.6128259130159 *
3523335   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30904212357119 + 6.6128259130159 *
MntCard_Games ;
3523336   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3523337   +   ELSE S_MntMagazines  =    -0.83238740556457 +     17.2867559070278 *
3523338   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83238740556457 + 17.2867559070278 *
MntMagazines ;
3523339   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3523340   +   ELSE S_NumCatalogPurchases
3523341   +          =    -3.13777787988529 +     13.5898301483557 * NumCatalogPurchases
3523342   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.13777787988529 + 13.5898301483557 *
NumCatalogPurchases ;
3523343   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3523344   +   ELSE S_NumDealsPurchases  =    -1.41566198989916 +     11.2100551713153 *
3523345   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41566198989916 + 11.2100551713153 *
NumDealsPurchases ;
3523346   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3523347   +   ELSE S_NumWebPurchases  =    -5.23286447719619 +     12.2594293185447 *
3523348   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.23286447719619 + 12.2594293185447 *
NumWebPurchases ;
3523349   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3523350   +   ELSE S_RANGE_Frq  =    -1.36371107344636 +     4.21452272368577 * RANGE_Frq
3523351   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36371107344636 + 4.21452272368577 * RANGE_Frq ;
3523352   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3523353   +   ELSE S_RANGE_Recency  =    -1.68321602612361 +     3.38058460082703 *
3523354   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.68321602612361 + 3.38058460082703 *
RANGE_Recency ;
3523355   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3523356   +   ELSE S_RANGE_average_purchase
3523357   +          =    -1.03516471680442 +     5.13991313823254 *
3523358   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03516471680442 + 5.13991313823254 *
RANGE_average_purchase ;
3523359   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3523360   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3523361   +   ELSE S_RANGE_campaign_acceptance
3523362   +          =    -0.47836958972481 +      5.7378102778515 *
3523363   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47836958972481 + 5.7378102778515 *
RANGE_campaign_acceptance ;
3523364   +END;
MPRINT(EM_DIAGRAM):   END;
3523365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523366   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3523367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523369   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3523370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523371   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523372   +   H11  =    -2.95505167414058 * S_MntCard_Games  +    -1.06304232732885 *
3523373   +        S_MntMagazines  +    -5.99972531238934 * S_NumCatalogPurchases
3523374   +          +    -2.82899462140312 * S_NumDealsPurchases
3523375   +          +    -1.32915760834547 * S_NumWebPurchases
3523376   +          +     1.43081344043679 * S_RANGE_Frq  +     1.78443066474801 *
3523377   +        S_RANGE_Recency  +    -0.32771079295847 * S_RANGE_average_purchase
3523378   +          +    -1.24463527081811 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -2.95505167414058 * S_MntCard_Games + -1.06304232732885 *
S_MntMagazines + -5.99972531238934 * S_NumCatalogPurchases + -2.82899462140312 *
S_NumDealsPurchases + -1.32915760834547 * S_NumWebPurchases + 1.43081344043679 * S_RANGE_Frq +
1.78443066474801 * S_RANGE_Recency + -0.32771079295847 * S_RANGE_average_purchase +
-1.24463527081811 * S_RANGE_campaign_acceptance ;
3523379   +   H12  =     0.86371220607468 * S_MntCard_Games  +    -1.33692424127769 *
3523380   +        S_MntMagazines  +    -0.68151163146001 * S_NumCatalogPurchases
3523381   +          +    -0.59285744915103 * S_NumDealsPurchases
3523382   +          +    -2.17257112571969 * S_NumWebPurchases
3523383   +          +     0.04614606809995 * S_RANGE_Frq  +     2.30288893020718 *
3523384   +        S_RANGE_Recency  +    -0.78174997761184 * S_RANGE_average_purchase
3523385   +          +    -0.98220880840839 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.86371220607468 * S_MntCard_Games + -1.33692424127769 *
S_MntMagazines + -0.68151163146001 * S_NumCatalogPurchases + -0.59285744915103 *
S_NumDealsPurchases + -2.17257112571969 * S_NumWebPurchases + 0.04614606809995 * S_RANGE_Frq +
2.30288893020718 * S_RANGE_Recency + -0.78174997761184 * S_RANGE_average_purchase +
-0.98220880840839 * S_RANGE_campaign_acceptance ;
3523386   +   H13  =    -1.02777250153548 * S_MntCard_Games  +    -0.46803624433839 *
3523387   +        S_MntMagazines  +    -0.46441778069159 * S_NumCatalogPurchases
3523388   +          +     0.11480836412629 * S_NumDealsPurchases
3523389   +          +    -1.20796283121144 * S_NumWebPurchases
3523390   +          +    -1.03282129684729 * S_RANGE_Frq  +      1.1260053068974 *
3523391   +        S_RANGE_Recency  +    -0.10802257746315 * S_RANGE_average_purchase
3523392   +          +    -0.82254658677281 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -1.02777250153548 * S_MntCard_Games + -0.46803624433839 *
S_MntMagazines + -0.46441778069159 * S_NumCatalogPurchases + 0.11480836412629 *
S_NumDealsPurchases + -1.20796283121144 * S_NumWebPurchases + -1.03282129684729 * S_RANGE_Frq
+ 1.1260053068974 * S_RANGE_Recency + -0.10802257746315 * S_RANGE_average_purchase +
-0.82254658677281 * S_RANGE_campaign_acceptance ;
3523393   +   H14  =     0.07861045362466 * S_MntCard_Games  +      2.0175206931951 *
3523394   +        S_MntMagazines  +    -0.60973478531319 * S_NumCatalogPurchases
3523395   +          +    -0.63371620177297 * S_NumDealsPurchases
3523396   +          +     1.06007581607092 * S_NumWebPurchases
3523397   +          +      2.0136263036472 * S_RANGE_Frq  +      0.8923964973425 *
3523398   +        S_RANGE_Recency  +     1.03398307098365 * S_RANGE_average_purchase
3523399   +          +    -0.26235883358685 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 0.07861045362466 * S_MntCard_Games + 2.0175206931951 *
S_MntMagazines + -0.60973478531319 * S_NumCatalogPurchases + -0.63371620177297 *
S_NumDealsPurchases + 1.06007581607092 * S_NumWebPurchases + 2.0136263036472 * S_RANGE_Frq +
0.8923964973425 * S_RANGE_Recency + 1.03398307098365 * S_RANGE_average_purchase +
-0.26235883358685 * S_RANGE_campaign_acceptance ;
3523400   +   H15  =     1.29014141322919 * S_MntCard_Games  +    -0.00168067555356 *
3523401   +        S_MntMagazines  +     0.73673457852217 * S_NumCatalogPurchases
3523402   +          +     0.98298161584248 * S_NumDealsPurchases
3523403   +          +     0.00668281413024 * S_NumWebPurchases
3523404   +          +    -0.13222432109522 * S_RANGE_Frq  +    -1.24504081946581 *
3523405   +        S_RANGE_Recency  +     0.07763819954742 * S_RANGE_average_purchase
3523406   +          +     1.00914707635703 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 1.29014141322919 * S_MntCard_Games + -0.00168067555356 *
S_MntMagazines + 0.73673457852217 * S_NumCatalogPurchases + 0.98298161584248 *
S_NumDealsPurchases + 0.00668281413024 * S_NumWebPurchases + -0.13222432109522 * S_RANGE_Frq +
-1.24504081946581 * S_RANGE_Recency + 0.07763819954742 * S_RANGE_average_purchase +
1.00914707635703 * S_RANGE_campaign_acceptance ;
3523407   +   H16  =     -2.1327218049542 * S_MntCard_Games  +     0.15274863898147 *
3523408   +        S_MntMagazines  +    -1.32537364504807 * S_NumCatalogPurchases
3523409   +          +     0.41522162544357 * S_NumDealsPurchases
3523410   +          +    -2.90382753566108 * S_NumWebPurchases
3523411   +          +     1.61639270925708 * S_RANGE_Frq  +     0.77373847007276 *
3523412   +        S_RANGE_Recency  +     1.37336101805986 * S_RANGE_average_purchase
3523413   +          +    -0.71578693261948 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.1327218049542 * S_MntCard_Games + 0.15274863898147 *
S_MntMagazines + -1.32537364504807 * S_NumCatalogPurchases + 0.41522162544357 *
S_NumDealsPurchases + -2.90382753566108 * S_NumWebPurchases + 1.61639270925708 * S_RANGE_Frq +
0.77373847007276 * S_RANGE_Recency + 1.37336101805986 * S_RANGE_average_purchase +
-0.71578693261948 * S_RANGE_campaign_acceptance ;
3523414   +   H11  = H11  +      0.9289257477825 * Marital_StatusDivorced
3523415   +          +     2.69919273767577 * Marital_StatusMarried
3523416   +          +    -1.54902700710472 * Marital_StatusSingle
3523417   +          +     -0.7456418069433 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.9289257477825 * Marital_StatusDivorced + 2.69919273767577
* Marital_StatusMarried + -1.54902700710472 * Marital_StatusSingle + -0.7456418069433 *
Marital_StatusTogether ;
3523418   +   H12  = H12  +    -0.71014720576129 * Marital_StatusDivorced
3523419   +          +     0.02823327055109 * Marital_StatusMarried
3523420   +          +     0.85980354456257 * Marital_StatusSingle
3523421   +          +     1.34172748302304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.71014720576129 * Marital_StatusDivorced +
0.02823327055109 * Marital_StatusMarried + 0.85980354456257 * Marital_StatusSingle +
1.34172748302304 * Marital_StatusTogether ;
3523422   +   H13  = H13  +     -0.9104052126779 * Marital_StatusDivorced
3523423   +          +     0.52247124738254 * Marital_StatusMarried
3523424   +          +     0.01677358297997 * Marital_StatusSingle
3523425   +          +     0.17622013628399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.9104052126779 * Marital_StatusDivorced + 0.52247124738254
* Marital_StatusMarried + 0.01677358297997 * Marital_StatusSingle + 0.17622013628399 *
Marital_StatusTogether ;
3523426   +   H14  = H14  +     0.11452255571758 * Marital_StatusDivorced
3523427   +          +     0.55530048753438 * Marital_StatusMarried
3523428   +          +    -3.61034064915902 * Marital_StatusSingle
3523429   +          +      1.7177826644742 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11452255571758 * Marital_StatusDivorced + 0.55530048753438
* Marital_StatusMarried + -3.61034064915902 * Marital_StatusSingle + 1.7177826644742 *
Marital_StatusTogether ;
3523430   +   H15  = H15  +     0.00859956104574 * Marital_StatusDivorced
3523431   +          +    -0.15514614311855 * Marital_StatusMarried
3523432   +          +     -0.2804608470483 * Marital_StatusSingle
3523433   +          +     0.09520128371101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.00859956104574 * Marital_StatusDivorced +
-0.15514614311855 * Marital_StatusMarried + -0.2804608470483 * Marital_StatusSingle +
0.09520128371101 * Marital_StatusTogether ;
3523434   +   H16  = H16  +    -1.07408346500561 * Marital_StatusDivorced
3523435   +          +     -1.1743085192678 * Marital_StatusMarried
3523436   +          +     1.55487607177835 * Marital_StatusSingle
3523437   +          +    -5.61832525391916 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -1.07408346500561 * Marital_StatusDivorced +
-1.1743085192678 * Marital_StatusMarried + 1.55487607177835 * Marital_StatusSingle +
-5.61832525391916 * Marital_StatusTogether ;
3523438   +   H11  =    -1.84030746164557 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84030746164557 + H11 ;
3523439   +   H12  =      0.9249615963055 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.9249615963055 + H12 ;
3523440   +   H13  =     3.01562010492952 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 3.01562010492952 + H13 ;
3523441   +   H14  =    -2.00357113991565 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.00357113991565 + H14 ;
3523442   +   H15  =    -1.41843367137753 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.41843367137753 + H15 ;
3523443   +   H16  =    -2.17877100497854 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.17877100497854 + H16 ;
3523444   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3523445   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3523446   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3523447   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3523448   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3523449   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3523450   +END;
MPRINT(EM_DIAGRAM):   END;
3523451   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523452   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3523453   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3523454   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3523455   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3523456   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3523457   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3523458   +END;
MPRINT(EM_DIAGRAM):   END;
3523459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523460   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3523461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523462   +
3523463   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3523464   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3523465   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3523466   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3523467   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3523468   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3523469   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3523470   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523471   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523472   +end;
MPRINT(EM_DIAGRAM):   end;
3523473   +else do;
MPRINT(EM_DIAGRAM):   else do;
3523474   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3523475   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3523476   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3523477   +   end;
MPRINT(EM_DIAGRAM):   end;
3523478   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3523479   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3523480   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3523481   +   end;
MPRINT(EM_DIAGRAM):   end;
3523482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3523483   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523484   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523485   +   end;
MPRINT(EM_DIAGRAM):   end;
3523486   +end;
MPRINT(EM_DIAGRAM):   end;
3523487   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523488   +   P_DepVar1  =    -3.64948492107646 * H11  +    -2.32576845142573 * H12
3523489   +          +    -6.89642539182004 * H13  +    -5.46931419660053 * H14
3523490   +          +     4.63372199131896 * H15  +     2.94197016905258 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.64948492107646 * H11 + -2.32576845142573 * H12 +
-6.89642539182004 * H13 + -5.46931419660053 * H14 + 4.63372199131896 * H15 + 2.94197016905258
* H16 ;
3523491   +   P_DepVar1  =    -4.70936827784884 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.70936827784884 + P_DepVar1 ;
3523492   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3523493   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3523494   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3523495   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3523496   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3523497   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3523498   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3523499   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3523500   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3523501   +END;
MPRINT(EM_DIAGRAM):   END;
3523502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523503   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3523504   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3523505   +END;
MPRINT(EM_DIAGRAM):   END;
3523506   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3523507   +   P_DepVar1  =     0.13677950594693;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13677950594693;
3523508   +   P_DepVar0  =     0.86322049405306;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86322049405306;
3523509   +END;
MPRINT(EM_DIAGRAM):   END;
3523510   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3523511   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3523512   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3523513   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3523514   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3523515   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3523516   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3523517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523518   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3523519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523520   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3523521   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3523522   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3523523   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3523524   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3523525   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3523526   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3523527   +END;
MPRINT(EM_DIAGRAM):   END;
3523528   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523529   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3523530   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523531   +drop
3523532   +S_MntCard_Games
3523533   +S_MntMagazines
3523534   +S_NumCatalogPurchases
3523535   +S_NumDealsPurchases
3523536   +S_NumWebPurchases
3523537   +S_RANGE_Frq
3523538   +S_RANGE_Recency
3523539   +S_RANGE_average_purchase
3523540   +S_RANGE_campaign_acceptance
3523541   +H11
3523542   +H12
3523543   +H13
3523544   +H14
3523545   +H15
3523546   +H16
3523547   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3523548   +end;
MPRINT(EM_DIAGRAM):   end;
3523549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523550   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3523551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523552   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3523553   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3523554   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523555   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3523556   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523557   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3523558   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3523559   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3523560   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3523561   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3523562   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3523563   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3523564   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3523565   +LENGTH _WARN_ $4
3523566   +      F_DepVar  $ 12
3523567   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3523568   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3523569   +
3523570   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3523571   +
3523572   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3523573   +
3523574   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3523575   +
3523576   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3523577   +
3523578   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3523579   +
3523580   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3523581   +
3523582   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3523583   +
3523584   +      label S_RANGE_campaign_acceptance =
3523585   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3523586   +
3523587   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3523588   +
3523589   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3523590   +
3523591   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3523592   +
3523593   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3523594   +
3523595   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3523596   +
3523597   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3523598   +
3523599   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3523600   +
3523601   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3523602   +
3523603   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3523604   +
3523605   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3523606   +
3523607   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3523608   +
3523609   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3523610   +
3523611   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3523612   +
3523613   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3523614   +
3523615   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3523616   +
3523617   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3523618   +
3523619   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3523620   +
3523621   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3523622   +
3523623   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3523624   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3523625   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3523626   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3523627   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3523628   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3523629   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3523630   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3523631   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3523632   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3523633   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3523634   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3523635   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3523636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3523637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523638   +end;
MPRINT(EM_DIAGRAM):   end;
3523639   +else do;
MPRINT(EM_DIAGRAM):   else do;
3523640   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3523641   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3523642   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3523643   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3523644   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3523645   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3523646   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3523647   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3523648   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523649   +         end;
MPRINT(EM_DIAGRAM):   end;
3523650   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3523651   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3523652   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3523653   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523654   +            end;
MPRINT(EM_DIAGRAM):   end;
3523655   +         end;
MPRINT(EM_DIAGRAM):   end;
3523656   +      end;
MPRINT(EM_DIAGRAM):   end;
3523657   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3523658   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3523659   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3523660   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523661   +         end;
MPRINT(EM_DIAGRAM):   end;
3523662   +      end;
MPRINT(EM_DIAGRAM):   end;
3523663   +   end;
MPRINT(EM_DIAGRAM):   end;
3523664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3523665   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3523666   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3523667   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523668   +      end;
MPRINT(EM_DIAGRAM):   end;
3523669   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3523670   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3523671   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3523672   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3523673   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3523674   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3523675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3523676   +         end;
MPRINT(EM_DIAGRAM):   end;
3523677   +      end;
MPRINT(EM_DIAGRAM):   end;
3523678   +   end;
MPRINT(EM_DIAGRAM):   end;
3523679   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3523680   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3523681   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3523682   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3523683   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3523684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3523685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523686   +   end;
MPRINT(EM_DIAGRAM):   end;
3523687   +end;
MPRINT(EM_DIAGRAM):   end;
3523688   +
3523689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523690   +*** Checking missing input Interval
3523691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3523692   +
3523693   +IF NMISS(
3523694   +   MntCard_Games ,
3523695   +   MntMagazines ,
3523696   +   NumCatalogPurchases ,
3523697   +   NumDealsPurchases ,
3523698   +   NumWebPurchases ,
3523699   +   RANGE_Frq ,
3523700   +   RANGE_Recency ,
3523701   +   RANGE_average_purchase ,
3523702   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3523703   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3523704   +
3523705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3523706   +END;
MPRINT(EM_DIAGRAM):   END;
3523707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523708   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3523709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523711   +   S_MntCard_Games  =    -2.30422154155005 +      6.6278680694124 *
3523712   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30422154155005 + 6.6278680694124 * MntCard_Games ;
3523713   +   S_MntMagazines  =     -0.8344763645162 +     17.2941521870224 *
3523714   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.8344763645162 + 17.2941521870224 * MntMagazines ;
3523715   +   S_NumCatalogPurchases  =    -3.11785831089977 +     13.5021615236546 *
3523716   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11785831089977 + 13.5021615236546 *
NumCatalogPurchases ;
3523717   +   S_NumDealsPurchases  =    -1.42257823361345 +     11.2046223199835 *
3523718   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.42257823361345 + 11.2046223199835 *
NumDealsPurchases ;
3523719   +   S_NumWebPurchases  =    -5.26193636462499 +     12.3221807461613 *
3523720   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.26193636462499 + 12.3221807461613 *
NumWebPurchases ;
3523721   +   S_RANGE_Frq  =    -1.36341176337234 +     4.23823722495677 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36341176337234 + 4.23823722495677 * RANGE_Frq ;
3523722   +   S_RANGE_Recency  =    -1.66797692962532 +     3.34934849143656 *
3523723   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66797692962532 + 3.34934849143656 * RANGE_Recency ;
3523724   +   S_RANGE_average_purchase  =    -1.03413177275915 +      5.1466959614103 *
3523725   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03413177275915 + 5.1466959614103 *
RANGE_average_purchase ;
3523726   +   S_RANGE_campaign_acceptance
3523727   +          =    -0.47584930537711 +     5.81300674989767 *
3523728   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47584930537711 + 5.81300674989767 *
RANGE_campaign_acceptance ;
3523729   +END;
MPRINT(EM_DIAGRAM):   END;
3523730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523731   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3523732   +   ELSE S_MntCard_Games  =    -2.30422154155005 +      6.6278680694124 *
3523733   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30422154155005 + 6.6278680694124 *
MntCard_Games ;
3523734   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3523735   +   ELSE S_MntMagazines  =     -0.8344763645162 +     17.2941521870224 *
3523736   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.8344763645162 + 17.2941521870224 * MntMagazines
;
3523737   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3523738   +   ELSE S_NumCatalogPurchases
3523739   +          =    -3.11785831089977 +     13.5021615236546 * NumCatalogPurchases
3523740   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11785831089977 + 13.5021615236546 *
NumCatalogPurchases ;
3523741   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3523742   +   ELSE S_NumDealsPurchases  =    -1.42257823361345 +     11.2046223199835 *
3523743   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.42257823361345 + 11.2046223199835 *
NumDealsPurchases ;
3523744   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3523745   +   ELSE S_NumWebPurchases  =    -5.26193636462499 +     12.3221807461613 *
3523746   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.26193636462499 + 12.3221807461613 *
NumWebPurchases ;
3523747   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3523748   +   ELSE S_RANGE_Frq  =    -1.36341176337234 +     4.23823722495677 * RANGE_Frq
3523749   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36341176337234 + 4.23823722495677 * RANGE_Frq ;
3523750   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3523751   +   ELSE S_RANGE_Recency  =    -1.66797692962532 +     3.34934849143656 *
3523752   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66797692962532 + 3.34934849143656 *
RANGE_Recency ;
3523753   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3523754   +   ELSE S_RANGE_average_purchase
3523755   +          =    -1.03413177275915 +      5.1466959614103 *
3523756   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03413177275915 + 5.1466959614103 *
RANGE_average_purchase ;
3523757   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3523758   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3523759   +   ELSE S_RANGE_campaign_acceptance
3523760   +          =    -0.47584930537711 +     5.81300674989767 *
3523761   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47584930537711 + 5.81300674989767
* RANGE_campaign_acceptance ;
3523762   +END;
MPRINT(EM_DIAGRAM):   END;
3523763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523764   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3523765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523767   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3523768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523770   +   H11  =     0.91284207245911 * S_MntCard_Games  +    -0.22567313809319 *
3523771   +        S_MntMagazines  +     1.18274578535738 * S_NumCatalogPurchases
3523772   +          +     3.28691449989261 * S_NumDealsPurchases
3523773   +          +     0.03192285860863 * S_NumWebPurchases
3523774   +          +     3.72543361582393 * S_RANGE_Frq  +    -0.90706035318826 *
3523775   +        S_RANGE_Recency  +    -0.09475845199781 * S_RANGE_average_purchase
3523776   +          +     -0.1601032043041 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.91284207245911 * S_MntCard_Games + -0.22567313809319 *
S_MntMagazines + 1.18274578535738 * S_NumCatalogPurchases + 3.28691449989261 *
S_NumDealsPurchases + 0.03192285860863 * S_NumWebPurchases + 3.72543361582393 * S_RANGE_Frq +
-0.90706035318826 * S_RANGE_Recency + -0.09475845199781 * S_RANGE_average_purchase +
-0.1601032043041 * S_RANGE_campaign_acceptance ;
3523777   +   H12  =     1.94789049342037 * S_MntCard_Games  +    -0.56350220121534 *
3523778   +        S_MntMagazines  +     1.37825614754161 * S_NumCatalogPurchases
3523779   +          +    -0.49958113443852 * S_NumDealsPurchases
3523780   +          +     -1.8569833025015 * S_NumWebPurchases
3523781   +          +    -0.84610515397833 * S_RANGE_Frq  +     2.25450449569914 *
3523782   +        S_RANGE_Recency  +     2.28933270164638 * S_RANGE_average_purchase
3523783   +          +     2.00327303776539 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.94789049342037 * S_MntCard_Games + -0.56350220121534 *
S_MntMagazines + 1.37825614754161 * S_NumCatalogPurchases + -0.49958113443852 *
S_NumDealsPurchases + -1.8569833025015 * S_NumWebPurchases + -0.84610515397833 * S_RANGE_Frq +
2.25450449569914 * S_RANGE_Recency + 2.28933270164638 * S_RANGE_average_purchase +
2.00327303776539 * S_RANGE_campaign_acceptance ;
3523784   +   H13  =     0.23389540591471 * S_MntCard_Games  +     0.17820581793556 *
3523785   +        S_MntMagazines  +    -0.07732288772876 * S_NumCatalogPurchases
3523786   +          +    -0.23329010361264 * S_NumDealsPurchases
3523787   +          +     0.32017381133571 * S_NumWebPurchases
3523788   +          +     0.51687997909497 * S_RANGE_Frq  +     0.57708470843014 *
3523789   +        S_RANGE_Recency  +     0.28928363298588 * S_RANGE_average_purchase
3523790   +          +     -0.1883351565619 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.23389540591471 * S_MntCard_Games + 0.17820581793556 *
S_MntMagazines + -0.07732288772876 * S_NumCatalogPurchases + -0.23329010361264 *
S_NumDealsPurchases + 0.32017381133571 * S_NumWebPurchases + 0.51687997909497 * S_RANGE_Frq +
0.57708470843014 * S_RANGE_Recency + 0.28928363298588 * S_RANGE_average_purchase +
-0.1883351565619 * S_RANGE_campaign_acceptance ;
3523791   +   H14  =    -3.15364731825312 * S_MntCard_Games  +     1.09205804153574 *
3523792   +        S_MntMagazines  +    -2.46347661430582 * S_NumCatalogPurchases
3523793   +          +    -3.11973773571659 * S_NumDealsPurchases
3523794   +          +    -0.93058757966105 * S_NumWebPurchases
3523795   +          +     1.99612065136971 * S_RANGE_Frq  +     1.02867361351393 *
3523796   +        S_RANGE_Recency  +     0.38096888133039 * S_RANGE_average_purchase
3523797   +          +    -3.14542006607837 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -3.15364731825312 * S_MntCard_Games + 1.09205804153574 *
S_MntMagazines + -2.46347661430582 * S_NumCatalogPurchases + -3.11973773571659 *
S_NumDealsPurchases + -0.93058757966105 * S_NumWebPurchases + 1.99612065136971 * S_RANGE_Frq +
1.02867361351393 * S_RANGE_Recency + 0.38096888133039 * S_RANGE_average_purchase +
-3.14542006607837 * S_RANGE_campaign_acceptance ;
3523798   +   H15  =     -0.9152276828823 * S_MntCard_Games  +    -0.17578422945174 *
3523799   +        S_MntMagazines  +    -0.37684358341253 * S_NumCatalogPurchases
3523800   +          +    -0.11156712787372 * S_NumDealsPurchases
3523801   +          +     -1.1667860387137 * S_NumWebPurchases
3523802   +          +    -0.65941203370269 * S_RANGE_Frq  +     1.06007633962357 *
3523803   +        S_RANGE_Recency  +     -0.1436315359999 * S_RANGE_average_purchase
3523804   +          +    -0.52624824891561 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -0.9152276828823 * S_MntCard_Games + -0.17578422945174 *
S_MntMagazines + -0.37684358341253 * S_NumCatalogPurchases + -0.11156712787372 *
S_NumDealsPurchases + -1.1667860387137 * S_NumWebPurchases + -0.65941203370269 * S_RANGE_Frq +
1.06007633962357 * S_RANGE_Recency + -0.1436315359999 * S_RANGE_average_purchase +
-0.52624824891561 * S_RANGE_campaign_acceptance ;
3523805   +   H16  =    -0.63757207857913 * S_MntCard_Games  +    -0.54074788256719 *
3523806   +        S_MntMagazines  +    -0.43507129763928 * S_NumCatalogPurchases
3523807   +          +    -0.46920319717486 * S_NumDealsPurchases
3523808   +          +    -0.19747260781984 * S_NumWebPurchases
3523809   +          +    -0.57481107993852 * S_RANGE_Frq  +     1.44202361345187 *
3523810   +        S_RANGE_Recency  +    -0.15725374503664 * S_RANGE_average_purchase
3523811   +          +    -0.62366473923329 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.63757207857913 * S_MntCard_Games + -0.54074788256719 *
S_MntMagazines + -0.43507129763928 * S_NumCatalogPurchases + -0.46920319717486 *
S_NumDealsPurchases + -0.19747260781984 * S_NumWebPurchases + -0.57481107993852 * S_RANGE_Frq
+ 1.44202361345187 * S_RANGE_Recency + -0.15725374503664 * S_RANGE_average_purchase +
-0.62366473923329 * S_RANGE_campaign_acceptance ;
3523812   +   H11  = H11  +     7.15124155487069 * Marital_StatusDivorced
3523813   +          +    -1.88524231767582 * Marital_StatusMarried
3523814   +          +     1.31741119180279 * Marital_StatusSingle
3523815   +          +    -5.39823311222065 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 7.15124155487069 * Marital_StatusDivorced +
-1.88524231767582 * Marital_StatusMarried + 1.31741119180279 * Marital_StatusSingle +
-5.39823311222065 * Marital_StatusTogether ;
3523816   +   H12  = H12  +     3.15986383277857 * Marital_StatusDivorced
3523817   +          +    -2.01806060572231 * Marital_StatusMarried
3523818   +          +    -2.47833603349442 * Marital_StatusSingle
3523819   +          +    -0.35118511076938 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 3.15986383277857 * Marital_StatusDivorced +
-2.01806060572231 * Marital_StatusMarried + -2.47833603349442 * Marital_StatusSingle +
-0.35118511076938 * Marital_StatusTogether ;
3523820   +   H13  = H13  +     -0.1917914698645 * Marital_StatusDivorced
3523821   +          +     0.06525382728497 * Marital_StatusMarried
3523822   +          +    -1.89158783012127 * Marital_StatusSingle
3523823   +          +     0.31410803497357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1917914698645 * Marital_StatusDivorced + 0.06525382728497
* Marital_StatusMarried + -1.89158783012127 * Marital_StatusSingle + 0.31410803497357 *
Marital_StatusTogether ;
3523824   +   H14  = H14  +     0.26490423659515 * Marital_StatusDivorced
3523825   +          +     1.69552625617504 * Marital_StatusMarried
3523826   +          +     -0.0442199648571 * Marital_StatusSingle
3523827   +          +     0.83247867717596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.26490423659515 * Marital_StatusDivorced + 1.69552625617504
* Marital_StatusMarried + -0.0442199648571 * Marital_StatusSingle + 0.83247867717596 *
Marital_StatusTogether ;
3523828   +   H15  = H15  +     1.85214536171615 * Marital_StatusDivorced
3523829   +          +     1.39776952847088 * Marital_StatusMarried
3523830   +          +     1.42257307374575 * Marital_StatusSingle
3523831   +          +      1.3712142344865 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.85214536171615 * Marital_StatusDivorced + 1.39776952847088
* Marital_StatusMarried + 1.42257307374575 * Marital_StatusSingle + 1.3712142344865 *
Marital_StatusTogether ;
3523832   +   H16  = H16  +    -0.11215606059729 * Marital_StatusDivorced
3523833   +          +    -0.40867195675279 * Marital_StatusMarried
3523834   +          +     0.76801357471932 * Marital_StatusSingle
3523835   +          +    -0.99532432306071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.11215606059729 * Marital_StatusDivorced +
-0.40867195675279 * Marital_StatusMarried + 0.76801357471932 * Marital_StatusSingle +
-0.99532432306071 * Marital_StatusTogether ;
3523836   +   H11  =    -1.83375753020201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.83375753020201 + H11 ;
3523837   +   H12  =    -2.35655025566663 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.35655025566663 + H12 ;
3523838   +   H13  =    -0.10592871888748 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.10592871888748 + H13 ;
3523839   +   H14  =     2.69929989100261 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 2.69929989100261 + H14 ;
3523840   +   H15  =     1.34932485055204 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.34932485055204 + H15 ;
3523841   +   H16  =     0.20452832340196 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.20452832340196 + H16 ;
3523842   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3523843   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3523844   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3523845   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3523846   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3523847   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3523848   +END;
MPRINT(EM_DIAGRAM):   END;
3523849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523850   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3523851   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3523852   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3523853   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3523854   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3523855   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3523856   +END;
MPRINT(EM_DIAGRAM):   END;
3523857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523858   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3523859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523860   +
3523861   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3523862   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3523863   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3523864   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3523865   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3523866   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3523867   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3523868   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523869   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523870   +end;
MPRINT(EM_DIAGRAM):   end;
3523871   +else do;
MPRINT(EM_DIAGRAM):   else do;
3523872   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3523873   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3523874   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3523875   +   end;
MPRINT(EM_DIAGRAM):   end;
3523876   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3523877   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3523878   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3523879   +   end;
MPRINT(EM_DIAGRAM):   end;
3523880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3523881   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3523882   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3523883   +   end;
MPRINT(EM_DIAGRAM):   end;
3523884   +end;
MPRINT(EM_DIAGRAM):   end;
3523885   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3523886   +   P_DepVar1  =      1.9258163171631 * H11  +     3.99793329392414 * H12
3523887   +          +    -7.43443937629739 * H13  +    -2.51597459432791 * H14
3523888   +          +    -6.63113572555693 * H15  +    -6.76341291259813 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.9258163171631 * H11 + 3.99793329392414 * H12 +
-7.43443937629739 * H13 + -2.51597459432791 * H14 + -6.63113572555693 * H15 +
-6.76341291259813 * H16 ;
3523889   +   P_DepVar1  =    -4.66424466964479 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.66424466964479 + P_DepVar1 ;
3523890   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3523891   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3523892   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3523893   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3523894   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3523895   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3523896   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3523897   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3523898   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3523899   +END;
MPRINT(EM_DIAGRAM):   END;
3523900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3523901   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3523902   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3523903   +END;
MPRINT(EM_DIAGRAM):   END;
3523904   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3523905   +   P_DepVar1  =     0.13424036281179;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13424036281179;
3523906   +   P_DepVar0  =      0.8657596371882;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8657596371882;
3523907   +END;
MPRINT(EM_DIAGRAM):   END;
3523908   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3523909   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3523910   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3523911   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3523912   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3523913   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3523914   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3523915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523916   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3523917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3523918   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3523919   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3523920   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3523921   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3523922   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3523923   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3523924   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3523925   +END;
MPRINT(EM_DIAGRAM):   END;
3523926   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523927   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3523928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3523929   +drop
3523930   +S_MntCard_Games
3523931   +S_MntMagazines
3523932   +S_NumCatalogPurchases
3523933   +S_NumDealsPurchases
3523934   +S_NumWebPurchases
3523935   +S_RANGE_Frq
3523936   +S_RANGE_Recency
3523937   +S_RANGE_average_purchase
3523938   +S_RANGE_campaign_acceptance
3523939   +H11
3523940   +H12
3523941   +H13
3523942   +H14
3523943   +H15
3523944   +H16
3523945   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3523946   +end;
MPRINT(EM_DIAGRAM):   end;
3523947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523948   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3523949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3523950   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3523951   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3523952   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523953   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3523954   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3523955   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3523956   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3523957   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3523958   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3523959   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3523960   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3523961   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3523962   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3523963   +LENGTH _WARN_ $4
3523964   +      F_DepVar  $ 12
3523965   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3523966   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3523967   +
3523968   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3523969   +
3523970   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3523971   +
3523972   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3523973   +
3523974   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3523975   +
3523976   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3523977   +
3523978   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3523979   +
3523980   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3523981   +
3523982   +      label S_RANGE_campaign_acceptance =
3523983   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3523984   +
3523985   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3523986   +
3523987   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3523988   +
3523989   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3523990   +
3523991   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3523992   +
3523993   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3523994   +
3523995   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3523996   +
3523997   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3523998   +
3523999   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3524000   +
3524001   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3524002   +
3524003   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3524004   +
3524005   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3524006   +
3524007   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3524008   +
3524009   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3524010   +
3524011   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3524012   +
3524013   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3524014   +
3524015   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3524016   +
3524017   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3524018   +
3524019   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3524020   +
3524021   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3524022   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3524023   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3524024   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3524025   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3524026   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3524027   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3524028   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3524029   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3524030   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524031   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524032   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524033   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3524035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524036   +end;
MPRINT(EM_DIAGRAM):   end;
3524037   +else do;
MPRINT(EM_DIAGRAM):   else do;
3524038   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3524039   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3524040   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3524041   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3524042   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3524043   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3524044   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3524045   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3524046   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524047   +         end;
MPRINT(EM_DIAGRAM):   end;
3524048   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3524049   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3524050   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3524051   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524052   +            end;
MPRINT(EM_DIAGRAM):   end;
3524053   +         end;
MPRINT(EM_DIAGRAM):   end;
3524054   +      end;
MPRINT(EM_DIAGRAM):   end;
3524055   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524056   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3524057   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3524058   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524059   +         end;
MPRINT(EM_DIAGRAM):   end;
3524060   +      end;
MPRINT(EM_DIAGRAM):   end;
3524061   +   end;
MPRINT(EM_DIAGRAM):   end;
3524062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3524063   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3524064   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3524065   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524066   +      end;
MPRINT(EM_DIAGRAM):   end;
3524067   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524068   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3524069   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3524070   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3524071   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3524072   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3524073   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524074   +         end;
MPRINT(EM_DIAGRAM):   end;
3524075   +      end;
MPRINT(EM_DIAGRAM):   end;
3524076   +   end;
MPRINT(EM_DIAGRAM):   end;
3524077   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3524078   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524079   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524080   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524081   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3524083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524084   +   end;
MPRINT(EM_DIAGRAM):   end;
3524085   +end;
MPRINT(EM_DIAGRAM):   end;
3524086   +
3524087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524088   +*** Checking missing input Interval
3524089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3524090   +
3524091   +IF NMISS(
3524092   +   MntCard_Games ,
3524093   +   MntMagazines ,
3524094   +   NumCatalogPurchases ,
3524095   +   NumDealsPurchases ,
3524096   +   NumWebPurchases ,
3524097   +   RANGE_Frq ,
3524098   +   RANGE_Recency ,
3524099   +   RANGE_average_purchase ,
3524100   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3524101   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3524102   +
3524103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524104   +END;
MPRINT(EM_DIAGRAM):   END;
3524105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524106   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3524107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524108   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524109   +   S_MntCard_Games  =    -2.32271345418194 +     6.59498219040202 *
3524110   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32271345418194 + 6.59498219040202 * MntCard_Games ;
3524111   +   S_MntMagazines  =    -0.83801022618829 +     17.3248167471497 *
3524112   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.83801022618829 + 17.3248167471497 * MntMagazines ;
3524113   +   S_NumCatalogPurchases  =    -3.10282176666347 +     13.3977042611872 *
3524114   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10282176666347 + 13.3977042611872 *
NumCatalogPurchases ;
3524115   +   S_NumDealsPurchases  =     -1.4060514802267 +     11.1690301040746 *
3524116   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.4060514802267 + 11.1690301040746 *
NumDealsPurchases ;
3524117   +   S_NumWebPurchases  =    -5.19000777786962 +     12.1809156294621 *
3524118   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.19000777786962 + 12.1809156294621 *
NumWebPurchases ;
3524119   +   S_RANGE_Frq  =    -1.36719960797418 +     4.20388118037654 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36719960797418 + 4.20388118037654 * RANGE_Frq ;
3524120   +   S_RANGE_Recency  =     -1.6722479537157 +     3.36019552383506 *
3524121   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6722479537157 + 3.36019552383506 * RANGE_Recency ;
3524122   +   S_RANGE_average_purchase  =    -1.04571005422691 +      5.1535815325542 *
3524123   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04571005422691 + 5.1535815325542 *
RANGE_average_purchase ;
3524124   +   S_RANGE_campaign_acceptance
3524125   +          =    -0.47597115058406 +     5.76134310294891 *
3524126   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47597115058406 + 5.76134310294891 *
RANGE_campaign_acceptance ;
3524127   +END;
MPRINT(EM_DIAGRAM):   END;
3524128   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524129   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3524130   +   ELSE S_MntCard_Games  =    -2.32271345418194 +     6.59498219040202 *
3524131   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32271345418194 + 6.59498219040202 *
MntCard_Games ;
3524132   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3524133   +   ELSE S_MntMagazines  =    -0.83801022618829 +     17.3248167471497 *
3524134   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.83801022618829 + 17.3248167471497 *
MntMagazines ;
3524135   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3524136   +   ELSE S_NumCatalogPurchases
3524137   +          =    -3.10282176666347 +     13.3977042611872 * NumCatalogPurchases
3524138   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10282176666347 + 13.3977042611872 *
NumCatalogPurchases ;
3524139   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3524140   +   ELSE S_NumDealsPurchases  =     -1.4060514802267 +     11.1690301040746 *
3524141   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.4060514802267 + 11.1690301040746 *
NumDealsPurchases ;
3524142   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3524143   +   ELSE S_NumWebPurchases  =    -5.19000777786962 +     12.1809156294621 *
3524144   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.19000777786962 + 12.1809156294621 *
NumWebPurchases ;
3524145   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3524146   +   ELSE S_RANGE_Frq  =    -1.36719960797418 +     4.20388118037654 * RANGE_Frq
3524147   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36719960797418 + 4.20388118037654 * RANGE_Frq ;
3524148   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3524149   +   ELSE S_RANGE_Recency  =     -1.6722479537157 +     3.36019552383506 *
3524150   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6722479537157 + 3.36019552383506 *
RANGE_Recency ;
3524151   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3524152   +   ELSE S_RANGE_average_purchase
3524153   +          =    -1.04571005422691 +      5.1535815325542 *
3524154   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04571005422691 + 5.1535815325542 *
RANGE_average_purchase ;
3524155   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3524156   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3524157   +   ELSE S_RANGE_campaign_acceptance
3524158   +          =    -0.47597115058406 +     5.76134310294891 *
3524159   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47597115058406 + 5.76134310294891
* RANGE_campaign_acceptance ;
3524160   +END;
MPRINT(EM_DIAGRAM):   END;
3524161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524162   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3524163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524165   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3524166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524168   +   H11  =     0.15353582224336 * S_MntCard_Games  +     0.16155031301006 *
3524169   +        S_MntMagazines  +     0.10156786617885 * S_NumCatalogPurchases
3524170   +          +     0.33999854773452 * S_NumDealsPurchases
3524171   +          +    -0.26446141557205 * S_NumWebPurchases
3524172   +          +     0.12152654351815 * S_RANGE_Frq  +    -0.38272116443659 *
3524173   +        S_RANGE_Recency  +     0.43716064130358 * S_RANGE_average_purchase
3524174   +          +     0.31429563319359 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.15353582224336 * S_MntCard_Games + 0.16155031301006 *
S_MntMagazines + 0.10156786617885 * S_NumCatalogPurchases + 0.33999854773452 *
S_NumDealsPurchases + -0.26446141557205 * S_NumWebPurchases + 0.12152654351815 * S_RANGE_Frq +
-0.38272116443659 * S_RANGE_Recency + 0.43716064130358 * S_RANGE_average_purchase +
0.31429563319359 * S_RANGE_campaign_acceptance ;
3524175   +   H12  =     -0.5985274432867 * S_MntCard_Games  +    -0.64911768590503 *
3524176   +        S_MntMagazines  +     -1.6549877899742 * S_NumCatalogPurchases
3524177   +          +    -1.29258529970734 * S_NumDealsPurchases
3524178   +          +     0.16813959489549 * S_NumWebPurchases
3524179   +          +    -0.86274747594498 * S_RANGE_Frq  +      2.1508841609998 *
3524180   +        S_RANGE_Recency  +     0.45497695838815 * S_RANGE_average_purchase
3524181   +          +     0.41959954857181 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -0.5985274432867 * S_MntCard_Games + -0.64911768590503 *
S_MntMagazines + -1.6549877899742 * S_NumCatalogPurchases + -1.29258529970734 *
S_NumDealsPurchases + 0.16813959489549 * S_NumWebPurchases + -0.86274747594498 * S_RANGE_Frq +
2.1508841609998 * S_RANGE_Recency + 0.45497695838815 * S_RANGE_average_purchase +
0.41959954857181 * S_RANGE_campaign_acceptance ;
3524182   +   H13  =    -0.38577914060185 * S_MntCard_Games  +     2.23785677864842 *
3524183   +        S_MntMagazines  +    -1.65062787396065 * S_NumCatalogPurchases
3524184   +          +     1.05910567303209 * S_NumDealsPurchases
3524185   +          +    -2.13002975683227 * S_NumWebPurchases
3524186   +          +     0.43792639362235 * S_RANGE_Frq  +     2.05170880694035 *
3524187   +        S_RANGE_Recency  +     2.30173502934687 * S_RANGE_average_purchase
3524188   +          +    -0.66843934093585 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.38577914060185 * S_MntCard_Games + 2.23785677864842 *
S_MntMagazines + -1.65062787396065 * S_NumCatalogPurchases + 1.05910567303209 *
S_NumDealsPurchases + -2.13002975683227 * S_NumWebPurchases + 0.43792639362235 * S_RANGE_Frq +
2.05170880694035 * S_RANGE_Recency + 2.30173502934687 * S_RANGE_average_purchase +
-0.66843934093585 * S_RANGE_campaign_acceptance ;
3524189   +   H14  =    -0.55549587273337 * S_MntCard_Games  +     0.04609980162624 *
3524190   +        S_MntMagazines  +    -1.16960588093441 * S_NumCatalogPurchases
3524191   +          +    -0.31309889171597 * S_NumDealsPurchases
3524192   +          +    -0.49450292506451 * S_NumWebPurchases
3524193   +          +     0.39159955266982 * S_RANGE_Frq  +     1.46152945084444 *
3524194   +        S_RANGE_Recency  +    -3.02007150303487 * S_RANGE_average_purchase
3524195   +          +     -0.5489952895927 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.55549587273337 * S_MntCard_Games + 0.04609980162624 *
S_MntMagazines + -1.16960588093441 * S_NumCatalogPurchases + -0.31309889171597 *
S_NumDealsPurchases + -0.49450292506451 * S_NumWebPurchases + 0.39159955266982 * S_RANGE_Frq +
1.46152945084444 * S_RANGE_Recency + -3.02007150303487 * S_RANGE_average_purchase +
-0.5489952895927 * S_RANGE_campaign_acceptance ;
3524196   +   H15  =    -0.46603198398039 * S_MntCard_Games  +    -1.33019261455143 *
3524197   +        S_MntMagazines  +     2.12108237738343 * S_NumCatalogPurchases
3524198   +          +    -0.13406068674301 * S_NumDealsPurchases
3524199   +          +    -1.13929499116037 * S_NumWebPurchases
3524200   +          +     4.28084226388507 * S_RANGE_Frq  +     -2.3473707989169 *
3524201   +        S_RANGE_Recency  +     0.91571080883706 * S_RANGE_average_purchase
3524202   +          +    -0.34349746885829 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -0.46603198398039 * S_MntCard_Games + -1.33019261455143 *
S_MntMagazines + 2.12108237738343 * S_NumCatalogPurchases + -0.13406068674301 *
S_NumDealsPurchases + -1.13929499116037 * S_NumWebPurchases + 4.28084226388507 * S_RANGE_Frq +
-2.3473707989169 * S_RANGE_Recency + 0.91571080883706 * S_RANGE_average_purchase +
-0.34349746885829 * S_RANGE_campaign_acceptance ;
3524203   +   H16  =    -1.72175297342015 * S_MntCard_Games  +     0.23493503667476 *
3524204   +        S_MntMagazines  +    -0.75047837688419 * S_NumCatalogPurchases
3524205   +          +    -0.78069601468643 * S_NumDealsPurchases
3524206   +          +    -1.48981850035405 * S_NumWebPurchases
3524207   +          +     0.01958311839832 * S_RANGE_Frq  +     1.03760430233716 *
3524208   +        S_RANGE_Recency  +     0.69336256270176 * S_RANGE_average_purchase
3524209   +          +    -1.57765928728057 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -1.72175297342015 * S_MntCard_Games + 0.23493503667476 *
S_MntMagazines + -0.75047837688419 * S_NumCatalogPurchases + -0.78069601468643 *
S_NumDealsPurchases + -1.48981850035405 * S_NumWebPurchases + 0.01958311839832 * S_RANGE_Frq +
1.03760430233716 * S_RANGE_Recency + 0.69336256270176 * S_RANGE_average_purchase +
-1.57765928728057 * S_RANGE_campaign_acceptance ;
3524210   +   H11  = H11  +     0.61681978524162 * Marital_StatusDivorced
3524211   +          +     0.04419762326094 * Marital_StatusMarried
3524212   +          +    -0.10117308155981 * Marital_StatusSingle
3524213   +          +    -0.46218376107589 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61681978524162 * Marital_StatusDivorced + 0.04419762326094
* Marital_StatusMarried + -0.10117308155981 * Marital_StatusSingle + -0.46218376107589 *
Marital_StatusTogether ;
3524214   +   H12  = H12  +     -2.8838454743364 * Marital_StatusDivorced
3524215   +          +       1.558456697162 * Marital_StatusMarried
3524216   +          +    -0.52313919975169 * Marital_StatusSingle
3524217   +          +     0.03223500872552 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -2.8838454743364 * Marital_StatusDivorced + 1.558456697162 *
Marital_StatusMarried + -0.52313919975169 * Marital_StatusSingle + 0.03223500872552 *
Marital_StatusTogether ;
3524218   +   H13  = H13  +     2.71213795805946 * Marital_StatusDivorced
3524219   +          +     2.14432484576925 * Marital_StatusMarried
3524220   +          +    -3.48649744222468 * Marital_StatusSingle
3524221   +          +     2.68583384144893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 2.71213795805946 * Marital_StatusDivorced + 2.14432484576925
* Marital_StatusMarried + -3.48649744222468 * Marital_StatusSingle + 2.68583384144893 *
Marital_StatusTogether ;
3524222   +   H14  = H14  +       0.257789937205 * Marital_StatusDivorced
3524223   +          +     0.12949216205192 * Marital_StatusMarried
3524224   +          +     0.27693138711895 * Marital_StatusSingle
3524225   +          +     0.10829793658142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.257789937205 * Marital_StatusDivorced + 0.12949216205192 *
Marital_StatusMarried + 0.27693138711895 * Marital_StatusSingle + 0.10829793658142 *
Marital_StatusTogether ;
3524226   +   H15  = H15  +     1.84078644271398 * Marital_StatusDivorced
3524227   +          +    -5.36270989481538 * Marital_StatusMarried
3524228   +          +     1.75379453647458 * Marital_StatusSingle
3524229   +          +     0.36768777191807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.84078644271398 * Marital_StatusDivorced +
-5.36270989481538 * Marital_StatusMarried + 1.75379453647458 * Marital_StatusSingle +
0.36768777191807 * Marital_StatusTogether ;
3524230   +   H16  = H16  +     0.89503709275365 * Marital_StatusDivorced
3524231   +          +     1.68576703173994 * Marital_StatusMarried
3524232   +          +    -0.93652248173525 * Marital_StatusSingle
3524233   +          +    -0.77401216982733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.89503709275365 * Marital_StatusDivorced + 1.68576703173994
* Marital_StatusMarried + -0.93652248173525 * Marital_StatusSingle + -0.77401216982733 *
Marital_StatusTogether ;
3524234   +   H11  =    -1.26680420180895 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.26680420180895 + H11 ;
3524235   +   H12  =    -1.15393908300368 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15393908300368 + H12 ;
3524236   +   H13  =    -1.04544365456473 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04544365456473 + H13 ;
3524237   +   H14  =    -0.66343010255008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66343010255008 + H14 ;
3524238   +   H15  =     1.89086776259694 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.89086776259694 + H15 ;
3524239   +   H16  =     2.18621244153883 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.18621244153883 + H16 ;
3524240   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3524241   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3524242   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3524243   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3524244   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3524245   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3524246   +END;
MPRINT(EM_DIAGRAM):   END;
3524247   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524248   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3524249   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3524250   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3524251   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3524252   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3524253   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3524254   +END;
MPRINT(EM_DIAGRAM):   END;
3524255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524256   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3524257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524258   +
3524259   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3524260   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3524261   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3524262   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3524263   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3524264   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3524265   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3524266   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3524267   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3524268   +end;
MPRINT(EM_DIAGRAM):   end;
3524269   +else do;
MPRINT(EM_DIAGRAM):   else do;
3524270   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3524271   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3524272   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3524273   +   end;
MPRINT(EM_DIAGRAM):   end;
3524274   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3524275   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3524276   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3524277   +   end;
MPRINT(EM_DIAGRAM):   end;
3524278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3524279   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3524280   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3524281   +   end;
MPRINT(EM_DIAGRAM):   end;
3524282   +end;
MPRINT(EM_DIAGRAM):   end;
3524283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524284   +   P_DepVar1  =     10.3757439346071 * H11  +    -3.13704325739536 * H12
3524285   +          +    -3.83653685974027 * H13  +    -5.90498146157377 * H14
3524286   +          +     -2.9672770632419 * H15  +    -3.85453388563746 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 10.3757439346071 * H11 + -3.13704325739536 * H12 +
-3.83653685974027 * H13 + -5.90498146157377 * H14 + -2.9672770632419 * H15 + -3.85453388563746
* H16 ;
3524287   +   P_DepVar1  =    -3.75994948005168 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75994948005168 + P_DepVar1 ;
3524288   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3524289   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3524290   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3524291   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3524292   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3524293   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3524294   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3524295   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3524296   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3524297   +END;
MPRINT(EM_DIAGRAM):   END;
3524298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524299   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3524300   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3524301   +END;
MPRINT(EM_DIAGRAM):   END;
3524302   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3524303   +   P_DepVar1  =     0.13935542442124;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13935542442124;
3524304   +   P_DepVar0  =     0.86064457557875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86064457557875;
3524305   +END;
MPRINT(EM_DIAGRAM):   END;
3524306   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3524307   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3524308   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3524309   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3524310   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3524311   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3524312   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3524313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524314   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3524315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524316   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3524317   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3524318   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3524319   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3524320   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3524321   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3524322   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3524323   +END;
MPRINT(EM_DIAGRAM):   END;
3524324   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3524325   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3524326   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3524327   +drop
3524328   +S_MntCard_Games
3524329   +S_MntMagazines
3524330   +S_NumCatalogPurchases
3524331   +S_NumDealsPurchases
3524332   +S_NumWebPurchases
3524333   +S_RANGE_Frq
3524334   +S_RANGE_Recency
3524335   +S_RANGE_average_purchase
3524336   +S_RANGE_campaign_acceptance
3524337   +H11
3524338   +H12
3524339   +H13
3524340   +H14
3524341   +H15
3524342   +H16
3524343   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3524344   +end;
MPRINT(EM_DIAGRAM):   end;
3524345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3524346   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3524347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3524348   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3524349   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3524350   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3524351   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3524352   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3524353   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3524354   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3524355   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3524356   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3524357   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3524358   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3524359   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3524360   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3524361   +LENGTH _WARN_ $4
3524362   +      F_DepVar  $ 12
3524363   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3524364   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3524365   +
3524366   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3524367   +
3524368   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3524369   +
3524370   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3524371   +
3524372   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3524373   +
3524374   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3524375   +
3524376   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3524377   +
3524378   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3524379   +
3524380   +      label S_RANGE_campaign_acceptance =
3524381   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3524382   +
3524383   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3524384   +
3524385   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3524386   +
3524387   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3524388   +
3524389   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3524390   +
3524391   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3524392   +
3524393   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3524394   +
3524395   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3524396   +
3524397   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3524398   +
3524399   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3524400   +
3524401   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3524402   +
3524403   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3524404   +
3524405   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3524406   +
3524407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3524408   +
3524409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3524410   +
3524411   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3524412   +
3524413   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3524414   +
3524415   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3524416   +
3524417   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3524418   +
3524419   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3524420   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3524421   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3524422   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3524423   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3524424   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3524425   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3524426   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3524427   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3524428   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524429   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524430   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524431   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3524433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524434   +end;
MPRINT(EM_DIAGRAM):   end;
3524435   +else do;
MPRINT(EM_DIAGRAM):   else do;
3524436   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3524437   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3524438   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3524439   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3524440   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3524441   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3524442   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3524443   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3524444   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524445   +         end;
MPRINT(EM_DIAGRAM):   end;
3524446   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3524447   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3524448   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3524449   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524450   +            end;
MPRINT(EM_DIAGRAM):   end;
3524451   +         end;
MPRINT(EM_DIAGRAM):   end;
3524452   +      end;
MPRINT(EM_DIAGRAM):   end;
3524453   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524454   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3524455   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3524456   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524457   +         end;
MPRINT(EM_DIAGRAM):   end;
3524458   +      end;
MPRINT(EM_DIAGRAM):   end;
3524459   +   end;
MPRINT(EM_DIAGRAM):   end;
3524460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3524461   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3524462   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3524463   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524464   +      end;
MPRINT(EM_DIAGRAM):   end;
3524465   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524466   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3524467   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3524468   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3524469   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3524470   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3524471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524472   +         end;
MPRINT(EM_DIAGRAM):   end;
3524473   +      end;
MPRINT(EM_DIAGRAM):   end;
3524474   +   end;
MPRINT(EM_DIAGRAM):   end;
3524475   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3524476   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524477   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524478   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524479   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3524481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524482   +   end;
MPRINT(EM_DIAGRAM):   end;
3524483   +end;
MPRINT(EM_DIAGRAM):   end;
3524484   +
3524485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524486   +*** Checking missing input Interval
3524487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3524488   +
3524489   +IF NMISS(
3524490   +   MntCard_Games ,
3524491   +   MntMagazines ,
3524492   +   NumCatalogPurchases ,
3524493   +   NumDealsPurchases ,
3524494   +   NumWebPurchases ,
3524495   +   RANGE_Frq ,
3524496   +   RANGE_Recency ,
3524497   +   RANGE_average_purchase ,
3524498   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3524499   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3524500   +
3524501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524502   +END;
MPRINT(EM_DIAGRAM):   END;
3524503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524504   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3524505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524506   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524507   +   S_MntCard_Games  =    -2.33522593705059 +     6.68956977763158 *
3524508   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33522593705059 + 6.68956977763158 * MntCard_Games ;
3524509   +   S_MntMagazines  =    -0.82819479945891 +     17.2251462364348 *
3524510   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82819479945891 + 17.2251462364348 * MntMagazines ;
3524511   +   S_NumCatalogPurchases  =    -3.10054848188199 +     13.4367263992267 *
3524512   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10054848188199 + 13.4367263992267 *
NumCatalogPurchases ;
3524513   +   S_NumDealsPurchases  =    -1.41500737175216 +     11.1230883165867 *
3524514   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41500737175216 + 11.1230883165867 *
NumDealsPurchases ;
3524515   +   S_NumWebPurchases  =    -5.21856396880793 +     12.2279299177142 *
3524516   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.21856396880793 + 12.2279299177142 *
NumWebPurchases ;
3524517   +   S_RANGE_Frq  =    -1.36413014879794 +     4.19989227621622 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36413014879794 + 4.19989227621622 * RANGE_Frq ;
3524518   +   S_RANGE_Recency  =    -1.65726445083765 +     3.34328030677855 *
3524519   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65726445083765 + 3.34328030677855 * RANGE_Recency ;
3524520   +   S_RANGE_average_purchase  =     -1.0375239874731 +     5.18436677688615 *
3524521   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0375239874731 + 5.18436677688615 *
RANGE_average_purchase ;
3524522   +   S_RANGE_campaign_acceptance
3524523   +          =    -0.47216201579102 +     5.79894757422216 *
3524524   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47216201579102 + 5.79894757422216 *
RANGE_campaign_acceptance ;
3524525   +END;
MPRINT(EM_DIAGRAM):   END;
3524526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524527   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3524528   +   ELSE S_MntCard_Games  =    -2.33522593705059 +     6.68956977763158 *
3524529   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33522593705059 + 6.68956977763158 *
MntCard_Games ;
3524530   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3524531   +   ELSE S_MntMagazines  =    -0.82819479945891 +     17.2251462364348 *
3524532   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82819479945891 + 17.2251462364348 *
MntMagazines ;
3524533   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3524534   +   ELSE S_NumCatalogPurchases
3524535   +          =    -3.10054848188199 +     13.4367263992267 * NumCatalogPurchases
3524536   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10054848188199 + 13.4367263992267 *
NumCatalogPurchases ;
3524537   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3524538   +   ELSE S_NumDealsPurchases  =    -1.41500737175216 +     11.1230883165867 *
3524539   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41500737175216 + 11.1230883165867 *
NumDealsPurchases ;
3524540   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3524541   +   ELSE S_NumWebPurchases  =    -5.21856396880793 +     12.2279299177142 *
3524542   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.21856396880793 + 12.2279299177142 *
NumWebPurchases ;
3524543   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3524544   +   ELSE S_RANGE_Frq  =    -1.36413014879794 +     4.19989227621622 * RANGE_Frq
3524545   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36413014879794 + 4.19989227621622 * RANGE_Frq ;
3524546   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3524547   +   ELSE S_RANGE_Recency  =    -1.65726445083765 +     3.34328030677855 *
3524548   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65726445083765 + 3.34328030677855 *
RANGE_Recency ;
3524549   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3524550   +   ELSE S_RANGE_average_purchase
3524551   +          =     -1.0375239874731 +     5.18436677688615 *
3524552   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0375239874731 + 5.18436677688615 *
RANGE_average_purchase ;
3524553   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3524554   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3524555   +   ELSE S_RANGE_campaign_acceptance
3524556   +          =    -0.47216201579102 +     5.79894757422216 *
3524557   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47216201579102 + 5.79894757422216
* RANGE_campaign_acceptance ;
3524558   +END;
MPRINT(EM_DIAGRAM):   END;
3524559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524560   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3524561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524563   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3524564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524566   +   H11  =    -0.70834528054883 * S_MntCard_Games  +    -0.14314077532251 *
3524567   +        S_MntMagazines  +    -1.12917889606349 * S_NumCatalogPurchases
3524568   +          +     -0.5883289995918 * S_NumDealsPurchases
3524569   +          +     0.02529440093812 * S_NumWebPurchases
3524570   +          +      1.1250254700024 * S_RANGE_Frq  +     1.73855164249935 *
3524571   +        S_RANGE_Recency  +    -2.62143424439721 * S_RANGE_average_purchase
3524572   +          +    -0.90646687103767 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.70834528054883 * S_MntCard_Games + -0.14314077532251 *
S_MntMagazines + -1.12917889606349 * S_NumCatalogPurchases + -0.5883289995918 *
S_NumDealsPurchases + 0.02529440093812 * S_NumWebPurchases + 1.1250254700024 * S_RANGE_Frq +
1.73855164249935 * S_RANGE_Recency + -2.62143424439721 * S_RANGE_average_purchase +
-0.90646687103767 * S_RANGE_campaign_acceptance ;
3524573   +   H12  =     1.82471058142657 * S_MntCard_Games  +     0.38817150888667 *
3524574   +        S_MntMagazines  +     2.71539375067233 * S_NumCatalogPurchases
3524575   +          +    -0.73076671723574 * S_NumDealsPurchases
3524576   +          +    -3.10323909629116 * S_NumWebPurchases
3524577   +          +     6.36168579644011 * S_RANGE_Frq  +     3.11109472406411 *
3524578   +        S_RANGE_Recency  +    -2.92717483289707 * S_RANGE_average_purchase
3524579   +          +    -8.79665889224933 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.82471058142657 * S_MntCard_Games + 0.38817150888667 *
S_MntMagazines + 2.71539375067233 * S_NumCatalogPurchases + -0.73076671723574 *
S_NumDealsPurchases + -3.10323909629116 * S_NumWebPurchases + 6.36168579644011 * S_RANGE_Frq +
3.11109472406411 * S_RANGE_Recency + -2.92717483289707 * S_RANGE_average_purchase +
-8.79665889224933 * S_RANGE_campaign_acceptance ;
3524580   +   H13  =    -0.08089349257979 * S_MntCard_Games  +     0.10391526722729 *
3524581   +        S_MntMagazines  +     0.43486734581182 * S_NumCatalogPurchases
3524582   +          +      0.1604310593481 * S_NumDealsPurchases
3524583   +          +    -0.69059374484548 * S_NumWebPurchases
3524584   +          +     0.30439279179007 * S_RANGE_Frq  +    -1.07423266260773 *
3524585   +        S_RANGE_Recency  +     0.49175111940188 * S_RANGE_average_purchase
3524586   +          +     0.18765444948077 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.08089349257979 * S_MntCard_Games + 0.10391526722729 *
S_MntMagazines + 0.43486734581182 * S_NumCatalogPurchases + 0.1604310593481 *
S_NumDealsPurchases + -0.69059374484548 * S_NumWebPurchases + 0.30439279179007 * S_RANGE_Frq +
-1.07423266260773 * S_RANGE_Recency + 0.49175111940188 * S_RANGE_average_purchase +
0.18765444948077 * S_RANGE_campaign_acceptance ;
3524587   +   H14  =     1.73406861269283 * S_MntCard_Games  +     -0.9339381661434 *
3524588   +        S_MntMagazines  +     0.31460196001203 * S_NumCatalogPurchases
3524589   +          +     1.14294557575345 * S_NumDealsPurchases
3524590   +          +     0.49887781101923 * S_NumWebPurchases
3524591   +          +    -0.14996564832493 * S_RANGE_Frq  +    -0.81180099754578 *
3524592   +        S_RANGE_Recency  +    -1.19501200159987 * S_RANGE_average_purchase
3524593   +          +     0.86070452735563 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = 1.73406861269283 * S_MntCard_Games + -0.9339381661434 *
S_MntMagazines + 0.31460196001203 * S_NumCatalogPurchases + 1.14294557575345 *
S_NumDealsPurchases + 0.49887781101923 * S_NumWebPurchases + -0.14996564832493 * S_RANGE_Frq +
-0.81180099754578 * S_RANGE_Recency + -1.19501200159987 * S_RANGE_average_purchase +
0.86070452735563 * S_RANGE_campaign_acceptance ;
3524594   +   H15  =     0.10796799106232 * S_MntCard_Games  +    -0.15534120067077 *
3524595   +        S_MntMagazines  +     0.41265883698817 * S_NumCatalogPurchases
3524596   +          +     0.32682294735708 * S_NumDealsPurchases
3524597   +          +     1.19012657450285 * S_NumWebPurchases
3524598   +          +     0.66925971651705 * S_RANGE_Frq  +    -1.07353465376337 *
3524599   +        S_RANGE_Recency  +     0.26845301349353 * S_RANGE_average_purchase
3524600   +          +      0.1741477276552 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 0.10796799106232 * S_MntCard_Games + -0.15534120067077 *
S_MntMagazines + 0.41265883698817 * S_NumCatalogPurchases + 0.32682294735708 *
S_NumDealsPurchases + 1.19012657450285 * S_NumWebPurchases + 0.66925971651705 * S_RANGE_Frq +
-1.07353465376337 * S_RANGE_Recency + 0.26845301349353 * S_RANGE_average_purchase +
0.1741477276552 * S_RANGE_campaign_acceptance ;
3524601   +   H16  =    -2.49109106621332 * S_MntCard_Games  +    -1.51007535840652 *
3524602   +        S_MntMagazines  +     0.10477029131908 * S_NumCatalogPurchases
3524603   +          +    -0.81936916918852 * S_NumDealsPurchases
3524604   +          +     0.27839422164653 * S_NumWebPurchases
3524605   +          +     1.79508484809259 * S_RANGE_Frq  +    -2.03820694607095 *
3524606   +        S_RANGE_Recency  +     -0.9257100257643 * S_RANGE_average_purchase
3524607   +          +    -2.10078905143259 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -2.49109106621332 * S_MntCard_Games + -1.51007535840652 *
S_MntMagazines + 0.10477029131908 * S_NumCatalogPurchases + -0.81936916918852 *
S_NumDealsPurchases + 0.27839422164653 * S_NumWebPurchases + 1.79508484809259 * S_RANGE_Frq +
-2.03820694607095 * S_RANGE_Recency + -0.9257100257643 * S_RANGE_average_purchase +
-2.10078905143259 * S_RANGE_campaign_acceptance ;
3524608   +   H11  = H11  +    -0.24393079121083 * Marital_StatusDivorced
3524609   +          +     0.51130899615306 * Marital_StatusMarried
3524610   +          +      0.1179054377688 * Marital_StatusSingle
3524611   +          +     0.16155285442853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.24393079121083 * Marital_StatusDivorced +
0.51130899615306 * Marital_StatusMarried + 0.1179054377688 * Marital_StatusSingle +
0.16155285442853 * Marital_StatusTogether ;
3524612   +   H12  = H12  +    -4.10008856454922 * Marital_StatusDivorced
3524613   +          +    -8.65731580777218 * Marital_StatusMarried
3524614   +          +    -0.44537892443283 * Marital_StatusSingle
3524615   +          +     9.23242332118887 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -4.10008856454922 * Marital_StatusDivorced +
-8.65731580777218 * Marital_StatusMarried + -0.44537892443283 * Marital_StatusSingle +
9.23242332118887 * Marital_StatusTogether ;
3524616   +   H13  = H13  +     0.48823257794576 * Marital_StatusDivorced
3524617   +          +     -0.5643203810427 * Marital_StatusMarried
3524618   +          +     0.57784804925416 * Marital_StatusSingle
3524619   +          +    -0.70810411666737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48823257794576 * Marital_StatusDivorced + -0.5643203810427
* Marital_StatusMarried + 0.57784804925416 * Marital_StatusSingle + -0.70810411666737 *
Marital_StatusTogether ;
3524620   +   H14  = H14  +    -0.06784741131656 * Marital_StatusDivorced
3524621   +          +    -0.56813857523848 * Marital_StatusMarried
3524622   +          +     0.57671805736418 * Marital_StatusSingle
3524623   +          +    -1.29278521112463 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.06784741131656 * Marital_StatusDivorced +
-0.56813857523848 * Marital_StatusMarried + 0.57671805736418 * Marital_StatusSingle +
-1.29278521112463 * Marital_StatusTogether ;
3524624   +   H15  = H15  +     0.25943013890108 * Marital_StatusDivorced
3524625   +          +     0.06641823720344 * Marital_StatusMarried
3524626   +          +    -0.16860389151125 * Marital_StatusSingle
3524627   +          +     0.85629306115001 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25943013890108 * Marital_StatusDivorced + 0.06641823720344
* Marital_StatusMarried + -0.16860389151125 * Marital_StatusSingle + 0.85629306115001 *
Marital_StatusTogether ;
3524628   +   H16  = H16  +     0.44599338826889 * Marital_StatusDivorced
3524629   +          +    -0.31803091920046 * Marital_StatusMarried
3524630   +          +    -0.76479205890298 * Marital_StatusSingle
3524631   +          +     2.56842508988051 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.44599338826889 * Marital_StatusDivorced +
-0.31803091920046 * Marital_StatusMarried + -0.76479205890298 * Marital_StatusSingle +
2.56842508988051 * Marital_StatusTogether ;
3524632   +   H11  =     0.02080269723116 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02080269723116 + H11 ;
3524633   +   H12  =    -4.62311781315556 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.62311781315556 + H12 ;
3524634   +   H13  =    -2.86166265554228 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.86166265554228 + H13 ;
3524635   +   H14  =    -0.62547267898203 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62547267898203 + H14 ;
3524636   +   H15  =    -1.95019994279481 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.95019994279481 + H15 ;
3524637   +   H16  =    -0.14081093001301 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.14081093001301 + H16 ;
3524638   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3524639   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3524640   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3524641   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3524642   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3524643   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3524644   +END;
MPRINT(EM_DIAGRAM):   END;
3524645   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524646   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3524647   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3524648   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3524649   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3524650   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3524651   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3524652   +END;
MPRINT(EM_DIAGRAM):   END;
3524653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524654   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3524655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524656   +
3524657   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3524658   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3524659   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3524660   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3524661   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3524662   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3524663   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3524664   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3524665   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3524666   +end;
MPRINT(EM_DIAGRAM):   end;
3524667   +else do;
MPRINT(EM_DIAGRAM):   else do;
3524668   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3524669   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3524670   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3524671   +   end;
MPRINT(EM_DIAGRAM):   end;
3524672   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3524673   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3524674   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3524675   +   end;
MPRINT(EM_DIAGRAM):   end;
3524676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3524677   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3524678   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3524679   +   end;
MPRINT(EM_DIAGRAM):   end;
3524680   +end;
MPRINT(EM_DIAGRAM):   end;
3524681   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524682   +   P_DepVar1  =    -5.12041461802307 * H11  +    -1.46276822092344 * H12
3524683   +          +     6.89658102773581 * H13  +     4.02913412547398 * H14
3524684   +          +     4.23003628073372 * H15  +    -2.61496632676677 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.12041461802307 * H11 + -1.46276822092344 * H12 +
6.89658102773581 * H13 + 4.02913412547398 * H14 + 4.23003628073372 * H15 + -2.61496632676677 *
H16 ;
3524685   +   P_DepVar1  =    -0.53024067079438 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.53024067079438 + P_DepVar1 ;
3524686   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3524687   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3524688   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3524689   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3524690   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3524691   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3524692   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3524693   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3524694   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3524695   +END;
MPRINT(EM_DIAGRAM):   END;
3524696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524697   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3524698   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3524699   +END;
MPRINT(EM_DIAGRAM):   END;
3524700   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3524701   +   P_DepVar1  =     0.13807339449541;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13807339449541;
3524702   +   P_DepVar0  =     0.86192660550458;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86192660550458;
3524703   +END;
MPRINT(EM_DIAGRAM):   END;
3524704   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3524705   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3524706   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3524707   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3524708   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3524709   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3524710   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3524711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524712   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3524713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524714   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3524715   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3524716   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3524717   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3524718   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3524719   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3524720   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3524721   +END;
MPRINT(EM_DIAGRAM):   END;
3524722   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3524723   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3524724   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3524725   +drop
3524726   +S_MntCard_Games
3524727   +S_MntMagazines
3524728   +S_NumCatalogPurchases
3524729   +S_NumDealsPurchases
3524730   +S_NumWebPurchases
3524731   +S_RANGE_Frq
3524732   +S_RANGE_Recency
3524733   +S_RANGE_average_purchase
3524734   +S_RANGE_campaign_acceptance
3524735   +H11
3524736   +H12
3524737   +H13
3524738   +H14
3524739   +H15
3524740   +H16
3524741   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3524742   +end;
MPRINT(EM_DIAGRAM):   end;
3524743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3524744   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3524745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3524746   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3524747   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3524748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3524749   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3524750   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3524751   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3524752   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3524753   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3524754   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3524755   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3524756   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3524757   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3524758   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3524759   +LENGTH _WARN_ $4
3524760   +      F_DepVar  $ 12
3524761   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3524762   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3524763   +
3524764   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3524765   +
3524766   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3524767   +
3524768   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3524769   +
3524770   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3524771   +
3524772   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3524773   +
3524774   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3524775   +
3524776   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3524777   +
3524778   +      label S_RANGE_campaign_acceptance =
3524779   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3524780   +
3524781   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3524782   +
3524783   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3524784   +
3524785   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3524786   +
3524787   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3524788   +
3524789   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3524790   +
3524791   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3524792   +
3524793   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3524794   +
3524795   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3524796   +
3524797   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3524798   +
3524799   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3524800   +
3524801   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3524802   +
3524803   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3524804   +
3524805   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3524806   +
3524807   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3524808   +
3524809   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3524810   +
3524811   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3524812   +
3524813   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3524814   +
3524815   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3524816   +
3524817   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3524818   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3524819   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3524820   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3524821   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3524822   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3524823   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3524824   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3524825   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3524826   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524827   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524828   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524829   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3524831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524832   +end;
MPRINT(EM_DIAGRAM):   end;
3524833   +else do;
MPRINT(EM_DIAGRAM):   else do;
3524834   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3524835   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3524836   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3524837   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3524838   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3524839   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3524840   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3524841   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3524842   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524843   +         end;
MPRINT(EM_DIAGRAM):   end;
3524844   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3524845   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3524846   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3524847   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524848   +            end;
MPRINT(EM_DIAGRAM):   end;
3524849   +         end;
MPRINT(EM_DIAGRAM):   end;
3524850   +      end;
MPRINT(EM_DIAGRAM):   end;
3524851   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524852   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3524853   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3524854   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524855   +         end;
MPRINT(EM_DIAGRAM):   end;
3524856   +      end;
MPRINT(EM_DIAGRAM):   end;
3524857   +   end;
MPRINT(EM_DIAGRAM):   end;
3524858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3524859   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3524860   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3524861   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524862   +      end;
MPRINT(EM_DIAGRAM):   end;
3524863   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3524864   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3524865   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3524866   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3524867   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3524868   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3524869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3524870   +         end;
MPRINT(EM_DIAGRAM):   end;
3524871   +      end;
MPRINT(EM_DIAGRAM):   end;
3524872   +   end;
MPRINT(EM_DIAGRAM):   end;
3524873   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3524874   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3524875   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3524876   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3524877   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3524878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3524879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524880   +   end;
MPRINT(EM_DIAGRAM):   end;
3524881   +end;
MPRINT(EM_DIAGRAM):   end;
3524882   +
3524883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524884   +*** Checking missing input Interval
3524885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3524886   +
3524887   +IF NMISS(
3524888   +   MntCard_Games ,
3524889   +   MntMagazines ,
3524890   +   NumCatalogPurchases ,
3524891   +   NumDealsPurchases ,
3524892   +   NumWebPurchases ,
3524893   +   RANGE_Frq ,
3524894   +   RANGE_Recency ,
3524895   +   RANGE_average_purchase ,
3524896   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3524897   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3524898   +
3524899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3524900   +END;
MPRINT(EM_DIAGRAM):   END;
3524901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524902   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3524903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524904   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524905   +   S_MntCard_Games  =    -2.30171387441483 +     6.59678810024031 *
3524906   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30171387441483 + 6.59678810024031 * MntCard_Games ;
3524907   +   S_MntMagazines  =    -0.82814802345175 +     17.2657204428733 *
3524908   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82814802345175 + 17.2657204428733 * MntMagazines ;
3524909   +   S_NumCatalogPurchases  =    -3.11539061667747 +     13.4725853077149 *
3524910   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.11539061667747 + 13.4725853077149 *
NumCatalogPurchases ;
3524911   +   S_NumDealsPurchases  =    -1.40831252901562 +       11.09734485836 *
3524912   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.40831252901562 + 11.09734485836 *
NumDealsPurchases ;
3524913   +   S_NumWebPurchases  =    -5.26193475609037 +     12.3101621966132 *
3524914   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.26193475609037 + 12.3101621966132 *
NumWebPurchases ;
3524915   +   S_RANGE_Frq  =    -1.36313563343809 +     4.20172065367058 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36313563343809 + 4.20172065367058 * RANGE_Frq ;
3524916   +   S_RANGE_Recency  =     -1.6722407206178 +     3.35881872932975 *
3524917   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.6722407206178 + 3.35881872932975 * RANGE_Recency ;
3524918   +   S_RANGE_average_purchase  =    -1.03707602763147 +     5.16913442651384 *
3524919   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.03707602763147 + 5.16913442651384 *
RANGE_average_purchase ;
3524920   +   S_RANGE_campaign_acceptance
3524921   +          =    -0.47524608769199 +     5.72642199490601 *
3524922   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47524608769199 + 5.72642199490601 *
RANGE_campaign_acceptance ;
3524923   +END;
MPRINT(EM_DIAGRAM):   END;
3524924   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3524925   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3524926   +   ELSE S_MntCard_Games  =    -2.30171387441483 +     6.59678810024031 *
3524927   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30171387441483 + 6.59678810024031 *
MntCard_Games ;
3524928   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3524929   +   ELSE S_MntMagazines  =    -0.82814802345175 +     17.2657204428733 *
3524930   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82814802345175 + 17.2657204428733 *
MntMagazines ;
3524931   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3524932   +   ELSE S_NumCatalogPurchases
3524933   +          =    -3.11539061667747 +     13.4725853077149 * NumCatalogPurchases
3524934   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.11539061667747 + 13.4725853077149 *
NumCatalogPurchases ;
3524935   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3524936   +   ELSE S_NumDealsPurchases  =    -1.40831252901562 +       11.09734485836 *
3524937   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.40831252901562 + 11.09734485836 *
NumDealsPurchases ;
3524938   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3524939   +   ELSE S_NumWebPurchases  =    -5.26193475609037 +     12.3101621966132 *
3524940   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.26193475609037 + 12.3101621966132 *
NumWebPurchases ;
3524941   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3524942   +   ELSE S_RANGE_Frq  =    -1.36313563343809 +     4.20172065367058 * RANGE_Frq
3524943   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36313563343809 + 4.20172065367058 * RANGE_Frq ;
3524944   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3524945   +   ELSE S_RANGE_Recency  =     -1.6722407206178 +     3.35881872932975 *
3524946   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.6722407206178 + 3.35881872932975 *
RANGE_Recency ;
3524947   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3524948   +   ELSE S_RANGE_average_purchase
3524949   +          =    -1.03707602763147 +     5.16913442651384 *
3524950   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.03707602763147 + 5.16913442651384 *
RANGE_average_purchase ;
3524951   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3524952   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3524953   +   ELSE S_RANGE_campaign_acceptance
3524954   +          =    -0.47524608769199 +     5.72642199490601 *
3524955   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47524608769199 + 5.72642199490601
* RANGE_campaign_acceptance ;
3524956   +END;
MPRINT(EM_DIAGRAM):   END;
3524957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524958   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3524959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524961   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3524962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3524963   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3524964   +   H11  =    -0.04644589501161 * S_MntCard_Games  +     0.38841767451054 *
3524965   +        S_MntMagazines  +     0.09483209428084 * S_NumCatalogPurchases
3524966   +          +     0.41417766322767 * S_NumDealsPurchases
3524967   +          +    -0.51421142262442 * S_NumWebPurchases
3524968   +          +    -0.13119900071292 * S_RANGE_Frq  +    -0.27637390592066 *
3524969   +        S_RANGE_Recency  +     0.00134838153399 * S_RANGE_average_purchase
3524970   +          +     0.16187087872634 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.04644589501161 * S_MntCard_Games + 0.38841767451054 *
S_MntMagazines + 0.09483209428084 * S_NumCatalogPurchases + 0.41417766322767 *
S_NumDealsPurchases + -0.51421142262442 * S_NumWebPurchases + -0.13119900071292 * S_RANGE_Frq
+ -0.27637390592066 * S_RANGE_Recency + 0.00134838153399 * S_RANGE_average_purchase +
0.16187087872634 * S_RANGE_campaign_acceptance ;
3524971   +   H12  =    -3.78062409164022 * S_MntCard_Games  +    -0.02010310526909 *
3524972   +        S_MntMagazines  +    -0.63029090091824 * S_NumCatalogPurchases
3524973   +          +    -2.39334542599414 * S_NumDealsPurchases
3524974   +          +     1.24154331579333 * S_NumWebPurchases
3524975   +          +     1.79986429711606 * S_RANGE_Frq  +     2.15987408346789 *
3524976   +        S_RANGE_Recency  +    -1.40943688678965 * S_RANGE_average_purchase
3524977   +          +    -2.50301300797686 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = -3.78062409164022 * S_MntCard_Games + -0.02010310526909 *
S_MntMagazines + -0.63029090091824 * S_NumCatalogPurchases + -2.39334542599414 *
S_NumDealsPurchases + 1.24154331579333 * S_NumWebPurchases + 1.79986429711606 * S_RANGE_Frq +
2.15987408346789 * S_RANGE_Recency + -1.40943688678965 * S_RANGE_average_purchase +
-2.50301300797686 * S_RANGE_campaign_acceptance ;
3524978   +   H13  =     1.46335536342965 * S_MntCard_Games  +     1.59061529037917 *
3524979   +        S_MntMagazines  +    -1.84823002875403 * S_NumCatalogPurchases
3524980   +          +     0.58553743633423 * S_NumDealsPurchases
3524981   +          +    -1.09927277386748 * S_NumWebPurchases
3524982   +          +    -2.41128488567229 * S_RANGE_Frq  +      0.0594091333452 *
3524983   +        S_RANGE_Recency  +     3.43786518789187 * S_RANGE_average_purchase
3524984   +          +     0.35901522017408 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 1.46335536342965 * S_MntCard_Games + 1.59061529037917 *
S_MntMagazines + -1.84823002875403 * S_NumCatalogPurchases + 0.58553743633423 *
S_NumDealsPurchases + -1.09927277386748 * S_NumWebPurchases + -2.41128488567229 * S_RANGE_Frq
+ 0.0594091333452 * S_RANGE_Recency + 3.43786518789187 * S_RANGE_average_purchase +
0.35901522017408 * S_RANGE_campaign_acceptance ;
3524985   +   H14  =    -0.39056027290126 * S_MntCard_Games  +      -0.743889190862 *
3524986   +        S_MntMagazines  +     -1.5665657201633 * S_NumCatalogPurchases
3524987   +          +    -0.44738342088516 * S_NumDealsPurchases
3524988   +          +    -1.31545130579834 * S_NumWebPurchases
3524989   +          +     0.81787918423009 * S_RANGE_Frq  +      1.6577030285632 *
3524990   +        S_RANGE_Recency  +    -2.93336536006899 * S_RANGE_average_purchase
3524991   +          +    -0.78132003589189 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.39056027290126 * S_MntCard_Games + -0.743889190862 *
S_MntMagazines + -1.5665657201633 * S_NumCatalogPurchases + -0.44738342088516 *
S_NumDealsPurchases + -1.31545130579834 * S_NumWebPurchases + 0.81787918423009 * S_RANGE_Frq +
1.6577030285632 * S_RANGE_Recency + -2.93336536006899 * S_RANGE_average_purchase +
-0.78132003589189 * S_RANGE_campaign_acceptance ;
3524992   +   H15  =     0.13774509830994 * S_MntCard_Games  +    -0.71734525840768 *
3524993   +        S_MntMagazines  +    -1.17523006943148 * S_NumCatalogPurchases
3524994   +          +    -1.08112021748997 * S_NumDealsPurchases
3524995   +          +     0.56591097128937 * S_NumWebPurchases
3524996   +          +     1.08377319960521 * S_RANGE_Frq  +     1.20971078467626 *
3524997   +        S_RANGE_Recency  +     0.35344170548682 * S_RANGE_average_purchase
3524998   +          +    -0.35831151741376 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 0.13774509830994 * S_MntCard_Games + -0.71734525840768 *
S_MntMagazines + -1.17523006943148 * S_NumCatalogPurchases + -1.08112021748997 *
S_NumDealsPurchases + 0.56591097128937 * S_NumWebPurchases + 1.08377319960521 * S_RANGE_Frq +
1.20971078467626 * S_RANGE_Recency + 0.35344170548682 * S_RANGE_average_purchase +
-0.35831151741376 * S_RANGE_campaign_acceptance ;
3524999   +   H16  =     -0.8574871272339 * S_MntCard_Games  +     0.42371407926191 *
3525000   +        S_MntMagazines  +    -0.68738792993754 * S_NumCatalogPurchases
3525001   +          +    -0.37074373540756 * S_NumDealsPurchases
3525002   +          +    -1.23233752085735 * S_NumWebPurchases
3525003   +          +    -0.30323697591942 * S_RANGE_Frq  +     1.61988577197901 *
3525004   +        S_RANGE_Recency  +     0.19394344028586 * S_RANGE_average_purchase
3525005   +          +    -0.94435824101473 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.8574871272339 * S_MntCard_Games + 0.42371407926191 *
S_MntMagazines + -0.68738792993754 * S_NumCatalogPurchases + -0.37074373540756 *
S_NumDealsPurchases + -1.23233752085735 * S_NumWebPurchases + -0.30323697591942 * S_RANGE_Frq
+ 1.61988577197901 * S_RANGE_Recency + 0.19394344028586 * S_RANGE_average_purchase +
-0.94435824101473 * S_RANGE_campaign_acceptance ;
3525006   +   H11  = H11  +     1.08704357177715 * Marital_StatusDivorced
3525007   +          +     -0.0768751218938 * Marital_StatusMarried
3525008   +          +     0.06536236969998 * Marital_StatusSingle
3525009   +          +    -1.11325785287586 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.08704357177715 * Marital_StatusDivorced + -0.0768751218938
* Marital_StatusMarried + 0.06536236969998 * Marital_StatusSingle + -1.11325785287586 *
Marital_StatusTogether ;
3525010   +   H12  = H12  +     0.88652773033359 * Marital_StatusDivorced
3525011   +          +    -0.29982234646099 * Marital_StatusMarried
3525012   +          +     0.45967188395375 * Marital_StatusSingle
3525013   +          +    -1.11986176948431 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.88652773033359 * Marital_StatusDivorced +
-0.29982234646099 * Marital_StatusMarried + 0.45967188395375 * Marital_StatusSingle +
-1.11986176948431 * Marital_StatusTogether ;
3525014   +   H13  = H13  +     0.54023225512804 * Marital_StatusDivorced
3525015   +          +      2.2152655052305 * Marital_StatusMarried
3525016   +          +    -3.07683908464896 * Marital_StatusSingle
3525017   +          +     3.11296249778919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.54023225512804 * Marital_StatusDivorced + 2.2152655052305
* Marital_StatusMarried + -3.07683908464896 * Marital_StatusSingle + 3.11296249778919 *
Marital_StatusTogether ;
3525018   +   H14  = H14  +      0.5275524723164 * Marital_StatusDivorced
3525019   +          +    -0.14053802777722 * Marital_StatusMarried
3525020   +          +     0.73519582367294 * Marital_StatusSingle
3525021   +          +    -1.22539737445946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.5275524723164 * Marital_StatusDivorced + -0.14053802777722
* Marital_StatusMarried + 0.73519582367294 * Marital_StatusSingle + -1.22539737445946 *
Marital_StatusTogether ;
3525022   +   H15  = H15  +    -0.99324843338399 * Marital_StatusDivorced
3525023   +          +     0.75363464283399 * Marital_StatusMarried
3525024   +          +    -1.12795259588548 * Marital_StatusSingle
3525025   +          +     2.24455240846882 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.99324843338399 * Marital_StatusDivorced +
0.75363464283399 * Marital_StatusMarried + -1.12795259588548 * Marital_StatusSingle +
2.24455240846882 * Marital_StatusTogether ;
3525026   +   H16  = H16  +     0.74390680849273 * Marital_StatusDivorced
3525027   +          +     0.52117786773962 * Marital_StatusMarried
3525028   +          +    -1.08876939431067 * Marital_StatusSingle
3525029   +          +     0.18249437357131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.74390680849273 * Marital_StatusDivorced + 0.52117786773962
* Marital_StatusMarried + -1.08876939431067 * Marital_StatusSingle + 0.18249437357131 *
Marital_StatusTogether ;
3525030   +   H11  =     -0.9126272026716 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.9126272026716 + H11 ;
3525031   +   H12  =     3.24717316172106 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.24717316172106 + H12 ;
3525032   +   H13  =     0.57149091156115 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.57149091156115 + H13 ;
3525033   +   H14  =     0.04010845885345 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.04010845885345 + H14 ;
3525034   +   H15  =     3.27470695030779 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 3.27470695030779 + H15 ;
3525035   +   H16  =     1.89495051877192 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.89495051877192 + H16 ;
3525036   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3525037   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3525038   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3525039   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3525040   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3525041   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3525042   +END;
MPRINT(EM_DIAGRAM):   END;
3525043   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525044   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3525045   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3525046   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3525047   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3525048   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3525049   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3525050   +END;
MPRINT(EM_DIAGRAM):   END;
3525051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525052   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3525053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525054   +
3525055   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3525056   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3525057   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525058   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3525059   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3525060   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3525061   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3525062   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525063   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525064   +end;
MPRINT(EM_DIAGRAM):   end;
3525065   +else do;
MPRINT(EM_DIAGRAM):   else do;
3525066   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3525067   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3525068   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3525069   +   end;
MPRINT(EM_DIAGRAM):   end;
3525070   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3525071   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3525072   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3525073   +   end;
MPRINT(EM_DIAGRAM):   end;
3525074   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3525075   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525076   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525077   +   end;
MPRINT(EM_DIAGRAM):   end;
3525078   +end;
MPRINT(EM_DIAGRAM):   end;
3525079   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525080   +   P_DepVar1  =     10.8610637772811 * H11  +    -4.46713442932405 * H12
3525081   +          +    -3.38540919137405 * H13  +    -5.12319288675307 * H14
3525082   +          +     5.89809980727878 * H15  +    -6.22869280042422 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 10.8610637772811 * H11 + -4.46713442932405 * H12 +
-3.38540919137405 * H13 + -5.12319288675307 * H14 + 5.89809980727878 * H15 + -6.22869280042422
* H16 ;
3525083   +   P_DepVar1  =    -5.71439477041192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.71439477041192 + P_DepVar1 ;
3525084   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3525085   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3525086   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3525087   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3525088   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3525089   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3525090   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3525091   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3525092   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3525093   +END;
MPRINT(EM_DIAGRAM):   END;
3525094   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525095   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3525096   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3525097   +END;
MPRINT(EM_DIAGRAM):   END;
3525098   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3525099   +   P_DepVar1  =      0.1375227686703;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.1375227686703;
3525100   +   P_DepVar0  =     0.86247723132969;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86247723132969;
3525101   +END;
MPRINT(EM_DIAGRAM):   END;
3525102   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3525103   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3525104   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3525105   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3525106   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3525107   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3525108   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3525109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525110   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3525111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525112   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3525113   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3525114   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3525115   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3525116   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3525117   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3525118   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3525119   +END;
MPRINT(EM_DIAGRAM):   END;
3525120   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525121   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3525122   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525123   +drop
3525124   +S_MntCard_Games
3525125   +S_MntMagazines
3525126   +S_NumCatalogPurchases
3525127   +S_NumDealsPurchases
3525128   +S_NumWebPurchases
3525129   +S_RANGE_Frq
3525130   +S_RANGE_Recency
3525131   +S_RANGE_average_purchase
3525132   +S_RANGE_campaign_acceptance
3525133   +H11
3525134   +H12
3525135   +H13
3525136   +H14
3525137   +H15
3525138   +H16
3525139   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3525140   +end;
MPRINT(EM_DIAGRAM):   end;
3525141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525142   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3525143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525144   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3525145   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3525146   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525147   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3525148   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525149   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3525150   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3525151   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3525152   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3525153   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3525154   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3525155   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3525156   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3525157   +LENGTH _WARN_ $4
3525158   +      F_DepVar  $ 12
3525159   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3525160   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3525161   +
3525162   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3525163   +
3525164   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3525165   +
3525166   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3525167   +
3525168   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3525169   +
3525170   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3525171   +
3525172   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3525173   +
3525174   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3525175   +
3525176   +      label S_RANGE_campaign_acceptance =
3525177   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3525178   +
3525179   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3525180   +
3525181   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3525182   +
3525183   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3525184   +
3525185   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3525186   +
3525187   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3525188   +
3525189   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3525190   +
3525191   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3525192   +
3525193   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3525194   +
3525195   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3525196   +
3525197   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3525198   +
3525199   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3525200   +
3525201   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525202   +
3525203   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3525204   +
3525205   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3525206   +
3525207   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3525208   +
3525209   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3525210   +
3525211   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3525212   +
3525213   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3525214   +
3525215   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3525216   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3525217   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3525218   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3525219   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3525220   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3525221   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3525222   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3525223   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3525224   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3525225   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3525226   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3525227   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3525228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3525229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525230   +end;
MPRINT(EM_DIAGRAM):   end;
3525231   +else do;
MPRINT(EM_DIAGRAM):   else do;
3525232   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3525233   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3525234   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3525235   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3525236   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3525237   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3525238   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3525239   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3525240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525241   +         end;
MPRINT(EM_DIAGRAM):   end;
3525242   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3525243   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3525244   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3525245   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525246   +            end;
MPRINT(EM_DIAGRAM):   end;
3525247   +         end;
MPRINT(EM_DIAGRAM):   end;
3525248   +      end;
MPRINT(EM_DIAGRAM):   end;
3525249   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3525250   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3525251   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3525252   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525253   +         end;
MPRINT(EM_DIAGRAM):   end;
3525254   +      end;
MPRINT(EM_DIAGRAM):   end;
3525255   +   end;
MPRINT(EM_DIAGRAM):   end;
3525256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3525257   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3525258   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3525259   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525260   +      end;
MPRINT(EM_DIAGRAM):   end;
3525261   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3525262   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3525263   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3525264   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3525265   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3525266   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3525267   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525268   +         end;
MPRINT(EM_DIAGRAM):   end;
3525269   +      end;
MPRINT(EM_DIAGRAM):   end;
3525270   +   end;
MPRINT(EM_DIAGRAM):   end;
3525271   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3525272   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3525273   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3525274   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3525275   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3525276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3525277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525278   +   end;
MPRINT(EM_DIAGRAM):   end;
3525279   +end;
MPRINT(EM_DIAGRAM):   end;
3525280   +
3525281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525282   +*** Checking missing input Interval
3525283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3525284   +
3525285   +IF NMISS(
3525286   +   MntCard_Games ,
3525287   +   MntMagazines ,
3525288   +   NumCatalogPurchases ,
3525289   +   NumDealsPurchases ,
3525290   +   NumWebPurchases ,
3525291   +   RANGE_Frq ,
3525292   +   RANGE_Recency ,
3525293   +   RANGE_average_purchase ,
3525294   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3525295   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3525296   +
3525297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525298   +END;
MPRINT(EM_DIAGRAM):   END;
3525299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525300   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3525301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525303   +   S_MntCard_Games  =    -2.32279906878901 +     6.62332649138705 *
3525304   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.32279906878901 + 6.62332649138705 * MntCard_Games ;
3525305   +   S_MntMagazines  =    -0.82731873310476 +     17.0756602754173 *
3525306   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82731873310476 + 17.0756602754173 * MntMagazines ;
3525307   +   S_NumCatalogPurchases  =     -3.1218546894974 +     13.4378247571044 *
3525308   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.1218546894974 + 13.4378247571044 *
NumCatalogPurchases ;
3525309   +   S_NumDealsPurchases  =    -1.41081041431666 +     11.1561319689755 *
3525310   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41081041431666 + 11.1561319689755 *
NumDealsPurchases ;
3525311   +   S_NumWebPurchases  =    -5.22181714483559 +     12.2579433715915 *
3525312   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22181714483559 + 12.2579433715915 *
NumWebPurchases ;
3525313   +   S_RANGE_Frq  =    -1.36786783381954 +     4.21359858057803 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36786783381954 + 4.21359858057803 * RANGE_Frq ;
3525314   +   S_RANGE_Recency  =    -1.67632659231905 +     3.37275265167254 *
3525315   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67632659231905 + 3.37275265167254 * RANGE_Recency ;
3525316   +   S_RANGE_average_purchase  =    -1.04115264597413 +     5.12893844438116 *
3525317   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04115264597413 + 5.12893844438116 *
RANGE_average_purchase ;
3525318   +   S_RANGE_campaign_acceptance
3525319   +          =    -0.47858283955043 +     5.73254751876241 *
3525320   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47858283955043 + 5.73254751876241 *
RANGE_campaign_acceptance ;
3525321   +END;
MPRINT(EM_DIAGRAM):   END;
3525322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525323   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3525324   +   ELSE S_MntCard_Games  =    -2.32279906878901 +     6.62332649138705 *
3525325   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.32279906878901 + 6.62332649138705 *
MntCard_Games ;
3525326   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3525327   +   ELSE S_MntMagazines  =    -0.82731873310476 +     17.0756602754173 *
3525328   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82731873310476 + 17.0756602754173 *
MntMagazines ;
3525329   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3525330   +   ELSE S_NumCatalogPurchases
3525331   +          =     -3.1218546894974 +     13.4378247571044 * NumCatalogPurchases
3525332   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.1218546894974 + 13.4378247571044 *
NumCatalogPurchases ;
3525333   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3525334   +   ELSE S_NumDealsPurchases  =    -1.41081041431666 +     11.1561319689755 *
3525335   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41081041431666 + 11.1561319689755 *
NumDealsPurchases ;
3525336   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3525337   +   ELSE S_NumWebPurchases  =    -5.22181714483559 +     12.2579433715915 *
3525338   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22181714483559 + 12.2579433715915 *
NumWebPurchases ;
3525339   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3525340   +   ELSE S_RANGE_Frq  =    -1.36786783381954 +     4.21359858057803 * RANGE_Frq
3525341   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36786783381954 + 4.21359858057803 * RANGE_Frq ;
3525342   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3525343   +   ELSE S_RANGE_Recency  =    -1.67632659231905 +     3.37275265167254 *
3525344   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67632659231905 + 3.37275265167254 *
RANGE_Recency ;
3525345   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3525346   +   ELSE S_RANGE_average_purchase
3525347   +          =    -1.04115264597413 +     5.12893844438116 *
3525348   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04115264597413 + 5.12893844438116 *
RANGE_average_purchase ;
3525349   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3525350   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3525351   +   ELSE S_RANGE_campaign_acceptance
3525352   +          =    -0.47858283955043 +     5.73254751876241 *
3525353   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47858283955043 + 5.73254751876241
* RANGE_campaign_acceptance ;
3525354   +END;
MPRINT(EM_DIAGRAM):   END;
3525355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525356   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3525357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525359   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3525360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525362   +   H11  =     0.90308606344808 * S_MntCard_Games  +    -0.41783063306108 *
3525363   +        S_MntMagazines  +     0.88108937524217 * S_NumCatalogPurchases
3525364   +          +      0.0583326875932 * S_NumDealsPurchases
3525365   +          +     0.67249364541071 * S_NumWebPurchases
3525366   +          +     0.58588276447015 * S_RANGE_Frq  +    -1.81299058934686 *
3525367   +        S_RANGE_Recency  +    -0.83040457193839 * S_RANGE_average_purchase
3525368   +          +     0.92461513992318 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.90308606344808 * S_MntCard_Games + -0.41783063306108 *
S_MntMagazines + 0.88108937524217 * S_NumCatalogPurchases + 0.0583326875932 *
S_NumDealsPurchases + 0.67249364541071 * S_NumWebPurchases + 0.58588276447015 * S_RANGE_Frq +
-1.81299058934686 * S_RANGE_Recency + -0.83040457193839 * S_RANGE_average_purchase +
0.92461513992318 * S_RANGE_campaign_acceptance ;
3525369   +   H12  =      1.3717237392538 * S_MntCard_Games  +    -4.43151391584211 *
3525370   +        S_MntMagazines  +     3.10866693054077 * S_NumCatalogPurchases
3525371   +          +    -3.93022087696485 * S_NumDealsPurchases
3525372   +          +    -1.90498923826715 * S_NumWebPurchases
3525373   +          +    -0.06825560586065 * S_RANGE_Frq  +      9.0709366044142 *
3525374   +        S_RANGE_Recency  +     6.91564747031537 * S_RANGE_average_purchase
3525375   +          +     3.21397143435247 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.3717237392538 * S_MntCard_Games + -4.43151391584211 *
S_MntMagazines + 3.10866693054077 * S_NumCatalogPurchases + -3.93022087696485 *
S_NumDealsPurchases + -1.90498923826715 * S_NumWebPurchases + -0.06825560586065 * S_RANGE_Frq
+ 9.0709366044142 * S_RANGE_Recency + 6.91564747031537 * S_RANGE_average_purchase +
3.21397143435247 * S_RANGE_campaign_acceptance ;
3525376   +   H13  =    -0.13508767593582 * S_MntCard_Games  +      -0.197653093595 *
3525377   +        S_MntMagazines  +     0.04802070926948 * S_NumCatalogPurchases
3525378   +          +    -1.01450029533041 * S_NumDealsPurchases
3525379   +          +     0.57096134542819 * S_NumWebPurchases
3525380   +          +     0.82620793867875 * S_RANGE_Frq  +      0.6861035819392 *
3525381   +        S_RANGE_Recency  +     0.23341214371026 * S_RANGE_average_purchase
3525382   +          +    -0.15117188374416 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.13508767593582 * S_MntCard_Games + -0.197653093595 *
S_MntMagazines + 0.04802070926948 * S_NumCatalogPurchases + -1.01450029533041 *
S_NumDealsPurchases + 0.57096134542819 * S_NumWebPurchases + 0.82620793867875 * S_RANGE_Frq +
0.6861035819392 * S_RANGE_Recency + 0.23341214371026 * S_RANGE_average_purchase +
-0.15117188374416 * S_RANGE_campaign_acceptance ;
3525383   +   H14  =    -6.43033245199374 * S_MntCard_Games  +    -0.34524462590446 *
3525384   +        S_MntMagazines  +    -2.56408497154861 * S_NumCatalogPurchases
3525385   +          +    -2.66104839530252 * S_NumDealsPurchases
3525386   +          +    -5.32765149687484 * S_NumWebPurchases
3525387   +          +      4.2957629278098 * S_RANGE_Frq  +    -7.53526508665235 *
3525388   +        S_RANGE_Recency  +    -1.39779483789957 * S_RANGE_average_purchase
3525389   +          +     0.15235796883224 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -6.43033245199374 * S_MntCard_Games + -0.34524462590446 *
S_MntMagazines + -2.56408497154861 * S_NumCatalogPurchases + -2.66104839530252 *
S_NumDealsPurchases + -5.32765149687484 * S_NumWebPurchases + 4.2957629278098 * S_RANGE_Frq +
-7.53526508665235 * S_RANGE_Recency + -1.39779483789957 * S_RANGE_average_purchase +
0.15235796883224 * S_RANGE_campaign_acceptance ;
3525390   +   H15  =     0.72001867151525 * S_MntCard_Games  +     0.32001917374161 *
3525391   +        S_MntMagazines  +    -0.72471735363852 * S_NumCatalogPurchases
3525392   +          +    -1.11991454170357 * S_NumDealsPurchases
3525393   +          +    -2.18114657300039 * S_NumWebPurchases
3525394   +          +    -2.32013915523081 * S_RANGE_Frq  +     2.29828305428477 *
3525395   +        S_RANGE_Recency  +    -0.90641320854235 * S_RANGE_average_purchase
3525396   +          +    -1.18921725836181 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 0.72001867151525 * S_MntCard_Games + 0.32001917374161 *
S_MntMagazines + -0.72471735363852 * S_NumCatalogPurchases + -1.11991454170357 *
S_NumDealsPurchases + -2.18114657300039 * S_NumWebPurchases + -2.32013915523081 * S_RANGE_Frq
+ 2.29828305428477 * S_RANGE_Recency + -0.90641320854235 * S_RANGE_average_purchase +
-1.18921725836181 * S_RANGE_campaign_acceptance ;
3525397   +   H16  =     -0.3393722883508 * S_MntCard_Games  +    -0.28569816171282 *
3525398   +        S_MntMagazines  +    -0.24064164183556 * S_NumCatalogPurchases
3525399   +          +    -0.36961782311406 * S_NumDealsPurchases
3525400   +          +     0.03425065016242 * S_NumWebPurchases
3525401   +          +     0.11714139803176 * S_RANGE_Frq  +     0.77620409686838 *
3525402   +        S_RANGE_Recency  +    -0.18917790071362 * S_RANGE_average_purchase
3525403   +          +    -0.39575779242584 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.3393722883508 * S_MntCard_Games + -0.28569816171282 *
S_MntMagazines + -0.24064164183556 * S_NumCatalogPurchases + -0.36961782311406 *
S_NumDealsPurchases + 0.03425065016242 * S_NumWebPurchases + 0.11714139803176 * S_RANGE_Frq +
0.77620409686838 * S_RANGE_Recency + -0.18917790071362 * S_RANGE_average_purchase +
-0.39575779242584 * S_RANGE_campaign_acceptance ;
3525404   +   H11  = H11  +    -0.20652968296513 * Marital_StatusDivorced
3525405   +          +    -1.11111198757302 * Marital_StatusMarried
3525406   +          +     1.32414115478118 * Marital_StatusSingle
3525407   +          +    -2.09886878305883 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.20652968296513 * Marital_StatusDivorced +
-1.11111198757302 * Marital_StatusMarried + 1.32414115478118 * Marital_StatusSingle +
-2.09886878305883 * Marital_StatusTogether ;
3525408   +   H12  = H12  +     2.42942497651431 * Marital_StatusDivorced
3525409   +          +    -5.87727455193093 * Marital_StatusMarried
3525410   +          +    -0.96209634017337 * Marital_StatusSingle
3525411   +          +    -0.93380990228344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 2.42942497651431 * Marital_StatusDivorced +
-5.87727455193093 * Marital_StatusMarried + -0.96209634017337 * Marital_StatusSingle +
-0.93380990228344 * Marital_StatusTogether ;
3525412   +   H13  = H13  +    -1.89385547216534 * Marital_StatusDivorced
3525413   +          +     0.61312708787078 * Marital_StatusMarried
3525414   +          +    -3.08563596269091 * Marital_StatusSingle
3525415   +          +     0.61899570831397 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.89385547216534 * Marital_StatusDivorced +
0.61312708787078 * Marital_StatusMarried + -3.08563596269091 * Marital_StatusSingle +
0.61899570831397 * Marital_StatusTogether ;
3525416   +   H14  = H14  +    -0.07143372129563 * Marital_StatusDivorced
3525417   +          +     4.89231388905064 * Marital_StatusMarried
3525418   +          +     2.37375990950479 * Marital_StatusSingle
3525419   +          +     2.31581863699935 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07143372129563 * Marital_StatusDivorced +
4.89231388905064 * Marital_StatusMarried + 2.37375990950479 * Marital_StatusSingle +
2.31581863699935 * Marital_StatusTogether ;
3525420   +   H15  = H15  +     1.17777032769802 * Marital_StatusDivorced
3525421   +          +      1.9915232282624 * Marital_StatusMarried
3525422   +          +     3.52150132132861 * Marital_StatusSingle
3525423   +          +     0.52402089288692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.17777032769802 * Marital_StatusDivorced + 1.9915232282624
* Marital_StatusMarried + 3.52150132132861 * Marital_StatusSingle + 0.52402089288692 *
Marital_StatusTogether ;
3525424   +   H16  = H16  +     0.16824273752517 * Marital_StatusDivorced
3525425   +          +    -0.32046507923907 * Marital_StatusMarried
3525426   +          +     0.31697818979086 * Marital_StatusSingle
3525427   +          +     -0.1581042110965 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.16824273752517 * Marital_StatusDivorced +
-0.32046507923907 * Marital_StatusMarried + 0.31697818979086 * Marital_StatusSingle +
-0.1581042110965 * Marital_StatusTogether ;
3525428   +   H11  =    -1.86652390486176 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.86652390486176 + H11 ;
3525429   +   H12  =    -0.22219697907812 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.22219697907812 + H12 ;
3525430   +   H13  =    -0.67507147700296 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.67507147700296 + H13 ;
3525431   +   H14  =    -0.81908678847055 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81908678847055 + H14 ;
3525432   +   H15  =     1.22865900563723 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.22865900563723 + H15 ;
3525433   +   H16  =     0.63816187667123 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.63816187667123 + H16 ;
3525434   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3525435   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3525436   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3525437   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3525438   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3525439   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3525440   +END;
MPRINT(EM_DIAGRAM):   END;
3525441   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525442   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3525443   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3525444   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3525445   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3525446   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3525447   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3525448   +END;
MPRINT(EM_DIAGRAM):   END;
3525449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525450   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3525451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525452   +
3525453   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3525454   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3525455   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525456   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3525457   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3525458   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3525459   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3525460   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525461   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525462   +end;
MPRINT(EM_DIAGRAM):   end;
3525463   +else do;
MPRINT(EM_DIAGRAM):   else do;
3525464   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3525465   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3525466   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3525467   +   end;
MPRINT(EM_DIAGRAM):   end;
3525468   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3525469   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3525470   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3525471   +   end;
MPRINT(EM_DIAGRAM):   end;
3525472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3525473   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525474   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525475   +   end;
MPRINT(EM_DIAGRAM):   end;
3525476   +end;
MPRINT(EM_DIAGRAM):   end;
3525477   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525478   +   P_DepVar1  =     5.06998080171852 * H11  +     4.59352360672156 * H12
3525479   +          +    -6.31432090172318 * H13  +    -2.77345017045474 * H14
3525480   +          +    -3.70719121211464 * H15  +    -9.48006576782259 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.06998080171852 * H11 + 4.59352360672156 * H12 +
-6.31432090172318 * H13 + -2.77345017045474 * H14 + -3.70719121211464 * H15 +
-9.48006576782259 * H16 ;
3525481   +   P_DepVar1  =    -5.49922043785989 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.49922043785989 + P_DepVar1 ;
3525482   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3525483   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3525484   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3525485   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3525486   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3525487   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3525488   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3525489   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3525490   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3525491   +END;
MPRINT(EM_DIAGRAM):   END;
3525492   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525493   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3525494   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3525495   +END;
MPRINT(EM_DIAGRAM):   END;
3525496   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3525497   +   P_DepVar1  =     0.13712984054669;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13712984054669;
3525498   +   P_DepVar0  =      0.8628701594533;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8628701594533;
3525499   +END;
MPRINT(EM_DIAGRAM):   END;
3525500   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3525501   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3525502   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3525503   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3525504   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3525505   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3525506   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3525507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525508   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3525509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525510   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3525511   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3525512   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3525513   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3525514   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3525515   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3525516   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3525517   +END;
MPRINT(EM_DIAGRAM):   END;
3525518   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525519   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3525520   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525521   +drop
3525522   +S_MntCard_Games
3525523   +S_MntMagazines
3525524   +S_NumCatalogPurchases
3525525   +S_NumDealsPurchases
3525526   +S_NumWebPurchases
3525527   +S_RANGE_Frq
3525528   +S_RANGE_Recency
3525529   +S_RANGE_average_purchase
3525530   +S_RANGE_campaign_acceptance
3525531   +H11
3525532   +H12
3525533   +H13
3525534   +H14
3525535   +H15
3525536   +H16
3525537   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3525538   +end;
MPRINT(EM_DIAGRAM):   end;
3525539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525540   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3525541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525542   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3525543   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3525544   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525545   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3525546   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525547   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3525548   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3525549   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3525550   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3525551   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3525552   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3525553   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3525554   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3525555   +LENGTH _WARN_ $4
3525556   +      F_DepVar  $ 12
3525557   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3525558   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3525559   +
3525560   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3525561   +
3525562   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3525563   +
3525564   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3525565   +
3525566   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3525567   +
3525568   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3525569   +
3525570   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3525571   +
3525572   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3525573   +
3525574   +      label S_RANGE_campaign_acceptance =
3525575   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3525576   +
3525577   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3525578   +
3525579   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3525580   +
3525581   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3525582   +
3525583   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3525584   +
3525585   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3525586   +
3525587   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3525588   +
3525589   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3525590   +
3525591   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3525592   +
3525593   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3525594   +
3525595   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3525596   +
3525597   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3525598   +
3525599   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525600   +
3525601   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3525602   +
3525603   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3525604   +
3525605   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3525606   +
3525607   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3525608   +
3525609   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3525610   +
3525611   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3525612   +
3525613   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3525614   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3525615   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3525616   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3525617   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3525618   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3525619   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3525620   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3525621   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3525622   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3525623   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3525624   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3525625   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3525626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3525627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525628   +end;
MPRINT(EM_DIAGRAM):   end;
3525629   +else do;
MPRINT(EM_DIAGRAM):   else do;
3525630   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3525631   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3525632   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3525633   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3525634   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3525635   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3525636   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3525637   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3525638   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525639   +         end;
MPRINT(EM_DIAGRAM):   end;
3525640   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3525641   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3525642   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3525643   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525644   +            end;
MPRINT(EM_DIAGRAM):   end;
3525645   +         end;
MPRINT(EM_DIAGRAM):   end;
3525646   +      end;
MPRINT(EM_DIAGRAM):   end;
3525647   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3525648   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3525649   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3525650   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525651   +         end;
MPRINT(EM_DIAGRAM):   end;
3525652   +      end;
MPRINT(EM_DIAGRAM):   end;
3525653   +   end;
MPRINT(EM_DIAGRAM):   end;
3525654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3525655   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3525656   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3525657   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525658   +      end;
MPRINT(EM_DIAGRAM):   end;
3525659   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3525660   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3525661   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3525662   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3525663   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3525664   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3525665   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3525666   +         end;
MPRINT(EM_DIAGRAM):   end;
3525667   +      end;
MPRINT(EM_DIAGRAM):   end;
3525668   +   end;
MPRINT(EM_DIAGRAM):   end;
3525669   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3525670   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3525671   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3525672   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3525673   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3525674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3525675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525676   +   end;
MPRINT(EM_DIAGRAM):   end;
3525677   +end;
MPRINT(EM_DIAGRAM):   end;
3525678   +
3525679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525680   +*** Checking missing input Interval
3525681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3525682   +
3525683   +IF NMISS(
3525684   +   MntCard_Games ,
3525685   +   MntMagazines ,
3525686   +   NumCatalogPurchases ,
3525687   +   NumDealsPurchases ,
3525688   +   NumWebPurchases ,
3525689   +   RANGE_Frq ,
3525690   +   RANGE_Recency ,
3525691   +   RANGE_average_purchase ,
3525692   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3525693   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3525694   +
3525695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3525696   +END;
MPRINT(EM_DIAGRAM):   END;
3525697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525698   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3525699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525700   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525701   +   S_MntCard_Games  =    -2.33786760593048 +     6.69094204609016 *
3525702   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.33786760593048 + 6.69094204609016 * MntCard_Games ;
3525703   +   S_MntMagazines  =    -0.84666213245305 +     17.8674725682059 *
3525704   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84666213245305 + 17.8674725682059 * MntMagazines ;
3525705   +   S_NumCatalogPurchases  =    -3.10013914151801 +     13.3800091431702 *
3525706   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.10013914151801 + 13.3800091431702 *
NumCatalogPurchases ;
3525707   +   S_NumDealsPurchases  =    -1.41437396056537 +     11.2342978115416 *
3525708   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41437396056537 + 11.2342978115416 *
NumDealsPurchases ;
3525709   +   S_NumWebPurchases  =    -5.22272050983417 +      12.249884920774 *
3525710   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.22272050983417 + 12.249884920774 *
NumWebPurchases ;
3525711   +   S_RANGE_Frq  =    -1.36914014769379 +     4.20359474524006 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36914014769379 + 4.20359474524006 * RANGE_Frq ;
3525712   +   S_RANGE_Recency  =    -1.66063435637006 +     3.34542339428733 *
3525713   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.66063435637006 + 3.34542339428733 * RANGE_Recency ;
3525714   +   S_RANGE_average_purchase  =    -1.04451508732204 +     5.15021541240414 *
3525715   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04451508732204 + 5.15021541240414 *
RANGE_average_purchase ;
3525716   +   S_RANGE_campaign_acceptance
3525717   +          =    -0.47585598844883 +     5.77806504330198 *
3525718   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.47585598844883 + 5.77806504330198 *
RANGE_campaign_acceptance ;
3525719   +END;
MPRINT(EM_DIAGRAM):   END;
3525720   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525721   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3525722   +   ELSE S_MntCard_Games  =    -2.33786760593048 +     6.69094204609016 *
3525723   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.33786760593048 + 6.69094204609016 *
MntCard_Games ;
3525724   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3525725   +   ELSE S_MntMagazines  =    -0.84666213245305 +     17.8674725682059 *
3525726   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84666213245305 + 17.8674725682059 *
MntMagazines ;
3525727   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3525728   +   ELSE S_NumCatalogPurchases
3525729   +          =    -3.10013914151801 +     13.3800091431702 * NumCatalogPurchases
3525730   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.10013914151801 + 13.3800091431702 *
NumCatalogPurchases ;
3525731   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3525732   +   ELSE S_NumDealsPurchases  =    -1.41437396056537 +     11.2342978115416 *
3525733   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41437396056537 + 11.2342978115416 *
NumDealsPurchases ;
3525734   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3525735   +   ELSE S_NumWebPurchases  =    -5.22272050983417 +      12.249884920774 *
3525736   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.22272050983417 + 12.249884920774 *
NumWebPurchases ;
3525737   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3525738   +   ELSE S_RANGE_Frq  =    -1.36914014769379 +     4.20359474524006 * RANGE_Frq
3525739   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36914014769379 + 4.20359474524006 * RANGE_Frq ;
3525740   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3525741   +   ELSE S_RANGE_Recency  =    -1.66063435637006 +     3.34542339428733 *
3525742   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.66063435637006 + 3.34542339428733 *
RANGE_Recency ;
3525743   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3525744   +   ELSE S_RANGE_average_purchase
3525745   +          =    -1.04451508732204 +     5.15021541240414 *
3525746   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04451508732204 + 5.15021541240414 *
RANGE_average_purchase ;
3525747   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3525748   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3525749   +   ELSE S_RANGE_campaign_acceptance
3525750   +          =    -0.47585598844883 +     5.77806504330198 *
3525751   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.47585598844883 + 5.77806504330198
* RANGE_campaign_acceptance ;
3525752   +END;
MPRINT(EM_DIAGRAM):   END;
3525753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525754   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3525755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525757   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3525758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525759   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525760   +   H11  =     0.76898813164137 * S_MntCard_Games  +    -0.16032646346991 *
3525761   +        S_MntMagazines  +     0.66325345643857 * S_NumCatalogPurchases
3525762   +          +     0.15894542372299 * S_NumDealsPurchases
3525763   +          +     0.61058929168945 * S_NumWebPurchases
3525764   +          +      0.5142937908155 * S_RANGE_Frq  +    -1.23123193133177 *
3525765   +        S_RANGE_Recency  +     -0.7319244160517 * S_RANGE_average_purchase
3525766   +          +     0.72874412646371 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.76898813164137 * S_MntCard_Games + -0.16032646346991 *
S_MntMagazines + 0.66325345643857 * S_NumCatalogPurchases + 0.15894542372299 *
S_NumDealsPurchases + 0.61058929168945 * S_NumWebPurchases + 0.5142937908155 * S_RANGE_Frq +
-1.23123193133177 * S_RANGE_Recency + -0.7319244160517 * S_RANGE_average_purchase +
0.72874412646371 * S_RANGE_campaign_acceptance ;
3525767   +   H12  =     0.50281359481501 * S_MntCard_Games  +    -0.73154447262623 *
3525768   +        S_MntMagazines  +     1.37258888380577 * S_NumCatalogPurchases
3525769   +          +    -2.03191895167214 * S_NumDealsPurchases
3525770   +          +     -0.9480138597536 * S_NumWebPurchases
3525771   +          +    -1.90232641165453 * S_RANGE_Frq  +     4.50454242959668 *
3525772   +        S_RANGE_Recency  +     3.14689802470687 * S_RANGE_average_purchase
3525773   +          +     0.90975760149714 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.50281359481501 * S_MntCard_Games + -0.73154447262623 *
S_MntMagazines + 1.37258888380577 * S_NumCatalogPurchases + -2.03191895167214 *
S_NumDealsPurchases + -0.9480138597536 * S_NumWebPurchases + -1.90232641165453 * S_RANGE_Frq +
4.50454242959668 * S_RANGE_Recency + 3.14689802470687 * S_RANGE_average_purchase +
0.90975760149714 * S_RANGE_campaign_acceptance ;
3525774   +   H13  =    -0.04572597854281 * S_MntCard_Games  +     0.04372992424537 *
3525775   +        S_MntMagazines  +     -0.2558194673146 * S_NumCatalogPurchases
3525776   +          +    -0.54020298079174 * S_NumDealsPurchases
3525777   +          +      0.1443903811728 * S_NumWebPurchases
3525778   +          +     0.21259004987769 * S_RANGE_Frq  +     1.07416199834363 *
3525779   +        S_RANGE_Recency  +      0.2548582317131 * S_RANGE_average_purchase
3525780   +          +    -0.29580404164563 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.04572597854281 * S_MntCard_Games + 0.04372992424537 *
S_MntMagazines + -0.2558194673146 * S_NumCatalogPurchases + -0.54020298079174 *
S_NumDealsPurchases + 0.1443903811728 * S_NumWebPurchases + 0.21259004987769 * S_RANGE_Frq +
1.07416199834363 * S_RANGE_Recency + 0.2548582317131 * S_RANGE_average_purchase +
-0.29580404164563 * S_RANGE_campaign_acceptance ;
3525781   +   H14  =    -3.09361926115241 * S_MntCard_Games  +     0.50367476484986 *
3525782   +        S_MntMagazines  +    -2.00534837877656 * S_NumCatalogPurchases
3525783   +          +    -4.28371676525883 * S_NumDealsPurchases
3525784   +          +    -2.42194135206806 * S_NumWebPurchases
3525785   +          +     0.98960958139385 * S_RANGE_Frq  +    -1.25973464134301 *
3525786   +        S_RANGE_Recency  +    -1.67449915926622 * S_RANGE_average_purchase
3525787   +          +    -1.52632382632171 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -3.09361926115241 * S_MntCard_Games + 0.50367476484986 *
S_MntMagazines + -2.00534837877656 * S_NumCatalogPurchases + -4.28371676525883 *
S_NumDealsPurchases + -2.42194135206806 * S_NumWebPurchases + 0.98960958139385 * S_RANGE_Frq +
-1.25973464134301 * S_RANGE_Recency + -1.67449915926622 * S_RANGE_average_purchase +
-1.52632382632171 * S_RANGE_campaign_acceptance ;
3525788   +   H15  =    -0.05669824052148 * S_MntCard_Games  +     0.18688515673173 *
3525789   +        S_MntMagazines  +      0.7115682471695 * S_NumCatalogPurchases
3525790   +          +    -1.34005613902077 * S_NumDealsPurchases
3525791   +          +     -1.8244223918309 * S_NumWebPurchases
3525792   +          +     -1.2925687066971 * S_RANGE_Frq  +     1.73537126238404 *
3525793   +        S_RANGE_Recency  +    -1.83847728755717 * S_RANGE_average_purchase
3525794   +          +     -1.0260744483329 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -0.05669824052148 * S_MntCard_Games + 0.18688515673173 *
S_MntMagazines + 0.7115682471695 * S_NumCatalogPurchases + -1.34005613902077 *
S_NumDealsPurchases + -1.8244223918309 * S_NumWebPurchases + -1.2925687066971 * S_RANGE_Frq +
1.73537126238404 * S_RANGE_Recency + -1.83847728755717 * S_RANGE_average_purchase +
-1.0260744483329 * S_RANGE_campaign_acceptance ;
3525795   +   H16  =     -0.6255680375209 * S_MntCard_Games  +    -1.00126705732116 *
3525796   +        S_MntMagazines  +    -0.48261390617401 * S_NumCatalogPurchases
3525797   +          +    -0.57209240868565 * S_NumDealsPurchases
3525798   +          +     0.12380336219785 * S_NumWebPurchases
3525799   +          +    -0.09362640067962 * S_RANGE_Frq  +     1.38152242056825 *
3525800   +        S_RANGE_Recency  +    -0.61751514865554 * S_RANGE_average_purchase
3525801   +          +    -0.63460867348168 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.6255680375209 * S_MntCard_Games + -1.00126705732116 *
S_MntMagazines + -0.48261390617401 * S_NumCatalogPurchases + -0.57209240868565 *
S_NumDealsPurchases + 0.12380336219785 * S_NumWebPurchases + -0.09362640067962 * S_RANGE_Frq +
1.38152242056825 * S_RANGE_Recency + -0.61751514865554 * S_RANGE_average_purchase +
-0.63460867348168 * S_RANGE_campaign_acceptance ;
3525802   +   H11  = H11  +    -0.47330657567106 * Marital_StatusDivorced
3525803   +          +    -1.06745895573866 * Marital_StatusMarried
3525804   +          +     0.81685509233804 * Marital_StatusSingle
3525805   +          +    -0.99190475578861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.47330657567106 * Marital_StatusDivorced +
-1.06745895573866 * Marital_StatusMarried + 0.81685509233804 * Marital_StatusSingle +
-0.99190475578861 * Marital_StatusTogether ;
3525806   +   H12  = H12  +      2.7569166430108 * Marital_StatusDivorced
3525807   +          +    -0.95635900826446 * Marital_StatusMarried
3525808   +          +    -0.29557433008229 * Marital_StatusSingle
3525809   +          +     1.41255137333055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 2.7569166430108 * Marital_StatusDivorced + -0.95635900826446
* Marital_StatusMarried + -0.29557433008229 * Marital_StatusSingle + 1.41255137333055 *
Marital_StatusTogether ;
3525810   +   H13  = H13  +    -0.57281141808981 * Marital_StatusDivorced
3525811   +          +     0.19089853555624 * Marital_StatusMarried
3525812   +          +    -2.00914792518758 * Marital_StatusSingle
3525813   +          +     0.76260109852448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.57281141808981 * Marital_StatusDivorced +
0.19089853555624 * Marital_StatusMarried + -2.00914792518758 * Marital_StatusSingle +
0.76260109852448 * Marital_StatusTogether ;
3525814   +   H14  = H14  +     0.32097569256078 * Marital_StatusDivorced
3525815   +          +     4.09032307503783 * Marital_StatusMarried
3525816   +          +     0.96568013149301 * Marital_StatusSingle
3525817   +          +    -1.52149599742185 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.32097569256078 * Marital_StatusDivorced + 4.09032307503783
* Marital_StatusMarried + 0.96568013149301 * Marital_StatusSingle + -1.52149599742185 *
Marital_StatusTogether ;
3525818   +   H15  = H15  +     2.93755472583355 * Marital_StatusDivorced
3525819   +          +    -1.43508459663406 * Marital_StatusMarried
3525820   +          +     3.63441830074979 * Marital_StatusSingle
3525821   +          +     1.61139415890284 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 2.93755472583355 * Marital_StatusDivorced +
-1.43508459663406 * Marital_StatusMarried + 3.63441830074979 * Marital_StatusSingle +
1.61139415890284 * Marital_StatusTogether ;
3525822   +   H16  = H16  +    -0.48207612180145 * Marital_StatusDivorced
3525823   +          +    -0.28898131330943 * Marital_StatusMarried
3525824   +          +     1.51201970375236 * Marital_StatusSingle
3525825   +          +    -1.36092154681452 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.48207612180145 * Marital_StatusDivorced +
-0.28898131330943 * Marital_StatusMarried + 1.51201970375236 * Marital_StatusSingle +
-1.36092154681452 * Marital_StatusTogether ;
3525826   +   H11  =    -1.61024423215794 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.61024423215794 + H11 ;
3525827   +   H12  =    -0.60146563977246 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.60146563977246 + H12 ;
3525828   +   H13  =     0.40402408207659 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.40402408207659 + H13 ;
3525829   +   H14  =     1.33615251475706 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.33615251475706 + H14 ;
3525830   +   H15  =     0.37965845641871 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.37965845641871 + H15 ;
3525831   +   H16  =      0.0354150840422 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.0354150840422 + H16 ;
3525832   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3525833   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3525834   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3525835   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3525836   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3525837   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3525838   +END;
MPRINT(EM_DIAGRAM):   END;
3525839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525840   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3525841   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3525842   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3525843   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3525844   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3525845   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3525846   +END;
MPRINT(EM_DIAGRAM):   END;
3525847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525848   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3525849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525850   +
3525851   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3525852   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3525853   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525854   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3525855   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3525856   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3525857   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3525858   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525859   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525860   +end;
MPRINT(EM_DIAGRAM):   end;
3525861   +else do;
MPRINT(EM_DIAGRAM):   else do;
3525862   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3525863   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3525864   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3525865   +   end;
MPRINT(EM_DIAGRAM):   end;
3525866   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3525867   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3525868   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3525869   +   end;
MPRINT(EM_DIAGRAM):   end;
3525870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3525871   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3525872   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3525873   +   end;
MPRINT(EM_DIAGRAM):   end;
3525874   +end;
MPRINT(EM_DIAGRAM):   end;
3525875   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3525876   +   P_DepVar1  =     6.16209919838699 * H11  +     4.50364692986037 * H12
3525877   +          +    -6.64079567142035 * H13  +    -2.28665862644821 * H14
3525878   +          +    -3.20328658335471 * H15  +    -4.89511957134481 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16209919838699 * H11 + 4.50364692986037 * H12 +
-6.64079567142035 * H13 + -2.28665862644821 * H14 + -3.20328658335471 * H15 +
-4.89511957134481 * H16 ;
3525879   +   P_DepVar1  =    -5.09385867425055 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.09385867425055 + P_DepVar1 ;
3525880   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3525881   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3525882   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3525883   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3525884   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3525885   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3525886   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3525887   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3525888   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3525889   +END;
MPRINT(EM_DIAGRAM):   END;
3525890   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3525891   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3525892   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3525893   +END;
MPRINT(EM_DIAGRAM):   END;
3525894   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3525895   +   P_DepVar1  =     0.13673285198555;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13673285198555;
3525896   +   P_DepVar0  =     0.86326714801444;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86326714801444;
3525897   +END;
MPRINT(EM_DIAGRAM):   END;
3525898   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3525899   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3525900   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3525901   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3525902   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3525903   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3525904   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3525905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525906   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3525907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3525908   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3525909   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3525910   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3525911   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3525912   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3525913   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3525914   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3525915   +END;
MPRINT(EM_DIAGRAM):   END;
3525916   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525917   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3525918   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3525919   +drop
3525920   +S_MntCard_Games
3525921   +S_MntMagazines
3525922   +S_NumCatalogPurchases
3525923   +S_NumDealsPurchases
3525924   +S_NumWebPurchases
3525925   +S_RANGE_Frq
3525926   +S_RANGE_Recency
3525927   +S_RANGE_average_purchase
3525928   +S_RANGE_campaign_acceptance
3525929   +H11
3525930   +H12
3525931   +H13
3525932   +H14
3525933   +H15
3525934   +H16
3525935   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3525936   +end;
MPRINT(EM_DIAGRAM):   end;
3525937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525938   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3525939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3525940   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3525941   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3525942   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525943   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3525944   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3525945   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3525946   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3525947   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3525948   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3525949   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3525950   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3525951   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3525952   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3525953   +LENGTH _WARN_ $4
3525954   +      F_DepVar  $ 12
3525955   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3525956   +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
3525957   +
3525958   +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
3525959   +
3525960   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
3525961   +
3525962   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3525963   +
3525964   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
3525965   +
3525966   +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
3525967   +
3525968   +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
3525969   +
3525970   +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
3525971   +
3525972   +      label S_RANGE_campaign_acceptance =
3525973   +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard:
RANGE_campaign_acceptance' ;
3525974   +
3525975   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3525976   +
3525977   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3525978   +
3525979   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3525980   +
3525981   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3525982   +
3525983   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
3525984   +
3525985   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
3525986   +
3525987   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
3525988   +
3525989   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
3525990   +
3525991   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
3525992   +
3525993   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
3525994   +
3525995   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3525996   +
3525997   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3525998   +
3525999   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3526000   +
3526001   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3526002   +
3526003   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3526004   +
3526005   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3526006   +
3526007   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3526008   +
3526009   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3526010   +
3526011   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3526012   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3526013   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
3526014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3526015   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3526016   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3526017   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3526018   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3526019   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3526020   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3526021   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3526022   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3526023   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3526024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3526025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3526026   +end;
MPRINT(EM_DIAGRAM):   end;
3526027   +else do;
MPRINT(EM_DIAGRAM):   else do;
3526028   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3526029   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3526030   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3526031   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3526032   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3526033   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3526034   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3526035   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3526036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3526037   +         end;
MPRINT(EM_DIAGRAM):   end;
3526038   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3526039   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3526040   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3526041   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3526042   +            end;
MPRINT(EM_DIAGRAM):   end;
3526043   +         end;
MPRINT(EM_DIAGRAM):   end;
3526044   +      end;
MPRINT(EM_DIAGRAM):   end;
3526045   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3526046   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3526047   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3526048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3526049   +         end;
MPRINT(EM_DIAGRAM):   end;
3526050   +      end;
MPRINT(EM_DIAGRAM):   end;
3526051   +   end;
MPRINT(EM_DIAGRAM):   end;
3526052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3526053   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3526054   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3526055   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3526056   +      end;
MPRINT(EM_DIAGRAM):   end;
3526057   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3526058   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3526059   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3526060   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3526061   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3526062   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3526063   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3526064   +         end;
MPRINT(EM_DIAGRAM):   end;
3526065   +      end;
MPRINT(EM_DIAGRAM):   end;
3526066   +   end;
MPRINT(EM_DIAGRAM):   end;
3526067   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3526068   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3526069   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3526070   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3526071   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3526072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3526073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3526074   +   end;
MPRINT(EM_DIAGRAM):   end;
3526075   +end;
MPRINT(EM_DIAGRAM):   end;
3526076   +
3526077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526078   +*** Checking missing input Interval
3526079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3526080   +
3526081   +IF NMISS(
3526082   +   MntCard_Games ,
3526083   +   MntMagazines ,
3526084   +   NumCatalogPurchases ,
3526085   +   NumDealsPurchases ,
3526086   +   NumWebPurchases ,
3526087   +   RANGE_Frq ,
3526088   +   RANGE_Recency ,
3526089   +   RANGE_average_purchase ,
3526090   +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases ,
NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase ,
RANGE_campaign_acceptance ) THEN DO;
3526091   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3526092   +
3526093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3526094   +END;
MPRINT(EM_DIAGRAM):   END;
3526095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526096   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
3526097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3526099   +   S_MntCard_Games  =    -2.30918854581405 +     6.61801006219653 *
3526100   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.30918854581405 + 6.61801006219653 * MntCard_Games ;
3526101   +   S_MntMagazines  =    -0.84261781049883 +     17.6585895016814 *
3526102   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.84261781049883 + 17.6585895016814 * MntMagazines ;
3526103   +   S_NumCatalogPurchases  =    -3.12037022024461 +     13.4933890263556 *
3526104   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.12037022024461 + 13.4933890263556 *
NumCatalogPurchases ;
3526105   +   S_NumDealsPurchases  =      -1.408873960652 +     11.1635890207703 *
3526106   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.408873960652 + 11.1635890207703 *
NumDealsPurchases ;
3526107   +   S_NumWebPurchases  =    -5.25049385713447 +     12.3080007490462 *
3526108   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.25049385713447 + 12.3080007490462 *
NumWebPurchases ;
3526109   +   S_RANGE_Frq  =    -1.36690690404855 +     4.21318814288285 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36690690404855 + 4.21318814288285 * RANGE_Frq ;
3526110   +   S_RANGE_Recency  =    -1.67574189796136 +     3.38964188013597 *
3526111   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.67574189796136 + 3.38964188013597 * RANGE_Recency ;
3526112   +   S_RANGE_average_purchase  =    -1.04095750675198 +     5.16476140443727 *
3526113   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.04095750675198 + 5.16476140443727 *
RANGE_average_purchase ;
3526114   +   S_RANGE_campaign_acceptance
3526115   +          =    -0.48096710523328 +     5.81956874143758 *
3526116   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.48096710523328 + 5.81956874143758 *
RANGE_campaign_acceptance ;
3526117   +END;
MPRINT(EM_DIAGRAM):   END;
3526118   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3526119   +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
3526120   +   ELSE S_MntCard_Games  =    -2.30918854581405 +     6.61801006219653 *
3526121   +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.30918854581405 + 6.61801006219653 *
MntCard_Games ;
3526122   +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
3526123   +   ELSE S_MntMagazines  =    -0.84261781049883 +     17.6585895016814 *
3526124   +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.84261781049883 + 17.6585895016814 *
MntMagazines ;
3526125   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
3526126   +   ELSE S_NumCatalogPurchases
3526127   +          =    -3.12037022024461 +     13.4933890263556 * NumCatalogPurchases
3526128   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.12037022024461 + 13.4933890263556 *
NumCatalogPurchases ;
3526129   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3526130   +   ELSE S_NumDealsPurchases  =      -1.408873960652 +     11.1635890207703 *
3526131   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.408873960652 + 11.1635890207703 *
NumDealsPurchases ;
3526132   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
3526133   +   ELSE S_NumWebPurchases  =    -5.25049385713447 +     12.3080007490462 *
3526134   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.25049385713447 + 12.3080007490462 *
NumWebPurchases ;
3526135   +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
3526136   +   ELSE S_RANGE_Frq  =    -1.36690690404855 +     4.21318814288285 * RANGE_Frq
3526137   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36690690404855 + 4.21318814288285 * RANGE_Frq ;
3526138   +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
3526139   +   ELSE S_RANGE_Recency  =    -1.67574189796136 +     3.38964188013597 *
3526140   +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.67574189796136 + 3.38964188013597 *
RANGE_Recency ;
3526141   +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
3526142   +   ELSE S_RANGE_average_purchase
3526143   +          =    -1.04095750675198 +     5.16476140443727 *
3526144   +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.04095750675198 + 5.16476140443727 *
RANGE_average_purchase ;
3526145   +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
3526146   +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
= . ;
3526147   +   ELSE S_RANGE_campaign_acceptance
3526148   +          =    -0.48096710523328 +     5.81956874143758 *
3526149   +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.48096710523328 + 5.81956874143758
* RANGE_campaign_acceptance ;
3526150   +END;
MPRINT(EM_DIAGRAM):   END;
3526151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526152   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
3526153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526155   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
3526156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3526158   +   H11  =    -0.72119329787386 * S_MntCard_Games  +    -1.45295995424379 *
3526159   +        S_MntMagazines  +    -0.55755782764482 * S_NumCatalogPurchases
3526160   +          +     0.76929501299928 * S_NumDealsPurchases
3526161   +          +     1.27332973645547 * S_NumWebPurchases
3526162   +          +     3.44911664509974 * S_RANGE_Frq  +     -0.5351143429707 *
3526163   +        S_RANGE_Recency  +    -0.65702433695851 * S_RANGE_average_purchase
3526164   +          +     1.07309078258672 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = -0.72119329787386 * S_MntCard_Games + -1.45295995424379 *
S_MntMagazines + -0.55755782764482 * S_NumCatalogPurchases + 0.76929501299928 *
S_NumDealsPurchases + 1.27332973645547 * S_NumWebPurchases + 3.44911664509974 * S_RANGE_Frq +
-0.5351143429707 * S_RANGE_Recency + -0.65702433695851 * S_RANGE_average_purchase +
1.07309078258672 * S_RANGE_campaign_acceptance ;
3526165   +   H12  =     1.17206827986685 * S_MntCard_Games  +    -0.75959467574514 *
3526166   +        S_MntMagazines  +    -0.69905484067663 * S_NumCatalogPurchases
3526167   +          +    -2.21240109905296 * S_NumDealsPurchases
3526168   +          +    -1.87636157076342 * S_NumWebPurchases
3526169   +          +    -0.25804670628179 * S_RANGE_Frq  +     1.23680142599868 *
3526170   +        S_RANGE_Recency  +     2.06468080942811 * S_RANGE_average_purchase
3526171   +          +     2.98273859234759 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 1.17206827986685 * S_MntCard_Games + -0.75959467574514 *
S_MntMagazines + -0.69905484067663 * S_NumCatalogPurchases + -2.21240109905296 *
S_NumDealsPurchases + -1.87636157076342 * S_NumWebPurchases + -0.25804670628179 * S_RANGE_Frq
+ 1.23680142599868 * S_RANGE_Recency + 2.06468080942811 * S_RANGE_average_purchase +
2.98273859234759 * S_RANGE_campaign_acceptance ;
3526172   +   H13  =     -0.0495155233842 * S_MntCard_Games  +     -0.1934849915977 *
3526173   +        S_MntMagazines  +    -0.09347897576759 * S_NumCatalogPurchases
3526174   +          +    -0.52539078991587 * S_NumDealsPurchases
3526175   +          +     0.25068053523421 * S_NumWebPurchases
3526176   +          +     0.41769318691099 * S_RANGE_Frq  +      0.5775945316972 *
3526177   +        S_RANGE_Recency  +     0.10356349292501 * S_RANGE_average_purchase
3526178   +          +     -0.1980068632095 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = -0.0495155233842 * S_MntCard_Games + -0.1934849915977 *
S_MntMagazines + -0.09347897576759 * S_NumCatalogPurchases + -0.52539078991587 *
S_NumDealsPurchases + 0.25068053523421 * S_NumWebPurchases + 0.41769318691099 * S_RANGE_Frq +
0.5775945316972 * S_RANGE_Recency + 0.10356349292501 * S_RANGE_average_purchase +
-0.1980068632095 * S_RANGE_campaign_acceptance ;
3526179   +   H14  =    -5.64529465406281 * S_MntCard_Games  +     1.19152228062841 *
3526180   +        S_MntMagazines  +    -1.38167417341416 * S_NumCatalogPurchases
3526181   +          +    -3.50258006684404 * S_NumDealsPurchases
3526182   +          +    -3.19716454779915 * S_NumWebPurchases
3526183   +          +     1.71632621585567 * S_RANGE_Frq  +    -0.55716763216155 *
3526184   +        S_RANGE_Recency  +     1.03047877164953 * S_RANGE_average_purchase
3526185   +          +    -2.77945186313122 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -5.64529465406281 * S_MntCard_Games + 1.19152228062841 *
S_MntMagazines + -1.38167417341416 * S_NumCatalogPurchases + -3.50258006684404 *
S_NumDealsPurchases + -3.19716454779915 * S_NumWebPurchases + 1.71632621585567 * S_RANGE_Frq +
-0.55716763216155 * S_RANGE_Recency + 1.03047877164953 * S_RANGE_average_purchase +
-2.77945186313122 * S_RANGE_campaign_acceptance ;
3526186   +   H15  =    -1.12714933951324 * S_MntCard_Games  +     0.36916171134137 *
3526187   +        S_MntMagazines  +    -0.88793226248091 * S_NumCatalogPurchases
3526188   +          +    -0.13676410783135 * S_NumDealsPurchases
3526189   +          +    -1.38625771097984 * S_NumWebPurchases
3526190   +          +     -0.5859883428652 * S_RANGE_Frq  +     1.70743371830164 *
3526191   +        S_RANGE_Recency  +     0.37066841253591 * S_RANGE_average_purchase
3526192   +          +    -0.97660437107142 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = -1.12714933951324 * S_MntCard_Games + 0.36916171134137 *
S_MntMagazines + -0.88793226248091 * S_NumCatalogPurchases + -0.13676410783135 *
S_NumDealsPurchases + -1.38625771097984 * S_NumWebPurchases + -0.5859883428652 * S_RANGE_Frq +
1.70743371830164 * S_RANGE_Recency + 0.37066841253591 * S_RANGE_average_purchase +
-0.97660437107142 * S_RANGE_campaign_acceptance ;
3526193   +   H16  =    -0.34803381118276 * S_MntCard_Games  +    -0.38461820307206 *
3526194   +        S_MntMagazines  +    -0.49925952589762 * S_NumCatalogPurchases
3526195   +          +    -0.46935048271648 * S_NumDealsPurchases
3526196   +          +     0.13132510163854 * S_NumWebPurchases
3526197   +          +      0.1662180111598 * S_RANGE_Frq  +     0.64592603022417 *
3526198   +        S_RANGE_Recency  +    -0.28522799997819 * S_RANGE_average_purchase
3526199   +          +    -0.20387858203378 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.34803381118276 * S_MntCard_Games + -0.38461820307206 *
S_MntMagazines + -0.49925952589762 * S_NumCatalogPurchases + -0.46935048271648 *
S_NumDealsPurchases + 0.13132510163854 * S_NumWebPurchases + 0.1662180111598 * S_RANGE_Frq +
0.64592603022417 * S_RANGE_Recency + -0.28522799997819 * S_RANGE_average_purchase +
-0.20387858203378 * S_RANGE_campaign_acceptance ;
3526200   +   H11  = H11  +    -0.77688656799974 * Marital_StatusDivorced
3526201   +          +    -2.03104245048515 * Marital_StatusMarried
3526202   +          +    -1.11863815419988 * Marital_StatusSingle
3526203   +          +      0.4568562323328 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77688656799974 * Marital_StatusDivorced +
-2.03104245048515 * Marital_StatusMarried + -1.11863815419988 * Marital_StatusSingle +
0.4568562323328 * Marital_StatusTogether ;
3526204   +   H12  = H12  +    -1.89866140389785 * Marital_StatusDivorced
3526205   +          +     1.23445372453463 * Marital_StatusMarried
3526206   +          +     0.49900176443941 * Marital_StatusSingle
3526207   +          +     2.03956264569684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -1.89866140389785 * Marital_StatusDivorced +
1.23445372453463 * Marital_StatusMarried + 0.49900176443941 * Marital_StatusSingle +
2.03956264569684 * Marital_StatusTogether ;
3526208   +   H13  = H13  +     -1.7089712758507 * Marital_StatusDivorced
3526209   +          +     0.09244737118714 * Marital_StatusMarried
3526210   +          +    -1.82500260744085 * Marital_StatusSingle
3526211   +          +     1.28210527759073 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.7089712758507 * Marital_StatusDivorced + 0.09244737118714
* Marital_StatusMarried + -1.82500260744085 * Marital_StatusSingle + 1.28210527759073 *
Marital_StatusTogether ;
3526212   +   H14  = H14  +     0.23067416364417 * Marital_StatusDivorced
3526213   +          +     3.09102757694823 * Marital_StatusMarried
3526214   +          +     -1.2687664350416 * Marital_StatusSingle
3526215   +          +     1.95523653613823 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23067416364417 * Marital_StatusDivorced + 3.09102757694823
* Marital_StatusMarried + -1.2687664350416 * Marital_StatusSingle + 1.95523653613823 *
Marital_StatusTogether ;
3526216   +   H15  = H15  +     1.61651105876832 * Marital_StatusDivorced
3526217   +          +     1.66116971604752 * Marital_StatusMarried
3526218   +          +     0.38692792919249 * Marital_StatusSingle
3526219   +          +     2.02941753642745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.61651105876832 * Marital_StatusDivorced + 1.66116971604752
* Marital_StatusMarried + 0.38692792919249 * Marital_StatusSingle + 2.02941753642745 *
Marital_StatusTogether ;
3526220   +   H16  = H16  +    -0.01592267137904 * Marital_StatusDivorced
3526221   +          +     0.14704399190288 * Marital_StatusMarried
3526222   +          +     0.68151835317996 * Marital_StatusSingle
3526223   +          +    -0.64461672698642 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.01592267137904 * Marital_StatusDivorced +
0.14704399190288 * Marital_StatusMarried + 0.68151835317996 * Marital_StatusSingle +
-0.64461672698642 * Marital_StatusTogether ;
3526224   +   H11  =    -0.20279250295501 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20279250295501 + H11 ;
3526225   +   H12  =    -2.26480457252219 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.26480457252219 + H12 ;
3526226   +   H13  =    -0.15253254107791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.15253254107791 + H13 ;
3526227   +   H14  =     1.89723924268148 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.89723924268148 + H14 ;
3526228   +   H15  =     1.36400424164324 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.36400424164324 + H15 ;
3526229   +   H16  =     0.35474619982846 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.35474619982846 + H16 ;
3526230   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
3526231   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
3526232   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
3526233   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
3526234   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
3526235   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
3526236   +END;
MPRINT(EM_DIAGRAM):   END;
3526237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3526238   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
3526239   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
3526240   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
3526241   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
3526242   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
3526243   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
3526244   +END;
MPRINT(EM_DIAGRAM):   END;
3526245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526246   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3526247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526248   +
3526249   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3526250   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3526251   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3526252   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3526253   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3526254   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3526255   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3526256   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3526257   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3526258   +end;
MPRINT(EM_DIAGRAM):   end;
3526259   +else do;
MPRINT(EM_DIAGRAM):   else do;
3526260   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3526261   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3526262   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3526263   +   end;
MPRINT(EM_DIAGRAM):   end;
3526264   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3526265   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3526266   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3526267   +   end;
MPRINT(EM_DIAGRAM):   end;
3526268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3526269   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3526270   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3526271   +   end;
MPRINT(EM_DIAGRAM):   end;
3526272   +end;
MPRINT(EM_DIAGRAM):   end;
3526273   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3526274   +   P_DepVar1  =     2.26066475153079 * H11  +     2.60261842374516 * H12
3526275   +          +    -5.34160037685808 * H13  +    -1.32735448967693 * H14
3526276   +          +    -3.68489816323255 * H15  +    -6.20369831817812 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.26066475153079 * H11 + 2.60261842374516 * H12 +
-5.34160037685808 * H13 + -1.32735448967693 * H14 + -3.68489816323255 * H15 +
-6.20369831817812 * H16 ;
3526277   +   P_DepVar1  =    -4.23272828331628 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.23272828331628 + P_DepVar1 ;
3526278   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3526279   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3526280   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3526281   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3526282   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3526283   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3526284   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3526285   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3526286   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3526287   +END;
MPRINT(EM_DIAGRAM):   END;
3526288   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3526289   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3526290   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3526291   +END;
MPRINT(EM_DIAGRAM):   END;
3526292   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3526293   +   P_DepVar1  =     0.13782051282051;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13782051282051;
3526294   +   P_DepVar0  =     0.86217948717948;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86217948717948;
3526295   +END;
MPRINT(EM_DIAGRAM):   END;
3526296   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3526297   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3526298   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3526299   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3526300   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3526301   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3526302   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3526303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526304   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3526305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3526306   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3526307   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3526308   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3526309   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3526310   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3526311   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3526312   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3526313   +END;
MPRINT(EM_DIAGRAM):   END;
3526314   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3526315   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3526316   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3526317   +drop
3526318   +S_MntCard_Games
3526319   +S_MntMagazines
3526320   +S_NumCatalogPurchases
3526321   +S_NumDealsPurchases
3526322   +S_NumWebPurchases
3526323   +S_RANGE_Frq
3526324   +S_RANGE_Recency
3526325   +S_RANGE_average_purchase
3526326   +S_RANGE_campaign_acceptance
3526327   +H11
3526328   +H12
3526329   +H13
3526330   +H14
3526331   +H15
3526332   +H16
3526333   +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases
S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase
S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 ;
3526334   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3526335    run;
 
NOTE: DATA STEP view saved on file EMWS1.NEURAL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP11_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3526336    quit;
3526337    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Neural3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3526361    data EMWS1.Neural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMOUTFIT;
3526362    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3526363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.NEURAL3_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3526364    data EMWS1.Neural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMOUTFIT;
3526365    set EMWS1.Neural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMOUTFIT;
3526366    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3526367    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3526367  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3526368    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3526369    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMOUTFIT.
NOTE: The data set EMWS1.NEURAL3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3526370    proc sort data=EMWS1.Neural3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_EMREPORTFIT nothreads;
3526371    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3526372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL3_EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL3_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3526373    %let _EMwarndup = 0;
3526374    %let _EMtargetdup =;
3526375    %let _EMASEtargetdup =;
3526376    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3526377    set EMWS1.Neural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMOUTFIT;
3526378    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3526379    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3526380    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3526381    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3526382    end;
MPRINT(EM_DIAGRAM):   end;
3526383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3526384    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3526385    * Neural3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural3: Computing metadata for TRAIN data;
3526386    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural3_TRAIN out=WORK.M2M3W0QY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2M3W0QY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2M3W0QY(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2M3W0QY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2M3W0QY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2X0QK76 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ZGM960(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   set WORK.M2X0QK76;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp11_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp11_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3526739    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3526740    set EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMINFO;
3526741    where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3526742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.NEURAL3_EMINFO.
      WHERE (DATA='Neural3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3526743    data EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMINFO;
3526744    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3526745    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3526746    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3526750    run;
3526751    data EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMINFO;
3526752    set EMWS1.Neural3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMINFO WORK.MODELTEMP_INFO;
3526753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3526754    proc sort data = EMWS1.Neural3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural3_EMINFO NOTHREADS;
3526755    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3526756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.NEURAL3_EMINFO.
NOTE: The data set EMWS1.NEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3526757    proc sort data = EMWS1.Grp11_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp11_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3526758    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3526759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP11_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3526760    proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3526761    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3526762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3526763    data EMWS1.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMINFO;
3526764    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3526765    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3526766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3526767    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3526768    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3526769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3526770    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
3526771    proc sort data=EMWS1.Grp11_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp11_CMeta_TRAIN out=WORK.SUBSETINMETA;
3526772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3526773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.GRP11_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3526774    proc sort data=EMWS1.Neural3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3526775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3526776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3526777    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3526778    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3526779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3526780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3526781    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3526782    set EMWS1.Neural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_CMeta_TRAIN;
3526783    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3526783  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3526784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.NEURAL3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3526785    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3526786    set EMWS1.Neural3_TRAIN(keep=
3526787    F_DepVar
3526788    I_DepVar
3526789    P_DepVar0
3526790    P_DepVar1
3526791    R_DepVar0
3526792    R_DepVar1
3526793    U_DepVar
3526794    _WARN_
3526795    DepVar
3526796    );
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3526797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.NEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.GRP11_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.NEURAL3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural3_1BCXD65 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural3_1BCXD65;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural3_1BCXD65(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural3_1BCXD65;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural3_1BCXD65;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.4703552095672E-16 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3531084    %let grouptarget=0;
3531085    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3531086    set EMWS1.Grp11_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp11_EMLOOPINFO;
3531087    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3531088    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3531089    stop;
MPRINT(EM_DIAGRAM):   stop;
3531090    end;
MPRINT(EM_DIAGRAM):   end;
3531091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP11_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3531092    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3531093    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531094    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531095    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531095  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531096    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531097    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531098    set EMWS1.Neural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMOUTFIT;
3531099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531100    data EMWS1.Neural3_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMOUTFIT_LOOP;
3531101    set EMWS1.Neural3_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMOUTFIT_LOOP work.EMOUTFIT;
3531102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL3_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.NEURAL3_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531103    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3531104    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531105    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531106    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531106  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531107    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531108    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531109    set EMWS1.Neural3_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMREPORTFIT;
3531110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.NEURAL3_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531111    data EMWS1.Neural3_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMREPORTFIT_LOOP;
3531112    set EMWS1.Neural3_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMREPORTFIT_LOOP work.EMREPORTFIT;
3531113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 210 observations read from the data set EMWS1.NEURAL3_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.NEURAL3_EMREPORTFIT_LOOP has 219 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3531114    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3531115    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531116    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531117    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531117  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531118    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531119    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531120    set EMWS1.Neural3_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMRANK;
3531121    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531122    data EMWS1.Neural3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMRANK_LOOP;
3531123    set EMWS1.Neural3_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMRANK_LOOP work.EMRANK;
3531124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.NEURAL3_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.NEURAL3_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531125    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3531126    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531127    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531128    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531128  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531129    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531130    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531131    set EMWS1.Neural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMSCOREDIST;
3531132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531133    data EMWS1.Neural3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMSCOREDIST_LOOP;
3531134    set EMWS1.Neural3_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMSCOREDIST_LOOP work.EMSCOREDIST;
3531135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.NEURAL3_EMSCOREDIST_LOOP has 220 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531136    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3531137    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531138    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531139    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531139  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531140    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531141    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531142    set EMWS1.Neural3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMCLASSIFICATION;
3531143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531144    data EMWS1.Neural3_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMCLASSIFICATION_LOOP;
3531145    set EMWS1.Neural3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3531146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531147    proc sort data=EMWS1.Neural3_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_EMCLASSIFICATION_LOOP out=_temp;
3531148    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531149    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3531150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3531151    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3531151  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount
totalPercent);
3531152    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3531153    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3531154    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531155    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3531156    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3531157    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3531158    end;
MPRINT(EM_DIAGRAM):   end;
3531159    else do;
MPRINT(EM_DIAGRAM):   else do;
3531160    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3531161    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3531162    end;
MPRINT(EM_DIAGRAM):   end;
3531163    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3531164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531165    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3531165  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount
eventPercent);
3531166    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3531167    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3531168    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531169    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3531170    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3531171    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3531172    end;
MPRINT(EM_DIAGRAM):   end;
3531173    else do;
MPRINT(EM_DIAGRAM):   else do;
3531174    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3531175    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3531176    end;
MPRINT(EM_DIAGRAM):   end;
3531177    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3531178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531179    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3531179  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
neventPercent);
3531180    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3531181    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3531182    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531183    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3531184    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3531185    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3531186    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3531187    end;
MPRINT(EM_DIAGRAM):   end;
3531188    else do;
MPRINT(EM_DIAGRAM):   else do;
3531189    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3531190    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3531191    end;
MPRINT(EM_DIAGRAM):   end;
3531192    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3531193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531194    data EMWS1.Neural3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMMISC_LOOP;
3531195    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3531196    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531197    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3531197  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3531197  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3531198       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3531198  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3531198  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3531199       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3531199  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3531200    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3531201    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3531202    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3531203    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3531204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.NEURAL3_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3531205    proc sort data=EMWS1.Neural3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural3_EMMISC_LOOP;
3531206    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3531207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL3_EMMISC_LOOP.
NOTE: The data set EMWS1.NEURAL3_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3531208    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3531209    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3531210    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3531211    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3531211  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3531212    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3531213    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3531214    set EMWS1.Neural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMEVENTREPORT;
3531215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL3_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531216    data EMWS1.Neural3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMEVENTREPORT_LOOP;
3531217    set EMWS1.Neural3_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3531218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.NEURAL3_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.NEURAL3_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531219    %let _cn = %sysfunc(getoption(CENTER));
3531220    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3531221    proc print data=EMWS1.Neural3_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural3_EMREPORTFIT_LOOP noobs label;
3531222    var STAT LABEL TRAIN
3531223    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3531224    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3531225    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3531226    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3531227    run;
 
NOTE: There were 219 observations read from the data set EMWS1.NEURAL3_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2333.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531228    title10;
MPRINT(EM_DIAGRAM):   title10;
3531229    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3531230    proc sort data=EMWS1.Neural3_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural3_EMCLASSIFICATION_LOOP nothreads;
3531231    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3531232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531233    %let _cn = %sysfunc(getoption(CENTER));
3531234    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3531235    proc print data=EMWS1.Neural3_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural3_EMCLASSIFICATION_LOOP noobs label;
3531236    var from into pct_row pct_col count percent
3531237    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3531238    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3531239    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3531240    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3531241    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3531242    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3531243    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3531244    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3531245    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3531246    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3531247    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3531248    run;
 
NOTE: There were 44 observations read from the data set EMWS1.NEURAL3_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2334.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3531249    title9;
MPRINT(EM_DIAGRAM):   title9;
3531250    title10;
MPRINT(EM_DIAGRAM):   title10;
3531251    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3531252    %let _cn = %sysfunc(getoption(CENTER));
3531253    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3531254    data EMWS1.Neural3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural3_EMEVENTREPORT_LOOP;
3531255    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3531255  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3531256    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3531256  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3531256  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3531256  ! FALSEEVENT
3531257    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3531257  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3531257  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3531258       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3531259    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3531260    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3531261    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3531262    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3531263    set EMWS1.Neural3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural3_EMEVENTREPORT_LOOP;
3531264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL3_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.NEURAL3_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3531265    proc print data=EMWS1.Neural3_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural3_EMEVENTREPORT_LOOP noobs label;
3531266    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3531267    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3531268    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3531269    run;
 
NOTE: There were 11 observations read from the data set EMWS1.NEURAL3_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2335.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3531270    title10;
MPRINT(EM_DIAGRAM):   title10;
3531271    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3531272    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3531273    modify Neural3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3531274    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3531275    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3531275  ! ;
MPRINT(EM_DIAGRAM):   run;
3531276    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL3_EMRANK_LOOP.DATA.
3531277    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
3531278    %let _cn = %sysfunc(getoption(CENTER));
3531279    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3531280    proc print data=EMWS1.Neural3_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural3_EMRANK_LOOP label noobs;
3531281    var
3531282    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3531283    by
3531284    notsorted DATAROLE
3531285    notsorted _WHERE_
3531286    notsorted TARGET
3531287    notsorted TARGETLABEL
3531288    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3531289    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3531290    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3531291    run;
 
NOTE: There were 220 observations read from the data set EMWS1.NEURAL3_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2336.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3531292    title10;
MPRINT(EM_DIAGRAM):   title10;
3531293    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3531294    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3531295    modify Neural3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Neural3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3531296    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3531296  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3531297    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3531297  ! ;
MPRINT(EM_DIAGRAM):   run;
3531298    run;
 
NOTE: MODIFY was successful for EMWS1.NEURAL3_EMSCOREDIST_LOOP.DATA.
3531299    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
3531300    %let _cn = %sysfunc(getoption(CENTER));
3531301    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3531302    proc print data=EMWS1.Neural3_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Neural3_EMSCOREDIST_LOOP label noobs;
3531303    var
3531304    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3531305    by
3531306    notsorted DATAROLE
3531307    notsorted _WHERE_
3531308    notsorted TARGET
3531309    notsorted TARGETLABEL
3531310    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3531311    where TARGET in(
3531312    "DepVar"
3531313    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3531314    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3531315    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3531316    run;
 
NOTE: There were 220 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2337.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3531317    title10;
MPRINT(EM_DIAGRAM):   title10;
3531318    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3531319    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:10 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:10 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural3_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ITERATIONPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_PLOTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="WEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_WEIGHTDS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="HISTWEIGHT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMESTIMATE_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
The SAS System
 
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=19;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Neural3_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
