*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:06:32 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:23 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:06:23 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2EV_E9U "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2EV_E9U new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:23 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:23 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3551028    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551029    set EMWS1.Grp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_EMINFO;
3551030    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3551031    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3551032    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3551033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551034    data WORK.M1SRFAEN;
MPRINT(EM_DIAGRAM):    data WORK.M1SRFAEN;
3551035    set WORK.M1SRFAEN;
MPRINT(EM_DIAGRAM):   set WORK.M1SRFAEN;
3551036    where upcase(NAME) in(
3551037    "DEPVAR"
3551038    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3551039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1SRFAEN.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M1SRFAEN has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3551040    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Grp7_TRAIN EMWS1.Grp7_TRAIN
EMWS1.Grp7_TRAIN EMWS1.Grp7_TRAIN EMWS1 Grp7_TRAIN
EMWS1.Grp7_TRAIN EMWS1.Grp7_TRAIN
EMWS1.Grp7_TRAIN EMWS1.Grp7_TRAIN EMWS1 Grp7_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Grp7_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Reg3_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_DepVar_DD
out=EMWS1.Reg3_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
3551087    data WORK.Reg3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Reg3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3551088    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3551089    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3551089  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3551089  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3551090       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3551090  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3551090  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3551091    set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG3_DEPVAR_DM( where=(_TYPE_="TARGET"));
3551092    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3551093    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3551094    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3551095    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3551096    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3551097    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3551098    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3551099    end;
MPRINT(EM_DIAGRAM):   end;
3551100    output;
MPRINT(EM_DIAGRAM):   output;
3551101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.REG3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3551102    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3551103    proc print data=WORK.Reg3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Reg3_EVENT noobs label;
3551104    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3551105    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3551106    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3551107    run;
 
NOTE: There were 1 observations read from the data set WORK.REG3_EVENT.
NOTE: The PROCEDURE PRINT printed page 2346.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551108    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3551109    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg3_DepVar_DM noobs label;
3551110    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3551111    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3551112    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3551112  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3551112  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3551113    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3551114    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3551115    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2347.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551116    title10;
MPRINT(EM_DIAGRAM):   title10;
3551117    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551118    set EMWS1.Grp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_EMINFO;
3551119    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3551120    call symput('GROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('GROUPMODE', strip(key));
3551121    call symput('GROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('GROUPID', strip(data));
3551122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551123    filename emflow "C:\Users\misil\Desktop\DM
3551123  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas";
3551124    filename empub "C:\Users\misil\Desktop\DM
3551124  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas";
3551125    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551126    retain index 0;
MPRINT(EM_DIAGRAM):   retain index 0;
3551127    set EMWS1.Grp7_GROUPINFO end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_GROUPINFO end=eof;
3551128    index + 1;
MPRINT(EM_DIAGRAM):   index + 1;
3551129    call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
MPRINT(EM_DIAGRAM):   call symput('loopwhere'!!strip(put(index, best.)), strip(_where_));
3551130    call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(EM_DIAGRAM):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3551131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP7_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551132    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551133    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551134    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551135    put "* Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =1);";
3551136    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551138    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
3551139    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=154,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551140    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551141    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_1.source";
3551142    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=191,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 261 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551143    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551144    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551145    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551146    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6680,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551148    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551149    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551150    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551151    put "*  Group: ^(cv_var =1);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =1);";
3551152    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551154    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_1.source";
3551155    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=155,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551156    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551157    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_1.source";
3551158    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=192,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 225 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551159    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551160    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551161    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551162    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5938,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551164    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551165    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551166    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551167    put "* Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =2);";
3551168    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6686,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551170    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
3551171    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6840,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551172    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551173    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_2.source";
3551174    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6877,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 257 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551175    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551176    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551177    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551178    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13230,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551180    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551181    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551182    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551183    put "*  Group: ^(cv_var =2);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =2);";
3551184    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5944,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551186    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_2.source";
3551187    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6099,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551188    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551189    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_2.source";
3551190    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6136,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 221 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551191    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551192    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551193    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551194    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11746,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551196    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551197    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551198    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551199    put "* Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =3);";
3551200    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13236,
      Last Modified=02 June 2018 17:06:24 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551202    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
3551203    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13390,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551204    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551205    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_3.source";
3551206    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13427,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 261 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551207    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551208    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551209    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551210    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19926,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551212    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551213    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551214    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551215    put "*  Group: ^(cv_var =3);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =3);";
3551216    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11752,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551218    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_3.source";
3551219    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11907,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551220    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551221    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_3.source";
3551222    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11944,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 225 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551223    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551224    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551225    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551226    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17700,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551228    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551229    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551230    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551231    put "* Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =4);";
3551232    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19932,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551234    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
3551235    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=20086,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551236    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551237    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_4.source";
3551238    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=20123,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551239    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551240    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551241    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551242    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26361,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551244    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551245    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551246    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551247    put "*  Group: ^(cv_var =4);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =4);";
3551248    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17706,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551250    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_4.source";
3551251    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=17861,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551252    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551253    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_4.source";
3551254    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=17898,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551255    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551256    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551257    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551258    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23393,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551260    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551261    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551262    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551263    put "* Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =5);";
3551264    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551265    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26367,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551266    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
3551267    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26521,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551268    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551269    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_5.source";
3551270    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26558,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551271    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551272    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551273    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551274    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32804,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551276    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551277    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551278    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551279    put "*  Group: ^(cv_var =5);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =5);";
3551280    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23399,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551282    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_5.source";
3551283    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23554,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551284    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551285    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_5.source";
3551286    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23591,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551287    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551288    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551289    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551290    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29094,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551292    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551293    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551294    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551295    put "* Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =6);";
3551296    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32810,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551298    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
3551299    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=32964,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551300    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551301    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_6.source";
3551302    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33001,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 251 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551303    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551304    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551305    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551306    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39240,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551308    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551309    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551310    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551311    put "*  Group: ^(cv_var =6);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =6);";
3551312    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29100,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551314    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_6.source";
3551315    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29255,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551316    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551317    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_6.source";
3551318    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29292,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 215 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551319    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551320    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551321    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551322    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34788,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551324    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551325    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551326    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551327    put "* Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =7);";
3551328    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39246,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551330    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
3551331    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39400,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551332    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551333    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_7.source";
3551334    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39437,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 267 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551335    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551336    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551337    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551338    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46167,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551340    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551341    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551342    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551343    put "*  Group: ^(cv_var =7);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =7);";
3551344    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34794,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551346    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_7.source";
3551347    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=34949,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551348    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551349    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_7.source";
3551350    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=34986,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 231 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551351    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551352    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551353    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551354    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40973,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551356    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551357    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551358    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551359    put "* Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =8);";
3551360    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46173,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551362    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
3551363    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46327,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551364    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551365    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_8.source";
3551366    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46364,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 253 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551367    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551368    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551369    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551370    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52610,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551372    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551373    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551374    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551375    put "*  Group: ^(cv_var =8);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =8);";
3551376    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40979,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551378    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_8.source";
3551379    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41134,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551380    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551381    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_8.source";
3551382    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41171,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 217 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551383    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551384    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551385    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551386    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46674,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3551388    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551389    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551390    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551391    put "* Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =9);";
3551392    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52616,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 22.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551394    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
3551395    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52770,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551396    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551397    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_9.source";
3551398    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52807,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551399    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551400    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551401    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551402    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58909,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551404    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551405    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551406    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551407    put "*  Group: ^(cv_var =9);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =9);";
3551408    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46680,
      Last Modified=02 June 2018 17:06:25 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551410    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_9.source";
3551411    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46835,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551412    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551413    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_9.source";
3551414    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46872,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551415    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551416    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551417    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551418    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52231,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551420    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551421    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551422    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551423    put "* Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "* Group: ^(cv_var =10);";
3551424    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58915,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMFLOW.
      The minimum record length was 23.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551426    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
3551427    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59070,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551428    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551429    filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMFLOWCODE_10.source";
3551430    %em_copyfile(infref=x, outfref=emflow, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59109,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 257 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551431    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551432    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551433    file emflow mod;
MPRINT(EM_DIAGRAM):   file emflow mod;
3551434    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551435    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=65521,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551436    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551437    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551438    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551439    put "*  Group: ^(cv_var =10);";
MPRINT(EM_DIAGRAM):   put "*  Group: ^(cv_var =10);";
3551440    put "*------------------------------------------------------------*;";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*;";
3551441    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52237,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 3 records were written to the file EMPUB.
      The minimum record length was 24.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551442    filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Grp7_LOOP.EMPUBLISHCODE_10.source";
3551443    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52393,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551444    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551445    filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_DIAGRAM):   filename x catalog "EMWS1.Reg3_LOOP.EMPUBLISHCODE_10.source";
3551446    %em_copyfile(infref=x, outfref=empub, append=Y);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52432,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 221 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
3551447    filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
3551448    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3551449    file empub mod;
MPRINT(EM_DIAGRAM):   file empub mod;
3551450    put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
3551451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58101,
      Last Modified=02 June 2018 17:06:26 o'clock,
      Create Time=24 May 2018 20:21:22 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3551452    filename emflow;
MPRINT(EM_DIAGRAM):    filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3551453    filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
NOTE: There were 10 observations read from the data set EMWS1.GRP7_EMLOOPINFO.
NOTE: The data set EMWS1.REG3_EMLOOPINFO has 10 observations and 3 variables.
3551454    proc print data=EMWS1.Reg3_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Reg3_EMLOOPINFO noobs label;
3551455    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3551456    run;
 
NOTE: There were 10 observations read from the data set EMWS1.REG3_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2348.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3551457    title9;
MPRINT(EM_DIAGRAM):   title9;
3551458    filename emflow "C:\Users\misil\Desktop\DM
3551458  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551459    *------------------------------------------------------------*;
3551460    * Reg3: Scoring DATA data;
3551461    *------------------------------------------------------------*;
3551462    data EMWS1.Reg3_TRAIN
3551463    / view=EMWS1.Reg3_TRAIN
3551464    ;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_TRAIN / view=EMWS1.Reg3_TRAIN ;
3551465    set EMWS1.Grp7_TRAIN
3551466    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_TRAIN ;
3551467    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMFLOWSCORE.sas.
3551468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551469   +* Group: ^(cv_var =1);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =1);
3551470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551471   +if (cv_var =1)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =1) then do;
3551472   +_XVAL_=1;
MPRINT(EM_DIAGRAM):   _XVAL_=1;
3551473   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551474   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3551475   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551476   +
3551477   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3551478   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3551479   +
3551480   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3551481   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3551482   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3551483   +array REG3_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_1DRF [2] $12 _temporary_ ('1' '0' );
3551484   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3551485   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3551486   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3551487   +ARRAY REG3_1DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_1DRU[2] _TEMPORARY_ (1 0);
3551488   +
3551489   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3551490   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3551491   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3551492   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3551493   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3551494   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3551495   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3551496   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3551497   +end;
MPRINT(EM_DIAGRAM):   end;
3551498   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551499   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3551500   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3551501   +   end;
MPRINT(EM_DIAGRAM):   end;
3551502   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3551503   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3551504   +   end;
MPRINT(EM_DIAGRAM):   end;
3551505   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3551506   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3551507   +   end;
MPRINT(EM_DIAGRAM):   end;
3551508   +end;
MPRINT(EM_DIAGRAM):   end;
3551509   +
3551510   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3551511   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3551512   +
3551513   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3551514   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3551515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551517   +end;
MPRINT(EM_DIAGRAM):   end;
3551518   +
3551519   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3551520   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3551521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551523   +end;
MPRINT(EM_DIAGRAM):   end;
3551524   +
3551525   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3551526   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3551527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551529   +end;
MPRINT(EM_DIAGRAM):   end;
3551530   +
3551531   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3551532   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3551533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551535   +end;
MPRINT(EM_DIAGRAM):   end;
3551536   +
3551537   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3551538   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3551539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551541   +end;
MPRINT(EM_DIAGRAM):   end;
3551542   +
3551543   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3551544   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3551545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551547   +end;
MPRINT(EM_DIAGRAM):   end;
3551548   +
3551549   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3551550   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3551551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551553   +end;
MPRINT(EM_DIAGRAM):   end;
3551554   +
3551555   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3551556   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3551557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551559   +end;
MPRINT(EM_DIAGRAM):   end;
3551560   +
3551561   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3551562   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3551563   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3551564   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3551565   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3551566   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3551567   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3551568   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3551569   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3551570   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3551571   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3551572   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3551573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551575   +end;
MPRINT(EM_DIAGRAM):   end;
3551576   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551577   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3551578   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3551579   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3551580   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3551581   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3551582   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3551583   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3551584   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3551585   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551586   +         end;
MPRINT(EM_DIAGRAM):   end;
3551587   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3551588   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3551589   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3551590   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551591   +            end;
MPRINT(EM_DIAGRAM):   end;
3551592   +         end;
MPRINT(EM_DIAGRAM):   end;
3551593   +      end;
MPRINT(EM_DIAGRAM):   end;
3551594   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3551595   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3551596   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3551597   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551598   +         end;
MPRINT(EM_DIAGRAM):   end;
3551599   +      end;
MPRINT(EM_DIAGRAM):   end;
3551600   +   end;
MPRINT(EM_DIAGRAM):   end;
3551601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3551602   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3551603   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3551604   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551605   +      end;
MPRINT(EM_DIAGRAM):   end;
3551606   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3551607   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3551608   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3551609   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3551610   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3551611   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3551612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551613   +         end;
MPRINT(EM_DIAGRAM):   end;
3551614   +      end;
MPRINT(EM_DIAGRAM):   end;
3551615   +   end;
MPRINT(EM_DIAGRAM):   end;
3551616   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3551617   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3551618   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3551619   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3551620   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3551621   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3551622   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551623   +   end;
MPRINT(EM_DIAGRAM):   end;
3551624   +end;
MPRINT(EM_DIAGRAM):   end;
3551625   +
3551626   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3551627   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3551628   +   _P0 = 0.135600907;
MPRINT(EM_DIAGRAM):   _P0 = 0.135600907;
3551629   +   _P1 = 0.864399093;
MPRINT(EM_DIAGRAM):   _P1 = 0.864399093;
3551630   +   goto REG3_1DR1;
MPRINT(EM_DIAGRAM):   goto REG3_1DR1;
3551631   +end;
MPRINT(EM_DIAGRAM):   end;
3551632   +
3551633   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3551634   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3551635   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3551636   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3551637   +
3551638   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3551639   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3551640   +_LP0 = _LP0 + (    1.20697963280158) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.20697963280158) * _TEMP * _1_0;
3551641   +_LP0 = _LP0 + (   -1.20794193430997) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.20794193430997) * _TEMP * _1_1;
3551642   +_LP0 = _LP0 + (    0.91448880157455) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.91448880157455) * _TEMP * _1_2;
3551643   +_LP0 = _LP0 + (    -1.7142100026679) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.7142100026679) * _TEMP * _1_3;
3551644   +
3551645   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3551646   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3551647   +_LP0 = _LP0 + (     25.841095856931 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.841095856931 * _TEMP);
3551648   +
3551649   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
3551650   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
3551651   +_LP0 = _LP0 + (   -59.7422470748668 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -59.7422470748668 * _TEMP);
3551652   +
3551653   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3551654   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3551655   +_LP0 = _LP0 + (   -18.2642382438574 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -18.2642382438574 * _TEMP);
3551656   +
3551657   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3551658   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3551659   +_LP0 = _LP0 + (    12.9286024765017 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 12.9286024765017 * _TEMP);
3551660   +
3551661   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3551662   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3551663   +_LP0 = _LP0 + (    38.6523562106812 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 38.6523562106812 * _TEMP);
3551664   +
3551665   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3551666   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3551667   +_LP0 = _LP0 + (    47.8210754293014 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 47.8210754293014 * _TEMP);
3551668   +
3551669   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3551670   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3551671   +_LP0 = _LP0 + (   -14.2261672652397 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.2261672652397 * _TEMP);
3551672   +
3551673   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3551674   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3551675   +_LP0 = _LP0 + (    33.1983295081975 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 33.1983295081975 * _TEMP);
3551676   +
3551677   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3551678   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3551679   +_LP0 = _LP0 + (    24.0145164813365 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 24.0145164813365 * _TEMP);
3551680   +
3551681   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*NumWebPurchases ;
3551682   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * NumWebPurchases ;
3551683   +_LP0 = _LP0 + (    71.3673951916513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 71.3673951916513 * _TEMP);
3551684   +
3551685   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3551686   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3551687   +_LP0 = _LP0 + (    9.51572827128068 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.51572827128068 * _TEMP);
3551688   +
3551689   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3551690   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3551691   +_TEMP =    -1.75296205447878 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.75296205447878 + _LP0;
3551692   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3551693   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3551694   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3551695   +end;
MPRINT(EM_DIAGRAM):   end;
3551696   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3551697   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3551698   +
3551699   +REG3_1DR1:
3551700   +
3551701   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_1DR1: *** Residuals;
3551702   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3551703   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3551704   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3551705   +end;
MPRINT(EM_DIAGRAM):   end;
3551706   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551707   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3551708   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3551709   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3551710   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3551711   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3551712   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3551713   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3551714   +   end;
MPRINT(EM_DIAGRAM):   end;
3551715   +end;
MPRINT(EM_DIAGRAM):   end;
3551716   +
3551717   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3551718   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3551719   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3551720   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3551721   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3551722   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3551723   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3551724   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3551725   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3551726   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3551727   +end;
MPRINT(EM_DIAGRAM):   end;
3551728   +I_DepVar = REG3_1DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_1DRF[_IY];
3551729   +U_DepVar = REG3_1DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_1DRU[_IY];
3551730   +
3551731   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551732   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3551733   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551734   +end;
MPRINT(EM_DIAGRAM):   end;
3551735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551736   +* Group: ^(cv_var =2);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =2);
3551737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551738   +if (cv_var =2)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =2) then do;
3551739   +_XVAL_=2;
MPRINT(EM_DIAGRAM):   _XVAL_=2;
3551740   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551741   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3551742   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551743   +
3551744   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3551745   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3551746   +
3551747   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3551748   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3551749   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3551750   +array REG3_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_2DRF [2] $12 _temporary_ ('1' '0' );
3551751   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3551752   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3551753   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3551754   +ARRAY REG3_2DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_2DRU[2] _TEMPORARY_ (1 0);
3551755   +
3551756   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3551757   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3551758   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3551759   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3551760   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3551761   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3551762   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3551763   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3551764   +end;
MPRINT(EM_DIAGRAM):   end;
3551765   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551766   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3551767   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3551768   +   end;
MPRINT(EM_DIAGRAM):   end;
3551769   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3551770   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3551771   +   end;
MPRINT(EM_DIAGRAM):   end;
3551772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3551773   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3551774   +   end;
MPRINT(EM_DIAGRAM):   end;
3551775   +end;
MPRINT(EM_DIAGRAM):   end;
3551776   +
3551777   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3551778   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3551779   +
3551780   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3551781   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3551782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551784   +end;
MPRINT(EM_DIAGRAM):   end;
3551785   +
3551786   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3551787   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3551788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551790   +end;
MPRINT(EM_DIAGRAM):   end;
3551791   +
3551792   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3551793   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3551794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551796   +end;
MPRINT(EM_DIAGRAM):   end;
3551797   +
3551798   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3551799   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3551800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551802   +end;
MPRINT(EM_DIAGRAM):   end;
3551803   +
3551804   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3551805   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3551806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551808   +end;
MPRINT(EM_DIAGRAM):   end;
3551809   +
3551810   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3551811   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3551812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551814   +end;
MPRINT(EM_DIAGRAM):   end;
3551815   +
3551816   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3551817   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3551818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551820   +end;
MPRINT(EM_DIAGRAM):   end;
3551821   +
3551822   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3551823   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3551824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551826   +end;
MPRINT(EM_DIAGRAM):   end;
3551827   +
3551828   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3551829   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3551830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3551831   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3551832   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3551833   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3551834   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3551835   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3551836   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3551837   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3551838   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3551839   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3551840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3551841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551842   +end;
MPRINT(EM_DIAGRAM):   end;
3551843   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551844   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3551845   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3551846   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3551847   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3551848   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3551849   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3551850   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3551851   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3551852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551853   +         end;
MPRINT(EM_DIAGRAM):   end;
3551854   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3551855   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3551856   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3551857   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551858   +            end;
MPRINT(EM_DIAGRAM):   end;
3551859   +         end;
MPRINT(EM_DIAGRAM):   end;
3551860   +      end;
MPRINT(EM_DIAGRAM):   end;
3551861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3551862   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3551863   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3551864   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551865   +         end;
MPRINT(EM_DIAGRAM):   end;
3551866   +      end;
MPRINT(EM_DIAGRAM):   end;
3551867   +   end;
MPRINT(EM_DIAGRAM):   end;
3551868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3551869   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3551870   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3551871   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551872   +      end;
MPRINT(EM_DIAGRAM):   end;
3551873   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3551874   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3551875   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3551876   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3551877   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3551878   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3551879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3551880   +         end;
MPRINT(EM_DIAGRAM):   end;
3551881   +      end;
MPRINT(EM_DIAGRAM):   end;
3551882   +   end;
MPRINT(EM_DIAGRAM):   end;
3551883   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3551884   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3551885   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3551886   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3551887   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3551888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3551889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3551890   +   end;
MPRINT(EM_DIAGRAM):   end;
3551891   +end;
MPRINT(EM_DIAGRAM):   end;
3551892   +
3551893   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3551894   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3551895   +   _P0 = 0.137694419;
MPRINT(EM_DIAGRAM):   _P0 = 0.137694419;
3551896   +   _P1 = 0.862305581;
MPRINT(EM_DIAGRAM):   _P1 = 0.862305581;
3551897   +   goto REG3_2DR1;
MPRINT(EM_DIAGRAM):   goto REG3_2DR1;
3551898   +end;
MPRINT(EM_DIAGRAM):   end;
3551899   +
3551900   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3551901   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3551902   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3551903   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3551904   +
3551905   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3551906   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3551907   +_LP0 = _LP0 + (    0.96460618241742) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.96460618241742) * _TEMP * _1_0;
3551908   +_LP0 = _LP0 + (   -1.21680341826489) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.21680341826489) * _TEMP * _1_1;
3551909   +_LP0 = _LP0 + (     0.9058811035026) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.9058811035026) * _TEMP * _1_2;
3551910   +_LP0 = _LP0 + (   -1.72043508233542) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.72043508233542) * _TEMP * _1_3;
3551911   +
3551912   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3551913   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3551914   +_LP0 = _LP0 + (    26.2156650988566 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 26.2156650988566 * _TEMP);
3551915   +
3551916   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
3551917   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
3551918   +_LP0 = _LP0 + (   -57.2451824742213 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -57.2451824742213 * _TEMP);
3551919   +
3551920   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3551921   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3551922   +_LP0 = _LP0 + (   -17.0079313354133 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -17.0079313354133 * _TEMP);
3551923   +
3551924   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3551925   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3551926   +_LP0 = _LP0 + (    14.3463654651169 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.3463654651169 * _TEMP);
3551927   +
3551928   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3551929   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3551930   +_LP0 = _LP0 + (    39.6006043353658 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 39.6006043353658 * _TEMP);
3551931   +
3551932   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3551933   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3551934   +_LP0 = _LP0 + (    45.3471994845302 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 45.3471994845302 * _TEMP);
3551935   +
3551936   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3551937   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3551938   +_LP0 = _LP0 + (    19.7792054125068 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 19.7792054125068 * _TEMP);
3551939   +
3551940   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3551941   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3551942   +_LP0 = _LP0 + (    16.0947493124885 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 16.0947493124885 * _TEMP);
3551943   +
3551944   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*NumWebPurchases ;
3551945   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * NumWebPurchases ;
3551946   +_LP0 = _LP0 + (    67.1153576840868 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 67.1153576840868 * _TEMP);
3551947   +
3551948   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3551949   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3551950   +_LP0 = _LP0 + (    5.81573702050692 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.81573702050692 * _TEMP);
3551951   +
3551952   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3551953   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3551954   +_TEMP =    -2.37291573448972 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -2.37291573448972 + _LP0;
3551955   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3551956   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3551957   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3551958   +end;
MPRINT(EM_DIAGRAM):   end;
3551959   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3551960   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3551961   +
3551962   +REG3_2DR1:
3551963   +
3551964   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_2DR1: *** Residuals;
3551965   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3551966   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3551967   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3551968   +end;
MPRINT(EM_DIAGRAM):   end;
3551969   +else do;
MPRINT(EM_DIAGRAM):   else do;
3551970   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3551971   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3551972   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3551973   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3551974   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3551975   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3551976   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3551977   +   end;
MPRINT(EM_DIAGRAM):   end;
3551978   +end;
MPRINT(EM_DIAGRAM):   end;
3551979   +
3551980   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3551981   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3551982   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3551983   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3551984   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3551985   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3551986   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3551987   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3551988   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3551989   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3551990   +end;
MPRINT(EM_DIAGRAM):   end;
3551991   +I_DepVar = REG3_2DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_2DRF[_IY];
3551992   +U_DepVar = REG3_2DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_2DRU[_IY];
3551993   +
3551994   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551995   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3551996   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3551997   +end;
MPRINT(EM_DIAGRAM):   end;
3551998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3551999   +* Group: ^(cv_var =3);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =3);
3552000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552001   +if (cv_var =3)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =3) then do;
3552002   +_XVAL_=3;
MPRINT(EM_DIAGRAM):   _XVAL_=3;
3552003   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552004   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3552005   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552006   +
3552007   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3552008   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3552009   +
3552010   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3552011   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3552012   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3552013   +array REG3_3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_3DRF [2] $12 _temporary_ ('1' '0' );
3552014   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3552015   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3552016   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3552017   +ARRAY REG3_3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_3DRU[2] _TEMPORARY_ (1 0);
3552018   +
3552019   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3552020   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3552021   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3552022   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3552023   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3552024   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552025   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3552026   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552027   +end;
MPRINT(EM_DIAGRAM):   end;
3552028   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552029   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3552030   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3552031   +   end;
MPRINT(EM_DIAGRAM):   end;
3552032   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3552033   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3552034   +   end;
MPRINT(EM_DIAGRAM):   end;
3552035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552036   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552037   +   end;
MPRINT(EM_DIAGRAM):   end;
3552038   +end;
MPRINT(EM_DIAGRAM):   end;
3552039   +
3552040   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3552041   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3552042   +
3552043   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3552044   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3552045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552047   +end;
MPRINT(EM_DIAGRAM):   end;
3552048   +
3552049   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3552050   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3552051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552053   +end;
MPRINT(EM_DIAGRAM):   end;
3552054   +
3552055   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3552056   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3552057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552059   +end;
MPRINT(EM_DIAGRAM):   end;
3552060   +
3552061   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3552062   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3552063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552065   +end;
MPRINT(EM_DIAGRAM):   end;
3552066   +
3552067   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3552068   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3552069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552071   +end;
MPRINT(EM_DIAGRAM):   end;
3552072   +
3552073   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3552074   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3552075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552077   +end;
MPRINT(EM_DIAGRAM):   end;
3552078   +
3552079   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3552080   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3552081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552083   +end;
MPRINT(EM_DIAGRAM):   end;
3552084   +
3552085   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3552086   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3552087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552089   +end;
MPRINT(EM_DIAGRAM):   end;
3552090   +
3552091   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3552092   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3552093   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3552094   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3552095   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3552096   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3552097   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3552098   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3552099   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552100   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552101   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552102   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552105   +end;
MPRINT(EM_DIAGRAM):   end;
3552106   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552107   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3552108   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3552109   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552110   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3552111   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3552112   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3552113   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3552114   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3552115   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552116   +         end;
MPRINT(EM_DIAGRAM):   end;
3552117   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3552118   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3552119   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3552120   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552121   +            end;
MPRINT(EM_DIAGRAM):   end;
3552122   +         end;
MPRINT(EM_DIAGRAM):   end;
3552123   +      end;
MPRINT(EM_DIAGRAM):   end;
3552124   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552125   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3552126   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3552127   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552128   +         end;
MPRINT(EM_DIAGRAM):   end;
3552129   +      end;
MPRINT(EM_DIAGRAM):   end;
3552130   +   end;
MPRINT(EM_DIAGRAM):   end;
3552131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552132   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3552133   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3552134   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552135   +      end;
MPRINT(EM_DIAGRAM):   end;
3552136   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552137   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3552138   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3552139   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3552140   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3552141   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3552142   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552143   +         end;
MPRINT(EM_DIAGRAM):   end;
3552144   +      end;
MPRINT(EM_DIAGRAM):   end;
3552145   +   end;
MPRINT(EM_DIAGRAM):   end;
3552146   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3552147   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552148   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552149   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552150   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3552152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552153   +   end;
MPRINT(EM_DIAGRAM):   end;
3552154   +end;
MPRINT(EM_DIAGRAM):   end;
3552155   +
3552156   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3552157   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3552158   +   _P0 = 0.1365479946;
MPRINT(EM_DIAGRAM):   _P0 = 0.1365479946;
3552159   +   _P1 = 0.8634520054;
MPRINT(EM_DIAGRAM):   _P1 = 0.8634520054;
3552160   +   goto REG3_3DR1;
MPRINT(EM_DIAGRAM):   goto REG3_3DR1;
3552161   +end;
MPRINT(EM_DIAGRAM):   end;
3552162   +
3552163   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3552164   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3552165   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3552166   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3552167   +
3552168   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3552169   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3552170   +_LP0 = _LP0 + (    1.08599256416866) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.08599256416866) * _TEMP * _1_0;
3552171   +_LP0 = _LP0 + (   -1.36087540501895) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.36087540501895) * _TEMP * _1_1;
3552172   +_LP0 = _LP0 + (    0.94857995186377) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.94857995186377) * _TEMP * _1_2;
3552173   +_LP0 = _LP0 + (   -1.56150984270597) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.56150984270597) * _TEMP * _1_3;
3552174   +
3552175   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3552176   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3552177   +_LP0 = _LP0 + (    25.4594923607924 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.4594923607924 * _TEMP);
3552178   +
3552179   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
3552180   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
3552181   +_LP0 = _LP0 + (   -63.0286516455468 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -63.0286516455468 * _TEMP);
3552182   +
3552183   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3552184   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3552185   +_LP0 = _LP0 + (   -14.4183292674941 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.4183292674941 * _TEMP);
3552186   +
3552187   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3552188   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3552189   +_LP0 = _LP0 + (    12.8106794358554 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 12.8106794358554 * _TEMP);
3552190   +
3552191   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3552192   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3552193   +_LP0 = _LP0 + (    40.3486912075674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 40.3486912075674 * _TEMP);
3552194   +
3552195   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3552196   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3552197   +_LP0 = _LP0 + (    51.4022903815845 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 51.4022903815845 * _TEMP);
3552198   +
3552199   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3552200   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3552201   +_LP0 = _LP0 + (   -15.9708643272535 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.9708643272535 * _TEMP);
3552202   +
3552203   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3552204   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3552205   +_LP0 = _LP0 + (    34.6663143127141 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 34.6663143127141 * _TEMP);
3552206   +
3552207   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3552208   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3552209   +_LP0 = _LP0 + (    24.9623029321829 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 24.9623029321829 * _TEMP);
3552210   +
3552211   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*NumWebPurchases ;
3552212   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * NumWebPurchases ;
3552213   +_LP0 = _LP0 + (    73.3572834170655 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 73.3572834170655 * _TEMP);
3552214   +
3552215   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3552216   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3552217   +_LP0 = _LP0 + (    4.74182789927739 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.74182789927739 * _TEMP);
3552218   +
3552219   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3552220   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3552221   +_TEMP =    -1.43541350237023 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.43541350237023 + _LP0;
3552222   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3552223   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3552224   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3552225   +end;
MPRINT(EM_DIAGRAM):   end;
3552226   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3552227   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3552228   +
3552229   +REG3_3DR1:
3552230   +
3552231   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_3DR1: *** Residuals;
3552232   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3552233   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3552234   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3552235   +end;
MPRINT(EM_DIAGRAM):   end;
3552236   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552237   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3552238   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3552239   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3552240   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3552241   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3552242   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3552243   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3552244   +   end;
MPRINT(EM_DIAGRAM):   end;
3552245   +end;
MPRINT(EM_DIAGRAM):   end;
3552246   +
3552247   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3552248   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3552249   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3552250   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3552251   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3552252   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3552253   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3552254   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3552255   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3552256   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3552257   +end;
MPRINT(EM_DIAGRAM):   end;
3552258   +I_DepVar = REG3_3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_3DRF[_IY];
3552259   +U_DepVar = REG3_3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_3DRU[_IY];
3552260   +
3552261   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552262   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3552263   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552264   +end;
MPRINT(EM_DIAGRAM):   end;
3552265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552266   +* Group: ^(cv_var =4);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =4);
3552267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552268   +if (cv_var =4)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =4) then do;
3552269   +_XVAL_=4;
MPRINT(EM_DIAGRAM):   _XVAL_=4;
3552270   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552271   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3552272   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552273   +
3552274   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3552275   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3552276   +
3552277   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3552278   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3552279   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3552280   +array REG3_4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_4DRF [2] $12 _temporary_ ('1' '0' );
3552281   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3552282   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3552283   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3552284   +ARRAY REG3_4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_4DRU[2] _TEMPORARY_ (1 0);
3552285   +
3552286   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3552287   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3552288   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3552289   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3552290   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3552291   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552292   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3552293   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552294   +end;
MPRINT(EM_DIAGRAM):   end;
3552295   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552296   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3552297   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3552298   +   end;
MPRINT(EM_DIAGRAM):   end;
3552299   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3552300   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3552301   +   end;
MPRINT(EM_DIAGRAM):   end;
3552302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552303   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552304   +   end;
MPRINT(EM_DIAGRAM):   end;
3552305   +end;
MPRINT(EM_DIAGRAM):   end;
3552306   +
3552307   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3552308   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3552309   +
3552310   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3552311   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3552312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552314   +end;
MPRINT(EM_DIAGRAM):   end;
3552315   +
3552316   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3552317   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3552318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552320   +end;
MPRINT(EM_DIAGRAM):   end;
3552321   +
3552322   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3552323   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3552324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552326   +end;
MPRINT(EM_DIAGRAM):   end;
3552327   +
3552328   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3552329   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3552330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552332   +end;
MPRINT(EM_DIAGRAM):   end;
3552333   +
3552334   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3552335   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3552336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552338   +end;
MPRINT(EM_DIAGRAM):   end;
3552339   +
3552340   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3552341   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3552342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552344   +end;
MPRINT(EM_DIAGRAM):   end;
3552345   +
3552346   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3552347   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3552348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552350   +end;
MPRINT(EM_DIAGRAM):   end;
3552351   +
3552352   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3552353   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3552354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552356   +end;
MPRINT(EM_DIAGRAM):   end;
3552357   +
3552358   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3552359   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3552360   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3552361   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3552362   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3552363   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3552364   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3552365   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3552366   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552367   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552368   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552369   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552372   +end;
MPRINT(EM_DIAGRAM):   end;
3552373   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552374   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3552375   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3552376   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552377   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3552378   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3552379   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3552380   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3552381   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3552382   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552383   +         end;
MPRINT(EM_DIAGRAM):   end;
3552384   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3552385   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3552386   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3552387   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552388   +            end;
MPRINT(EM_DIAGRAM):   end;
3552389   +         end;
MPRINT(EM_DIAGRAM):   end;
3552390   +      end;
MPRINT(EM_DIAGRAM):   end;
3552391   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552392   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3552393   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3552394   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552395   +         end;
MPRINT(EM_DIAGRAM):   end;
3552396   +      end;
MPRINT(EM_DIAGRAM):   end;
3552397   +   end;
MPRINT(EM_DIAGRAM):   end;
3552398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552399   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3552400   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3552401   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552402   +      end;
MPRINT(EM_DIAGRAM):   end;
3552403   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552404   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3552405   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3552406   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3552407   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3552408   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3552409   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552410   +         end;
MPRINT(EM_DIAGRAM):   end;
3552411   +      end;
MPRINT(EM_DIAGRAM):   end;
3552412   +   end;
MPRINT(EM_DIAGRAM):   end;
3552413   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3552414   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552415   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552416   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552417   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3552419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552420   +   end;
MPRINT(EM_DIAGRAM):   end;
3552421   +end;
MPRINT(EM_DIAGRAM):   end;
3552422   +
3552423   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3552424   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3552425   +   _P0 = 0.1371115174;
MPRINT(EM_DIAGRAM):   _P0 = 0.1371115174;
3552426   +   _P1 = 0.8628884826;
MPRINT(EM_DIAGRAM):   _P1 = 0.8628884826;
3552427   +   goto REG3_4DR1;
MPRINT(EM_DIAGRAM):   goto REG3_4DR1;
3552428   +end;
MPRINT(EM_DIAGRAM):   end;
3552429   +
3552430   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3552431   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3552432   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3552433   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3552434   +
3552435   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3552436   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3552437   +_LP0 = _LP0 + (    0.99347379102565) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99347379102565) * _TEMP * _1_0;
3552438   +_LP0 = _LP0 + (     -1.249678858048) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.249678858048) * _TEMP * _1_1;
3552439   +_LP0 = _LP0 + (    1.04740638545062) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04740638545062) * _TEMP * _1_2;
3552440   +_LP0 = _LP0 + (   -1.52782236591702) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.52782236591702) * _TEMP * _1_3;
3552441   +
3552442   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3552443   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3552444   +_LP0 = _LP0 + (    25.6263750594805 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.6263750594805 * _TEMP);
3552445   +
3552446   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3552447   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3552448   +_LP0 = _LP0 + (    -17.400997674421 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -17.400997674421 * _TEMP);
3552449   +
3552450   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3552451   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3552452   +_LP0 = _LP0 + (    11.6983595942938 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.6983595942938 * _TEMP);
3552453   +
3552454   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3552455   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3552456   +_LP0 = _LP0 + (    36.1261154661485 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 36.1261154661485 * _TEMP);
3552457   +
3552458   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3552459   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3552460   +_LP0 = _LP0 + (    43.5439352077278 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 43.5439352077278 * _TEMP);
3552461   +
3552462   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3552463   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3552464   +_LP0 = _LP0 + (   -13.9703756646369 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.9703756646369 * _TEMP);
3552465   +
3552466   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3552467   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3552468   +_LP0 = _LP0 + (    35.6886429548531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 35.6886429548531 * _TEMP);
3552469   +
3552470   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3552471   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3552472   +_LP0 = _LP0 + (    24.6781395719623 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 24.6781395719623 * _TEMP);
3552473   +
3552474   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3552475   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3552476   +_LP0 = _LP0 + (    9.50749188563887 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.50749188563887 * _TEMP);
3552477   +
3552478   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3552479   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3552480   +_TEMP =    -13.1009637271714 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -13.1009637271714 + _LP0;
3552481   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3552482   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3552483   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3552484   +end;
MPRINT(EM_DIAGRAM):   end;
3552485   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3552486   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3552487   +
3552488   +REG3_4DR1:
3552489   +
3552490   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_4DR1: *** Residuals;
3552491   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3552492   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3552493   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3552494   +end;
MPRINT(EM_DIAGRAM):   end;
3552495   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552496   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3552497   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3552498   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3552499   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3552500   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3552501   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3552502   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3552503   +   end;
MPRINT(EM_DIAGRAM):   end;
3552504   +end;
MPRINT(EM_DIAGRAM):   end;
3552505   +
3552506   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3552507   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3552508   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3552509   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3552510   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3552511   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3552512   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3552513   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3552514   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3552515   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3552516   +end;
MPRINT(EM_DIAGRAM):   end;
3552517   +I_DepVar = REG3_4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_4DRF[_IY];
3552518   +U_DepVar = REG3_4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_4DRU[_IY];
3552519   +
3552520   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552521   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3552522   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552523   +end;
MPRINT(EM_DIAGRAM):   end;
3552524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552525   +* Group: ^(cv_var =5);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =5);
3552526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552527   +if (cv_var =5)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =5) then do;
3552528   +_XVAL_=5;
MPRINT(EM_DIAGRAM):   _XVAL_=5;
3552529   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552530   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3552531   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552532   +
3552533   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3552534   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3552535   +
3552536   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3552537   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3552538   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3552539   +array REG3_5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_5DRF [2] $12 _temporary_ ('1' '0' );
3552540   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3552541   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3552542   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3552543   +ARRAY REG3_5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_5DRU[2] _TEMPORARY_ (1 0);
3552544   +
3552545   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3552546   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3552547   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3552548   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3552549   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3552550   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552551   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3552552   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552553   +end;
MPRINT(EM_DIAGRAM):   end;
3552554   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552555   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3552556   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3552557   +   end;
MPRINT(EM_DIAGRAM):   end;
3552558   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3552559   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3552560   +   end;
MPRINT(EM_DIAGRAM):   end;
3552561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552562   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552563   +   end;
MPRINT(EM_DIAGRAM):   end;
3552564   +end;
MPRINT(EM_DIAGRAM):   end;
3552565   +
3552566   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3552567   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3552568   +
3552569   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3552570   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3552571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552573   +end;
MPRINT(EM_DIAGRAM):   end;
3552574   +
3552575   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3552576   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3552577   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552578   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552579   +end;
MPRINT(EM_DIAGRAM):   end;
3552580   +
3552581   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3552582   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3552583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552585   +end;
MPRINT(EM_DIAGRAM):   end;
3552586   +
3552587   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3552588   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3552589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552591   +end;
MPRINT(EM_DIAGRAM):   end;
3552592   +
3552593   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3552594   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3552595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552597   +end;
MPRINT(EM_DIAGRAM):   end;
3552598   +
3552599   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3552600   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3552601   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552602   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552603   +end;
MPRINT(EM_DIAGRAM):   end;
3552604   +
3552605   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3552606   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3552607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552609   +end;
MPRINT(EM_DIAGRAM):   end;
3552610   +
3552611   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3552612   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3552613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552615   +end;
MPRINT(EM_DIAGRAM):   end;
3552616   +
3552617   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3552618   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3552619   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3552620   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3552621   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3552622   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3552623   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3552624   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3552625   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552626   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552627   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552628   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552631   +end;
MPRINT(EM_DIAGRAM):   end;
3552632   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552633   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3552634   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3552635   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552636   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3552637   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3552638   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3552639   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3552640   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3552641   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552642   +         end;
MPRINT(EM_DIAGRAM):   end;
3552643   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3552644   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3552645   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3552646   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552647   +            end;
MPRINT(EM_DIAGRAM):   end;
3552648   +         end;
MPRINT(EM_DIAGRAM):   end;
3552649   +      end;
MPRINT(EM_DIAGRAM):   end;
3552650   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552651   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3552652   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3552653   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552654   +         end;
MPRINT(EM_DIAGRAM):   end;
3552655   +      end;
MPRINT(EM_DIAGRAM):   end;
3552656   +   end;
MPRINT(EM_DIAGRAM):   end;
3552657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552658   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3552659   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3552660   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552661   +      end;
MPRINT(EM_DIAGRAM):   end;
3552662   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552663   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3552664   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3552665   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3552666   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3552667   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3552668   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552669   +         end;
MPRINT(EM_DIAGRAM):   end;
3552670   +      end;
MPRINT(EM_DIAGRAM):   end;
3552671   +   end;
MPRINT(EM_DIAGRAM):   end;
3552672   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3552673   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552674   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552675   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552676   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3552678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552679   +   end;
MPRINT(EM_DIAGRAM):   end;
3552680   +end;
MPRINT(EM_DIAGRAM):   end;
3552681   +
3552682   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3552683   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3552684   +   _P0 = 0.1407876867;
MPRINT(EM_DIAGRAM):   _P0 = 0.1407876867;
3552685   +   _P1 = 0.8592123133;
MPRINT(EM_DIAGRAM):   _P1 = 0.8592123133;
3552686   +   goto REG3_5DR1;
MPRINT(EM_DIAGRAM):   goto REG3_5DR1;
3552687   +end;
MPRINT(EM_DIAGRAM):   end;
3552688   +
3552689   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3552690   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3552691   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3552692   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3552693   +
3552694   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3552695   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3552696   +_LP0 = _LP0 + (    1.02117137121456) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.02117137121456) * _TEMP * _1_0;
3552697   +_LP0 = _LP0 + (   -1.24291307052906) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.24291307052906) * _TEMP * _1_1;
3552698   +_LP0 = _LP0 + (    0.79936695761458) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.79936695761458) * _TEMP * _1_2;
3552699   +_LP0 = _LP0 + (   -1.63775184002936) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.63775184002936) * _TEMP * _1_3;
3552700   +
3552701   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3552702   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3552703   +_LP0 = _LP0 + (    27.4903123752783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 27.4903123752783 * _TEMP);
3552704   +
3552705   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3552706   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3552707   +_LP0 = _LP0 + (   -15.0001160217982 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.0001160217982 * _TEMP);
3552708   +
3552709   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3552710   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3552711   +_LP0 = _LP0 + (     11.589180897991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.589180897991 * _TEMP);
3552712   +
3552713   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3552714   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3552715   +_LP0 = _LP0 + (    37.4344913845479 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.4344913845479 * _TEMP);
3552716   +
3552717   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3552718   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3552719   +_LP0 = _LP0 + (    49.1309050852856 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 49.1309050852856 * _TEMP);
3552720   +
3552721   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3552722   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3552723   +_LP0 = _LP0 + (   -12.1925827555019 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -12.1925827555019 * _TEMP);
3552724   +
3552725   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3552726   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3552727   +_LP0 = _LP0 + (    27.5436818249704 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 27.5436818249704 * _TEMP);
3552728   +
3552729   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3552730   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3552731   +_LP0 = _LP0 + (    26.8411577407027 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 26.8411577407027 * _TEMP);
3552732   +
3552733   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3552734   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3552735   +_LP0 = _LP0 + (    6.34895715845929 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6.34895715845929 * _TEMP);
3552736   +
3552737   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3552738   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3552739   +_TEMP =    -14.0931745829506 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -14.0931745829506 + _LP0;
3552740   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3552741   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3552742   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3552743   +end;
MPRINT(EM_DIAGRAM):   end;
3552744   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3552745   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3552746   +
3552747   +REG3_5DR1:
3552748   +
3552749   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_5DR1: *** Residuals;
3552750   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3552751   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3552752   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3552753   +end;
MPRINT(EM_DIAGRAM):   end;
3552754   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552755   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3552756   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3552757   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3552758   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3552759   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3552760   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3552761   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3552762   +   end;
MPRINT(EM_DIAGRAM):   end;
3552763   +end;
MPRINT(EM_DIAGRAM):   end;
3552764   +
3552765   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3552766   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3552767   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3552768   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3552769   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3552770   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3552771   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3552772   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3552773   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3552774   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3552775   +end;
MPRINT(EM_DIAGRAM):   end;
3552776   +I_DepVar = REG3_5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_5DRF[_IY];
3552777   +U_DepVar = REG3_5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_5DRU[_IY];
3552778   +
3552779   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552780   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3552781   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552782   +end;
MPRINT(EM_DIAGRAM):   end;
3552783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552784   +* Group: ^(cv_var =6);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =6);
3552785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3552786   +if (cv_var =6)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =6) then do;
3552787   +_XVAL_=6;
MPRINT(EM_DIAGRAM):   _XVAL_=6;
3552788   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552789   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3552790   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3552791   +
3552792   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3552793   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3552794   +
3552795   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3552796   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3552797   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3552798   +array REG3_6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_6DRF [2] $12 _temporary_ ('1' '0' );
3552799   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3552800   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3552801   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3552802   +ARRAY REG3_6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_6DRU[2] _TEMPORARY_ (1 0);
3552803   +
3552804   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3552805   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3552806   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3552807   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3552808   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3552809   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552810   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3552811   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552812   +end;
MPRINT(EM_DIAGRAM):   end;
3552813   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552814   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3552815   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3552816   +   end;
MPRINT(EM_DIAGRAM):   end;
3552817   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3552818   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3552819   +   end;
MPRINT(EM_DIAGRAM):   end;
3552820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552821   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3552822   +   end;
MPRINT(EM_DIAGRAM):   end;
3552823   +end;
MPRINT(EM_DIAGRAM):   end;
3552824   +
3552825   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3552826   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3552827   +
3552828   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3552829   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3552830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552832   +end;
MPRINT(EM_DIAGRAM):   end;
3552833   +
3552834   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3552835   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3552836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552838   +end;
MPRINT(EM_DIAGRAM):   end;
3552839   +
3552840   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3552841   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3552842   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552844   +end;
MPRINT(EM_DIAGRAM):   end;
3552845   +
3552846   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3552847   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3552848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552850   +end;
MPRINT(EM_DIAGRAM):   end;
3552851   +
3552852   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3552853   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3552854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552856   +end;
MPRINT(EM_DIAGRAM):   end;
3552857   +
3552858   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3552859   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3552860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552862   +end;
MPRINT(EM_DIAGRAM):   end;
3552863   +
3552864   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3552865   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3552866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552868   +end;
MPRINT(EM_DIAGRAM):   end;
3552869   +
3552870   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3552871   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3552872   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3552873   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3552874   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3552875   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3552876   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3552877   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3552878   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552879   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552880   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552881   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3552883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552884   +end;
MPRINT(EM_DIAGRAM):   end;
3552885   +else do;
MPRINT(EM_DIAGRAM):   else do;
3552886   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3552887   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3552888   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3552889   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3552890   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3552891   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3552892   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3552893   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3552894   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552895   +         end;
MPRINT(EM_DIAGRAM):   end;
3552896   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3552897   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3552898   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3552899   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552900   +            end;
MPRINT(EM_DIAGRAM):   end;
3552901   +         end;
MPRINT(EM_DIAGRAM):   end;
3552902   +      end;
MPRINT(EM_DIAGRAM):   end;
3552903   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552904   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3552905   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3552906   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552907   +         end;
MPRINT(EM_DIAGRAM):   end;
3552908   +      end;
MPRINT(EM_DIAGRAM):   end;
3552909   +   end;
MPRINT(EM_DIAGRAM):   end;
3552910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3552911   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3552912   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3552913   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552914   +      end;
MPRINT(EM_DIAGRAM):   end;
3552915   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3552916   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3552917   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3552918   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3552919   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3552920   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3552921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3552922   +         end;
MPRINT(EM_DIAGRAM):   end;
3552923   +      end;
MPRINT(EM_DIAGRAM):   end;
3552924   +   end;
MPRINT(EM_DIAGRAM):   end;
3552925   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3552926   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3552927   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3552928   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3552929   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3552930   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3552931   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3552932   +   end;
MPRINT(EM_DIAGRAM):   end;
3552933   +end;
MPRINT(EM_DIAGRAM):   end;
3552934   +
3552935   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3552936   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3552937   +   _P0 = 0.1388127854;
MPRINT(EM_DIAGRAM):   _P0 = 0.1388127854;
3552938   +   _P1 = 0.8611872146;
MPRINT(EM_DIAGRAM):   _P1 = 0.8611872146;
3552939   +   goto REG3_6DR1;
MPRINT(EM_DIAGRAM):   goto REG3_6DR1;
3552940   +end;
MPRINT(EM_DIAGRAM):   end;
3552941   +
3552942   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3552943   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3552944   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3552945   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3552946   +
3552947   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3552948   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3552949   +_LP0 = _LP0 + (    1.01182794637653) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01182794637653) * _TEMP * _1_0;
3552950   +_LP0 = _LP0 + (   -1.32309416671542) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.32309416671542) * _TEMP * _1_1;
3552951   +_LP0 = _LP0 + (    0.88328465903732) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.88328465903732) * _TEMP * _1_2;
3552952   +_LP0 = _LP0 + (   -1.79489091296899) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.79489091296899) * _TEMP * _1_3;
3552953   +
3552954   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3552955   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3552956   +_LP0 = _LP0 + (    26.2840249438678 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 26.2840249438678 * _TEMP);
3552957   +
3552958   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
3552959   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
3552960   +_LP0 = _LP0 + (    -68.246247660204 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -68.246247660204 * _TEMP);
3552961   +
3552962   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3552963   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3552964   +_LP0 = _LP0 + (   -11.9841426342291 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.9841426342291 * _TEMP);
3552965   +
3552966   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3552967   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3552968   +_LP0 = _LP0 + (    13.1903523365172 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.1903523365172 * _TEMP);
3552969   +
3552970   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3552971   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3552972   +_LP0 = _LP0 + (    38.0080217809621 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 38.0080217809621 * _TEMP);
3552973   +
3552974   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3552975   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3552976   +_LP0 = _LP0 + (    51.1808998805074 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 51.1808998805074 * _TEMP);
3552977   +
3552978   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3552979   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3552980   +_LP0 = _LP0 + (   -16.7062327924002 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -16.7062327924002 * _TEMP);
3552981   +
3552982   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3552983   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3552984   +_LP0 = _LP0 + (     34.283083593586 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 34.283083593586 * _TEMP);
3552985   +
3552986   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3552987   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3552988   +_LP0 = _LP0 + (    25.2746687972476 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.2746687972476 * _TEMP);
3552989   +
3552990   +***  Effect: NumWebPurchases*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*NumWebPurchases ;
3552991   +_TEMP = NumWebPurchases  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * NumWebPurchases ;
3552992   +_LP0 = _LP0 + (    79.0900216539386 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 79.0900216539386 * _TEMP);
3552993   +
3552994   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3552995   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3552996   +_TEMP =    -0.14564401691823 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -0.14564401691823 + _LP0;
3552997   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3552998   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3552999   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3553000   +end;
MPRINT(EM_DIAGRAM):   end;
3553001   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3553002   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3553003   +
3553004   +REG3_6DR1:
3553005   +
3553006   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_6DR1: *** Residuals;
3553007   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3553008   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3553009   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3553010   +end;
MPRINT(EM_DIAGRAM):   end;
3553011   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553012   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3553013   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3553014   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3553015   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3553016   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3553017   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3553018   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3553019   +   end;
MPRINT(EM_DIAGRAM):   end;
3553020   +end;
MPRINT(EM_DIAGRAM):   end;
3553021   +
3553022   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3553023   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3553024   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3553025   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3553026   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3553027   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3553028   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3553029   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3553030   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3553031   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3553032   +end;
MPRINT(EM_DIAGRAM):   end;
3553033   +I_DepVar = REG3_6DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_6DRF[_IY];
3553034   +U_DepVar = REG3_6DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_6DRU[_IY];
3553035   +
3553036   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553037   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3553038   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553039   +end;
MPRINT(EM_DIAGRAM):   end;
3553040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553041   +* Group: ^(cv_var =7);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =7);
3553042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553043   +if (cv_var =7)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =7) then do;
3553044   +_XVAL_=7;
MPRINT(EM_DIAGRAM):   _XVAL_=7;
3553045   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553046   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3553047   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553048   +
3553049   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3553050   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3553051   +
3553052   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3553053   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3553054   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3553055   +array REG3_7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_7DRF [2] $12 _temporary_ ('1' '0' );
3553056   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3553057   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3553058   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3553059   +ARRAY REG3_7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_7DRU[2] _TEMPORARY_ (1 0);
3553060   +
3553061   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3553062   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3553063   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3553064   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3553065   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3553066   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553067   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3553068   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553069   +end;
MPRINT(EM_DIAGRAM):   end;
3553070   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553071   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3553072   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3553073   +   end;
MPRINT(EM_DIAGRAM):   end;
3553074   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3553075   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3553076   +   end;
MPRINT(EM_DIAGRAM):   end;
3553077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553078   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553079   +   end;
MPRINT(EM_DIAGRAM):   end;
3553080   +end;
MPRINT(EM_DIAGRAM):   end;
3553081   +
3553082   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3553083   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3553084   +
3553085   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3553086   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3553087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553089   +end;
MPRINT(EM_DIAGRAM):   end;
3553090   +
3553091   +*** Check MntMagazines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMagazines for missing values ;
3553092   +if missing( MntMagazines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMagazines ) then do;
3553093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553095   +end;
MPRINT(EM_DIAGRAM):   end;
3553096   +
3553097   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3553098   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3553099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553101   +end;
MPRINT(EM_DIAGRAM):   end;
3553102   +
3553103   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3553104   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3553105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553107   +end;
MPRINT(EM_DIAGRAM):   end;
3553108   +
3553109   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3553110   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3553111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553113   +end;
MPRINT(EM_DIAGRAM):   end;
3553114   +
3553115   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3553116   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3553117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553119   +end;
MPRINT(EM_DIAGRAM):   end;
3553120   +
3553121   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3553122   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3553123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553125   +end;
MPRINT(EM_DIAGRAM):   end;
3553126   +
3553127   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3553128   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3553129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553131   +end;
MPRINT(EM_DIAGRAM):   end;
3553132   +
3553133   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3553134   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3553135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553137   +end;
MPRINT(EM_DIAGRAM):   end;
3553138   +
3553139   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3553140   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3553141   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3553142   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3553143   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3553144   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3553145   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3553146   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3553147   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553148   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553149   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553150   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553153   +end;
MPRINT(EM_DIAGRAM):   end;
3553154   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553155   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3553156   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3553157   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553158   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3553159   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3553160   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3553161   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3553162   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3553163   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553164   +         end;
MPRINT(EM_DIAGRAM):   end;
3553165   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3553166   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3553167   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3553168   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553169   +            end;
MPRINT(EM_DIAGRAM):   end;
3553170   +         end;
MPRINT(EM_DIAGRAM):   end;
3553171   +      end;
MPRINT(EM_DIAGRAM):   end;
3553172   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553173   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3553174   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3553175   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553176   +         end;
MPRINT(EM_DIAGRAM):   end;
3553177   +      end;
MPRINT(EM_DIAGRAM):   end;
3553178   +   end;
MPRINT(EM_DIAGRAM):   end;
3553179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553180   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3553181   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3553182   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553183   +      end;
MPRINT(EM_DIAGRAM):   end;
3553184   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553185   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3553186   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3553187   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3553188   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3553189   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3553190   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553191   +         end;
MPRINT(EM_DIAGRAM):   end;
3553192   +      end;
MPRINT(EM_DIAGRAM):   end;
3553193   +   end;
MPRINT(EM_DIAGRAM):   end;
3553194   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3553195   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553196   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553197   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553198   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3553200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553201   +   end;
MPRINT(EM_DIAGRAM):   end;
3553202   +end;
MPRINT(EM_DIAGRAM):   end;
3553203   +
3553204   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3553205   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3553206   +   _P0 = 0.1362807657;
MPRINT(EM_DIAGRAM):   _P0 = 0.1362807657;
3553207   +   _P1 = 0.8637192343;
MPRINT(EM_DIAGRAM):   _P1 = 0.8637192343;
3553208   +   goto REG3_7DR1;
MPRINT(EM_DIAGRAM):   goto REG3_7DR1;
3553209   +end;
MPRINT(EM_DIAGRAM):   end;
3553210   +
3553211   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3553212   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3553213   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3553214   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3553215   +
3553216   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3553217   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3553218   +_LP0 = _LP0 + (    0.96655867438765) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.96655867438765) * _TEMP * _1_0;
3553219   +_LP0 = _LP0 + (   -1.37923265528798) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.37923265528798) * _TEMP * _1_1;
3553220   +_LP0 = _LP0 + (    0.96622246991031) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.96622246991031) * _TEMP * _1_2;
3553221   +_LP0 = _LP0 + (   -1.73642149379113) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.73642149379113) * _TEMP * _1_3;
3553222   +
3553223   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3553224   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3553225   +_LP0 = _LP0 + (    40.5239018618328 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 40.5239018618328 * _TEMP);
3553226   +
3553227   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3553228   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3553229   +_LP0 = _LP0 + (    37.3942926198467 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.3942926198467 * _TEMP);
3553230   +
3553231   +***  Effect: MntMagazines*MntMagazines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMagazines*MntMagazines ;
3553232   +_TEMP = MntMagazines  * MntMagazines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMagazines * MntMagazines ;
3553233   +_LP0 = _LP0 + (   -21.8797161256705 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -21.8797161256705 * _TEMP);
3553234   +
3553235   +***  Effect: NumCatalogPurchases*NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases*NumCatalogPurchases ;
3553236   +_TEMP = NumCatalogPurchases  * NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases * NumCatalogPurchases ;
3553237   +_LP0 = _LP0 + (   -35.1420960436994 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -35.1420960436994 * _TEMP);
3553238   +
3553239   +***  Effect: NumCatalogPurchases*RANGE_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases*RANGE_Frq ;
3553240   +_TEMP = NumCatalogPurchases  * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases * RANGE_Frq ;
3553241   +_LP0 = _LP0 + (    17.6140544823686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 17.6140544823686 * _TEMP);
3553242   +
3553243   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3553244   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3553245   +_LP0 = _LP0 + (    25.3866365743095 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.3866365743095 * _TEMP);
3553246   +
3553247   +***  Effect: NumDealsPurchases*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumWebPurchases ;
3553248   +_TEMP = NumDealsPurchases  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumWebPurchases ;
3553249   +_LP0 = _LP0 + (    41.2127868194016 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 41.2127868194016 * _TEMP);
3553250   +
3553251   +***  Effect: NumDealsPurchases*RANGE_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Frq ;
3553252   +_TEMP = NumDealsPurchases  * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Frq ;
3553253   +_LP0 = _LP0 + (   -23.4703162359313 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -23.4703162359313 * _TEMP);
3553254   +
3553255   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3553256   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3553257   +_LP0 = _LP0 + (    41.4336934506916 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 41.4336934506916 * _TEMP);
3553258   +
3553259   +***  Effect: NumWebPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*RANGE_Recency ;
3553260   +_TEMP = NumWebPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * RANGE_Recency ;
3553261   +_LP0 = _LP0 + (    -35.770232488261 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -35.770232488261 * _TEMP);
3553262   +
3553263   +***  Effect: NumWebPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases*RANGE_campaign_acceptance ;
3553264   +_TEMP = NumWebPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases * RANGE_campaign_acceptance ;
3553265   +_LP0 = _LP0 + (    37.4854029110071 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.4854029110071 * _TEMP);
3553266   +
3553267   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3553268   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3553269   +_TEMP =    -17.8750395023975 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -17.8750395023975 + _LP0;
3553270   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3553271   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3553272   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3553273   +end;
MPRINT(EM_DIAGRAM):   end;
3553274   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3553275   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3553276   +
3553277   +REG3_7DR1:
3553278   +
3553279   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_7DR1: *** Residuals;
3553280   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3553281   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3553282   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3553283   +end;
MPRINT(EM_DIAGRAM):   end;
3553284   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553285   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3553286   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3553287   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3553288   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3553289   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3553290   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3553291   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3553292   +   end;
MPRINT(EM_DIAGRAM):   end;
3553293   +end;
MPRINT(EM_DIAGRAM):   end;
3553294   +
3553295   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3553296   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3553297   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3553298   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3553299   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3553300   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3553301   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3553302   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3553303   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3553304   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3553305   +end;
MPRINT(EM_DIAGRAM):   end;
3553306   +I_DepVar = REG3_7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_7DRF[_IY];
3553307   +U_DepVar = REG3_7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_7DRU[_IY];
3553308   +
3553309   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553310   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3553311   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553312   +end;
MPRINT(EM_DIAGRAM):   end;
3553313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553314   +* Group: ^(cv_var =8);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =8);
3553315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553316   +if (cv_var =8)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =8) then do;
3553317   +_XVAL_=8;
MPRINT(EM_DIAGRAM):   _XVAL_=8;
3553318   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553319   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3553320   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553321   +
3553322   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3553323   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3553324   +
3553325   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3553326   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3553327   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3553328   +array REG3_8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_8DRF [2] $12 _temporary_ ('1' '0' );
3553329   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3553330   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3553331   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3553332   +ARRAY REG3_8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_8DRU[2] _TEMPORARY_ (1 0);
3553333   +
3553334   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3553335   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3553336   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3553337   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3553338   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3553339   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553340   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3553341   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553342   +end;
MPRINT(EM_DIAGRAM):   end;
3553343   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553344   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3553345   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3553346   +   end;
MPRINT(EM_DIAGRAM):   end;
3553347   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3553348   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3553349   +   end;
MPRINT(EM_DIAGRAM):   end;
3553350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553351   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553352   +   end;
MPRINT(EM_DIAGRAM):   end;
3553353   +end;
MPRINT(EM_DIAGRAM):   end;
3553354   +
3553355   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3553356   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3553357   +
3553358   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3553359   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3553360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553362   +end;
MPRINT(EM_DIAGRAM):   end;
3553363   +
3553364   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3553365   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3553366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553368   +end;
MPRINT(EM_DIAGRAM):   end;
3553369   +
3553370   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3553371   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3553372   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553374   +end;
MPRINT(EM_DIAGRAM):   end;
3553375   +
3553376   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3553377   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3553378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553380   +end;
MPRINT(EM_DIAGRAM):   end;
3553381   +
3553382   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3553383   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3553384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553386   +end;
MPRINT(EM_DIAGRAM):   end;
3553387   +
3553388   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3553389   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3553390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553392   +end;
MPRINT(EM_DIAGRAM):   end;
3553393   +
3553394   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3553395   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3553396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553398   +end;
MPRINT(EM_DIAGRAM):   end;
3553399   +
3553400   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3553401   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3553402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553404   +end;
MPRINT(EM_DIAGRAM):   end;
3553405   +
3553406   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3553407   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3553408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3553409   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3553410   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3553411   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3553412   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3553413   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3553414   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553415   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553416   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553417   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553420   +end;
MPRINT(EM_DIAGRAM):   end;
3553421   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553422   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3553423   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3553424   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553425   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3553426   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3553427   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3553428   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3553429   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3553430   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553431   +         end;
MPRINT(EM_DIAGRAM):   end;
3553432   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3553433   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3553434   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3553435   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553436   +            end;
MPRINT(EM_DIAGRAM):   end;
3553437   +         end;
MPRINT(EM_DIAGRAM):   end;
3553438   +      end;
MPRINT(EM_DIAGRAM):   end;
3553439   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553440   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3553441   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3553442   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553443   +         end;
MPRINT(EM_DIAGRAM):   end;
3553444   +      end;
MPRINT(EM_DIAGRAM):   end;
3553445   +   end;
MPRINT(EM_DIAGRAM):   end;
3553446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553447   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3553448   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3553449   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553450   +      end;
MPRINT(EM_DIAGRAM):   end;
3553451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553452   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3553453   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3553454   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3553455   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3553456   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3553457   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553458   +         end;
MPRINT(EM_DIAGRAM):   end;
3553459   +      end;
MPRINT(EM_DIAGRAM):   end;
3553460   +   end;
MPRINT(EM_DIAGRAM):   end;
3553461   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3553462   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553463   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553464   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553465   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3553467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553468   +   end;
MPRINT(EM_DIAGRAM):   end;
3553469   +end;
MPRINT(EM_DIAGRAM):   end;
3553470   +
3553471   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3553472   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3553473   +   _P0 = 0.1334841629;
MPRINT(EM_DIAGRAM):   _P0 = 0.1334841629;
3553474   +   _P1 = 0.8665158371;
MPRINT(EM_DIAGRAM):   _P1 = 0.8665158371;
3553475   +   goto REG3_8DR1;
MPRINT(EM_DIAGRAM):   goto REG3_8DR1;
3553476   +end;
MPRINT(EM_DIAGRAM):   end;
3553477   +
3553478   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3553479   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3553480   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3553481   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3553482   +
3553483   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3553484   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3553485   +_LP0 = _LP0 + (    1.05341890046678) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.05341890046678) * _TEMP * _1_0;
3553486   +_LP0 = _LP0 + (   -1.19329117919287) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19329117919287) * _TEMP * _1_1;
3553487   +_LP0 = _LP0 + (    1.09722689667561) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.09722689667561) * _TEMP * _1_2;
3553488   +_LP0 = _LP0 + (   -1.62971983500123) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.62971983500123) * _TEMP * _1_3;
3553489   +
3553490   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3553491   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3553492   +_LP0 = _LP0 + (    26.5147603094263 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 26.5147603094263 * _TEMP);
3553493   +
3553494   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3553495   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3553496   +_LP0 = _LP0 + (   -15.1700250432743 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.1700250432743 * _TEMP);
3553497   +
3553498   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3553499   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3553500   +_LP0 = _LP0 + (    11.8179313570406 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 11.8179313570406 * _TEMP);
3553501   +
3553502   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3553503   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3553504   +_LP0 = _LP0 + (    37.0557224234241 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.0557224234241 * _TEMP);
3553505   +
3553506   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3553507   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3553508   +_LP0 = _LP0 + (    51.4245587833932 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 51.4245587833932 * _TEMP);
3553509   +
3553510   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3553511   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3553512   +_LP0 = _LP0 + (   -12.5194135609714 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -12.5194135609714 * _TEMP);
3553513   +
3553514   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3553515   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3553516   +_LP0 = _LP0 + (    25.3055237224813 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 25.3055237224813 * _TEMP);
3553517   +
3553518   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3553519   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
The SAS System
 
3553520   +_LP0 = _LP0 + (    31.5124687302289 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 31.5124687302289 * _TEMP);
3553521   +
3553522   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3553523   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3553524   +_LP0 = _LP0 + (    7.17260488020695 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.17260488020695 * _TEMP);
3553525   +
3553526   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3553527   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3553528   +_TEMP =    -14.1217970221632 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -14.1217970221632 + _LP0;
3553529   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3553530   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3553531   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3553532   +end;
MPRINT(EM_DIAGRAM):   end;
3553533   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3553534   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3553535   +
3553536   +REG3_8DR1:
3553537   +
3553538   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_8DR1: *** Residuals;
3553539   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3553540   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3553541   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3553542   +end;
MPRINT(EM_DIAGRAM):   end;
3553543   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553544   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3553545   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3553546   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3553547   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3553548   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3553549   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3553550   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3553551   +   end;
MPRINT(EM_DIAGRAM):   end;
3553552   +end;
MPRINT(EM_DIAGRAM):   end;
3553553   +
3553554   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3553555   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3553556   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3553557   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3553558   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3553559   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3553560   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3553561   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3553562   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3553563   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3553564   +end;
MPRINT(EM_DIAGRAM):   end;
3553565   +I_DepVar = REG3_8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_8DRF[_IY];
3553566   +U_DepVar = REG3_8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_8DRU[_IY];
3553567   +
3553568   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553569   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3553570   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553571   +end;
MPRINT(EM_DIAGRAM):   end;
3553572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553573   +* Group: ^(cv_var =9);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =9);
3553574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553575   +if (cv_var =9)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =9) then do;
3553576   +_XVAL_=9;
MPRINT(EM_DIAGRAM):   _XVAL_=9;
3553577   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553578   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3553579   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553580   +
3553581   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3553582   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3553583   +
3553584   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3553585   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3553586   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3553587   +array REG3_9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_9DRF [2] $12 _temporary_ ('1' '0' );
3553588   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3553589   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3553590   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3553591   +ARRAY REG3_9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_9DRU[2] _TEMPORARY_ (1 0);
3553592   +
3553593   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3553594   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3553595   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3553596   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3553597   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3553598   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553599   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3553600   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553601   +end;
MPRINT(EM_DIAGRAM):   end;
3553602   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553603   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3553604   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3553605   +   end;
MPRINT(EM_DIAGRAM):   end;
3553606   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3553607   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3553608   +   end;
MPRINT(EM_DIAGRAM):   end;
3553609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553610   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553611   +   end;
MPRINT(EM_DIAGRAM):   end;
3553612   +end;
MPRINT(EM_DIAGRAM):   end;
3553613   +
3553614   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3553615   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3553616   +
3553617   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3553618   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3553619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553621   +end;
MPRINT(EM_DIAGRAM):   end;
3553622   +
3553623   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3553624   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3553625   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553627   +end;
MPRINT(EM_DIAGRAM):   end;
3553628   +
3553629   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3553630   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3553631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553633   +end;
MPRINT(EM_DIAGRAM):   end;
3553634   +
3553635   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3553636   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3553637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553639   +end;
MPRINT(EM_DIAGRAM):   end;
3553640   +
3553641   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3553642   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3553643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553645   +end;
MPRINT(EM_DIAGRAM):   end;
3553646   +
3553647   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3553648   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3553649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553651   +end;
MPRINT(EM_DIAGRAM):   end;
3553652   +
3553653   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3553654   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3553655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553657   +end;
MPRINT(EM_DIAGRAM):   end;
3553658   +
3553659   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3553660   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3553661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553663   +end;
MPRINT(EM_DIAGRAM):   end;
3553664   +
3553665   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3553666   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3553667   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3553668   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3553669   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3553670   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3553671   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3553672   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3553673   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553674   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553675   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553676   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553679   +end;
MPRINT(EM_DIAGRAM):   end;
3553680   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553681   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3553682   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3553683   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553684   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3553685   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3553686   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3553687   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3553688   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3553689   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553690   +         end;
MPRINT(EM_DIAGRAM):   end;
3553691   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3553692   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3553693   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3553694   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553695   +            end;
MPRINT(EM_DIAGRAM):   end;
3553696   +         end;
MPRINT(EM_DIAGRAM):   end;
3553697   +      end;
MPRINT(EM_DIAGRAM):   end;
3553698   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553699   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3553700   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3553701   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553702   +         end;
MPRINT(EM_DIAGRAM):   end;
3553703   +      end;
MPRINT(EM_DIAGRAM):   end;
3553704   +   end;
MPRINT(EM_DIAGRAM):   end;
3553705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553706   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3553707   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3553708   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553709   +      end;
MPRINT(EM_DIAGRAM):   end;
3553710   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553711   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3553712   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3553713   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3553714   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3553715   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3553716   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553717   +         end;
MPRINT(EM_DIAGRAM):   end;
3553718   +      end;
MPRINT(EM_DIAGRAM):   end;
3553719   +   end;
MPRINT(EM_DIAGRAM):   end;
3553720   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3553721   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553722   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553723   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553724   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3553726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553727   +   end;
MPRINT(EM_DIAGRAM):   end;
3553728   +end;
MPRINT(EM_DIAGRAM):   end;
3553729   +
3553730   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3553731   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3553732   +   _P0 = 0.1412454874;
MPRINT(EM_DIAGRAM):   _P0 = 0.1412454874;
3553733   +   _P1 = 0.8587545126;
MPRINT(EM_DIAGRAM):   _P1 = 0.8587545126;
3553734   +   goto REG3_9DR1;
MPRINT(EM_DIAGRAM):   goto REG3_9DR1;
3553735   +end;
MPRINT(EM_DIAGRAM):   end;
3553736   +
3553737   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3553738   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3553739   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3553740   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3553741   +
3553742   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3553743   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3553744   +_LP0 = _LP0 + (    0.92673814467647) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.92673814467647) * _TEMP * _1_0;
3553745   +_LP0 = _LP0 + (   -1.18765352180004) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.18765352180004) * _TEMP * _1_1;
3553746   +_LP0 = _LP0 + (    1.05279088559479) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.05279088559479) * _TEMP * _1_2;
3553747   +_LP0 = _LP0 + (   -1.69453766829666) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.69453766829666) * _TEMP * _1_3;
3553748   +
3553749   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3553750   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3553751   +_LP0 = _LP0 + (    27.7141203990461 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 27.7141203990461 * _TEMP);
3553752   +
3553753   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3553754   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3553755   +_LP0 = _LP0 + (    -17.857872017464 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -17.857872017464 * _TEMP);
3553756   +
3553757   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3553758   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3553759   +_LP0 = _LP0 + (    12.8709398287869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 12.8709398287869 * _TEMP);
3553760   +
3553761   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3553762   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3553763   +_LP0 = _LP0 + (     38.766147016007 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 38.766147016007 * _TEMP);
3553764   +
3553765   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3553766   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3553767   +_LP0 = _LP0 + (     41.096208973821 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 41.096208973821 * _TEMP);
3553768   +
3553769   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3553770   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3553771   +_LP0 = _LP0 + (    24.5063606840366 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 24.5063606840366 * _TEMP);
3553772   +
3553773   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3553774   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3553775   +_LP0 = _LP0 + (    21.4108585607915 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 21.4108585607915 * _TEMP);
3553776   +
3553777   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3553778   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3553779   +_LP0 = _LP0 + (    8.09307152410641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 8.09307152410641 * _TEMP);
3553780   +
3553781   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3553782   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3553783   +_TEMP =    -14.1877215027064 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -14.1877215027064 + _LP0;
3553784   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3553785   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3553786   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3553787   +end;
MPRINT(EM_DIAGRAM):   end;
3553788   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3553789   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3553790   +
3553791   +REG3_9DR1:
3553792   +
3553793   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_9DR1: *** Residuals;
3553794   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3553795   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3553796   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3553797   +end;
MPRINT(EM_DIAGRAM):   end;
3553798   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553799   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3553800   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3553801   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3553802   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3553803   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3553804   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3553805   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3553806   +   end;
MPRINT(EM_DIAGRAM):   end;
3553807   +end;
MPRINT(EM_DIAGRAM):   end;
3553808   +
3553809   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3553810   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3553811   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3553812   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3553813   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3553814   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3553815   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3553816   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3553817   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3553818   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3553819   +end;
MPRINT(EM_DIAGRAM):   end;
3553820   +I_DepVar = REG3_9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_9DRF[_IY];
3553821   +U_DepVar = REG3_9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_9DRU[_IY];
3553822   +
3553823   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553824   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3553825   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553826   +end;
MPRINT(EM_DIAGRAM):   end;
3553827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553828   +* Group: ^(cv_var =10);
MPRINT(EM_DIAGRAM):   * Group: ^(cv_var =10);
3553829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3553830   +if (cv_var =10)  then do;
MPRINT(EM_DIAGRAM):   if (cv_var =10) then do;
3553831   +_XVAL_=10;
MPRINT(EM_DIAGRAM):   _XVAL_=10;
3553832   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553833   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3553834   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3553835   +
3553836   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3553837   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3553838   +
3553839   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3553840   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3553841   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3553842   +array REG3_10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3_10DRF [2] $12 _temporary_ ('1' '0' );
3553843   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3553844   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3553845   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3553846   +ARRAY REG3_10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3_10DRU[2] _TEMPORARY_ (1 0);
3553847   +
3553848   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3553849   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3553850   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3553851   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3553852   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3553853   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553854   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3553855   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553856   +end;
MPRINT(EM_DIAGRAM):   end;
3553857   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553858   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3553859   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3553860   +   end;
MPRINT(EM_DIAGRAM):   end;
3553861   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3553862   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3553863   +   end;
MPRINT(EM_DIAGRAM):   end;
3553864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553865   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3553866   +   end;
MPRINT(EM_DIAGRAM):   end;
3553867   +end;
MPRINT(EM_DIAGRAM):   end;
3553868   +
3553869   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3553870   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3553871   +
3553872   +*** Check MntCard_Games for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntCard_Games for missing values ;
3553873   +if missing( MntCard_Games ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntCard_Games ) then do;
3553874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553876   +end;
MPRINT(EM_DIAGRAM):   end;
3553877   +
3553878   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
3553879   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
3553880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553882   +end;
MPRINT(EM_DIAGRAM):   end;
3553883   +
3553884   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3553885   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3553886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553888   +end;
MPRINT(EM_DIAGRAM):   end;
3553889   +
3553890   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
3553891   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
3553892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553894   +end;
MPRINT(EM_DIAGRAM):   end;
3553895   +
3553896   +*** Check RANGE_Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Frq for missing values ;
3553897   +if missing( RANGE_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Frq ) then do;
3553898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553900   +end;
MPRINT(EM_DIAGRAM):   end;
3553901   +
3553902   +*** Check RANGE_Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_Recency for missing values ;
3553903   +if missing( RANGE_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_Recency ) then do;
3553904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553906   +end;
MPRINT(EM_DIAGRAM):   end;
3553907   +
3553908   +*** Check RANGE_average_purchase for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_average_purchase for missing values ;
3553909   +if missing( RANGE_average_purchase ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_average_purchase ) then do;
3553910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553912   +end;
MPRINT(EM_DIAGRAM):   end;
3553913   +
3553914   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RANGE_campaign_acceptance for missing values ;
3553915   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(EM_DIAGRAM):   if missing( RANGE_campaign_acceptance ) then do;
3553916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553918   +end;
MPRINT(EM_DIAGRAM):   end;
3553919   +
3553920   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3553921   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
3553922   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3553923   +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
3553924   +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
3553925   +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
3553926   +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
3553927   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3553928   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553929   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553930   +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553931   +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3553933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553934   +end;
MPRINT(EM_DIAGRAM):   end;
3553935   +else do;
MPRINT(EM_DIAGRAM):   else do;
3553936   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3553937   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3553938   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3553939   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3553940   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3553941   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3553942   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3553943   +            _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
3553944   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553945   +         end;
MPRINT(EM_DIAGRAM):   end;
3553946   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3553947   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3553948   +               _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
3553949   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553950   +            end;
MPRINT(EM_DIAGRAM):   end;
3553951   +         end;
MPRINT(EM_DIAGRAM):   end;
3553952   +      end;
MPRINT(EM_DIAGRAM):   end;
3553953   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553954   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3553955   +            _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
3553956   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553957   +         end;
MPRINT(EM_DIAGRAM):   end;
3553958   +      end;
MPRINT(EM_DIAGRAM):   end;
3553959   +   end;
MPRINT(EM_DIAGRAM):   end;
3553960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3553961   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3553962   +         _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
3553963   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553964   +      end;
MPRINT(EM_DIAGRAM):   end;
3553965   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3553966   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3553967   +            _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
3553968   +            _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
3553969   +            _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
3553970   +            _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
3553971   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3553972   +         end;
MPRINT(EM_DIAGRAM):   end;
3553973   +      end;
MPRINT(EM_DIAGRAM):   end;
3553974   +   end;
MPRINT(EM_DIAGRAM):   end;
3553975   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3553976   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
3553977   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
3553978   +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
3553979   +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
3553980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3553981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3553982   +   end;
MPRINT(EM_DIAGRAM):   end;
3553983   +end;
MPRINT(EM_DIAGRAM):   end;
3553984   +
3553985   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3553986   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3553987   +   _P0 = 0.1379310345;
MPRINT(EM_DIAGRAM):   _P0 = 0.1379310345;
3553988   +   _P1 = 0.8620689655;
MPRINT(EM_DIAGRAM):   _P1 = 0.8620689655;
3553989   +   goto REG3_10DR1;
MPRINT(EM_DIAGRAM):   goto REG3_10DR1;
3553990   +end;
MPRINT(EM_DIAGRAM):   end;
3553991   +
3553992   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3553993   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3553994   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3553995   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3553996   +
3553997   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3553998   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3553999   +_LP0 = _LP0 + (    0.90330090436951) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.90330090436951) * _TEMP * _1_0;
3554000   +_LP0 = _LP0 + (   -1.37553360695696) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.37553360695696) * _TEMP * _1_1;
3554001   +_LP0 = _LP0 + (    0.92066961566325) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.92066961566325) * _TEMP * _1_2;
3554002   +_LP0 = _LP0 + (   -1.59453373035712) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.59453373035712) * _TEMP * _1_3;
3554003   +
3554004   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
3554005   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
3554006   +_LP0 = _LP0 + (    28.4256964396873 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 28.4256964396873 * _TEMP);
3554007   +
3554008   +***  Effect: RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency ;
3554009   +_TEMP = RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency ;
3554010   +_LP0 = _LP0 + (   -14.4502286728023 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.4502286728023 * _TEMP);
3554011   +
3554012   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_campaign_acceptance ;
3554013   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_campaign_acceptance ;
3554014   +_LP0 = _LP0 + (    14.2095012555908 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.2095012555908 * _TEMP);
3554015   +
3554016   +***  Effect: MntCard_Games*NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: MntCard_Games*NumWebPurchases ;
3554017   +_TEMP = MntCard_Games  * NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = MntCard_Games * NumWebPurchases ;
3554018   +_LP0 = _LP0 + (     39.872620410657 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 39.872620410657 * _TEMP);
3554019   +
3554020   +***  Effect: NumDealsPurchases*NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*NumDealsPurchases ;
3554021   +_TEMP = NumDealsPurchases  * NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * NumDealsPurchases ;
3554022   +_LP0 = _LP0 + (    54.7238739876447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 54.7238739876447 * _TEMP);
3554023   +
3554024   +***  Effect: NumDealsPurchases*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_Recency ;
3554025   +_TEMP = NumDealsPurchases  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_Recency ;
3554026   +_LP0 = _LP0 + (   -14.9237677955755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.9237677955755 * _TEMP);
3554027   +
3554028   +***  Effect: NumDealsPurchases*RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_average_purchase ;
3554029   +_TEMP = NumDealsPurchases  * RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_average_purchase ;
3554030   +_LP0 = _LP0 + (    24.2538062846118 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 24.2538062846118 * _TEMP);
3554031   +
3554032   +***  Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases*RANGE_campaign_acceptance ;
3554033   +_TEMP = NumDealsPurchases  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases * RANGE_campaign_acceptance ;
3554034   +_LP0 = _LP0 + (    30.5202194797507 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 30.5202194797507 * _TEMP);
3554035   +
3554036   +***  Effect: RANGE_Frq*RANGE_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Frq*RANGE_Recency ;
3554037   +_TEMP = RANGE_Frq  * RANGE_Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Frq * RANGE_Recency ;
3554038   +_LP0 = _LP0 + (    6.84479139239876 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6.84479139239876 * _TEMP);
3554039   +
3554040   +***  Effect: RANGE_Recency*RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** Effect: RANGE_Recency*RANGE_campaign_acceptance ;
3554041   +_TEMP = RANGE_Recency  * RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   _TEMP = RANGE_Recency * RANGE_campaign_acceptance ;
3554042   +_LP0 = _LP0 + (   -4.63740864288079 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.63740864288079 * _TEMP);
3554043   +
3554044   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3554045   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3554046   +_TEMP =    -15.1702074127842 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -15.1702074127842 + _LP0;
3554047   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3554048   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3554049   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3554050   +end;
MPRINT(EM_DIAGRAM):   end;
3554051   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3554052   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3554053   +
3554054   +REG3_10DR1:
3554055   +
3554056   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3_10DR1: *** Residuals;
3554057   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3554058   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3554059   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3554060   +end;
MPRINT(EM_DIAGRAM):   end;
3554061   +else do;
MPRINT(EM_DIAGRAM):   else do;
3554062   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3554063   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3554064   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3554065   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3554066   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3554067   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3554068   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3554069   +   end;
MPRINT(EM_DIAGRAM):   end;
3554070   +end;
MPRINT(EM_DIAGRAM):   end;
3554071   +
3554072   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3554073   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3554074   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3554075   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3554076   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3554077   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3554078   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3554079   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3554080   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3554081   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3554082   +end;
MPRINT(EM_DIAGRAM):   end;
3554083   +I_DepVar = REG3_10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3_10DRF[_IY];
3554084   +U_DepVar = REG3_10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3_10DRU[_IY];
3554085   +
3554086   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3554087   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3554088   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3554089   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3554090    run;
 
NOTE: DATA STEP view saved on file EMWS1.REG3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.GRP7_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3554091    quit;
3554092    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.Reg3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3554116    data EMWS1.Reg3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMOUTFIT;
3554117    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3554118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.REG3_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3554119    data EMWS1.Reg3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMOUTFIT;
3554120    set EMWS1.Reg3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMOUTFIT;
3554121    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3554122    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3554122  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3554123    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3554124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMOUTFIT.
NOTE: The data set EMWS1.REG3_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3554125    proc sort data=EMWS1.Reg3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_EMREPORTFIT nothreads;
3554126    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3554127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.REG3_EMREPORTFIT.
NOTE: The data set EMWS1.REG3_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3554128    %let _EMwarndup = 0;
3554129    %let _EMtargetdup =;
3554130    %let _EMASEtargetdup =;
3554131    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3554132    set EMWS1.Reg3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMOUTFIT;
3554133    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3554134    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3554135    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3554136    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3554137    end;
MPRINT(EM_DIAGRAM):   end;
3554138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3554139    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3554140    * Reg3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg3: Computing metadata for TRAIN data;
3554141    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Reg3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Reg3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Reg3_TRAIN out=WORK.M2L29YSN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2L29YSN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2L29YSN(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2L29YSN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2L29YSN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2240YZT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z5CTO3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   set WORK.M2240YZT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Grp7_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Grp7_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg3";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'MARITAL_STATUS' 'MNTCARD_GAMES'
'NUMCATALOGPURCHASES' 'NUMDEALSPURCHASES' 'NUMWEBPURCHASES' 'RANGE_FRQ' 'RANGE_RECENCY'
'RANGE_AVERAGE_PURCHASE' 'RANGE_CAMPAIGN_ACCEPTANCE' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3554508    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3554509    set EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO;
3554510    where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3554511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.REG3_EMINFO.
      WHERE (DATA='Reg3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3554512    data EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMINFO;
3554513    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3554514    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3554515    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3554519    run;
3554520    data EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMINFO;
3554521    set EMWS1.Reg3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMINFO WORK.MODELTEMP_INFO;
3554522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3554523    proc sort data = EMWS1.Reg3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg3_EMINFO NOTHREADS;
3554524    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3554525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: The data set EMWS1.REG3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3554526    proc sort data = EMWS1.Grp7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Grp7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3554527    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3554528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3554529    proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3554530    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3554531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.REG3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3554532    data EMWS1.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMINFO;
3554533    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3554534    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3554535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.REG3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3554536    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3554537    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3554538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3554539    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
3554540    proc sort data=EMWS1.Grp7_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Grp7_CMeta_TRAIN out=WORK.SUBSETINMETA;
3554541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3554542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.GRP7_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3554543    proc sort data=EMWS1.Reg3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3554544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3554545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.REG3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3554546    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3554547    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3554548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3554549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 11 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 14 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3554550    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3554551    set EMWS1.Reg3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_CMeta_TRAIN;
3554552    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3554552  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3554553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.REG3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3554554    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3554555    set EMWS1.Reg3_TRAIN(keep=
3554556    F_DepVar
3554557    I_DepVar
3554558    P_DepVar0
3554559    P_DepVar1
3554560    R_DepVar0
3554561    R_DepVar1
3554562    U_DepVar
3554563    _WARN_
3554564    DepVar
3554565    );
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3554566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.REG3_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.GRP7_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.REG3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Reg3_147YE7F nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Reg3_147YE7F;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Reg3_147YE7F(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Reg3_147YE7F;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Reg3_147YE7F;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.774017125934E-12 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3558853    %let grouptarget=0;
3558854    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3558855    set EMWS1.Grp7_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp7_EMLOOPINFO;
3558856    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3558857    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3558858    stop;
MPRINT(EM_DIAGRAM):   stop;
3558859    end;
MPRINT(EM_DIAGRAM):   end;
3558860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP7_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3558861    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3558862    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558863    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558864    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558864  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558865    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558866    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558867    set EMWS1.Reg3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMOUTFIT;
3558868    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558869    data EMWS1.Reg3_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMOUTFIT_LOOP;
3558870    set EMWS1.Reg3_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMOUTFIT_LOOP work.EMOUTFIT;
3558871    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.REG3_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.REG3_EMOUTFIT_LOOP has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3558872    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3558873    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558874    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558875    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558875  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558876    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558877    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558878    set EMWS1.Reg3_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMREPORTFIT;
3558879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.REG3_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3558880    data EMWS1.Reg3_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMREPORTFIT_LOOP;
3558881    set EMWS1.Reg3_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMREPORTFIT_LOOP work.EMREPORTFIT;
3558882    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.REG3_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.REG3_EMREPORTFIT_LOOP has 209 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558883    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3558884    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558885    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558886    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558886  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558887    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558888    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558889    set EMWS1.Reg3_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMRANK;
3558890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3558891    data EMWS1.Reg3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMRANK_LOOP;
3558892    set EMWS1.Reg3_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMRANK_LOOP work.EMRANK;
3558893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.REG3_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.REG3_EMRANK_LOOP has 220 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558894    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3558895    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558896    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558897    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558897  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558898    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558899    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558900    set EMWS1.Reg3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMSCOREDIST;
3558901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG3_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558902    data EMWS1.Reg3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMSCOREDIST_LOOP;
3558903    set EMWS1.Reg3_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMSCOREDIST_LOOP work.EMSCOREDIST;
3558904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.REG3_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.REG3_EMSCOREDIST_LOOP has 220 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558905    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3558906    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558907    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558908    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558908  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558909    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558910    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558911    set EMWS1.Reg3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMCLASSIFICATION;
3558912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG3_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558913    data EMWS1.Reg3_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMCLASSIFICATION_LOOP;
3558914    set EMWS1.Reg3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3558915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.REG3_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.REG3_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558916    proc sort data=EMWS1.Reg3_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_EMCLASSIFICATION_LOOP out=_temp;
3558917    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558918    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3558919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.REG3_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3558920    data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount totalPercent)
3558920  ! ;
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL totalCount
totalPercent);
3558921    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3558922    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3558923    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558924    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3558925    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3558926    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3558927    end;
MPRINT(EM_DIAGRAM):   end;
3558928    else do;
MPRINT(EM_DIAGRAM):   else do;
3558929    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3558930    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3558931    end;
MPRINT(EM_DIAGRAM):   end;
3558932    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3558933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558934    data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount eventPercent)
3558934  ! ;
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL eventCount
eventPercent);
3558935    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3558936    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3558937    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558938    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3558939    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3558940    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3558941    end;
MPRINT(EM_DIAGRAM):   end;
3558942    else do;
MPRINT(EM_DIAGRAM):   else do;
3558943    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3558944    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3558945    end;
MPRINT(EM_DIAGRAM):   end;
3558946    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3558947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558948    data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
3558948  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ DATAROLE TARGET TARGETLABEL neventCount
neventPercent);
3558949    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3558950    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3558951    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558952    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3558953    if first._LOOP_ or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.target or first.datarole then do;
3558954    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3558955    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3558956    end;
MPRINT(EM_DIAGRAM):   end;
3558957    else do;
MPRINT(EM_DIAGRAM):   else do;
3558958    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3558959    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3558960    end;
MPRINT(EM_DIAGRAM):   end;
3558961    if last._LOOP_ or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.target or last.datarole then output;
3558962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558963    data EMWS1.Reg3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMMISC_LOOP;
3558964    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3558965    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558966    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3558966  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3558966  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3558967       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3558967  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3558967  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3558968       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3558968  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3558969    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3558970    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3558971    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3558972    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3558973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.REG3_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
3558974    proc sort data=EMWS1.Reg3_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg3_EMMISC_LOOP;
3558975    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3558976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.REG3_EMMISC_LOOP.
NOTE: The data set EMWS1.REG3_EMMISC_LOOP has 11 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3558977    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3558978    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3558979    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3558980    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3558980  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3558981    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3558982    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3558983    set EMWS1.Reg3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMEVENTREPORT;
3558984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG3_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558985    data EMWS1.Reg3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMEVENTREPORT_LOOP;
3558986    set EMWS1.Reg3_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMEVENTREPORT_LOOP work.EMEVENTREPORT;
3558987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.REG3_EMEVENTREPORT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.REG3_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3558988    %let _cn = %sysfunc(getoption(CENTER));
3558989    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3558990    proc print data=EMWS1.Reg3_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Reg3_EMREPORTFIT_LOOP noobs label;
3558991    var STAT LABEL TRAIN
3558992    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3558993    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3558994    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3558995    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3558996    run;
 
NOTE: There were 209 observations read from the data set EMWS1.REG3_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2349.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3558997    title10;
MPRINT(EM_DIAGRAM):   title10;
3558998    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3558999    proc sort data=EMWS1.Reg3_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg3_EMCLASSIFICATION_LOOP nothreads;
3559000    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3559001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.REG3_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.REG3_EMCLASSIFICATION_LOOP has 44 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3559002    %let _cn = %sysfunc(getoption(CENTER));
3559003    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3559004    proc print data=EMWS1.Reg3_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Reg3_EMCLASSIFICATION_LOOP noobs label;
3559005    var from into pct_row pct_col count percent
3559006    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3559007    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3559008    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3559009    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3559010    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3559011    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3559012    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3559013    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3559014    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3559015    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3559016    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3559017    run;
 
NOTE: There were 44 observations read from the data set EMWS1.REG3_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2350.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3559018    title9;
MPRINT(EM_DIAGRAM):   title9;
3559019    title10;
MPRINT(EM_DIAGRAM):   title10;
3559020    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3559021    %let _cn = %sysfunc(getoption(CENTER));
3559022    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3559023    data EMWS1.Reg3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.Reg3_EMEVENTREPORT_LOOP;
3559024    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3559024  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3559025    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3559025  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3559025  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3559025  ! FALSEEVENT
3559026    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3559026  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3559026  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3559027       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3559028    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3559029    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3559030    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3559031    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3559032    set EMWS1.Reg3_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg3_EMEVENTREPORT_LOOP;
3559033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.REG3_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.REG3_EMEVENTREPORT_LOOP has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3559034    proc print data=EMWS1.Reg3_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Reg3_EMEVENTREPORT_LOOP noobs label;
3559035    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3559036    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3559037    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3559038    run;
 
NOTE: There were 11 observations read from the data set EMWS1.REG3_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2351.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3559039    title10;
MPRINT(EM_DIAGRAM):   title10;
3559040    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3559041    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3559042    modify Reg3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify Reg3_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3559043    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3559044    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3559044  ! ;
MPRINT(EM_DIAGRAM):   run;
3559045    run;
 
NOTE: MODIFY was successful for EMWS1.REG3_EMRANK_LOOP.DATA.
3559046    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3559047    %let _cn = %sysfunc(getoption(CENTER));
3559048    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3559049    proc print data=EMWS1.Reg3_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Reg3_EMRANK_LOOP label noobs;
3559050    var
3559051    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3559052    by
3559053    notsorted DATAROLE
3559054    notsorted _WHERE_
3559055    notsorted TARGET
3559056    notsorted TARGETLABEL
3559057    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3559058    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3559059    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3559060    run;
 
NOTE: There were 220 observations read from the data set EMWS1.REG3_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2352.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3559061    title10;
MPRINT(EM_DIAGRAM):   title10;
3559062    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3559063    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3559064    modify Reg3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify Reg3_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3559065    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3559065  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3559066    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3559066  ! ;
MPRINT(EM_DIAGRAM):   run;
3559067    run;
 
NOTE: MODIFY was successful for EMWS1.REG3_EMSCOREDIST_LOOP.DATA.
3559068    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
3559069    %let _cn = %sysfunc(getoption(CENTER));
3559070    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3559071    proc print data=EMWS1.Reg3_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Reg3_EMSCOREDIST_LOOP label noobs;
3559072    var
3559073    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3559074    by
3559075    notsorted DATAROLE
3559076    notsorted _WHERE_
3559077    notsorted TARGET
3559078    notsorted TARGETLABEL
3559079    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3559080    where TARGET in(
3559081    "DepVar"
3559082    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3559083    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3559084    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3559085    run;
 
NOTE: There were 220 observations read from the data set EMWS1.REG3_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2353.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3559086    title10;
MPRINT(EM_DIAGRAM):   title10;
3559087    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3559088    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:32 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:06:32 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Reg3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.Reg3_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REGEFFECTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EFFECTS_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ESTIMATEGRID";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_ESTIMATEGRID_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=17;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=18;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="Reg3_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
