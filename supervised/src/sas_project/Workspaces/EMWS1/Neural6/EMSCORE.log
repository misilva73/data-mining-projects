MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:19:05 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:19:05 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2S7MQEA "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2S7MQEA new;
MPRINT(EM_DIAGRAM):   run;
60403      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
60404      set EMWS1.Neural6_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural6_OUTKEY;
60405      if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
60406      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS1.NEURAL6_OUTKEY.
NOTE: The data set WORK.OUTKEY has 17 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

60407      filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60408      *------------------------------------------------------------*;
60409      * Neural6: Scoring DATA data;
60410      *------------------------------------------------------------*;
60411      data EMWS1.Neural6_TRAIN
60412      / view=EMWS1.Neural6_TRAIN
60413      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural6_TRAIN / view=EMWS1.Neural6_TRAIN ;
60414      set EMWS1.Part_TRAIN
60415      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
60416      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas.
60417     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60418     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
60419     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60420     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
60421     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
60422     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
60423     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
60424     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
60425     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
60426     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
60427     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
60428     +LENGTH _WARN_ $4
60429     +      F_DepVar  $ 12
60430     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
60431     +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
60432     +
60433     +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
60434     +
60435     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
60436     +
60437     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
60438     +
60439     +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
60440     +
60441     +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
60442     +
60443     +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
60444     +
60445     +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
60446     +
60447     +      label S_RANGE_campaign_acceptance =
60448     +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
60449     +
60450     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
60451     +
60452     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
60453     +
60454     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
60455     +
60456     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
60457     +
60458     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
60459     +
60460     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
60461     +
60462     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
60463     +
60464     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
60465     +
60466     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
60467     +
60468     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
60469     +
60470     +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
60471     +
60472     +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
60473     +
60474     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
60475     +
60476     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60477     +
60478     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
60479     +
60480     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
60481     +
60482     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
60483     +
60484     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
60485     +
60486     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
60487     +
60488     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
60489     +
60490     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
60491     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
60492     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
60493     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
60494     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
60495     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
60496     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
60497     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
60498     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
60499     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60500     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60501     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60502     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60503     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60504     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60505     +end;
MPRINT(EM_DIAGRAM):   end;
60506     +else do;
MPRINT(EM_DIAGRAM):   else do;
60507     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
60508     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
60509     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
60510     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60511     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
60512     +      if _dm8 <= 'MARRIED'  then do;
60513     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
60514     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
60515     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
60516     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60517     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
60518     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
60519     +               Marital_StatusMarried = 1;
60520     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
60521     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
60522     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
60523     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60524     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
60525     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
60526     +            Marital_StatusSingle = 1;
60527     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
60528     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
60529     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
60530     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60531     +   else do;
MPRINT(EM_DIAGRAM):   end;
60532     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
60533     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
60534     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
60535     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
60536     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
60537     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60538     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
60539     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
60540     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
60541     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
60542     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60543     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60544     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60545     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60546     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60547     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60548     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
60549     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
60550     +      Marital_StatusTogether = .;
60551     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
60552     +      _DM_BAD = 1;
60553     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
60554     +end;
60555     +
60556     +*** *************************;
60557     +*** Checking missing input Interval
60558     +*** *************************;
60559     +
60560     +IF NMISS(
60561     +   MntCard_Games ,
60562     +   MntMagazines ,
60563     +   NumCatalogPurchases ,
60564     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
60565     +   NumWebPurchases ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
60566     +   RANGE_Frq ,
60567     +   RANGE_Recency ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60568     +   RANGE_average_purchase ,
MPRINT(EM_DIAGRAM):   END;
60569     +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
60570     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
60571     +
MPRINT(EM_DIAGRAM):   *** *************************;
60572     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60573     +END;
60574     +*** *************************;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.29552053621136 + 6.58526682455081 * MntCard_Games ;
60575     +*** Writing the Node intvl ;
60576     +*** *************************;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82293757807429 + 17.2690037990877 * MntMagazines ;
60577     +IF _DM_BAD EQ 0 THEN DO;
60578     +   S_MntCard_Games  =    -2.29552053621136 +     6.58526682455081 *
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.13390881283003 + 13.5906280879322 * NumCatalogPurchases ;
60579     +        MntCard_Games ;
60580     +   S_MntMagazines  =    -0.82293757807429 +     17.2690037990877 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41465463186291 + 11.0318603521921 * NumDealsPurchases ;
60581     +        MntMagazines ;
60582     +   S_NumCatalogPurchases  =    -3.13390881283003 +     13.5906280879322 *
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24785908864246 + 12.283402083256 * NumWebPurchases ;
60583     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36303513338452 + 4.21654196784367 * RANGE_Frq ;
60584     +   S_NumDealsPurchases  =    -1.41465463186291 +     11.0318603521921 *
60585     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65915928443681 + 3.37794970549188 * RANGE_Recency ;
60586     +   S_NumWebPurchases  =    -5.24785908864246 +      12.283402083256 *
60587     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0387883165722 + 5.11361054117627 * RANGE_average_purchase ;
60588     +   S_RANGE_Frq  =    -1.36303513338452 +     4.21654196784367 * RANGE_Frq ;
60589     +   S_RANGE_Recency  =    -1.65915928443681 +     3.37794970549188 *
60590     +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4736186337401 + 5.76461537066529 * RANGE_campaign_acceptance ;
60591     +   S_RANGE_average_purchase  =     -1.0387883165722 +     5.11361054117627 *
MPRINT(EM_DIAGRAM):   END;
60592     +        RANGE_average_purchase ;
60593     +   S_RANGE_campaign_acceptance
MPRINT(EM_DIAGRAM):   ELSE DO;
60594     +          =     -0.4736186337401 +     5.76461537066529 *
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
60595     +        RANGE_campaign_acceptance ;
60596     +END;
60597     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.29552053621136 + 6.58526682455081 * MntCard_Games ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
60598     +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
60599     +   ELSE S_MntCard_Games  =    -2.29552053621136 +     6.58526682455081 *
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82293757807429 + 17.2690037990877 * MntMagazines ;
60600     +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
60601     +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
60602     +   ELSE S_MntMagazines  =    -0.82293757807429 +     17.2690037990877 *
60603     +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.13390881283003 + 13.5906280879322 * NumCatalogPurchases ;
60604     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
60605     +   ELSE S_NumCatalogPurchases
60606     +          =    -3.13390881283003 +     13.5906280879322 * NumCatalogPurchases
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41465463186291 + 11.0318603521921 * NumDealsPurchases ;
60607     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
60608     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
60609     +   ELSE S_NumDealsPurchases  =    -1.41465463186291 +     11.0318603521921 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24785908864246 + 12.283402083256 * NumWebPurchases ;
60610     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
60611     +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
60612     +   ELSE S_NumWebPurchases  =    -5.24785908864246 +      12.283402083256 *
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36303513338452 + 4.21654196784367 * RANGE_Frq ;
60613     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
60614     +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
60615     +   ELSE S_RANGE_Frq  =    -1.36303513338452 +     4.21654196784367 * RANGE_Frq
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65915928443681 + 3.37794970549188 * RANGE_Recency ;
60616     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
60617     +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
60618     +   ELSE S_RANGE_Recency  =    -1.65915928443681 +     3.37794970549188 *
60619     +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0387883165722 + 5.11361054117627 * RANGE_average_purchase ;
60620     +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
60621     +   ELSE S_RANGE_average_purchase
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
60622     +          =     -1.0387883165722 +     5.11361054117627 *
60623     +        RANGE_average_purchase ;
60624     +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4736186337401 + 5.76461537066529 * RANGE_campaign_acceptance ;
60625     +          = . ;
MPRINT(EM_DIAGRAM):   END;
60626     +   ELSE S_RANGE_campaign_acceptance
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
60627     +          =     -0.4736186337401 +     5.76461537066529 *
MPRINT(EM_DIAGRAM):   *** *************************;
60628     +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   *** *************************;
60629     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
60630     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60631     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60632     +*** *************************;
60633     +*** *************************;
60634     +*** Writing the Node H1 ;
60635     +*** *************************;
60636     +IF _DM_BAD EQ 0 THEN DO;
60637     +   H11  =     0.20972421718057 * S_MntCard_Games  +    -0.10519753218003 *
60638     +        S_MntMagazines  +     0.15656734847629 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H11 = 0.20972421718057 * S_MntCard_Games + -0.10519753218003 * S_MntMagazines + 0.15656734847629 * S_NumCatalogPurchases + 0.63057160324877 * S_NumDealsPurchases + -0.00737690936149 * S_NumWebPurchases + 0.20053768659238 * 
S_RANGE_Frq + -1.12557480034141 * S_RANGE_Recency + -0.22476100695688 * S_RANGE_average_purchase + 0.28567577425134 * S_RANGE_campaign_acceptance ;
60639     +          +     0.63057160324877 * S_NumDealsPurchases
60640     +          +    -0.00737690936149 * S_NumWebPurchases
60641     +          +     0.20053768659238 * S_RANGE_Frq  +    -1.12557480034141 *
60642     +        S_RANGE_Recency  +    -0.22476100695688 * S_RANGE_average_purchase
60643     +          +     0.28567577425134 * S_RANGE_campaign_acceptance ;
60644     +   H12  =     0.07368864080416 * S_MntCard_Games  +     -0.4223767992421 *
60645     +        S_MntMagazines  +     0.17487060799852 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H12 = 0.07368864080416 * S_MntCard_Games + -0.4223767992421 * S_MntMagazines + 0.17487060799852 * S_NumCatalogPurchases + -0.16663103701637 * S_NumDealsPurchases + 0.4469410823334 * S_NumWebPurchases + 0.07351068357053 * S_RANGE_Frq 
+ 0.2764433150472 * S_RANGE_Recency + 0.25947059452403 * S_RANGE_average_purchase + 0.12894202604451 * S_RANGE_campaign_acceptance ;
60646     +          +    -0.16663103701637 * S_NumDealsPurchases
60647     +          +      0.4469410823334 * S_NumWebPurchases
60648     +          +     0.07351068357053 * S_RANGE_Frq  +      0.2764433150472 *
60649     +        S_RANGE_Recency  +     0.25947059452403 * S_RANGE_average_purchase
60650     +          +     0.12894202604451 * S_RANGE_campaign_acceptance ;
60651     +   H13  =     0.31080135867348 * S_MntCard_Games  +     0.18451282806391 *
60652     +        S_MntMagazines  +      0.1127627139197 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H13 = 0.31080135867348 * S_MntCard_Games + 0.18451282806391 * S_MntMagazines + 0.1127627139197 * S_NumCatalogPurchases + 0.24603022042835 * S_NumDealsPurchases + -0.28013448748239 * S_NumWebPurchases + 0.12933786524903 * S_RANGE_Frq 
+ 0.34733298788257 * S_RANGE_Recency + 0.51115383261532 * S_RANGE_average_purchase + -0.26437219931513 * S_RANGE_campaign_acceptance ;
60653     +          +     0.24603022042835 * S_NumDealsPurchases
60654     +          +    -0.28013448748239 * S_NumWebPurchases
60655     +          +     0.12933786524903 * S_RANGE_Frq  +     0.34733298788257 *
60656     +        S_RANGE_Recency  +     0.51115383261532 * S_RANGE_average_purchase
60657     +          +    -0.26437219931513 * S_RANGE_campaign_acceptance ;
60658     +   H14  =    -0.57033383655748 * S_MntCard_Games  +    -0.33054700873328 *
60659     +        S_MntMagazines  +    -1.02671397545134 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H14 = -0.57033383655748 * S_MntCard_Games + -0.33054700873328 * S_MntMagazines + -1.02671397545134 * S_NumCatalogPurchases + -0.41228604651309 * S_NumDealsPurchases + -0.21819906644753 * S_NumWebPurchases + 0.60269025654631 * 
S_RANGE_Frq + 0.6046180501819 * S_RANGE_Recency + -0.42162410945573 * S_RANGE_average_purchase + -0.20008993427643 * S_RANGE_campaign_acceptance ;
60660     +          +    -0.41228604651309 * S_NumDealsPurchases
60661     +          +    -0.21819906644753 * S_NumWebPurchases
60662     +          +     0.60269025654631 * S_RANGE_Frq  +      0.6046180501819 *
60663     +        S_RANGE_Recency  +    -0.42162410945573 * S_RANGE_average_purchase
60664     +          +    -0.20008993427643 * S_RANGE_campaign_acceptance ;
60665     +   H15  =      0.6093862111979 * S_MntCard_Games  +     0.18205906140977 *
60666     +        S_MntMagazines  +     0.49639052978093 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H15 = 0.6093862111979 * S_MntCard_Games + 0.18205906140977 * S_MntMagazines + 0.49639052978093 * S_NumCatalogPurchases + 0.61953955047886 * S_NumDealsPurchases + -0.23923372893571 * S_NumWebPurchases + -0.19964591826134 * S_RANGE_Frq 
+ -0.20354696929195 * S_RANGE_Recency + 0.54178001423516 * S_RANGE_average_purchase + 0.82116084363342 * S_RANGE_campaign_acceptance ;
60667     +          +     0.61953955047886 * S_NumDealsPurchases
60668     +          +    -0.23923372893571 * S_NumWebPurchases
60669     +          +    -0.19964591826134 * S_RANGE_Frq  +    -0.20354696929195 *
60670     +        S_RANGE_Recency  +     0.54178001423516 * S_RANGE_average_purchase
60671     +          +     0.82116084363342 * S_RANGE_campaign_acceptance ;
60672     +   H16  =    -0.89765621146319 * S_MntCard_Games  +     0.18624358536157 *
60673     +        S_MntMagazines  +    -0.41426005837921 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H16 = -0.89765621146319 * S_MntCard_Games + 0.18624358536157 * S_MntMagazines + -0.41426005837921 * S_NumCatalogPurchases + -0.63819825018964 * S_NumDealsPurchases + -0.75564857992734 * S_NumWebPurchases + -0.24431914212986 * 
S_RANGE_Frq + 1.47078024332987 * S_RANGE_Recency + -0.08214840144887 * S_RANGE_average_purchase + -0.87167436264292 * S_RANGE_campaign_acceptance ;
60674     +          +    -0.63819825018964 * S_NumDealsPurchases
60675     +          +    -0.75564857992734 * S_NumWebPurchases
60676     +          +    -0.24431914212986 * S_RANGE_Frq  +     1.47078024332987 *
60677     +        S_RANGE_Recency  +    -0.08214840144887 * S_RANGE_average_purchase
60678     +          +    -0.87167436264292 * S_RANGE_campaign_acceptance ;
60679     +   H17  =     0.03824306532902 * S_MntCard_Games  +     0.09162051848061 *
60680     +        S_MntMagazines  +     0.25990341633612 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H17 = 0.03824306532902 * S_MntCard_Games + 0.09162051848061 * S_MntMagazines + 0.25990341633612 * S_NumCatalogPurchases + -0.58632763415232 * S_NumDealsPurchases + -0.02683058882616 * S_NumWebPurchases + 0.36070453911153 * 
S_RANGE_Frq + -0.46706817985413 * S_RANGE_Recency + 0.03188715672586 * S_RANGE_average_purchase + 0.27713598915972 * S_RANGE_campaign_acceptance ;
60681     +          +    -0.58632763415232 * S_NumDealsPurchases
60682     +          +    -0.02683058882616 * S_NumWebPurchases
60683     +          +     0.36070453911153 * S_RANGE_Frq  +    -0.46706817985413 *
60684     +        S_RANGE_Recency  +     0.03188715672586 * S_RANGE_average_purchase
60685     +          +     0.27713598915972 * S_RANGE_campaign_acceptance ;
60686     +   H18  =    -0.35178879490005 * S_MntCard_Games  +     -0.2853720173945 *
60687     +        S_MntMagazines  +     0.36904553501501 * S_NumCatalogPurchases
MPRINT(EM_DIAGRAM):   H18 = -0.35178879490005 * S_MntCard_Games + -0.2853720173945 * S_MntMagazines + 0.36904553501501 * S_NumCatalogPurchases + 0.49484726303534 * S_NumDealsPurchases + -0.51224257122634 * S_NumWebPurchases + 0.31503193306354 * 
S_RANGE_Frq + -0.24985277238677 * S_RANGE_Recency + 0.061397741924 * S_RANGE_average_purchase + 0.24571810164181 * S_RANGE_campaign_acceptance ;
60688     +          +     0.49484726303534 * S_NumDealsPurchases
60689     +          +    -0.51224257122634 * S_NumWebPurchases
60690     +          +     0.31503193306354 * S_RANGE_Frq  +    -0.24985277238677 *
60691     +        S_RANGE_Recency  +       0.061397741924 * S_RANGE_average_purchase
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27684891699167 * Marital_StatusDivorced + -0.33031859213239 * Marital_StatusMarried + 0.61699559997992 * Marital_StatusSingle + -0.16243553104357 * Marital_StatusTogether ;
60692     +          +     0.24571810164181 * S_RANGE_campaign_acceptance ;
60693     +   H11  = H11  +     0.27684891699167 * Marital_StatusDivorced
60694     +          +    -0.33031859213239 * Marital_StatusMarried
60695     +          +     0.61699559997992 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.50397359271861 * Marital_StatusDivorced + -0.23570256235163 * Marital_StatusMarried + 0.18671782880144 * Marital_StatusSingle + 0.0300664326928 * Marital_StatusTogether ;
60696     +          +    -0.16243553104357 * Marital_StatusTogether ;
60697     +   H12  = H12  +    -0.50397359271861 * Marital_StatusDivorced
60698     +          +    -0.23570256235163 * Marital_StatusMarried
60699     +          +     0.18671782880144 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10864645717505 * Marital_StatusDivorced + -0.20555700211504 * Marital_StatusMarried + 0.1648370262569 * Marital_StatusSingle + -0.03166337233879 * Marital_StatusTogether ;
60700     +          +      0.0300664326928 * Marital_StatusTogether ;
60701     +   H13  = H13  +    -0.10864645717505 * Marital_StatusDivorced
60702     +          +    -0.20555700211504 * Marital_StatusMarried
60703     +          +      0.1648370262569 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25764039105044 * Marital_StatusDivorced + 0.05281900768859 * Marital_StatusMarried + -0.28955714634595 * Marital_StatusSingle + 0.1811608851228 * Marital_StatusTogether ;
60704     +          +    -0.03166337233879 * Marital_StatusTogether ;
60705     +   H14  = H14  +    -0.25764039105044 * Marital_StatusDivorced
60706     +          +     0.05281900768859 * Marital_StatusMarried
60707     +          +    -0.28955714634595 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.16052554933853 * Marital_StatusDivorced + 0.01235369787171 * Marital_StatusMarried + 0.1227747816279 * Marital_StatusSingle + -0.78421505074531 * Marital_StatusTogether ;
60708     +          +      0.1811608851228 * Marital_StatusTogether ;
60709     +   H15  = H15  +     0.16052554933853 * Marital_StatusDivorced
60710     +          +     0.01235369787171 * Marital_StatusMarried
60711     +          +      0.1227747816279 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.09636185034972 * Marital_StatusDivorced + 0.49379263355192 * Marital_StatusMarried + 0.11693446659268 * Marital_StatusSingle + 0.39504907373164 * Marital_StatusTogether ;
60712     +          +    -0.78421505074531 * Marital_StatusTogether ;
60713     +   H16  = H16  +    -0.09636185034972 * Marital_StatusDivorced
60714     +          +     0.49379263355192 * Marital_StatusMarried
60715     +          +     0.11693446659268 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.63607617128916 * Marital_StatusDivorced + -0.69233427848009 * Marital_StatusMarried + 0.85408778865978 * Marital_StatusSingle + -0.23854465330987 * Marital_StatusTogether ;
60716     +          +     0.39504907373164 * Marital_StatusTogether ;
60717     +   H17  = H17  +     0.63607617128916 * Marital_StatusDivorced
60718     +          +    -0.69233427848009 * Marital_StatusMarried
60719     +          +     0.85408778865978 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H18 = H18 + 0.28535498096797 * Marital_StatusDivorced + -0.22088583509449 * Marital_StatusMarried + -0.10230118240769 * Marital_StatusSingle + -0.41427540923153 * Marital_StatusTogether ;
60720     +          +    -0.23854465330987 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = 0.29714961909337 + H11 ;
60721     +   H18  = H18  +     0.28535498096797 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H12 = 2.28692305168248 + H12 ;
60722     +          +    -0.22088583509449 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H13 = 1.04684893652896 + H13 ;
60723     +          +    -0.10230118240769 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H14 = -0.27835769163672 + H14 ;
60724     +          +    -0.41427540923153 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = -1.48853670189635 + H15 ;
60725     +   H11  =     0.29714961909337 + H11 ;
MPRINT(EM_DIAGRAM):   H16 = 2.02040716755866 + H16 ;
60726     +   H12  =     2.28692305168248 + H12 ;
MPRINT(EM_DIAGRAM):   H17 = -2.1402631431051 + H17 ;
60727     +   H13  =     1.04684893652896 + H13 ;
MPRINT(EM_DIAGRAM):   H18 = -1.77285171982666 + H18 ;
60728     +   H14  =    -0.27835769163672 + H14 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
60729     +   H15  =    -1.48853670189635 + H15 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
60730     +   H16  =     2.02040716755866 + H16 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
60731     +   H17  =     -2.1402631431051 + H17 ;
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
60732     +   H18  =    -1.77285171982666 + H18 ;
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
60733     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
60734     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
60735     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
60736     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   END;
60737     +   H15  = TANH(H15 );
60738     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   ELSE DO;
60739     +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H11 = .;
60740     +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H12 = .;
60741     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
60742     +ELSE DO;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
60743     +   H11  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
60744     +   H12  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
60745     +   H13  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
60746     +   H14  = .;
MPRINT(EM_DIAGRAM):   END;
60747     +   H15  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
60748     +   H16  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
60749     +   H17  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
60750     +   H18  = .;
60751     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
60752     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
60753     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60754     +*** *************************;
60755     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
60756     +*** Generate dummy variables for DepVar ;
60757     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
60758     +label F_DepVar = 'From: DepVar' ;
60759     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
60760     +F_DepVar = put( DepVar , BEST. );
60761     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
60762     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
60763     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
60764     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
60765     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
60766     +else do;
MPRINT(EM_DIAGRAM):   end;
60767     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
60768     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
60769     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
60770     +   end;
MPRINT(EM_DIAGRAM):   end;
60771     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
60772     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
60773     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
60774     +   end;
MPRINT(EM_DIAGRAM):   end;
60775     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
60776     +      DepVar1 = .;
60777     +      DepVar0 = .;
60778     +   end;
60779     +end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.28155484960035 * H11 + 0.37558662649004 * H12 + -0.01491883215668 * H13 + -1.79896740790015 * H14 + 1.54972455239658 * H15 + -2.83834486141497 * H16 + 1.56015981413604 * H17 + 1.15123166934324 * H18 ;
60780     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.56259640307401 + P_DepVar1 ;
60781     +   P_DepVar1  =     2.28155484960035 * H11  +     0.37558662649004 * H12
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
60782     +          +    -0.01491883215668 * H13  +    -1.79896740790015 * H14
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
60783     +          +     1.54972455239658 * H15  +    -2.83834486141497 * H16
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
60784     +          +     1.56015981413604 * H17  +     1.15123166934324 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
60785     +   P_DepVar1  =    -1.56259640307401 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
60786     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
60787     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
60788     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
60789     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
60790     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
60791     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
60792     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
60793     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
60794     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
60795     +END;
MPRINT(EM_DIAGRAM):   END;
60796     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13673708920187;
60797     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86326291079812;
60798     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
60799     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
60800     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
60801     +   P_DepVar1  =     0.13673708920187;
MPRINT(EM_DIAGRAM):   *** ******************************;
60802     +   P_DepVar0  =     0.86326291079812;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
60803     +END;
60804     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
60805     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
60806     +*** ******************************;
60807     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
60808     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
60809     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
60810     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
60811     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
60812     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
60813     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
60814     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
60815     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
60816     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
60817     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
60818     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
60819     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
60820     +   U_DepVar  =                    0;
60821     +END;
60822     +********************************;
60823     +*** End Scoring Code for Neural;
60824     +********************************;
60825     +drop
60826     +S_MntCard_Games
60827     +S_MntMagazines
60828     +S_NumCatalogPurchases
60829     +S_NumDealsPurchases
60830     +S_NumWebPurchases
60831     +S_RANGE_Frq
60832     +S_RANGE_Recency
60833     +S_RANGE_average_purchase
60834     +S_RANGE_campaign_acceptance
60835     +H11
60836     +H12
60837     +H13
60838     +H14
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
60839     +H15
60840     +H16
60841     +H17
60842     +H18
60843     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
60844      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
60845      quit;
60846      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
60847      filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60848      *------------------------------------------------------------*;
60849      * Neural6: Scoring VALIDATE data;
60850      *------------------------------------------------------------*;
60851      data EMWS1.Neural6_VALIDATE
60852      / view=EMWS1.Neural6_VALIDATE
60853      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural6_VALIDATE / view=EMWS1.Neural6_VALIDATE ;
60854      set EMWS1.Part_VALIDATE
60855      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
60856      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\EMFLOWSCORE.sas.
60857     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60858     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
60859     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
60860     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
60861     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
60862     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
60863     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
60864     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
60865     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
60866     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
60867     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
60868     +LENGTH _WARN_ $4
60869     +      F_DepVar  $ 12
60870     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
60871     +      label S_MntCard_Games = 'Standard: MntCard_Games' ;
MPRINT(EM_DIAGRAM):   label S_MntCard_Games = 'Standard: MntCard_Games' ;
60872     +
60873     +      label S_MntMagazines = 'Standard: MntMagazines' ;
MPRINT(EM_DIAGRAM):   label S_MntMagazines = 'Standard: MntMagazines' ;
60874     +
60875     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
60876     +
60877     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
60878     +
60879     +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
60880     +
60881     +      label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Frq = 'Standard: RANGE_Frq' ;
60882     +
60883     +      label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_Recency = 'Standard: RANGE_Recency' ;
60884     +
60885     +      label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_average_purchase = 'Standard: RANGE_average_purchase' ;
60886     +
60887     +      label S_RANGE_campaign_acceptance =
60888     +'Standard: RANGE_campaign_acceptance' ;
MPRINT(EM_DIAGRAM):   label S_RANGE_campaign_acceptance = 'Standard: RANGE_campaign_acceptance' ;
60889     +
60890     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
60891     +
60892     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
60893     +
60894     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
60895     +
60896     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
60897     +
60898     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
60899     +
60900     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
60901     +
60902     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
60903     +
60904     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
60905     +
60906     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
60907     +
60908     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
60909     +
60910     +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
60911     +
60912     +      label H18 = 'Hidden: H1=8' ;
MPRINT(EM_DIAGRAM):   label H18 = 'Hidden: H1=8' ;
60913     +
60914     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
60915     +
60916     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
60917     +
60918     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
60919     +
60920     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
60921     +
60922     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
60923     +
60924     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
60925     +
60926     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
60927     +
60928     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
60929     +
60930     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
60931     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
60932     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
60933     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
60934     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
60935     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
60936     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
60937     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
60938     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
60939     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60940     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60941     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60942     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60943     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
60944     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60945     +end;
MPRINT(EM_DIAGRAM):   end;
60946     +else do;
MPRINT(EM_DIAGRAM):   else do;
60947     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
60948     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
60949     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
60950     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
60951     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
60952     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
60953     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
60954     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
60955     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60956     +         end;
MPRINT(EM_DIAGRAM):   end;
60957     +         else do;
MPRINT(EM_DIAGRAM):   else do;
60958     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
60959     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
60960     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60961     +            end;
MPRINT(EM_DIAGRAM):   end;
60962     +         end;
MPRINT(EM_DIAGRAM):   end;
60963     +      end;
MPRINT(EM_DIAGRAM):   end;
60964     +      else do;
MPRINT(EM_DIAGRAM):   else do;
60965     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
60966     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
60967     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60968     +         end;
MPRINT(EM_DIAGRAM):   end;
60969     +      end;
MPRINT(EM_DIAGRAM):   end;
60970     +   end;
MPRINT(EM_DIAGRAM):   end;
60971     +   else do;
MPRINT(EM_DIAGRAM):   else do;
60972     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
60973     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
60974     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60975     +      end;
MPRINT(EM_DIAGRAM):   end;
60976     +      else do;
MPRINT(EM_DIAGRAM):   else do;
60977     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
60978     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
60979     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
60980     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
60981     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
60982     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
60983     +         end;
MPRINT(EM_DIAGRAM):   end;
60984     +      end;
MPRINT(EM_DIAGRAM):   end;
60985     +   end;
MPRINT(EM_DIAGRAM):   end;
60986     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
60987     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
60988     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
60989     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
60990     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
60991     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
60992     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
60993     +   end;
MPRINT(EM_DIAGRAM):   end;
60994     +end;
MPRINT(EM_DIAGRAM):   end;
60995     +
60996     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
60997     +*** Checking missing input Interval
60998     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
60999     +
61000     +IF NMISS(
61001     +   MntCard_Games ,
61002     +   MntMagazines ,
61003     +   NumCatalogPurchases ,
61004     +   NumDealsPurchases ,
61005     +   NumWebPurchases ,
61006     +   RANGE_Frq ,
61007     +   RANGE_Recency ,
61008     +   RANGE_average_purchase ,
61009     +   RANGE_campaign_acceptance   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( MntCard_Games , MntMagazines , NumCatalogPurchases , NumDealsPurchases , NumWebPurchases , RANGE_Frq , RANGE_Recency , RANGE_average_purchase , RANGE_campaign_acceptance ) THEN DO;
61010     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
61011     +
61012     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61013     +END;
MPRINT(EM_DIAGRAM):   END;
61014     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61015     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
61016     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61017     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61018     +   S_MntCard_Games  =    -2.29552053621136 +     6.58526682455081 *
61019     +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   S_MntCard_Games = -2.29552053621136 + 6.58526682455081 * MntCard_Games ;
61020     +   S_MntMagazines  =    -0.82293757807429 +     17.2690037990877 *
61021     +        MntMagazines ;
MPRINT(EM_DIAGRAM):   S_MntMagazines = -0.82293757807429 + 17.2690037990877 * MntMagazines ;
61022     +   S_NumCatalogPurchases  =    -3.13390881283003 +     13.5906280879322 *
61023     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -3.13390881283003 + 13.5906280879322 * NumCatalogPurchases ;
61024     +   S_NumDealsPurchases  =    -1.41465463186291 +     11.0318603521921 *
61025     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.41465463186291 + 11.0318603521921 * NumDealsPurchases ;
61026     +   S_NumWebPurchases  =    -5.24785908864246 +      12.283402083256 *
61027     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -5.24785908864246 + 12.283402083256 * NumWebPurchases ;
61028     +   S_RANGE_Frq  =    -1.36303513338452 +     4.21654196784367 * RANGE_Frq ;
MPRINT(EM_DIAGRAM):   S_RANGE_Frq = -1.36303513338452 + 4.21654196784367 * RANGE_Frq ;
61029     +   S_RANGE_Recency  =    -1.65915928443681 +     3.37794970549188 *
61030     +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   S_RANGE_Recency = -1.65915928443681 + 3.37794970549188 * RANGE_Recency ;
61031     +   S_RANGE_average_purchase  =     -1.0387883165722 +     5.11361054117627 *
61032     +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   S_RANGE_average_purchase = -1.0387883165722 + 5.11361054117627 * RANGE_average_purchase ;
61033     +   S_RANGE_campaign_acceptance
61034     +          =     -0.4736186337401 +     5.76461537066529 *
61035     +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   S_RANGE_campaign_acceptance = -0.4736186337401 + 5.76461537066529 * RANGE_campaign_acceptance ;
61036     +END;
MPRINT(EM_DIAGRAM):   END;
61037     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61038     +   IF MISSING( MntCard_Games ) THEN S_MntCard_Games  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntCard_Games ) THEN S_MntCard_Games = . ;
61039     +   ELSE S_MntCard_Games  =    -2.29552053621136 +     6.58526682455081 *
61040     +        MntCard_Games ;
MPRINT(EM_DIAGRAM):   ELSE S_MntCard_Games = -2.29552053621136 + 6.58526682455081 * MntCard_Games ;
61041     +   IF MISSING( MntMagazines ) THEN S_MntMagazines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMagazines ) THEN S_MntMagazines = . ;
61042     +   ELSE S_MntMagazines  =    -0.82293757807429 +     17.2690037990877 *
61043     +        MntMagazines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMagazines = -0.82293757807429 + 17.2690037990877 * MntMagazines ;
61044     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
61045     +   ELSE S_NumCatalogPurchases
61046     +          =    -3.13390881283003 +     13.5906280879322 * NumCatalogPurchases
61047     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -3.13390881283003 + 13.5906280879322 * NumCatalogPurchases ;
61048     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
61049     +   ELSE S_NumDealsPurchases  =    -1.41465463186291 +     11.0318603521921 *
61050     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.41465463186291 + 11.0318603521921 * NumDealsPurchases ;
61051     +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
61052     +   ELSE S_NumWebPurchases  =    -5.24785908864246 +      12.283402083256 *
61053     +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -5.24785908864246 + 12.283402083256 * NumWebPurchases ;
61054     +   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Frq ) THEN S_RANGE_Frq = . ;
61055     +   ELSE S_RANGE_Frq  =    -1.36303513338452 +     4.21654196784367 * RANGE_Frq
61056     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Frq = -1.36303513338452 + 4.21654196784367 * RANGE_Frq ;
61057     +   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_Recency ) THEN S_RANGE_Recency = . ;
61058     +   ELSE S_RANGE_Recency  =    -1.65915928443681 +     3.37794970549188 *
61059     +        RANGE_Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_Recency = -1.65915928443681 + 3.37794970549188 * RANGE_Recency ;
61060     +   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_average_purchase ) THEN S_RANGE_average_purchase = . ;
61061     +   ELSE S_RANGE_average_purchase
61062     +          =     -1.0387883165722 +     5.11361054117627 *
61063     +        RANGE_average_purchase ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_average_purchase = -1.0387883165722 + 5.11361054117627 * RANGE_average_purchase ;
61064     +   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance
61065     +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RANGE_campaign_acceptance ) THEN S_RANGE_campaign_acceptance = . ;
61066     +   ELSE S_RANGE_campaign_acceptance
61067     +          =     -0.4736186337401 +     5.76461537066529 *
61068     +        RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   ELSE S_RANGE_campaign_acceptance = -0.4736186337401 + 5.76461537066529 * RANGE_campaign_acceptance ;
61069     +END;
MPRINT(EM_DIAGRAM):   END;
61070     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61071     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
61072     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61073     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61074     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
61075     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61076     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61077     +   H11  =     0.20972421718057 * S_MntCard_Games  +    -0.10519753218003 *
61078     +        S_MntMagazines  +     0.15656734847629 * S_NumCatalogPurchases
61079     +          +     0.63057160324877 * S_NumDealsPurchases
61080     +          +    -0.00737690936149 * S_NumWebPurchases
61081     +          +     0.20053768659238 * S_RANGE_Frq  +    -1.12557480034141 *
61082     +        S_RANGE_Recency  +    -0.22476100695688 * S_RANGE_average_purchase
61083     +          +     0.28567577425134 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H11 = 0.20972421718057 * S_MntCard_Games + -0.10519753218003 * S_MntMagazines + 0.15656734847629 * S_NumCatalogPurchases + 0.63057160324877 * S_NumDealsPurchases + -0.00737690936149 * S_NumWebPurchases + 0.20053768659238 * 
S_RANGE_Frq + -1.12557480034141 * S_RANGE_Recency + -0.22476100695688 * S_RANGE_average_purchase + 0.28567577425134 * S_RANGE_campaign_acceptance ;
61084     +   H12  =     0.07368864080416 * S_MntCard_Games  +     -0.4223767992421 *
61085     +        S_MntMagazines  +     0.17487060799852 * S_NumCatalogPurchases
61086     +          +    -0.16663103701637 * S_NumDealsPurchases
61087     +          +      0.4469410823334 * S_NumWebPurchases
61088     +          +     0.07351068357053 * S_RANGE_Frq  +      0.2764433150472 *
61089     +        S_RANGE_Recency  +     0.25947059452403 * S_RANGE_average_purchase
61090     +          +     0.12894202604451 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H12 = 0.07368864080416 * S_MntCard_Games + -0.4223767992421 * S_MntMagazines + 0.17487060799852 * S_NumCatalogPurchases + -0.16663103701637 * S_NumDealsPurchases + 0.4469410823334 * S_NumWebPurchases + 0.07351068357053 * S_RANGE_Frq 
+ 0.2764433150472 * S_RANGE_Recency + 0.25947059452403 * S_RANGE_average_purchase + 0.12894202604451 * S_RANGE_campaign_acceptance ;
61091     +   H13  =     0.31080135867348 * S_MntCard_Games  +     0.18451282806391 *
61092     +        S_MntMagazines  +      0.1127627139197 * S_NumCatalogPurchases
61093     +          +     0.24603022042835 * S_NumDealsPurchases
61094     +          +    -0.28013448748239 * S_NumWebPurchases
61095     +          +     0.12933786524903 * S_RANGE_Frq  +     0.34733298788257 *
61096     +        S_RANGE_Recency  +     0.51115383261532 * S_RANGE_average_purchase
61097     +          +    -0.26437219931513 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H13 = 0.31080135867348 * S_MntCard_Games + 0.18451282806391 * S_MntMagazines + 0.1127627139197 * S_NumCatalogPurchases + 0.24603022042835 * S_NumDealsPurchases + -0.28013448748239 * S_NumWebPurchases + 0.12933786524903 * S_RANGE_Frq 
+ 0.34733298788257 * S_RANGE_Recency + 0.51115383261532 * S_RANGE_average_purchase + -0.26437219931513 * S_RANGE_campaign_acceptance ;
61098     +   H14  =    -0.57033383655748 * S_MntCard_Games  +    -0.33054700873328 *
61099     +        S_MntMagazines  +    -1.02671397545134 * S_NumCatalogPurchases
61100     +          +    -0.41228604651309 * S_NumDealsPurchases
61101     +          +    -0.21819906644753 * S_NumWebPurchases
61102     +          +     0.60269025654631 * S_RANGE_Frq  +      0.6046180501819 *
61103     +        S_RANGE_Recency  +    -0.42162410945573 * S_RANGE_average_purchase
61104     +          +    -0.20008993427643 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H14 = -0.57033383655748 * S_MntCard_Games + -0.33054700873328 * S_MntMagazines + -1.02671397545134 * S_NumCatalogPurchases + -0.41228604651309 * S_NumDealsPurchases + -0.21819906644753 * S_NumWebPurchases + 0.60269025654631 * 
S_RANGE_Frq + 0.6046180501819 * S_RANGE_Recency + -0.42162410945573 * S_RANGE_average_purchase + -0.20008993427643 * S_RANGE_campaign_acceptance ;
61105     +   H15  =      0.6093862111979 * S_MntCard_Games  +     0.18205906140977 *
61106     +        S_MntMagazines  +     0.49639052978093 * S_NumCatalogPurchases
61107     +          +     0.61953955047886 * S_NumDealsPurchases
61108     +          +    -0.23923372893571 * S_NumWebPurchases
61109     +          +    -0.19964591826134 * S_RANGE_Frq  +    -0.20354696929195 *
61110     +        S_RANGE_Recency  +     0.54178001423516 * S_RANGE_average_purchase
61111     +          +     0.82116084363342 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H15 = 0.6093862111979 * S_MntCard_Games + 0.18205906140977 * S_MntMagazines + 0.49639052978093 * S_NumCatalogPurchases + 0.61953955047886 * S_NumDealsPurchases + -0.23923372893571 * S_NumWebPurchases + -0.19964591826134 * S_RANGE_Frq 
+ -0.20354696929195 * S_RANGE_Recency + 0.54178001423516 * S_RANGE_average_purchase + 0.82116084363342 * S_RANGE_campaign_acceptance ;
61112     +   H16  =    -0.89765621146319 * S_MntCard_Games  +     0.18624358536157 *
61113     +        S_MntMagazines  +    -0.41426005837921 * S_NumCatalogPurchases
61114     +          +    -0.63819825018964 * S_NumDealsPurchases
61115     +          +    -0.75564857992734 * S_NumWebPurchases
61116     +          +    -0.24431914212986 * S_RANGE_Frq  +     1.47078024332987 *
61117     +        S_RANGE_Recency  +    -0.08214840144887 * S_RANGE_average_purchase
61118     +          +    -0.87167436264292 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H16 = -0.89765621146319 * S_MntCard_Games + 0.18624358536157 * S_MntMagazines + -0.41426005837921 * S_NumCatalogPurchases + -0.63819825018964 * S_NumDealsPurchases + -0.75564857992734 * S_NumWebPurchases + -0.24431914212986 * 
S_RANGE_Frq + 1.47078024332987 * S_RANGE_Recency + -0.08214840144887 * S_RANGE_average_purchase + -0.87167436264292 * S_RANGE_campaign_acceptance ;
61119     +   H17  =     0.03824306532902 * S_MntCard_Games  +     0.09162051848061 *
61120     +        S_MntMagazines  +     0.25990341633612 * S_NumCatalogPurchases
61121     +          +    -0.58632763415232 * S_NumDealsPurchases
61122     +          +    -0.02683058882616 * S_NumWebPurchases
61123     +          +     0.36070453911153 * S_RANGE_Frq  +    -0.46706817985413 *
61124     +        S_RANGE_Recency  +     0.03188715672586 * S_RANGE_average_purchase
61125     +          +     0.27713598915972 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H17 = 0.03824306532902 * S_MntCard_Games + 0.09162051848061 * S_MntMagazines + 0.25990341633612 * S_NumCatalogPurchases + -0.58632763415232 * S_NumDealsPurchases + -0.02683058882616 * S_NumWebPurchases + 0.36070453911153 * 
S_RANGE_Frq + -0.46706817985413 * S_RANGE_Recency + 0.03188715672586 * S_RANGE_average_purchase + 0.27713598915972 * S_RANGE_campaign_acceptance ;
61126     +   H18  =    -0.35178879490005 * S_MntCard_Games  +     -0.2853720173945 *
61127     +        S_MntMagazines  +     0.36904553501501 * S_NumCatalogPurchases
61128     +          +     0.49484726303534 * S_NumDealsPurchases
61129     +          +    -0.51224257122634 * S_NumWebPurchases
61130     +          +     0.31503193306354 * S_RANGE_Frq  +    -0.24985277238677 *
61131     +        S_RANGE_Recency  +       0.061397741924 * S_RANGE_average_purchase
61132     +          +     0.24571810164181 * S_RANGE_campaign_acceptance ;
MPRINT(EM_DIAGRAM):   H18 = -0.35178879490005 * S_MntCard_Games + -0.2853720173945 * S_MntMagazines + 0.36904553501501 * S_NumCatalogPurchases + 0.49484726303534 * S_NumDealsPurchases + -0.51224257122634 * S_NumWebPurchases + 0.31503193306354 * 
S_RANGE_Frq + -0.24985277238677 * S_RANGE_Recency + 0.061397741924 * S_RANGE_average_purchase + 0.24571810164181 * S_RANGE_campaign_acceptance ;
61133     +   H11  = H11  +     0.27684891699167 * Marital_StatusDivorced
61134     +          +    -0.33031859213239 * Marital_StatusMarried
61135     +          +     0.61699559997992 * Marital_StatusSingle
61136     +          +    -0.16243553104357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27684891699167 * Marital_StatusDivorced + -0.33031859213239 * Marital_StatusMarried + 0.61699559997992 * Marital_StatusSingle + -0.16243553104357 * Marital_StatusTogether ;
61137     +   H12  = H12  +    -0.50397359271861 * Marital_StatusDivorced
61138     +          +    -0.23570256235163 * Marital_StatusMarried
61139     +          +     0.18671782880144 * Marital_StatusSingle
61140     +          +      0.0300664326928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.50397359271861 * Marital_StatusDivorced + -0.23570256235163 * Marital_StatusMarried + 0.18671782880144 * Marital_StatusSingle + 0.0300664326928 * Marital_StatusTogether ;
61141     +   H13  = H13  +    -0.10864645717505 * Marital_StatusDivorced
61142     +          +    -0.20555700211504 * Marital_StatusMarried
61143     +          +      0.1648370262569 * Marital_StatusSingle
61144     +          +    -0.03166337233879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10864645717505 * Marital_StatusDivorced + -0.20555700211504 * Marital_StatusMarried + 0.1648370262569 * Marital_StatusSingle + -0.03166337233879 * Marital_StatusTogether ;
61145     +   H14  = H14  +    -0.25764039105044 * Marital_StatusDivorced
61146     +          +     0.05281900768859 * Marital_StatusMarried
61147     +          +    -0.28955714634595 * Marital_StatusSingle
61148     +          +      0.1811608851228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25764039105044 * Marital_StatusDivorced + 0.05281900768859 * Marital_StatusMarried + -0.28955714634595 * Marital_StatusSingle + 0.1811608851228 * Marital_StatusTogether ;
61149     +   H15  = H15  +     0.16052554933853 * Marital_StatusDivorced
61150     +          +     0.01235369787171 * Marital_StatusMarried
61151     +          +      0.1227747816279 * Marital_StatusSingle
61152     +          +    -0.78421505074531 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.16052554933853 * Marital_StatusDivorced + 0.01235369787171 * Marital_StatusMarried + 0.1227747816279 * Marital_StatusSingle + -0.78421505074531 * Marital_StatusTogether ;
61153     +   H16  = H16  +    -0.09636185034972 * Marital_StatusDivorced
61154     +          +     0.49379263355192 * Marital_StatusMarried
61155     +          +     0.11693446659268 * Marital_StatusSingle
61156     +          +     0.39504907373164 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.09636185034972 * Marital_StatusDivorced + 0.49379263355192 * Marital_StatusMarried + 0.11693446659268 * Marital_StatusSingle + 0.39504907373164 * Marital_StatusTogether ;
61157     +   H17  = H17  +     0.63607617128916 * Marital_StatusDivorced
61158     +          +    -0.69233427848009 * Marital_StatusMarried
61159     +          +     0.85408778865978 * Marital_StatusSingle
61160     +          +    -0.23854465330987 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.63607617128916 * Marital_StatusDivorced + -0.69233427848009 * Marital_StatusMarried + 0.85408778865978 * Marital_StatusSingle + -0.23854465330987 * Marital_StatusTogether ;
61161     +   H18  = H18  +     0.28535498096797 * Marital_StatusDivorced
61162     +          +    -0.22088583509449 * Marital_StatusMarried
61163     +          +    -0.10230118240769 * Marital_StatusSingle
61164     +          +    -0.41427540923153 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H18 = H18 + 0.28535498096797 * Marital_StatusDivorced + -0.22088583509449 * Marital_StatusMarried + -0.10230118240769 * Marital_StatusSingle + -0.41427540923153 * Marital_StatusTogether ;
61165     +   H11  =     0.29714961909337 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.29714961909337 + H11 ;
61166     +   H12  =     2.28692305168248 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.28692305168248 + H12 ;
61167     +   H13  =     1.04684893652896 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.04684893652896 + H13 ;
61168     +   H14  =    -0.27835769163672 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.27835769163672 + H14 ;
61169     +   H15  =    -1.48853670189635 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.48853670189635 + H15 ;
61170     +   H16  =     2.02040716755866 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.02040716755866 + H16 ;
61171     +   H17  =     -2.1402631431051 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -2.1402631431051 + H17 ;
61172     +   H18  =    -1.77285171982666 + H18 ;
MPRINT(EM_DIAGRAM):   H18 = -1.77285171982666 + H18 ;
61173     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
61174     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
61175     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
61176     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
61177     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
61178     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
61179     +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
61180     +   H18  = TANH(H18 );
MPRINT(EM_DIAGRAM):   H18 = TANH(H18 );
61181     +END;
MPRINT(EM_DIAGRAM):   END;
61182     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61183     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
61184     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
61185     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
61186     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
61187     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
61188     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
61189     +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
61190     +   H18  = .;
MPRINT(EM_DIAGRAM):   H18 = .;
61191     +END;
MPRINT(EM_DIAGRAM):   END;
61192     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61193     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
61194     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61195     +
61196     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
61197     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
61198     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61199     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
61200     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
61201     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61202     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
61203     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61204     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61205     +end;
MPRINT(EM_DIAGRAM):   end;
61206     +else do;
MPRINT(EM_DIAGRAM):   else do;
61207     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
61208     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
61209     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
61210     +   end;
MPRINT(EM_DIAGRAM):   end;
61211     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
61212     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
61213     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
61214     +   end;
MPRINT(EM_DIAGRAM):   end;
61215     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61216     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61217     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61218     +   end;
MPRINT(EM_DIAGRAM):   end;
61219     +end;
MPRINT(EM_DIAGRAM):   end;
61220     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61221     +   P_DepVar1  =     2.28155484960035 * H11  +     0.37558662649004 * H12
61222     +          +    -0.01491883215668 * H13  +    -1.79896740790015 * H14
61223     +          +     1.54972455239658 * H15  +    -2.83834486141497 * H16
61224     +          +     1.56015981413604 * H17  +     1.15123166934324 * H18 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.28155484960035 * H11 + 0.37558662649004 * H12 + -0.01491883215668 * H13 + -1.79896740790015 * H14 + 1.54972455239658 * H15 + -2.83834486141497 * H16 + 1.56015981413604 * H17 + 1.15123166934324 * H18 ;
61225     +   P_DepVar1  =    -1.56259640307401 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.56259640307401 + P_DepVar1 ;
61226     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
61227     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
61228     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
61229     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
61230     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
61231     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
61232     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
61233     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
61234     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
61235     +END;
MPRINT(EM_DIAGRAM):   END;
61236     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61237     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
61238     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
61239     +END;
MPRINT(EM_DIAGRAM):   END;
61240     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
61241     +   P_DepVar1  =     0.13673708920187;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13673708920187;
61242     +   P_DepVar0  =     0.86326291079812;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86326291079812;
61243     +END;
MPRINT(EM_DIAGRAM):   END;
61244     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
61245     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
61246     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
61247     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
61248     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
61249     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
61250     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
61251     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61252     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
61253     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61254     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
61255     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
61256     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
61257     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
61258     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
61259     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
61260     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
61261     +END;
MPRINT(EM_DIAGRAM):   END;
61262     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61263     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
61264     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61265     +drop
61266     +S_MntCard_Games
61267     +S_MntMagazines
61268     +S_NumCatalogPurchases
61269     +S_NumDealsPurchases
61270     +S_NumWebPurchases
61271     +S_RANGE_Frq
61272     +S_RANGE_Recency
61273     +S_RANGE_average_purchase
61274     +S_RANGE_campaign_acceptance
61275     +H11
61276     +H12
61277     +H13
61278     +H14
61279     +H15
61280     +H16
61281     +H17
61282     +H18
61283     +;
MPRINT(EM_DIAGRAM):   drop S_MntCard_Games S_MntMagazines S_NumCatalogPurchases S_NumDealsPurchases S_NumWebPurchases S_RANGE_Frq S_RANGE_Recency S_RANGE_average_purchase S_RANGE_campaign_acceptance H11 H12 H13 H14 H15 H16 H17 H18 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
61284      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
61285      quit;
61286      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
61287      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
61288      * Neural6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural6: Computing metadata for TRAIN data;
61289      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\Neural6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural6_TRAIN out=WORK.M05HTBPL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05HTBPL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M05HTBPL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05HTBPL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M05HTBPL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2Z225XB NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BY2IC6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z225XB;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural6";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
61642      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
61643      set EMWS1.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural6_EMINFO;
61644      where DATA='Neural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
61645      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL6_EMINFO.
      WHERE (DATA='Neural6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

61646      data EMWS1.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural6_EMINFO;
61647      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
61648      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
61649      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
61653      run;
61654      data EMWS1.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural6_EMINFO;
61655      set EMWS1.Neural6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural6_EMINFO WORK.MODELTEMP_INFO;
61656      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

61657      proc sort data = EMWS1.Neural6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural6_EMINFO NOTHREADS;
61658      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
61659      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL6_EMINFO.
NOTE: The data set EMWS1.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.NEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
