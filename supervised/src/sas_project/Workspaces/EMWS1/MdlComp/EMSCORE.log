MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:13:08 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:13:08 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2LGMAWP "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2LGMAWP new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.MDLIMP12_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: View EMWS1.MDLIMP12_TRAIN.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.37 seconds
      
3950181    /* Generate assessment metadata, which will be used to generate assessment data step
3950181  !  */
3950182    /* code, such as retrieving names of temporary variables and summary variables,
3950182  !  */
3950183    /* labels, etc.  It is used in almost all the assessment computations such as lift,
3950183  !  */
3950184    /* roc, index, scoreDist and could be thought as a global variable in assessment
3950184  !  */
3950185    /* computation.
3950185  !  */
3950186    data work.ASSESS_16JMRSG_assessMeta_5FQXK9;
MPRINT(EM_DIAGRAM):    data work.ASSESS_16JMRSG_assessMeta_5FQXK9;
3950187    length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
3950187  ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
3950187  ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
3950187  ! RESULT_MAX $32 RESULT_MAX_LABEL
3950188       $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
3950188  !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
3950189    VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
3950190    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
3950191    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
3950192    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
3950193    LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
3950194    PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
3950195    MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
3950196    LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
3950197    GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
3950198    RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
3950199    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
3950200    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
3950201    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
3950202    MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
3950203    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
3950204    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
3950205    MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
3950206    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
3950207    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
3950208    TEMPORARY_VARIABLE = "DepVar_TpobaTiDHsZTr8W";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_TpobaTiDHsZTr8W";
3950209    output;
MPRINT(EM_DIAGRAM):   output;
3950210    VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
3950211    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
3950212    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
3950213    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
3950214    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
3950215    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
3950216    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
3950217    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
3950218    GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_8pda9P7dYG9y6yG";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_8pda9P7dYG9y6yG";
3950219    RESULT_MEAN = "F_DepVar_1_mean_zVWOpAncSHjLDH5";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_zVWOpAncSHjLDH5";
3950220    /* adjust for tied cases */
3950221    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
3950222    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
3950223    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
3950224    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
3950225    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
3950226    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
3950227    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
3950227  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
3950228    TEMPORARY_VARIABLE = "F_DepVar_1_r4s8DYjOHDWG1Gh";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_r4s8DYjOHDWG1Gh";
3950229    output;
MPRINT(EM_DIAGRAM):   output;
3950230    VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
3950231    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
3950232    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
3950233    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
3950234    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
3950235    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
3950236    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
3950237    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
3950238    GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_bsc0N7_JYtQTx2f";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_bsc0N7_JYtQTx2f";
3950239    RESULT_MEAN = "F_DepVar_0_mean_JSBPUZ3GVKqrlA8";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_JSBPUZ3GVKqrlA8";
3950240    /* adjust for tied cases */
3950241    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
3950242    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
3950243    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
3950244    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
3950245    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
3950246    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
3950247    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
3950247  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
3950248    TEMPORARY_VARIABLE = "F_DepVar_0_5HvhpwEOelVpMh4";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_5HvhpwEOelVpMh4";
3950249    output;
The SAS System

MPRINT(EM_DIAGRAM):   output;
3950250    VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
3950251    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
3950252    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
3950253    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
3950254    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
3950255    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
3950256    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
3950257    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
3950258    GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
3950259    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
3950260    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
3950260  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
3950261    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
3950262    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
3950263    MIN_ADJUSTED = "P_DepVar_minAdjusted_VueEBgQqu";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_VueEBgQqu";
3950264    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
3950265    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
3950266    MAX_ADJUSTED = "P_DepVar_maxAdjusted_tw6sU0I1I";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_tw6sU0I1I";
3950267    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
3950268    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
3950269    TEMPORARY_VARIABLE = "P_DepVar1_HtO3OhU4cQaLKQf";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_HtO3OhU4cQaLKQf";
3950270    output;
MPRINT(EM_DIAGRAM):   output;
3950271    VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
3950272    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
3950273    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
3950274    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
3950275    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
3950276    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
3950277    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
3950278    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
3950279    GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
3950280    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
3950281    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
3950281  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
3950282    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
3950283    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
3950284    MIN_ADJUSTED = "P_DepVar_minAdjusted_nHhcfV4HM";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_nHhcfV4HM";
3950285    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
3950286    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
3950287    MAX_ADJUSTED = "P_DepVar_maxAdjusted_WUyEfzARG";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_WUyEfzARG";
3950288    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
3950289    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
3950290    TEMPORARY_VARIABLE = "P_DepVar0_tsC9oPqGCZtzuuQ";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_tsC9oPqGCZtzuuQ";
3950291    output;
MPRINT(EM_DIAGRAM):   output;
3950292    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_16JMRSG_ASSESSMETA_5FQXK9 has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

3950293    /* Generate temporary dataset and obtain summary statistics such as total number of
3950293  !   */
3950294    /* obserations, frequency of target.  However, summary statistics for class
3950294  ! reporting */
3950295    /* variabels are not computed here since if there exist class reporting variables,
3950295  !   */
3950296    /* then PROC DMDB will be called. And there is no need to compute interval reporting
3950296  !   */
3950297    /* summary statisitcs, if any.
3950297  !   */
3950298    data work.ASSESS_16JMRSG_normSD_8GXDxS(drop=
3950299    _numberOfObservation_
3950300    _levelFrequency_1
3950301    _levelFrequency_2
3950302    )
3950303    work.ASSESS_16JMRSG_meansAndTi_BZSftN (keep=
3950304    _numberOfObservation_
3950305    _levelFrequency_1
3950306    _levelFrequency_2
3950307    );
MPRINT(EM_DIAGRAM):    data work.ASSESS_16JMRSG_normSD_8GXDxS(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_16JMRSG_meansAndTi_BZSftN (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
3950308    set EMWS1.MdlImp12_TRAIN(
3950309    where=(
3950310    (DepVar ^= .)
3950311    )
3950312    ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlImp12_TRAIN( where=( (DepVar ^= .) ) ) 
end=_lastObservation_;
3950313    keep frequency_eJPh_I;
MPRINT(EM_DIAGRAM):   keep frequency_eJPh_I;
3950314    frequency_eJPh_I = 1;
MPRINT(EM_DIAGRAM):   frequency_eJPh_I = 1;
3950315    keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
3950316    keep F_DepVar_1_8pda9P7dYG9y6yG;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_8pda9P7dYG9y6yG;
3950317    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
3950318    F_DepVar_1_8pda9P7dYG9y6yG = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_8pda9P7dYG9y6yG = 1;
3950319    end;
MPRINT(EM_DIAGRAM):   end;
3950320    else do;
MPRINT(EM_DIAGRAM):   else do;
3950321    F_DepVar_1_8pda9P7dYG9y6yG = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_8pda9P7dYG9y6yG = 0;
3950322    end;
MPRINT(EM_DIAGRAM):   end;
3950323    keep F_DepVar_0_bsc0N7_JYtQTx2f;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_bsc0N7_JYtQTx2f;
3950324    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
3950325    F_DepVar_0_bsc0N7_JYtQTx2f = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_bsc0N7_JYtQTx2f = 1;
3950326    end;
MPRINT(EM_DIAGRAM):   end;
3950327    else do;
MPRINT(EM_DIAGRAM):   else do;
3950328    F_DepVar_0_bsc0N7_JYtQTx2f = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_bsc0N7_JYtQTx2f = 0;
3950329    end;
MPRINT(EM_DIAGRAM):   end;
3950330    keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
3950331    keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
3950332    output work.ASSESS_16JMRSG_normSD_8GXDxS;
MPRINT(EM_DIAGRAM):   output work.ASSESS_16JMRSG_normSD_8GXDxS;
3950333    keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
3950334    retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
3950335    _numberOfObservation_ + frequency_eJPh_I;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_eJPh_I;
3950336    keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
3950337    retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
3950338    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
3950339    _levelFrequency_1 + frequency_eJPh_I;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_eJPh_I;
3950340    end;
MPRINT(EM_DIAGRAM):   end;
3950341    keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
3950342    retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
3950343    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
3950344    _levelFrequency_2 + frequency_eJPh_I;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_eJPh_I;
3950345    end;
MPRINT(EM_DIAGRAM):   end;
3950346    if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
3950347    output work.ASSESS_16JMRSG_meansAndTi_BZSftN;
MPRINT(EM_DIAGRAM):   output work.ASSESS_16JMRSG_meansAndTi_BZSftN;
3950348    end;
MPRINT(EM_DIAGRAM):   end;
3950349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: View EMWS1.MDLIMP12_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
      
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP12_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.MDLIMP12_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_16JMRSG_NORMSD_8GXDXS has 2437 observations and 7 variables.
NOTE: The data set WORK.ASSESS_16JMRSG_MEANSANDTI_BZSFTN has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
      

3950350    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
3950351    set EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK;
3950352    where MODEL = "MdlImp12" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "MdlImp12" and TARGET = "DepVar" and dataRole="TRAIN";
3950353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.MDLCOMP_EMRANK.
      WHERE (MODEL='MdlImp12') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3950354    data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
3950355    do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
3950356    DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
3950357    output;
MPRINT(EM_DIAGRAM):   output;
3950358    end;
MPRINT(EM_DIAGRAM):   end;
3950359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3950360    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
3950361    merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
3950362    by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
3950363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3950364    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
3950365    set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
3950366    retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
3950367    retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
3950368    keep event;
MPRINT(EM_DIAGRAM):   keep event;
3950369    keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
3950370    if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
3950371    bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
3950372    _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
3950373    if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
3950374    /* tied */
3950375    _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
3950376    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
3950377    end;
MPRINT(EM_DIAGRAM):   end;
3950378    else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
3950379    /* next tied */
3950380    _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
3950381    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
3950382    end;
MPRINT(EM_DIAGRAM):   end;
3950383    output;
MPRINT(EM_DIAGRAM):   output;
3950384    *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
3950385    * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
3950386    *end;
MPRINT(EM_DIAGRAM):   *end;
3950387    if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
3950388    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
3950389    end;
MPRINT(EM_DIAGRAM):   end;
3950390    else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
3950391    if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
3950392    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
3950393    end;
MPRINT(EM_DIAGRAM):   end;
3950394    end;
MPRINT(EM_DIAGRAM):   end;
3950395    bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
3950396    /* correct the previous change */
3950397    end;
MPRINT(EM_DIAGRAM):   end;
3950398    if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
3950399    _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
3950400    output;
MPRINT(EM_DIAGRAM):   output;
3950401    end;
MPRINT(EM_DIAGRAM):   end;
3950402    _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
3950403    _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
3950404    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

3950405    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
3950406    set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
3950407    by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
3950408    retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
3950409    if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
3950410    _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
3950411    end;
MPRINT(EM_DIAGRAM):   end;
3950412    if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
3950413    _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
3950414    output;
MPRINT(EM_DIAGRAM):   output;
3950415    end;
MPRINT(EM_DIAGRAM):   end;
3950416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3950417    filename emflow "C:\Users\misil\Desktop\DM
3950417  ! 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\misil\Desktop\DM 
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring MDLIMP12_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3950418    *------------------------------------------------------------*;
3950419    * MdlComp: Scoring MDLIMP12_TRAIN data;
3950420    *------------------------------------------------------------*;
3950421    data EMWS1.MdlComp_TRAIN
3950422    / view=EMWS1.MdlComp_TRAIN
3950423    ;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_TRAIN / view=EMWS1.MdlComp_TRAIN ;
3950424    set EMWS1.MdlImp12_TRAIN
3950425    ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlImp12_TRAIN ;
3950426    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM 
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
3950427   +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
3950428   +if (P_DepVar1 ge 0.99999030951148) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.99999030951148) then do;
3950429   +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
3950430   +end;
MPRINT(EM_DIAGRAM):   end;
3950431   +else
3950432   +if (P_DepVar1 ge 0.96023021739814) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.96023021739814) then do;
3950433   +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
3950434   +end;
MPRINT(EM_DIAGRAM):   end;
3950435   +else
3950436   +if (P_DepVar1 ge 0.29742622178888) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.29742622178888) then do;
3950437   +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
3950438   +end;
MPRINT(EM_DIAGRAM):   end;
3950439   +else
3950440   +if (P_DepVar1 ge 0.00910903213807) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00910903213807) then do;
3950441   +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
3950442   +end;
MPRINT(EM_DIAGRAM):   end;
3950443   +else
3950444   +if (P_DepVar1 ge 0.00018641340094) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00018641340094) then do;
3950445   +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
3950446   +end;
MPRINT(EM_DIAGRAM):   end;
3950447   +else
3950448   +if (P_DepVar1 ge 5.1445479694983E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 5.1445479694983E-6) then do;
3950449   +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
3950450   +end;
MPRINT(EM_DIAGRAM):   end;
3950451   +else
3950452   +do;
MPRINT(EM_DIAGRAM):   else do;
3950453   +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
3950454   +b_DepVar = floor(7 + 14*_temp_);
MPRINT(EM_DIAGRAM):   b_DepVar = floor(7 + 14*_temp_);
3950455   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3950456    run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLIMP12_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3950457    quit;
3950458    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3950459    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3950460    * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
3950461    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.MdlComp_TRAIN out=WORK.M1VMYII_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VMYII_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VMYII_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VMYII_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VMYII_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10TPIZR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M292B3W5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   set WORK.M10TPIZR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlImp12_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlImp12_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
