*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:59:30 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:24 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:59:24 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FN4W4A "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FN4W4A new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMGROUP\EMLOG_9.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:24 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMGROUP\EMOUTPUT_9.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:24 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2984376    proc freq data=EMWS1.EndGrp10_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp10_VariableSet noprint;
2984377    table ROLE*LEVEL/out=WORK.EndGrp10META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp10META;
2984378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_VARIABLESET.
NOTE: The data set WORK.ENDGRP10META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
2984379    proc print data=WORK.EndGrp10META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp10META label noobs;
2984380    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2984381    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2984382    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2984383    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2984384    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP10META.
NOTE: The PROCEDURE PRINT printed page 2014.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2984385    title10;
MPRINT(EM_DIAGRAM):   title10;
2984386    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN EMWS1 Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN EMWS1 Neural_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2984415    data WORK.EndGrp10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2984416    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2984417    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2984418       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2984419    set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
2984420    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2984421    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2984422    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2984423    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2984424    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2984425    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2984426    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2984427    end;
MPRINT(EM_DIAGRAM):   end;
2984428    output;
MPRINT(EM_DIAGRAM):   output;
2984429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP10_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2984430    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2984431    proc print data=WORK.EndGrp10_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp10_EVENT noobs label;
2984432    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2984433    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2984434    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2984435    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP10_EVENT.
NOTE: The PROCEDURE PRINT printed page 2015.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2984436    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2984437    proc print data = EMWS1.Neural_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural_DepVar_DM noobs label;
2984438    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2984439    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2984440    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2984441    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2984442    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2984443    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2016.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2984444    title10;
MPRINT(EM_DIAGRAM):   title10;
2984445    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp10: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=299;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13696747595052;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1884;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86303252404947;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2984919    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2984920    * EndGrp10: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp10: Generation of macros and macro variables;
2984921    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2984922    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2984923    %let EMEXCEPTIONSTRING=;
2984924    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2984925    * TRAIN: EndGrp10;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp10;
2984926    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2984927    %let EM_ACTION = TRAIN;
2984928    %let syscc = 0;
2984929    %macro main;
2984930       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2984931
2984932           filename temp catalog 'sashelp.emutil.endgp_train.source';
2984933           %include temp;
2984934           filename temp;
2984935
2984936           %train;
2984937
2984938       %end;
2984939       %else
2984940          %if %upcase(&EM_ACTION) = SCORE %then %do;
2984941
2984942           filename temp catalog 'sashelp.emutil.endgp_score.source';
2984943           %include temp;
2984944           filename temp;
2984945
2984946           %score;
2984947       %end;
2984948       %else
2984949       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2984950
2984951           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2984952           %include temp;
2984953           filename temp;
2984954
2984955           %postloop;
2984956
2984957       %end;
2984958
2984959       %doendm:
2984960    %mend main;
2984961
2984962    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2984963   +%macro copyModelDs(model=, key=);
2984964   +   %let modelDs  = &em_lib..&model._&key;
2984965   +   %let reportDs = &em_lib..&em_nodeid._&key;
2984966   +   %if %sysfunc(exist(&modelDs)) %then %do;
2984967   +       data &reportDs;
2984968   +          length ModelId $16;
2984969   +          retain ModelId "&model";
2984970   +          set &modelDs;
2984971   +       run;
2984972   +   %end;
2984973   +%mend copyModelDs;
2984974   +
2984975   +%macro traintarget(groupid=);
2984976   +   %em_getname(key=emoutfit, type=DATA);
2984977   +   %let targetname=;
2984978   +   data _null_;
2984979   +     set &em_lib..&groupid._&looptype;
2984980   +     where _LOOP_ = &EMLOOPNUMBER;
2984981   +     call symput('targetname', strip(_TARGET_));
2984982   +   run;
2984983   +   %let modelId =;
2984984   +   data _null_;
2984985   +      set &em_import_data_eminfo;
2984986   +      where key = 'MODEL' and TARGET = "&targetname";
2984987   +      call symput('modelId',   strip(data));
2984988   +   run;
2984989   +   %if "&modelId" ne "" %then %do;
2984990   +       %copyModelDs(model=&modelid, key=EMRANK);
2984991   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2984992   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2984993   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2984994   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2984995   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2984996   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2984997   +   %end;
2984998   +
2984999   +   %doendtgp:
2985000   +%mend;
2985001   +
2985002   +%macro trainboost(groupid=);
2985003   +
2985004   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2985005   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2985006   +
2985007   +   data _null_;
2985008   +      retain index 0;
2985009   +      set &boostinfoDs;
2985010   +      call symput('targetname', strip(_target_));
2985011   +   run;
2985012   +
2985013   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2985014   +       %let decmeta = ;
2985015   +       data _null_;
2985016   +          set &em_import_data_eminfo;
2985017   +          where (key='DECMETA' and TARGET="&targetname");
2985018   +          call symput('DECMETA', strip(data));
2985019   +       run;
2985020   +       %if "&decmeta" eq "" %then %do;
2985021   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2985022   +           %goto doendtb;
2985023   +       %end;
2985024   +
2985025   +       %let predictedVars=;
2985026   +       data _null_;
2985027   +          set &decmeta;
2985028   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2985029   +          else
2985030   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2985031   +          else
2985032   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2985033   +       run;
2985034   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2985035   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2985036   +       %end;
2985037   +   %end;
2985038   +
2985039   +   * ;
2985040   +   * ENDGROUP &NODEID : Boosting scoring ;
2985041   +   * ;
2985042   +   data &em_lib..&groupid._boostscore;
2985043   +      set &em_import_data;
2985044   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2985045   +      %if "%em_freq" ne "" %then %do ;
2985046   +          keep %em_freq ;
2985047   +      %end ;
2985048   +   run;
2985049   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2985050   +
2985051   +   %doendtb:
2985052   +
2985053   +%mend trainboost;
2985054   +
2985055   +%macro trainbag(groupid=);
2985056   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2985057   +   data _null_;
2985058   +      retain index 0;
2985059   +      set &baginfoDs;
2985060   +      call symput('targetname', strip(_target_));
2985061   +   run;
2985062   +
2985063   +   %let decmeta = ;
2985064   +   data _null_;
2985065   +       set &em_import_data_eminfo;
2985066   +       where (key='DECMETA' and TARGET="&targetname");
2985067   +       call symput('DECMETA', strip(data));
2985068   +   run;
2985069   +   %if "&decmeta" eq "" %then %do;
2985070   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2985071   +       %goto doendtg;
2985072   +   %end;
2985073   +
2985074   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2985075   +
2985076   +   %doendtg:
2985077   +%mend trainbag;
2985078   +
2985079   +%macro traingroup(groupid=);
2985080   +   %let targetNum = 0;
2985081   +
2985082   +   data _temp1;
2985083   +      set &em_lib..&groupid._eminfo;
2985084   +      where key='MODEL';
2985085   +   run;
2985086   +   data _temp2;
2985087   +      set &em_import_data_eminfo;
2985088   +      where key='MODEL';
2985089   +   run;
2985090   +   proc sort data=_temp1; by TARGET DATA;
2985091   +   proc sort data=_temp2; by TARGET DATA;
2985092   +   data _temp2;
2985093   +      merge _temp1(in=_a) _temp2(in=_b);
2985094   +      by TARGET DATA;
2985095   +      if ^_a and _b then output;
2985096   +   run;
2985097   +   data _null_;
2985098   +      retain index 0;
2985099   +      set _temp2 end=eof;
2985100   +      index +1;
2985101   +      where key ='MODEL';
2985102   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2985103   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2985104   +      if eof then
2985105   +         call symput('targetnum', strip(put(index, best.)));
2985106   +   run;
2985107   +   proc datasets lib=work nolist;
2985108   +      delete _temp1 _temp2;
2985109   +   run;
2985110   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2985111   +
2985112   +   %let modelString =;
2985113   +   %do i=1 %to &targetnum;
2985114   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2985115   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2985116   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2985117   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2985118   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2985119   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2985120   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2985121   +            %let modelString = &modelString &&modelid&i;
2985122   +       %end;
2985123   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2985124   +   %end;
2985125   +
2985126   +   %doendtgp:
2985127   +
2985128   +%mend traingroup;
2985129   +
2985130   +%macro getSize(data=, nobsvar=);
2985131   +
2985132   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2985133   +       %let dsid = %sysfunc(open(&data));
2985134   +       %if &dsid %then %do;
2985135   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2985136   +           %let dsid = %sysfunc(close(&dsid));
2985137   +       %end;
2985138   +   %end;
2985139   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2985140   +        proc sql;
2985141   +           reset noprint;
2985142   +           select count(*) into :&nobsvar from &data;
2985143   +        quit;
2985144   +   %end;
2985145   +
2985146   +%mend getsize;
2985147   +
2985148   +%macro train;
2985149   +
2985150   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2985151   +      %let EM_TOOLTYPE=UTILITY;
2985152   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2985153   +          proc delete data=&em_data_eminfo;
2985154   +          run;
2985155   +      %end;
2985156   +      %goto doendtr;
2985157   +   %end;
2985158   +
2985159   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2985160   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2985161   +       %goto doendtr;
2985162   +   %end;
2985163   +
2985164   +   %let xgroupid = ;
2985165   +   data _null_;
2985166   +      set &em_import_data_eminfo;
2985167   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2985168   +      call symput('XGROUPID',  strip(data));
2985169   +      call symput('LOOPTYPE', strip(key));
2985170   +   run;
2985171   +
2985172   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2985173   +       %let nDataObs=0;
2985174   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2985175   +
2985176   +       %let nStartObs=0;
2985177   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2985178   +
2985179   +       %if &nDataObs ne &nStartObs %then %do;
2985180   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2985181   +           %goto doendtr;
2985182   +       %end;
2985183   +
2985184   +       %trainboost(groupid=&xgroupid);
2985185   +   %end;
2985186   +   %else
2985187   +   %if "&looptype" eq "BAGINFO" %then %do;
2985188   +       %trainbag(groupid=&xgroupid);
2985189   +   %end;
2985190   +   %else
2985191   +   %if "&looptype" eq "GROUPINFO" %then %do;
2985192   +       %traingroup(groupid=&xgroupid);
2985193   +   %end;
2985194   +   %else
2985195   +   %if "&looptype" eq "TARGETINFO" %then %do;
2985196   +       %traintarget(groupid=&xgroupid);
2985197   +   %end;
2985198   +
2985199   +   data &em_data_eminfo;
2985200   +      length TARGET KEY $32  DATA $43;
2985201   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2985202   +   run;
2985203   +
2985204   +   %let EM_TOOLTYPE=MODEL;
2985205   +
2985206   +   %doendtr:
2985207   +
2985208   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp9_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP9_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMRANK.
NOTE: The data set EMWS1.ENDGRP10_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP10_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp10_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp10";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985209    *------------------------------------------------------------*;
2985210    * End TRAIN: EndGrp10;
2985211    *------------------------------------------------------------*;
2985212
 
2985213    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2985214    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2985215    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985216    ;
MPRINT(EM_DIAGRAM):   ;
2985217    ;
MPRINT(EM_DIAGRAM):   ;
2985218    ;
MPRINT(EM_DIAGRAM):   ;
2985219    ;
MPRINT(EM_DIAGRAM):   ;
2985220    quit;
MPRINT(EM_DIAGRAM):   quit;
2985221    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985222    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2985223    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985224    /*; *"; *'; */
2985225    ;
MPRINT(EM_DIAGRAM):   ;
2985226    run;
MPRINT(EM_DIAGRAM):   run;
2985227    quit;
MPRINT(EM_DIAGRAM):   quit;
2985228    /* Reset EM Options */
2985229    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2985230    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2985231    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:27 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:59:27 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KGLCG7 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KGLCG7 new;
MPRINT(EM_DIAGRAM):   run;
2985333    %let EMEXCEPTIONSTRING=;
2985334    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2985335    * SCORE: EndGrp10;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp10;
2985336    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985337    %let EM_ACTION = SCORE;
2985338    %let syscc = 0;
2985339    %macro main;
2985340       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2985341
2985342           filename temp catalog 'sashelp.emutil.endgp_train.source';
2985343           %include temp;
2985344           filename temp;
2985345
2985346           %train;
2985347
2985348       %end;
2985349       %else
2985350          %if %upcase(&EM_ACTION) = SCORE %then %do;
2985351
2985352           filename temp catalog 'sashelp.emutil.endgp_score.source';
2985353           %include temp;
2985354           filename temp;
2985355
2985356           %score;
2985357       %end;
2985358       %else
2985359       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2985360
2985361           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2985362           %include temp;
2985363           filename temp;
2985364
2985365           %postloop;
2985366
2985367       %end;
2985368
2985369       %doendm:
2985370    %mend main;
2985371
2985372    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2985373   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2985375   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2985376   +       data &out / view=&out;
2985377   +          set &data
2985379   +          %if "&prescore" = "Y" %then %do;
2985380   +              (obs=1)
2985381   +          %end;
2985383   +          ;
2985385   +          %inc &scoreref;
2985387   +          %if "&prescore" eq "Y" %then %do;
2985388   +              drop I_: R_:;
2985389   +          %end;
2985391   +       run;
2985392   +   %end;
2985394   +%mend scoretables;
2985396   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2985397   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2985398   +   data _null_;
2985399   +      retain index 0;
2985400   +      set &infoDs;
2985401   +      call symput('targetname', strip(_target_));
2985402   +      call symput('endloopnum', strip(_loop_));
2985403   +   run;
2985405   +   %let endgrp_decmeta=;
2985406   +   %let endgrp_decdata=;
2985408   +   data _null_;
2985409   +      set &em_import_data_eminfo;
2985410   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2985411   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2985412   +      else
2985413   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2985414   +      else call symput('MODELID', strip(data));
2985415   +   run;
2985417   +   %let headerString= Boosting;
2985418   +   %let prefixString= _BoostVar;
2985420   +   %if "&type" = "BAGINFO" %then %do;
2985421   +        %let headerString = Bagging;
2985422   +        %let prefixString= _BagVar;
2985423   +   %end;
2985425   +   %let targetType=;
2985426   +   %let predictedVars=;
2985427   +   data _null_;
2985428   +      retain index;
2985429   +      set &endgrp_decmeta end=eof;
2985430   +      length tempvar $200;
2985431   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2985432   +      else
2985433   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2985434   +      else
2985435   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2985436   +      else
2985437   +      if _TYPE_ = 'PREDICTED' then do;
2985438   +         index+1;
2985439   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2985440   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2985441   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2985442   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2985443   +      end;
2985444   +      if eof then
2985445   +         call symput('prednum', strip(put(index, best.)));
2985446   +   run;
2985448   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2985449   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2985451   +   filename loopflow "&em_user_loopflowcode";
2985452   +   filename looppub "&em_user_looppubcode";
2985454   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2985455   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2985457   +   %if "&emloopnumber" = "1" %then %do;
2985458   +       data _null_;
2985459   +          rc = fdelete('loopflow');
2985460   +          rc = fdelete('looppub');
2985461   +       run;
2985462   +       data _null_;
2985463   +          file loopflow;
2985464   +          put "&em_codebar;";
2985465   +          put "* &em_nodeid: ;" ;
2985466   +          put "* User: &sysuserid;";
2985467   +          put "* Date: &sysdate: &systime;";
2985468   +          put "&em_codebar ;";
2985469   +          put "* Ensemble Code;";
2985470   +          put "&em_codebar ;";
2985471   +          put "* &headerString: Loop=1;";
2985472   +          put "* Temporary Variables;";
2985473   +          %do i= 1 %to &prednum;
2985474   +              put "drop &&tempvars&i;";
2985475   +              put "&&tempvars&i = 0;";
2985476   +          %end;
2985477   +       run;
2985478   +       %em_copyfile(infref=loopflow, outfref=looppub);
2985479   +   %end;
2985481   +   %let j=&emloopnumber;
2985482   +   %do i = 1 %to &loopcodenum;
2985483   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2985484   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2985486   +       %if (&&loopnode&i eq &em_nodeid ) or
2985487   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2985488   +           data _null_;
2985489   +              file loopflow mod;
2985490   +              put "&em_codebar;";
2985491   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2985492   +              put "* User: &sysuserid;";
2985493   +              put "* Date: &sysdate: &systime;";
2985494   +              put "* &headerString: Loop=&j;";
2985495   +              put "&em_codebar;";
2985496   +           run;
2985497   +           data _null_;
2985498   +              file looppub mod;
2985499   +              put "&em_codebar;";
2985500   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2985501   +              put "* User: &sysuserid;";
2985502   +              put "* Date: &sysdate: &systime;";
2985503   +              put "* &headerString: Loop=&j;";
2985504   +              put "&em_codebar;";
2985505   +           run;
2985506   +       %end;
2985508   +       %if &&loopnode&i ne &em_nodeid %then %do;
2985509   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2985510   +               filename x catalog "&fsourceEntry";
2985511   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2985512   +               filename x;
2985514   +               filename y catalog "&psourceEntry";
2985515   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2985516   +               filename y;
2985517   +           %end;
2985518   +       %end;
2985519   +       %else %do;
2985520   +           %if "&j" ne "1" %then %do;
2985521   +               %let weight = %eval(&j-1);
2985522   +               data _null_;
2985523   +                  file loopflow mod;
2985524   +                  put "&em_codebar;";
2985525   +                  %if "&j" ne "&endloopnum" %then %do;
2985526   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2985527   +                  %end;
2985528   +                  %else %do;
2985529   +                      put "* &headerString: accumulate final probabilities;";
2985530   +                  %end;
2985531   +                  put "&em_codebar;";
2985532   +                  %do k=1 %to &prednum;
2985533   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2985534   +                  %end;
2985535   +               run;
2985536   +               data _null_;
2985537   +                  file looppub mod;
2985538   +                  put "&em_codebar;";
2985539   +                  %if "&j" ne "&endloopnum" %then %do;
2985540   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2985541   +                  %end;
2985542   +                  %else %do;
2985543   +                      put "* &headerString: accumulate final probabilities;";
2985544   +                  %end;
2985545   +                  %do k=1 %to &prednum;
2985546   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2985547   +                  %end;
2985548   +               run;
2985549   +           %end;
2985550   +           %if "&j" ne "&endloopnum" %then %do;
2985551   +               data _null_;
2985552   +                  file loopflow mod;
2985553   +                  put "&em_codebar;";
2985554   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2985555   +                  put "&em_codebar;";
2985556   +               %do k=1 %to &prednum;
2985557   +                  put "&&tempvars&k = &&predvars&k;";
2985558   +               %end;
2985559   +               run;
2985560   +               data _null_;
2985561   +                  file looppub mod;
2985562   +                  put "&em_codebar;";
2985563   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2985564   +                  put "&em_codebar;";
2985565   +               %do k=1 %to &prednum;
2985566   +                   put "&&tempvars&k = &&predvars&k;";
2985567   +               %end;
2985568   +               run;
2985569   +           %end;
2985571   +       %end;
2985572   +   %end;
2985574   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2985575   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2985577   +   filename loopflow;
2985578   +   filename looppub;
2985579   +   filename empub;
2985581   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2985582   +   %let gpTrain=;
2985583   +   %let gpValidate=;
2985584   +   %let gpTest=;
2985586   +   data _null_;
2985587   +      set &groupImportDs;
2985588   +      select(upcase(port));
2985589   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2985590   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2985591   +          when('TEST')     call symput('gpTest',     strip(dataset));
2985592   +       otherwise;
2985593   +      end;
2985594   +   run;
2985596   +   %if "&gpTrain" ne "" %then %do;
2985598   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2985600   +       %if &targetType ne INTERVAL %then %do;
2985601   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2985602   +       %end;
2985604   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2985606   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2985608   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2985609   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2985611   +       filename _decflow "&decflow";
2985612   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2985613   +       filename _decflow;
2985615   +   %end;
2985617   +   %if "&gpTrain" ne "" %then
2985618   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2985619   +   %if "&gpValidate" ne "" %then
2985620   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2985621   +   %if "&gpTest" ne "" %then
2985622   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2985624   +   filename emflow;
2985626   +%mend boostbagcode;
2985628   +%macro score;
2985630   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2985631   +   %inc _dec;
2985632   +   filename _dec;
2985634   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2985636   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2985637   +       %let emexceptionstring = nomodeltarget;
2985638   +       %goto doendpl;
2985639   +   %end;
2985641   +   %LET GROUPID=;
2985642   +   %let LOOPTYPE=;
2985643   +   data _null_;
2985644   +      set &em_import_data_eminfo;
2985645   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2985646   +      call symput('GROUPID',   strip(data));
2985647   +      call symput('LOOPTYPE', strip(key));
2985648   +   run;
2985650   +   %em_getname(key=PATH, type=DATA);
2985652   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2985653   +   %include temp;
2985654   +   filename temp;
2985656   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2985658   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2985659   +       %let deleteString = &em_nodeid._path;
2985660   +       proc datasets lib=&em_lib nolist;
2985661   +          delete &deleteString;
2985662   +       run;
2985663   +       quit;
2985664   +   %end;
2985666   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2985668   +   data score_path;
2985669   +      retain LOOPID &emloopnumber;
2985670   +      set score_path;
2985671   +   run;
2985673   +   proc append base=&em_user_path  data=score_path;
2985674   +   run;
2985676   +   %let EnsembleIndex=0;
2985677   +   data _null_;
2985678   +      retain index 0 ensembleIndex 0;
2985679   +      set score_Path end=eof;
2985680   +      if nodelabel = "&groupid" or index then do;
2985681   +         index + 1;
2985682   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2985683   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2985684   +      end;
2985685   +      if component='Ensemble' then ensembleIndex = index;
2985686   +      if eof then do;
2985687   +         call symput('loopcodenum', strip(put(index, best.)));
2985688   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2985689   +      end;
2985690   +   run;
2985692   +   proc datasets lib=work nolist;
2985693   +      delete score_Path;
2985694   +   run;
2985695   +   quit;
2985697   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2985698   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2985700   +   %doendpl:
2985702   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2985703   +/*
2985704   +       MACRO: EM_DECIDECODE
2985705   +
2985706   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2985707   +       SUPPORT: Taiyeong Lee
2985708   +
2985709   +       HISTORY: 01OCT04 Initial code
2985710   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2985711   +                to add the corresponding decision code
2985712   +
2985713   +*/
2985714   +
2985715   +
2985716   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2985717   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2985718   +
2985719   +    %do;
2985720   +    %let m_data      = &data;
2985721   +    %let m_decdata   = &decdata;
2985722   +    %let m_decmeta   = &decmeta;
2985723   +    %let m_noresfile = &noresfile;
2985724   +    %let m_resfile   = &resfile;
2985725   +    dm "afa c=sashelp.emutil.decidecode.scl";
2985726   +  %end;
2985727   +%mend EM_DECIDECODE;
2985728   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2985729   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2985730   +   proc display c=sashelp.emcore.pathscorecode.scl;
2985731   +   run;
2985732   +%mend EM_GETTRAINPATH;
2985733   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2985734    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2985735    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2985736    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2985737    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2985738    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2985739    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2985740    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2985741    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985742    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985743    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985744    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985745    output;
MPRINT(EM_GETTRAINPATH):   output;
2985746    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2985747    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2985748    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2985749    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2985750    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2985751    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985752    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985753    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985754    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985755    output;
MPRINT(EM_GETTRAINPATH):   output;
2985756    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2985757    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2985758    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2985759    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2985760    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2985761    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985762    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985763    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985764    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985765    output;
MPRINT(EM_GETTRAINPATH):   output;
2985766    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2985767    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2985768    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2985769    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2985770    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2985771    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985772    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985773    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985774    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985775    output;
MPRINT(EM_GETTRAINPATH):   output;
2985776    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2985777    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2985778    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2985779    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2985780    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2985781    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985782    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985783    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985784    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985785    output;
MPRINT(EM_GETTRAINPATH):   output;
2985786    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2985787    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2985788    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2985789    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2985790    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2985791    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985792    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985793    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985794    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985795    output;
MPRINT(EM_GETTRAINPATH):   output;
2985796    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2985797    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2985798    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2985799    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2985800    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2985801    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985802    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985803    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985804    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985805    output;
MPRINT(EM_GETTRAINPATH):   output;
2985806    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2985807    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2985808    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2985809    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2985810    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2985811    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985812    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985813    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985814    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985815    output;
MPRINT(EM_GETTRAINPATH):   output;
2985816    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2985817    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2985818    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2985819    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2985820    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2985821    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985822    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985823    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985824    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985825    output;
MPRINT(EM_GETTRAINPATH):   output;
2985826    nodelabel="Grp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp9";
2985827    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2985828    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2985829    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2985830    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2985831    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985832    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985833    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985834    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985835    output;
MPRINT(EM_GETTRAINPATH):   output;
2985836    nodelabel="Neural";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural";
2985837    parent="Grp9";
MPRINT(EM_GETTRAINPATH):   parent="Grp9";
2985838    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
2985839    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
2985840    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2985841    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985842    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985843    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985844    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985845    output;
MPRINT(EM_GETTRAINPATH):   output;
2985846    nodelabel="EndGrp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp10";
2985847    parent="Neural";
MPRINT(EM_GETTRAINPATH):   parent="Neural";
2985848    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2985849    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2985850    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2985851    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2985852    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2985853    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2985854    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2985855    output;
MPRINT(EM_GETTRAINPATH):   output;
2985856    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 9;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp10_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP10_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP10_PATH has 108 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp9" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985857    *------------------------------------------------------------*;
2985858    * End SCORE: EndGrp10;
2985859    *------------------------------------------------------------*;
2985860
 
2985861    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2985862    * EndGrp10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp10: Scoring DATA data;
2985863    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2985864    data EMWS1.EndGrp10_TRAIN
2985865    / view=EMWS1.EndGrp10_TRAIN
2985866    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_TRAIN / view=EMWS1.EndGrp10_TRAIN ;
2985867    set EMWS1.Neural_TRAIN
2985868    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_TRAIN ;
2985869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2985870    quit;
 
2985872    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2985873    * EndGrp10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp10: Computing metadata for TRAIN data;
2985874    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp10_TRAIN out=WORK.M2_QGQ8C noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_QGQ8C;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_QGQ8C(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_QGQ8C;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_QGQ8C;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0VDMLIY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2H1ZQ1X(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VDMLIY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp10";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2986220    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2986221    set EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMINFO;
2986222    where DATA='EndGrp10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2986223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMINFO.
      WHERE (DATA='EndGrp10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2986224    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMINFO;
2986225    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2986226    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2986227    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2986231    run;
2986232    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_EMINFO;
2986233    set EMWS1.EndGrp10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMINFO WORK.MODELTEMP_INFO;
2986234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2986235    proc sort data = EMWS1.EndGrp10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp10_EMINFO NOTHREADS;
2986236    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2986237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2986238    proc sort data = EMWS1.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2986239    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2986240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2986241    proc sort data = EMWS1.EndGrp10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2986242    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2986243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2986244    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_EMINFO;
2986245    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2986246    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2986247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2986248    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2986249    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2986250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2986251    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:59:29 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:59:29 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3I9PYOW "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3I9PYOW new;
MPRINT(EM_DIAGRAM):   run;
2986275    data EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMOUTFIT;
2986276    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2986277    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2986278    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2986279    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2986280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2986281    proc sort data=EMWS1.EndGrp10_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp10_EMREPORTFIT nothreads;
2986282    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2986283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2986284    %let _EMwarndup = 0;
2986285    %let _EMtargetdup =;
2986286    %let _EMASEtargetdup =;
2986287    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2986288    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2986289    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2986290    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2986291    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2986292    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2986293    end;
MPRINT(EM_DIAGRAM):   end;
2986294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2986295    proc sort data=EMWS1.Neural_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_CMeta_TRAIN out=WORK.SUBSETINMETA;
2986296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2986297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2986298    proc sort data=EMWS1.EndGrp10_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp10_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2986299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2986300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2986301    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2986302    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2986303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2986304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2986305    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2986306    set EMWS1.EndGrp10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_CMeta_TRAIN;
2986307    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2986308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2986309    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2986310    set EMWS1.EndGrp10_TRAIN(keep=
2986311    F_DepVar
2986312    I_DepVar
2986313    P_DepVar0
2986314    P_DepVar1
2986315    R_DepVar0
2986316    R_DepVar1
2986317    U_DepVar
2986318    _WARN_
2986319    DepVar
2986320    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2986321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2183 observations read from the data set EMWS1.GRP9_TRAIN.
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2183 observations read from the data set EMWS1.NEURAL_TRAIN.
NOTE: There were 2183 observations read from the data set EMWS1.ENDGRP10_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2183 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2990508    %let _cn = %sysfunc(getoption(CENTER));
2990509    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2990510    proc print data=EMWS1.EndGrp10_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMREPORTFIT noobs label;
2990511    var STAT LABEL TRAIN
2990512    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2990513    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2990514    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2990515    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2990516    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2017.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2990517    title10;
MPRINT(EM_DIAGRAM):   title10;
2990518    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2990519    proc sort data=EMWS1.EndGrp10_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp10_EMCLASSIFICATION nothreads;
2990520    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2990521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2990522    %let _cn = %sysfunc(getoption(CENTER));
2990523    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2990524    proc print data=EMWS1.EndGrp10_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMCLASSIFICATION noobs label;
2990525    var from into pct_row pct_col count percent
2990526    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2990527    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2990528    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2990529    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2990530    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2990531    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2990532    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2990533    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2990534    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2990535    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2990536    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2990537    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2018.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2990538    title9;
MPRINT(EM_DIAGRAM):   title9;
2990539    title10;
MPRINT(EM_DIAGRAM):   title10;
2990540    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2990541    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2990542    modify EndGrp10_EMRANK;
The SAS System
 
MPRINT(EM_DIAGRAM):   modify EndGrp10_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2990543    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2990544    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2990545    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP10_EMRANK.DATA.
2990546    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2990547    %let _cn = %sysfunc(getoption(CENTER));
2990548    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2990549    proc print data=EMWS1.EndGrp10_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMRANK label noobs;
2990550    var
2990551    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2990552    by
2990553    notsorted DATAROLE
2990554    notsorted TARGET
2990555    notsorted TARGETLABEL
2990556    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2990557    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2990558    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2990559    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2019.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2990560    title10;
MPRINT(EM_DIAGRAM):   title10;
2990561    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2990562    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2990563    modify EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2990564    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2990565    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2990566    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP10_EMSCOREDIST.DATA.
2990567    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2990568    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2990569    set EMWS1.Grp9_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_GROUPINFO;
2990570    where _LOOP_=9;
MPRINT(EM_DIAGRAM):   where _LOOP_=9;
2990571    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2990572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP9_GROUPINFO.
      WHERE _LOOP_=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2990573    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2990574    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2990575    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2990576    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2990577    set EMWS1.EndGrp10_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMRANK;
2990578    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2990579    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2990580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2990581    data EMWS1.EndGrp10_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMRANK_LOOP;
2990582    set EMWS1.EndGrp10_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMRANK_LOOP temp;
2990583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.ENDGRP10_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMRANK_LOOP has 180 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2990584    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2990585    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2990586    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2990587    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2990588    set EMWS1.EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMSCOREDIST;
2990589    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2990590    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2990591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2990592    data EMWS1.EndGrp10_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMSCOREDIST_LOOP;
2990593    set EMWS1.EndGrp10_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMSCOREDIST_LOOP temp;
2990594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.ENDGRP10_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMSCOREDIST_LOOP has 180 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2990595    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2990596    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2990597    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2990598    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2990599    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2990600    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2990601    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2990602    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2990603    data EMWS1.EndGrp10_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMOUTFIT_LOOP;
2990604    set EMWS1.EndGrp10_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT_LOOP temp;
2990605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT_LOOP has 9 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2990606    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2990607    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2990608    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2990609    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2990610    set EMWS1.EndGrp10_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMREPORTFIT;
2990611    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2990612    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2990613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2990614    data EMWS1.EndGrp10_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMREPORTFIT_LOOP;
2990615    set EMWS1.EndGrp10_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMREPORTFIT_LOOP temp;
2990616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 168 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMREPORTFIT_LOOP has 189 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2990617    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2990618    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2990619    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2990620    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2990621    set EMWS1.EndGrp10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMCLASSIFICATION;
2990622    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2990623    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2990624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2990625    data EMWS1.EndGrp10_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMCLASSIFICATION_LOOP;
2990626    set EMWS1.EndGrp10_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMCLASSIFICATION_LOOP temp;
2990627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION_LOOP has 36 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
