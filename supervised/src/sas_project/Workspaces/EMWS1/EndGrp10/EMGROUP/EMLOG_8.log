*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:55:22 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:16 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:55:16 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2K93O1Z "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2K93O1Z new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMGROUP\EMLOG_8.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:16 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMGROUP\EMOUTPUT_8.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:16 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2650453    proc freq data=EMWS1.EndGrp10_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp10_VariableSet noprint;
2650454    table ROLE*LEVEL/out=WORK.EndGrp10META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp10META;
2650455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_VARIABLESET.
NOTE: The data set WORK.ENDGRP10META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
2650456    proc print data=WORK.EndGrp10META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp10META label noobs;
2650457    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2650458    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2650459    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2650460    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2650461    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP10META.
NOTE: The PROCEDURE PRINT printed page 1792.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2650462    title10;
MPRINT(EM_DIAGRAM):   title10;
2650463    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN EMWS1 Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN
EMWS1.Neural_TRAIN EMWS1.Neural_TRAIN EMWS1 Neural_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2650492    data WORK.EndGrp10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2650493    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2650494    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2650495       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2650496    set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL_DEPVAR_DM( where=(_TYPE_="TARGET"));
2650497    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2650498    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2650499    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2650500    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2650501    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2650502    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2650503    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2650504    end;
MPRINT(EM_DIAGRAM):   end;
2650505    output;
MPRINT(EM_DIAGRAM):   output;
2650506    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP10_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
2650507    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2650508    proc print data=WORK.EndGrp10_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp10_EVENT noobs label;
2650509    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2650510    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2650511    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2650512    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP10_EVENT.
NOTE: The PROCEDURE PRINT printed page 1793.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2650513    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2650514    proc print data = EMWS1.Neural_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural_DepVar_DM noobs label;
2650515    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2650516    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2650517    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2650518    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2650519    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2650520    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1794.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2650521    title10;
MPRINT(EM_DIAGRAM):   title10;
2650522    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp10: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=300;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13654984069185;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1897;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86345015930814;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2650996    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2650997    * EndGrp10: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp10: Generation of macros and macro variables;
2650998    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2650999    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2651000    %let EMEXCEPTIONSTRING=;
2651001    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2651002    * TRAIN: EndGrp10;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp10;
2651003    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651004    %let EM_ACTION = TRAIN;
2651005    %let syscc = 0;
2651006    %macro main;
2651007       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2651008
2651009           filename temp catalog 'sashelp.emutil.endgp_train.source';
2651010           %include temp;
2651011           filename temp;
2651012
2651013           %train;
2651014
2651015       %end;
2651016       %else
2651017          %if %upcase(&EM_ACTION) = SCORE %then %do;
2651018
2651019           filename temp catalog 'sashelp.emutil.endgp_score.source';
2651020           %include temp;
2651021           filename temp;
2651022
2651023           %score;
2651024       %end;
2651025       %else
2651026       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2651027
2651028           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2651029           %include temp;
2651030           filename temp;
2651031
2651032           %postloop;
2651033
2651034       %end;
2651035
2651036       %doendm:
2651037    %mend main;
2651038
2651039    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2651040   +%macro copyModelDs(model=, key=);
2651041   +   %let modelDs  = &em_lib..&model._&key;
2651042   +   %let reportDs = &em_lib..&em_nodeid._&key;
2651043   +   %if %sysfunc(exist(&modelDs)) %then %do;
2651044   +       data &reportDs;
2651045   +          length ModelId $16;
2651046   +          retain ModelId "&model";
2651047   +          set &modelDs;
2651048   +       run;
2651049   +   %end;
2651050   +%mend copyModelDs;
2651051   +
2651052   +%macro traintarget(groupid=);
2651053   +   %em_getname(key=emoutfit, type=DATA);
2651054   +   %let targetname=;
2651055   +   data _null_;
2651056   +     set &em_lib..&groupid._&looptype;
2651057   +     where _LOOP_ = &EMLOOPNUMBER;
2651058   +     call symput('targetname', strip(_TARGET_));
2651059   +   run;
2651060   +   %let modelId =;
2651061   +   data _null_;
2651062   +      set &em_import_data_eminfo;
2651063   +      where key = 'MODEL' and TARGET = "&targetname";
2651064   +      call symput('modelId',   strip(data));
2651065   +   run;
2651066   +   %if "&modelId" ne "" %then %do;
2651067   +       %copyModelDs(model=&modelid, key=EMRANK);
2651068   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2651069   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2651070   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2651071   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2651072   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2651073   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2651074   +   %end;
2651075   +
2651076   +   %doendtgp:
2651077   +%mend;
2651078   +
2651079   +%macro trainboost(groupid=);
2651080   +
2651081   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2651082   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2651083   +
2651084   +   data _null_;
2651085   +      retain index 0;
2651086   +      set &boostinfoDs;
2651087   +      call symput('targetname', strip(_target_));
2651088   +   run;
2651089   +
2651090   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2651091   +       %let decmeta = ;
2651092   +       data _null_;
2651093   +          set &em_import_data_eminfo;
2651094   +          where (key='DECMETA' and TARGET="&targetname");
2651095   +          call symput('DECMETA', strip(data));
2651096   +       run;
2651097   +       %if "&decmeta" eq "" %then %do;
2651098   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2651099   +           %goto doendtb;
2651100   +       %end;
2651101   +
2651102   +       %let predictedVars=;
2651103   +       data _null_;
2651104   +          set &decmeta;
2651105   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2651106   +          else
2651107   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2651108   +          else
2651109   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2651110   +       run;
2651111   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2651112   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2651113   +       %end;
2651114   +   %end;
2651115   +
2651116   +   * ;
2651117   +   * ENDGROUP &NODEID : Boosting scoring ;
2651118   +   * ;
2651119   +   data &em_lib..&groupid._boostscore;
2651120   +      set &em_import_data;
2651121   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2651122   +      %if "%em_freq" ne "" %then %do ;
2651123   +          keep %em_freq ;
2651124   +      %end ;
2651125   +   run;
2651126   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2651127   +
2651128   +   %doendtb:
2651129   +
2651130   +%mend trainboost;
2651131   +
2651132   +%macro trainbag(groupid=);
2651133   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2651134   +   data _null_;
2651135   +      retain index 0;
2651136   +      set &baginfoDs;
2651137   +      call symput('targetname', strip(_target_));
2651138   +   run;
2651139   +
2651140   +   %let decmeta = ;
2651141   +   data _null_;
2651142   +       set &em_import_data_eminfo;
2651143   +       where (key='DECMETA' and TARGET="&targetname");
2651144   +       call symput('DECMETA', strip(data));
2651145   +   run;
2651146   +   %if "&decmeta" eq "" %then %do;
2651147   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2651148   +       %goto doendtg;
2651149   +   %end;
2651150   +
2651151   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2651152   +
2651153   +   %doendtg:
2651154   +%mend trainbag;
2651155   +
2651156   +%macro traingroup(groupid=);
2651157   +   %let targetNum = 0;
2651158   +
2651159   +   data _temp1;
2651160   +      set &em_lib..&groupid._eminfo;
2651161   +      where key='MODEL';
2651162   +   run;
2651163   +   data _temp2;
2651164   +      set &em_import_data_eminfo;
2651165   +      where key='MODEL';
2651166   +   run;
2651167   +   proc sort data=_temp1; by TARGET DATA;
2651168   +   proc sort data=_temp2; by TARGET DATA;
2651169   +   data _temp2;
2651170   +      merge _temp1(in=_a) _temp2(in=_b);
2651171   +      by TARGET DATA;
2651172   +      if ^_a and _b then output;
2651173   +   run;
2651174   +   data _null_;
2651175   +      retain index 0;
2651176   +      set _temp2 end=eof;
2651177   +      index +1;
2651178   +      where key ='MODEL';
2651179   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2651180   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2651181   +      if eof then
2651182   +         call symput('targetnum', strip(put(index, best.)));
2651183   +   run;
2651184   +   proc datasets lib=work nolist;
2651185   +      delete _temp1 _temp2;
2651186   +   run;
2651187   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2651188   +
2651189   +   %let modelString =;
2651190   +   %do i=1 %to &targetnum;
2651191   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2651192   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2651193   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2651194   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2651195   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2651196   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2651197   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2651198   +            %let modelString = &modelString &&modelid&i;
2651199   +       %end;
2651200   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2651201   +   %end;
2651202   +
2651203   +   %doendtgp:
2651204   +
2651205   +%mend traingroup;
2651206   +
2651207   +%macro getSize(data=, nobsvar=);
2651208   +
2651209   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2651210   +       %let dsid = %sysfunc(open(&data));
2651211   +       %if &dsid %then %do;
2651212   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2651213   +           %let dsid = %sysfunc(close(&dsid));
2651214   +       %end;
2651215   +   %end;
2651216   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2651217   +        proc sql;
2651218   +           reset noprint;
2651219   +           select count(*) into :&nobsvar from &data;
2651220   +        quit;
2651221   +   %end;
2651222   +
2651223   +%mend getsize;
2651224   +
2651225   +%macro train;
2651226   +
2651227   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2651228   +      %let EM_TOOLTYPE=UTILITY;
2651229   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2651230   +          proc delete data=&em_data_eminfo;
2651231   +          run;
2651232   +      %end;
2651233   +      %goto doendtr;
2651234   +   %end;
2651235   +
2651236   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2651237   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2651238   +       %goto doendtr;
2651239   +   %end;
2651240   +
2651241   +   %let xgroupid = ;
2651242   +   data _null_;
2651243   +      set &em_import_data_eminfo;
2651244   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2651245   +      call symput('XGROUPID',  strip(data));
2651246   +      call symput('LOOPTYPE', strip(key));
2651247   +   run;
2651248   +
2651249   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2651250   +       %let nDataObs=0;
2651251   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2651252   +
2651253   +       %let nStartObs=0;
2651254   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2651255   +
2651256   +       %if &nDataObs ne &nStartObs %then %do;
2651257   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2651258   +           %goto doendtr;
2651259   +       %end;
2651260   +
2651261   +       %trainboost(groupid=&xgroupid);
2651262   +   %end;
2651263   +   %else
2651264   +   %if "&looptype" eq "BAGINFO" %then %do;
2651265   +       %trainbag(groupid=&xgroupid);
2651266   +   %end;
2651267   +   %else
2651268   +   %if "&looptype" eq "GROUPINFO" %then %do;
2651269   +       %traingroup(groupid=&xgroupid);
2651270   +   %end;
2651271   +   %else
2651272   +   %if "&looptype" eq "TARGETINFO" %then %do;
2651273   +       %traintarget(groupid=&xgroupid);
2651274   +   %end;
2651275   +
2651276   +   data &em_data_eminfo;
2651277   +      length TARGET KEY $32  DATA $43;
2651278   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2651279   +   run;
2651280   +
2651281   +   %let EM_TOOLTYPE=MODEL;
2651282   +
2651283   +   %doendtr:
2651284   +
2651285   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp9_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP9_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMRANK.
NOTE: The data set EMWS1.ENDGRP10_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP10_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp10_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural";
MPRINT(COPYMODELDS):   set EMWS1.Neural_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp10_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp10";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651286    *------------------------------------------------------------*;
2651287    * End TRAIN: EndGrp10;
2651288    *------------------------------------------------------------*;
2651289
 
2651290    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2651291    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2651292    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651293    ;
MPRINT(EM_DIAGRAM):   ;
2651294    ;
MPRINT(EM_DIAGRAM):   ;
2651295    ;
MPRINT(EM_DIAGRAM):   ;
2651296    ;
MPRINT(EM_DIAGRAM):   ;
2651297    quit;
MPRINT(EM_DIAGRAM):   quit;
2651298    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651299    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2651300    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651301    /*; *"; *'; */
2651302    ;
MPRINT(EM_DIAGRAM):   ;
2651303    run;
MPRINT(EM_DIAGRAM):   run;
2651304    quit;
MPRINT(EM_DIAGRAM):   quit;
2651305    /* Reset EM Options */
2651306    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2651307    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2651308    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:19 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:55:19 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YV0469 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YV0469 new;
MPRINT(EM_DIAGRAM):   run;
2651410    %let EMEXCEPTIONSTRING=;
2651411    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2651412    * SCORE: EndGrp10;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp10;
2651413    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651414    %let EM_ACTION = SCORE;
2651415    %let syscc = 0;
2651416    %macro main;
2651417       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2651418
2651419           filename temp catalog 'sashelp.emutil.endgp_train.source';
2651420           %include temp;
2651421           filename temp;
2651422
2651423           %train;
2651424
2651425       %end;
2651426       %else
2651427          %if %upcase(&EM_ACTION) = SCORE %then %do;
2651428
2651429           filename temp catalog 'sashelp.emutil.endgp_score.source';
2651430           %include temp;
2651431           filename temp;
2651432
2651433           %score;
2651434       %end;
2651435       %else
2651436       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2651437
2651438           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2651439           %include temp;
2651440           filename temp;
2651441
2651442           %postloop;
2651443
2651444       %end;
2651445
2651446       %doendm:
2651447    %mend main;
2651448
2651449    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2651450   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2651452   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2651453   +       data &out / view=&out;
2651454   +          set &data
2651456   +          %if "&prescore" = "Y" %then %do;
2651457   +              (obs=1)
2651458   +          %end;
2651460   +          ;
2651462   +          %inc &scoreref;
2651464   +          %if "&prescore" eq "Y" %then %do;
2651465   +              drop I_: R_:;
2651466   +          %end;
2651468   +       run;
2651469   +   %end;
2651471   +%mend scoretables;
2651473   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2651474   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2651475   +   data _null_;
2651476   +      retain index 0;
2651477   +      set &infoDs;
2651478   +      call symput('targetname', strip(_target_));
2651479   +      call symput('endloopnum', strip(_loop_));
2651480   +   run;
2651482   +   %let endgrp_decmeta=;
2651483   +   %let endgrp_decdata=;
2651485   +   data _null_;
2651486   +      set &em_import_data_eminfo;
2651487   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2651488   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2651489   +      else
2651490   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2651491   +      else call symput('MODELID', strip(data));
2651492   +   run;
2651494   +   %let headerString= Boosting;
2651495   +   %let prefixString= _BoostVar;
2651497   +   %if "&type" = "BAGINFO" %then %do;
2651498   +        %let headerString = Bagging;
2651499   +        %let prefixString= _BagVar;
2651500   +   %end;
2651502   +   %let targetType=;
2651503   +   %let predictedVars=;
2651504   +   data _null_;
2651505   +      retain index;
2651506   +      set &endgrp_decmeta end=eof;
2651507   +      length tempvar $200;
2651508   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2651509   +      else
2651510   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2651511   +      else
2651512   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2651513   +      else
2651514   +      if _TYPE_ = 'PREDICTED' then do;
2651515   +         index+1;
2651516   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2651517   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2651518   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2651519   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2651520   +      end;
2651521   +      if eof then
2651522   +         call symput('prednum', strip(put(index, best.)));
2651523   +   run;
2651525   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2651526   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2651528   +   filename loopflow "&em_user_loopflowcode";
2651529   +   filename looppub "&em_user_looppubcode";
2651531   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2651532   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2651534   +   %if "&emloopnumber" = "1" %then %do;
2651535   +       data _null_;
2651536   +          rc = fdelete('loopflow');
2651537   +          rc = fdelete('looppub');
2651538   +       run;
2651539   +       data _null_;
2651540   +          file loopflow;
2651541   +          put "&em_codebar;";
2651542   +          put "* &em_nodeid: ;" ;
2651543   +          put "* User: &sysuserid;";
2651544   +          put "* Date: &sysdate: &systime;";
2651545   +          put "&em_codebar ;";
2651546   +          put "* Ensemble Code;";
2651547   +          put "&em_codebar ;";
2651548   +          put "* &headerString: Loop=1;";
2651549   +          put "* Temporary Variables;";
2651550   +          %do i= 1 %to &prednum;
2651551   +              put "drop &&tempvars&i;";
2651552   +              put "&&tempvars&i = 0;";
2651553   +          %end;
2651554   +       run;
2651555   +       %em_copyfile(infref=loopflow, outfref=looppub);
2651556   +   %end;
2651558   +   %let j=&emloopnumber;
2651559   +   %do i = 1 %to &loopcodenum;
2651560   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2651561   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2651563   +       %if (&&loopnode&i eq &em_nodeid ) or
2651564   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2651565   +           data _null_;
2651566   +              file loopflow mod;
2651567   +              put "&em_codebar;";
2651568   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2651569   +              put "* User: &sysuserid;";
2651570   +              put "* Date: &sysdate: &systime;";
2651571   +              put "* &headerString: Loop=&j;";
2651572   +              put "&em_codebar;";
2651573   +           run;
2651574   +           data _null_;
2651575   +              file looppub mod;
2651576   +              put "&em_codebar;";
2651577   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2651578   +              put "* User: &sysuserid;";
2651579   +              put "* Date: &sysdate: &systime;";
2651580   +              put "* &headerString: Loop=&j;";
2651581   +              put "&em_codebar;";
2651582   +           run;
2651583   +       %end;
2651585   +       %if &&loopnode&i ne &em_nodeid %then %do;
2651586   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2651587   +               filename x catalog "&fsourceEntry";
2651588   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2651589   +               filename x;
2651591   +               filename y catalog "&psourceEntry";
2651592   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2651593   +               filename y;
2651594   +           %end;
2651595   +       %end;
2651596   +       %else %do;
2651597   +           %if "&j" ne "1" %then %do;
2651598   +               %let weight = %eval(&j-1);
2651599   +               data _null_;
2651600   +                  file loopflow mod;
2651601   +                  put "&em_codebar;";
2651602   +                  %if "&j" ne "&endloopnum" %then %do;
2651603   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2651604   +                  %end;
2651605   +                  %else %do;
2651606   +                      put "* &headerString: accumulate final probabilities;";
2651607   +                  %end;
2651608   +                  put "&em_codebar;";
2651609   +                  %do k=1 %to &prednum;
2651610   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2651611   +                  %end;
2651612   +               run;
2651613   +               data _null_;
2651614   +                  file looppub mod;
2651615   +                  put "&em_codebar;";
2651616   +                  %if "&j" ne "&endloopnum" %then %do;
2651617   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2651618   +                  %end;
2651619   +                  %else %do;
2651620   +                      put "* &headerString: accumulate final probabilities;";
2651621   +                  %end;
2651622   +                  %do k=1 %to &prednum;
2651623   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2651624   +                  %end;
2651625   +               run;
2651626   +           %end;
2651627   +           %if "&j" ne "&endloopnum" %then %do;
2651628   +               data _null_;
2651629   +                  file loopflow mod;
2651630   +                  put "&em_codebar;";
2651631   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2651632   +                  put "&em_codebar;";
2651633   +               %do k=1 %to &prednum;
2651634   +                  put "&&tempvars&k = &&predvars&k;";
2651635   +               %end;
2651636   +               run;
2651637   +               data _null_;
2651638   +                  file looppub mod;
2651639   +                  put "&em_codebar;";
2651640   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2651641   +                  put "&em_codebar;";
2651642   +               %do k=1 %to &prednum;
2651643   +                   put "&&tempvars&k = &&predvars&k;";
2651644   +               %end;
2651645   +               run;
2651646   +           %end;
2651648   +       %end;
2651649   +   %end;
2651651   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2651652   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2651654   +   filename loopflow;
2651655   +   filename looppub;
2651656   +   filename empub;
2651658   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2651659   +   %let gpTrain=;
2651660   +   %let gpValidate=;
2651661   +   %let gpTest=;
2651663   +   data _null_;
2651664   +      set &groupImportDs;
2651665   +      select(upcase(port));
2651666   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2651667   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2651668   +          when('TEST')     call symput('gpTest',     strip(dataset));
2651669   +       otherwise;
2651670   +      end;
2651671   +   run;
2651673   +   %if "&gpTrain" ne "" %then %do;
2651675   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2651677   +       %if &targetType ne INTERVAL %then %do;
2651678   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2651679   +       %end;
2651681   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2651683   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2651685   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2651686   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2651688   +       filename _decflow "&decflow";
2651689   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2651690   +       filename _decflow;
2651692   +   %end;
2651694   +   %if "&gpTrain" ne "" %then
2651695   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2651696   +   %if "&gpValidate" ne "" %then
2651697   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2651698   +   %if "&gpTest" ne "" %then
2651699   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2651701   +   filename emflow;
2651703   +%mend boostbagcode;
2651705   +%macro score;
2651707   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2651708   +   %inc _dec;
2651709   +   filename _dec;
2651711   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2651713   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2651714   +       %let emexceptionstring = nomodeltarget;
2651715   +       %goto doendpl;
2651716   +   %end;
2651718   +   %LET GROUPID=;
2651719   +   %let LOOPTYPE=;
2651720   +   data _null_;
2651721   +      set &em_import_data_eminfo;
2651722   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2651723   +      call symput('GROUPID',   strip(data));
2651724   +      call symput('LOOPTYPE', strip(key));
2651725   +   run;
2651727   +   %em_getname(key=PATH, type=DATA);
2651729   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2651730   +   %include temp;
2651731   +   filename temp;
2651733   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2651735   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2651736   +       %let deleteString = &em_nodeid._path;
2651737   +       proc datasets lib=&em_lib nolist;
2651738   +          delete &deleteString;
2651739   +       run;
2651740   +       quit;
2651741   +   %end;
2651743   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2651745   +   data score_path;
2651746   +      retain LOOPID &emloopnumber;
2651747   +      set score_path;
2651748   +   run;
2651750   +   proc append base=&em_user_path  data=score_path;
2651751   +   run;
2651753   +   %let EnsembleIndex=0;
2651754   +   data _null_;
2651755   +      retain index 0 ensembleIndex 0;
2651756   +      set score_Path end=eof;
2651757   +      if nodelabel = "&groupid" or index then do;
2651758   +         index + 1;
2651759   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2651760   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2651761   +      end;
2651762   +      if component='Ensemble' then ensembleIndex = index;
2651763   +      if eof then do;
2651764   +         call symput('loopcodenum', strip(put(index, best.)));
2651765   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2651766   +      end;
2651767   +   run;
2651769   +   proc datasets lib=work nolist;
2651770   +      delete score_Path;
2651771   +   run;
2651772   +   quit;
2651774   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2651775   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2651777   +   %doendpl:
2651779   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2651780   +/*
2651781   +       MACRO: EM_DECIDECODE
2651782   +
2651783   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2651784   +       SUPPORT: Taiyeong Lee
2651785   +
2651786   +       HISTORY: 01OCT04 Initial code
2651787   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2651788   +                to add the corresponding decision code
2651789   +
2651790   +*/
2651791   +
2651792   +
2651793   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2651794   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2651795   +
2651796   +    %do;
2651797   +    %let m_data      = &data;
2651798   +    %let m_decdata   = &decdata;
2651799   +    %let m_decmeta   = &decmeta;
2651800   +    %let m_noresfile = &noresfile;
2651801   +    %let m_resfile   = &resfile;
2651802   +    dm "afa c=sashelp.emutil.decidecode.scl";
2651803   +  %end;
2651804   +%mend EM_DECIDECODE;
2651805   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2651806   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2651807   +   proc display c=sashelp.emcore.pathscorecode.scl;
2651808   +   run;
2651809   +%mend EM_GETTRAINPATH;
2651810   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2651811    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2651812    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2651813    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2651814    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2651815    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2651816    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2651817    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2651818    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651819    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651820    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651821    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651822    output;
MPRINT(EM_GETTRAINPATH):   output;
2651823    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2651824    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2651825    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2651826    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2651827    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2651828    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651829    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651830    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651831    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651832    output;
MPRINT(EM_GETTRAINPATH):   output;
2651833    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2651834    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2651835    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2651836    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2651837    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2651838    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651839    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651840    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651841    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651842    output;
MPRINT(EM_GETTRAINPATH):   output;
2651843    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2651844    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2651845    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2651846    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2651847    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2651848    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651849    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651850    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651851    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651852    output;
MPRINT(EM_GETTRAINPATH):   output;
2651853    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2651854    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2651855    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2651856    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2651857    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2651858    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651859    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651860    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651861    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651862    output;
MPRINT(EM_GETTRAINPATH):   output;
2651863    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2651864    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2651865    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2651866    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2651867    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2651868    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651869    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651870    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651871    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651872    output;
MPRINT(EM_GETTRAINPATH):   output;
2651873    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2651874    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2651875    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2651876    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2651877    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2651878    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651879    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651880    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651881    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651882    output;
MPRINT(EM_GETTRAINPATH):   output;
2651883    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2651884    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2651885    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2651886    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2651887    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2651888    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651889    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651890    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651891    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651892    output;
MPRINT(EM_GETTRAINPATH):   output;
2651893    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2651894    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2651895    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2651896    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2651897    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2651898    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651899    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651900    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651901    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651902    output;
MPRINT(EM_GETTRAINPATH):   output;
2651903    nodelabel="Grp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp9";
2651904    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2651905    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2651906    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2651907    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2651908    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651909    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651910    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651911    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651912    output;
MPRINT(EM_GETTRAINPATH):   output;
2651913    nodelabel="Neural";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural";
2651914    parent="Grp9";
MPRINT(EM_GETTRAINPATH):   parent="Grp9";
2651915    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
2651916    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
2651917    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2651918    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651919    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651920    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651921    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651922    output;
MPRINT(EM_GETTRAINPATH):   output;
2651923    nodelabel="EndGrp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp10";
2651924    parent="Neural";
MPRINT(EM_GETTRAINPATH):   parent="Neural";
2651925    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2651926    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2651927    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2651928    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2651929    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2651930    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2651931    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2651932    output;
MPRINT(EM_GETTRAINPATH):   output;
2651933    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 8;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp10_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP10_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP10_PATH has 96 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp9" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651934    *------------------------------------------------------------*;
2651935    * End SCORE: EndGrp10;
2651936    *------------------------------------------------------------*;
2651937
 
2651938    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2651939    * EndGrp10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp10: Scoring DATA data;
2651940    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2651941    data EMWS1.EndGrp10_TRAIN
2651942    / view=EMWS1.EndGrp10_TRAIN
2651943    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_TRAIN / view=EMWS1.EndGrp10_TRAIN ;
2651944    set EMWS1.Neural_TRAIN
2651945    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_TRAIN ;
2651946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2651947    quit;
 
2651949    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2651950    * EndGrp10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp10: Computing metadata for TRAIN data;
2651951    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp10_TRAIN out=WORK.M1_SS0HL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_SS0HL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_SS0HL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_SS0HL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_SS0HL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3H2D3YK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PA7MGG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H2D3YK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp10";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2652297    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2652298    set EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMINFO;
2652299    where DATA='EndGrp10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2652300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMINFO.
      WHERE (DATA='EndGrp10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2652301    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMINFO;
2652302    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2652303    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2652304    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2652308    run;
2652309    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_EMINFO;
2652310    set EMWS1.EndGrp10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMINFO WORK.MODELTEMP_INFO;
2652311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2652312    proc sort data = EMWS1.EndGrp10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp10_EMINFO NOTHREADS;
2652313    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2652314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2652315    proc sort data = EMWS1.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2652316    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2652317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2652318    proc sort data = EMWS1.EndGrp10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2652319    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2652320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2652321    data EMWS1.EndGrp10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp10_EMINFO;
2652322    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2652323    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2652324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP10_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2652325    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2652326    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2652327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2652328    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:55:21 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:55:21 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O23GIE7K "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O23GIE7K new;
MPRINT(EM_DIAGRAM):   run;
2652352    data EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMOUTFIT;
2652353    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2652354    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2652355    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2652356    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2652357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2652358    proc sort data=EMWS1.EndGrp10_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp10_EMREPORTFIT nothreads;
2652359    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2652360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP10_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2652361    %let _EMwarndup = 0;
2652362    %let _EMtargetdup =;
2652363    %let _EMASEtargetdup =;
2652364    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2652365    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2652366    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2652367    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2652368    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2652369    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2652370    end;
MPRINT(EM_DIAGRAM):   end;
2652371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2652372    proc sort data=EMWS1.Neural_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural_CMeta_TRAIN out=WORK.SUBSETINMETA;
2652373    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2652374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2652375    proc sort data=EMWS1.EndGrp10_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp10_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2652376    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2652377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2652378    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2652379    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2652380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2652381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2652382    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2652383    set EMWS1.EndGrp10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_CMeta_TRAIN;
2652384    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2652385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2652386    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2652387    set EMWS1.EndGrp10_TRAIN(keep=
2652388    F_DepVar
2652389    I_DepVar
2652390    P_DepVar0
2652391    P_DepVar1
2652392    R_DepVar0
2652393    R_DepVar1
2652394    U_DepVar
2652395    _WARN_
2652396    DepVar
2652397    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2652398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2197 observations read from the data set EMWS1.GRP9_TRAIN.
NOTE: View EMWS1.ENDGRP10_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2197 observations read from the data set EMWS1.NEURAL_TRAIN.
NOTE: There were 2197 observations read from the data set EMWS1.ENDGRP10_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2197 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2656585    %let _cn = %sysfunc(getoption(CENTER));
2656586    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2656587    proc print data=EMWS1.EndGrp10_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMREPORTFIT noobs label;
2656588    var STAT LABEL TRAIN
2656589    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2656590    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2656591    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2656592    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2656593    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1795.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2656594    title10;
MPRINT(EM_DIAGRAM):   title10;
2656595    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2656596    proc sort data=EMWS1.EndGrp10_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp10_EMCLASSIFICATION nothreads;
2656597    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2656598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2656599    %let _cn = %sysfunc(getoption(CENTER));
2656600    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2656601    proc print data=EMWS1.EndGrp10_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMCLASSIFICATION noobs label;
2656602    var from into pct_row pct_col count percent
2656603    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2656604    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2656605    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2656606    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2656607    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2656608    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2656609    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2656610    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2656611    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2656612    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2656613    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2656614    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1796.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2656615    title9;
MPRINT(EM_DIAGRAM):   title9;
2656616    title10;
MPRINT(EM_DIAGRAM):   title10;
2656617    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2656618    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2656619    modify EndGrp10_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp10_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2656620    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2656621    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2656622    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP10_EMRANK.DATA.
2656623    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2656624    %let _cn = %sysfunc(getoption(CENTER));
2656625    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2656626    proc print data=EMWS1.EndGrp10_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp10_EMRANK label noobs;
2656627    var
2656628    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2656629    by
2656630    notsorted DATAROLE
2656631    notsorted TARGET
2656632    notsorted TARGETLABEL
2656633    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2656634    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2656635    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2656636    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1797.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2656637    title10;
MPRINT(EM_DIAGRAM):   title10;
2656638    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2656639    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2656640    modify EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2656641    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2656642    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2656643    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP10_EMSCOREDIST.DATA.
2656644    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2656645    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2656646    set EMWS1.Grp9_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp9_GROUPINFO;
2656647    where _LOOP_=8;
MPRINT(EM_DIAGRAM):   where _LOOP_=8;
2656648    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2656649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP9_GROUPINFO.
      WHERE _LOOP_=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2656650    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2656651    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2656652    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2656653    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2656654    set EMWS1.EndGrp10_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMRANK;
2656655    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2656656    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2656657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2656658    data EMWS1.EndGrp10_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMRANK_LOOP;
2656659    set EMWS1.EndGrp10_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMRANK_LOOP temp;
2656660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP10_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMRANK_LOOP has 160 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2656661    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2656662    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2656663    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2656664    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2656665    set EMWS1.EndGrp10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMSCOREDIST;
2656666    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2656667    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2656668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP10_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2656669    data EMWS1.EndGrp10_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMSCOREDIST_LOOP;
2656670    set EMWS1.EndGrp10_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMSCOREDIST_LOOP temp;
2656671    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS1.ENDGRP10_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMSCOREDIST_LOOP has 160 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2656672    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2656673    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2656674    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2656675    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2656676    set EMWS1.EndGrp10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT;
2656677    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2656678    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2656679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2656680    data EMWS1.EndGrp10_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMOUTFIT_LOOP;
2656681    set EMWS1.EndGrp10_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMOUTFIT_LOOP temp;
2656682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.ENDGRP10_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMOUTFIT_LOOP has 8 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2656683    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2656684    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2656685    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2656686    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2656687    set EMWS1.EndGrp10_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMREPORTFIT;
2656688    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2656689    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2656690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2656691    data EMWS1.EndGrp10_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMREPORTFIT_LOOP;
2656692    set EMWS1.EndGrp10_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMREPORTFIT_LOOP temp;
2656693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 147 observations read from the data set EMWS1.ENDGRP10_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMREPORTFIT_LOOP has 168 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2656694    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2656695    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2656696    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2656697    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2656698    set EMWS1.EndGrp10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMCLASSIFICATION;
2656699    _LOOP_ =8;
MPRINT(EM_DIAGRAM):   _LOOP_ =8;
2656700    _WHERE_ ="^(cv_var =8)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =8)";
2656701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2656702    data EMWS1.EndGrp10_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp10_EMCLASSIFICATION_LOOP;
2656703    set EMWS1.EndGrp10_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp10_EMCLASSIFICATION_LOOP temp;
2656704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS1.ENDGRP10_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP10_EMCLASSIFICATION_LOOP has 32 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
