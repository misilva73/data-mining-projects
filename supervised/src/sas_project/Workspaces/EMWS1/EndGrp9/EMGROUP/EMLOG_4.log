*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:39:24 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:39:18 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:39:18 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1J5DGAU "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1J5DGAU new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMLOG_4.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:39:18 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMOUTPUT_4.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:39:18 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1268134    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
1268135    table ROLE*LEVEL/out=WORK.EndGrp9META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp9META;
1268136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.ENDGRP9META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
1268137    proc print data=WORK.EndGrp9META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9META label noobs;
1268138    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1268139    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1268139  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1268139  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1268140    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268141    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1268142    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP9META.
NOTE: The PROCEDURE PRINT printed page 851.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1268143    title10;
MPRINT(EM_DIAGRAM):   title10;
1268144    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1268173    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1268174    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1268175    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1268175  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1268175  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1268176       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1268176  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1268176  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1268177    set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
1268178    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1268179    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1268180    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1268181    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1268182    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1268183    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1268184    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1268185    end;
MPRINT(EM_DIAGRAM):   end;
1268186    output;
MPRINT(EM_DIAGRAM):   output;
1268187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1268188    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268189    proc print data=WORK.EndGrp9_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9_EVENT noobs label;
1268190    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1268191    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268192    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1268193    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP9_EVENT.
NOTE: The PROCEDURE PRINT printed page 852.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1268194    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1268195    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
1268196    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1268197    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1268198    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1268198  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1268198  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1268199    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1268200    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1268201    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 853.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1268202    title10;
MPRINT(EM_DIAGRAM):   title10;
1268203    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp9: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=298;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13707451701931;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1876;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86292548298068;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
1268677    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1268678    * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
1268679    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
1268680    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
1268681    %let EMEXCEPTIONSTRING=;
1268682    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1268683    * TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp9;
1268684    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1268685    %let EM_ACTION = TRAIN;
1268686    %let syscc = 0;
1268687    %macro main;
1268688       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1268689
1268690           filename temp catalog 'sashelp.emutil.endgp_train.source';
1268691           %include temp;
1268692           filename temp;
1268693
1268694           %train;
1268695
1268696       %end;
1268697       %else
1268698          %if %upcase(&EM_ACTION) = SCORE %then %do;
1268699
1268700           filename temp catalog 'sashelp.emutil.endgp_score.source';
1268701           %include temp;
1268702           filename temp;
1268703
1268704           %score;
1268705       %end;
1268706       %else
1268707       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1268708
1268709           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1268710           %include temp;
1268711           filename temp;
1268712
1268713           %postloop;
1268714
1268715       %end;
1268716
1268717       %doendm:
1268718    %mend main;
1268719
1268720    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
1268721   +%macro copyModelDs(model=, key=);
1268722   +   %let modelDs  = &em_lib..&model._&key;
1268723   +   %let reportDs = &em_lib..&em_nodeid._&key;
1268724   +   %if %sysfunc(exist(&modelDs)) %then %do;
1268725   +       data &reportDs;
1268726   +          length ModelId $16;
1268727   +          retain ModelId "&model";
1268728   +          set &modelDs;
1268729   +       run;
1268730   +   %end;
1268731   +%mend copyModelDs;
1268732   +
1268733   +%macro traintarget(groupid=);
1268734   +   %em_getname(key=emoutfit, type=DATA);
1268735   +   %let targetname=;
1268736   +   data _null_;
1268737   +     set &em_lib..&groupid._&looptype;
1268738   +     where _LOOP_ = &EMLOOPNUMBER;
1268739   +     call symput('targetname', strip(_TARGET_));
1268740   +   run;
1268741   +   %let modelId =;
1268742   +   data _null_;
1268743   +      set &em_import_data_eminfo;
1268744   +      where key = 'MODEL' and TARGET = "&targetname";
1268745   +      call symput('modelId',   strip(data));
1268746   +   run;
1268747   +   %if "&modelId" ne "" %then %do;
1268748   +       %copyModelDs(model=&modelid, key=EMRANK);
1268749   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
1268750   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
1268751   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
1268752   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
1268753   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
1268754   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
1268754  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1268755   +   %end;
1268756   +
1268757   +   %doendtgp:
1268758   +%mend;
1268759   +
1268760   +%macro trainboost(groupid=);
1268761   +
1268762   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
1268763   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
1268764   +
1268765   +   data _null_;
1268766   +      retain index 0;
1268767   +      set &boostinfoDs;
1268768   +      call symput('targetname', strip(_target_));
1268769   +   run;
1268770   +
1268771   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo))
1268771  !+%then %do;
1268772   +       %let decmeta = ;
1268773   +       data _null_;
1268774   +          set &em_import_data_eminfo;
1268775   +          where (key='DECMETA' and TARGET="&targetname");
1268776   +          call symput('DECMETA', strip(data));
1268777   +       run;
1268778   +       %if "&decmeta" eq "" %then %do;
1268779   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1268780   +           %goto doendtb;
1268781   +       %end;
1268782   +
1268783   +       %let predictedVars=;
1268784   +       data _null_;
1268785   +          set &decmeta;
1268786   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1268787   +          else
1268788   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1268789   +          else
1268790   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars',
1268790  !+strip(symget('predictedVars'))!!' '!!strip(variable));
1268791   +       run;
1268792   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
1268793   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR
1268793  !+ PREDICTED: &PREDICTEDVARS;
1268794   +       %end;
1268795   +   %end;
1268796   +
1268797   +   * ;
1268798   +   * ENDGROUP &NODEID : Boosting scoring ;
1268799   +   * ;
1268800   +   data &em_lib..&groupid._boostscore;
1268801   +      set &em_import_data;
1268802   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
1268803   +      %if "%em_freq" ne "" %then %do ;
1268804   +          keep %em_freq ;
1268805   +      %end ;
1268806   +   run;
1268807   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
1268807  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1268808   +
1268809   +   %doendtb:
1268810   +
1268811   +%mend trainboost;
1268812   +
1268813   +%macro trainbag(groupid=);
1268814   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
1268815   +   data _null_;
1268816   +      retain index 0;
1268817   +      set &baginfoDs;
1268818   +      call symput('targetname', strip(_target_));
1268819   +   run;
1268820   +
1268821   +   %let decmeta = ;
1268822   +   data _null_;
1268823   +       set &em_import_data_eminfo;
1268824   +       where (key='DECMETA' and TARGET="&targetname");
1268825   +       call symput('DECMETA', strip(data));
1268826   +   run;
1268827   +   %if "&decmeta" eq "" %then %do;
1268828   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1268829   +       %goto doendtg;
1268830   +   %end;
1268831   +
1268832   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
1268832  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1268833   +
1268834   +   %doendtg:
1268835   +%mend trainbag;
1268836   +
1268837   +%macro traingroup(groupid=);
1268838   +   %let targetNum = 0;
1268839   +
1268840   +   data _temp1;
1268841   +      set &em_lib..&groupid._eminfo;
1268842   +      where key='MODEL';
1268843   +   run;
1268844   +   data _temp2;
1268845   +      set &em_import_data_eminfo;
1268846   +      where key='MODEL';
1268847   +   run;
1268848   +   proc sort data=_temp1; by TARGET DATA;
1268849   +   proc sort data=_temp2; by TARGET DATA;
1268850   +   data _temp2;
1268851   +      merge _temp1(in=_a) _temp2(in=_b);
1268852   +      by TARGET DATA;
1268853   +      if ^_a and _b then output;
1268854   +   run;
1268855   +   data _null_;
1268856   +      retain index 0;
1268857   +      set _temp2 end=eof;
1268858   +      index +1;
1268859   +      where key ='MODEL';
1268860   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
1268861   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
1268862   +      if eof then
1268863   +         call symput('targetnum', strip(put(index, best.)));
1268864   +   run;
1268865   +   proc datasets lib=work nolist;
1268866   +      delete _temp1 _temp2;
1268867   +   run;
1268868   +   %if "&targetNum" eq "0" %then %goto doendtgp;
1268869   +
1268870   +   %let modelString =;
1268871   +   %do i=1 %to &targetnum;
1268872   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
1268873   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
1268874   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
1268875   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
1268876   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
1268877   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
1268878   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
1268879   +            %let modelString = &modelString &&modelid&i;
1268880   +       %end;
1268881   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
1268881  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1268882   +   %end;
1268883   +
1268884   +   %doendtgp:
1268885   +
1268886   +%mend traingroup;
1268887   +
1268888   +%macro getSize(data=, nobsvar=);
1268889   +
1268890   +   %if %sysfunc(exist(&data, DATA)) %then %do;
1268891   +       %let dsid = %sysfunc(open(&data));
1268892   +       %if &dsid %then %do;
1268893   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
1268894   +           %let dsid = %sysfunc(close(&dsid));
1268895   +       %end;
1268896   +   %end;
1268897   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
1268898   +        proc sql;
1268899   +           reset noprint;
1268900   +           select count(*) into :&nobsvar from &data;
1268901   +        quit;
1268902   +   %end;
1268903   +
1268904   +%mend getsize;
1268905   +
1268906   +%macro train;
1268907   +
1268908   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
1268909   +      %let EM_TOOLTYPE=UTILITY;
1268910   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
1268911   +          proc delete data=&em_data_eminfo;
1268912   +          run;
1268913   +      %end;
1268914   +      %goto doendtr;
1268915   +   %end;
1268916   +
1268917   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
1268917  !+%then %do;
1268918   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1268919   +       %goto doendtr;
1268920   +   %end;
1268921   +
1268922   +   %let xgroupid = ;
1268923   +   data _null_;
1268924   +      set &em_import_data_eminfo;
1268925   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1268926   +      call symput('XGROUPID',  strip(data));
1268927   +      call symput('LOOPTYPE', strip(key));
1268928   +   run;
1268929   +
1268930   +   %if "&looptype" eq "BOOSTINFO" %then %do;
1268931   +       %let nDataObs=0;
1268932   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
1268933   +
1268934   +       %let nStartObs=0;
1268935   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
1268936   +
1268937   +       %if &nDataObs ne &nStartObs %then %do;
1268938   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
1268939   +           %goto doendtr;
1268940   +       %end;
1268941   +
1268942   +       %trainboost(groupid=&xgroupid);
1268943   +   %end;
1268944   +   %else
1268945   +   %if "&looptype" eq "BAGINFO" %then %do;
1268946   +       %trainbag(groupid=&xgroupid);
1268947   +   %end;
1268948   +   %else
1268949   +   %if "&looptype" eq "GROUPINFO" %then %do;
1268950   +       %traingroup(groupid=&xgroupid);
1268951   +   %end;
1268952   +   %else
1268953   +   %if "&looptype" eq "TARGETINFO" %then %do;
1268954   +       %traintarget(groupid=&xgroupid);
1268955   +   %end;
1268956   +
1268957   +   data &em_data_eminfo;
1268958   +      length TARGET KEY $32  DATA $43;
1268959   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
1268960   +   run;
1268961   +
1268962   +   %let EM_TOOLTYPE=MODEL;
1268963   +
1268964   +   %doendtr:
1268965   +
1268966   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp10_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set EMWS1.ENDGRP9_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS
CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp9_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp9";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1268967    *------------------------------------------------------------*;
1268968    * End TRAIN: EndGrp9;
1268969    *------------------------------------------------------------*;
1268970
 
1268971    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1268972    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
1268973    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1268974    ;
MPRINT(EM_DIAGRAM):   ;
1268975    ;
MPRINT(EM_DIAGRAM):   ;
1268976    ;
MPRINT(EM_DIAGRAM):   ;
1268977    ;
MPRINT(EM_DIAGRAM):   ;
1268978    quit;
MPRINT(EM_DIAGRAM):   quit;
1268979    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1268980    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
1268981    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1268982    /*; *"; *'; */
1268983    ;
MPRINT(EM_DIAGRAM):   ;
1268984    run;
MPRINT(EM_DIAGRAM):   run;
1268985    quit;
MPRINT(EM_DIAGRAM):   quit;
1268986    /* Reset EM Options */
1268987    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
1268988    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
1268989    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:39:21 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:39:21 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1M2W_7T "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1M2W_7T new;
MPRINT(EM_DIAGRAM):   run;
1269091    %let EMEXCEPTIONSTRING=;
1269092    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1269093    * SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp9;
1269094    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1269095    %let EM_ACTION = SCORE;
1269096    %let syscc = 0;
1269097    %macro main;
1269098       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1269099
1269100           filename temp catalog 'sashelp.emutil.endgp_train.source';
1269101           %include temp;
1269102           filename temp;
1269103
1269104           %train;
1269105
1269106       %end;
1269107       %else
1269108          %if %upcase(&EM_ACTION) = SCORE %then %do;
1269109
1269110           filename temp catalog 'sashelp.emutil.endgp_score.source';
1269111           %include temp;
1269112           filename temp;
1269113
1269114           %score;
1269115       %end;
1269116       %else
1269117       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1269118
1269119           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1269120           %include temp;
1269121           filename temp;
1269122
1269123           %postloop;
1269124
1269125       %end;
1269126
1269127       %doendm:
1269128    %mend main;
1269129
1269130    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
1269131   +%macro scoreTables(data=, out=, scoreref=, prescore=);
1269133   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
1269134   +       data &out / view=&out;
1269135   +          set &data
1269137   +          %if "&prescore" = "Y" %then %do;
1269138   +              (obs=1)
1269139   +          %end;
1269141   +          ;
1269143   +          %inc &scoreref;
1269145   +          %if "&prescore" eq "Y" %then %do;
1269146   +              drop I_: R_:;
1269147   +          %end;
1269149   +       run;
1269150   +   %end;
1269152   +%mend scoretables;
1269154   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
1269155   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
1269156   +   data _null_;
1269157   +      retain index 0;
1269158   +      set &infoDs;
1269159   +      call symput('targetname', strip(_target_));
1269160   +      call symput('endloopnum', strip(_loop_));
1269161   +   run;
1269163   +   %let endgrp_decmeta=;
1269164   +   %let endgrp_decdata=;
1269166   +   data _null_;
1269167   +      set &em_import_data_eminfo;
1269168   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
1269169   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
1269170   +      else
1269171   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
1269172   +      else call symput('MODELID', strip(data));
1269173   +   run;
1269175   +   %let headerString= Boosting;
1269176   +   %let prefixString= _BoostVar;
1269178   +   %if "&type" = "BAGINFO" %then %do;
1269179   +        %let headerString = Bagging;
1269180   +        %let prefixString= _BagVar;
1269181   +   %end;
1269183   +   %let targetType=;
1269184   +   %let predictedVars=;
1269185   +   data _null_;
1269186   +      retain index;
1269187   +      set &endgrp_decmeta end=eof;
1269188   +      length tempvar $200;
1269189   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
1269190   +      else
1269191   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1269192   +      else
1269193   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1269194   +      else
1269195   +      if _TYPE_ = 'PREDICTED' then do;
1269196   +         index+1;
1269197   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
1269198   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
1269199   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
1269200   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
1269201   +      end;
1269202   +      if eof then
1269203   +         call symput('prednum', strip(put(index, best.)));
1269204   +   run;
1269206   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
1269207   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
1269209   +   filename loopflow "&em_user_loopflowcode";
1269210   +   filename looppub "&em_user_looppubcode";
1269212   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
1269213   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
1269215   +   %if "&emloopnumber" = "1" %then %do;
1269216   +       data _null_;
1269217   +          rc = fdelete('loopflow');
1269218   +          rc = fdelete('looppub');
1269219   +       run;
1269220   +       data _null_;
1269221   +          file loopflow;
1269222   +          put "&em_codebar;";
1269223   +          put "* &em_nodeid: ;" ;
1269224   +          put "* User: &sysuserid;";
1269225   +          put "* Date: &sysdate: &systime;";
1269226   +          put "&em_codebar ;";
1269227   +          put "* Ensemble Code;";
1269228   +          put "&em_codebar ;";
1269229   +          put "* &headerString: Loop=1;";
1269230   +          put "* Temporary Variables;";
1269231   +          %do i= 1 %to &prednum;
1269232   +              put "drop &&tempvars&i;";
1269233   +              put "&&tempvars&i = 0;";
1269234   +          %end;
1269235   +       run;
1269236   +       %em_copyfile(infref=loopflow, outfref=looppub);
1269237   +   %end;
1269239   +   %let j=&emloopnumber;
1269240   +   %do i = 1 %to &loopcodenum;
1269241   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
1269242   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
1269244   +       %if (&&loopnode&i eq &em_nodeid ) or
1269245   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
1269246   +           data _null_;
1269247   +              file loopflow mod;
1269248   +              put "&em_codebar;";
1269249   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1269250   +              put "* User: &sysuserid;";
1269251   +              put "* Date: &sysdate: &systime;";
1269252   +              put "* &headerString: Loop=&j;";
1269253   +              put "&em_codebar;";
1269254   +           run;
1269255   +           data _null_;
1269256   +              file looppub mod;
1269257   +              put "&em_codebar;";
1269258   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1269259   +              put "* User: &sysuserid;";
1269260   +              put "* Date: &sysdate: &systime;";
1269261   +              put "* &headerString: Loop=&j;";
1269262   +              put "&em_codebar;";
1269263   +           run;
1269264   +       %end;
1269266   +       %if &&loopnode&i ne &em_nodeid %then %do;
1269267   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
1269268   +               filename x catalog "&fsourceEntry";
1269269   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
1269270   +               filename x;
1269272   +               filename y catalog "&psourceEntry";
1269273   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
1269274   +               filename y;
1269275   +           %end;
1269276   +       %end;
1269277   +       %else %do;
1269278   +           %if "&j" ne "1" %then %do;
1269279   +               %let weight = %eval(&j-1);
1269280   +               data _null_;
1269281   +                  file loopflow mod;
1269282   +                  put "&em_codebar;";
1269283   +                  %if "&j" ne "&endloopnum" %then %do;
1269284   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1269285   +                  %end;
1269286   +                  %else %do;
1269287   +                      put "* &headerString: accumulate final probabilities;";
1269288   +                  %end;
1269289   +                  put "&em_codebar;";
1269290   +                  %do k=1 %to &prednum;
1269291   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1269292   +                  %end;
1269293   +               run;
1269294   +               data _null_;
1269295   +                  file looppub mod;
1269296   +                  put "&em_codebar;";
1269297   +                  %if "&j" ne "&endloopnum" %then %do;
1269298   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1269299   +                  %end;
1269300   +                  %else %do;
1269301   +                      put "* &headerString: accumulate final probabilities;";
1269302   +                  %end;
1269303   +                  %do k=1 %to &prednum;
1269304   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1269305   +                  %end;
1269306   +               run;
1269307   +           %end;
1269308   +           %if "&j" ne "&endloopnum" %then %do;
1269309   +               data _null_;
1269310   +                  file loopflow mod;
1269311   +                  put "&em_codebar;";
1269312   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1269313   +                  put "&em_codebar;";
1269314   +               %do k=1 %to &prednum;
1269315   +                  put "&&tempvars&k = &&predvars&k;";
1269316   +               %end;
1269317   +               run;
1269318   +               data _null_;
1269319   +                  file looppub mod;
1269320   +                  put "&em_codebar;";
1269321   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1269322   +                  put "&em_codebar;";
1269323   +               %do k=1 %to &prednum;
1269324   +                   put "&&tempvars&k = &&predvars&k;";
1269325   +               %end;
1269326   +               run;
1269327   +           %end;
1269329   +       %end;
1269330   +   %end;
1269332   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
1269333   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
1269335   +   filename loopflow;
1269336   +   filename looppub;
1269337   +   filename empub;
1269339   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
1269340   +   %let gpTrain=;
1269341   +   %let gpValidate=;
1269342   +   %let gpTest=;
1269344   +   data _null_;
1269345   +      set &groupImportDs;
1269346   +      select(upcase(port));
1269347   +          when('DATA')     call symput('gpTrain',    strip(dataset));
1269348   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
1269349   +          when('TEST')     call symput('gpTest',     strip(dataset));
1269350   +       otherwise;
1269351   +      end;
1269352   +   run;
1269354   +   %if "&gpTrain" ne "" %then %do;
1269356   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
1269358   +       %if &targetType ne INTERVAL %then %do;
1269359   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
1269360   +       %end;
1269362   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
1269364   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
1269366   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
1269367   +                                                           noresfile=, resfile=%nrbquote(&decflow));
1269369   +       filename _decflow "&decflow";
1269370   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
1269371   +       filename _decflow;
1269373   +   %end;
1269375   +   %if "&gpTrain" ne "" %then
1269376   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
1269377   +   %if "&gpValidate" ne "" %then
1269378   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
1269379   +   %if "&gpTest" ne "" %then
1269380   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
1269382   +   filename emflow;
1269384   +%mend boostbagcode;
1269386   +%macro score;
1269388   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
1269389   +   %inc _dec;
1269390   +   filename _dec;
1269392   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
1269394   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1269395   +       %let emexceptionstring = nomodeltarget;
1269396   +       %goto doendpl;
1269397   +   %end;
1269399   +   %LET GROUPID=;
1269400   +   %let LOOPTYPE=;
1269401   +   data _null_;
1269402   +      set &em_import_data_eminfo;
1269403   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1269404   +      call symput('GROUPID',   strip(data));
1269405   +      call symput('LOOPTYPE', strip(key));
1269406   +   run;
1269408   +   %em_getname(key=PATH, type=DATA);
1269410   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
1269411   +   %include temp;
1269412   +   filename temp;
1269414   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
1269416   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
1269417   +       %let deleteString = &em_nodeid._path;
1269418   +       proc datasets lib=&em_lib nolist;
1269419   +          delete &deleteString;
1269420   +       run;
1269421   +       quit;
1269422   +   %end;
1269424   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
1269426   +   data score_path;
1269427   +      retain LOOPID &emloopnumber;
1269428   +      set score_path;
1269429   +   run;
1269431   +   proc append base=&em_user_path  data=score_path;
1269432   +   run;
1269434   +   %let EnsembleIndex=0;
1269435   +   data _null_;
1269436   +      retain index 0 ensembleIndex 0;
1269437   +      set score_Path end=eof;
1269438   +      if nodelabel = "&groupid" or index then do;
1269439   +         index + 1;
1269440   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
1269441   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
1269442   +      end;
1269443   +      if component='Ensemble' then ensembleIndex = index;
1269444   +      if eof then do;
1269445   +         call symput('loopcodenum', strip(put(index, best.)));
1269446   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
1269447   +      end;
1269448   +   run;
1269450   +   proc datasets lib=work nolist;
1269451   +      delete score_Path;
1269452   +   run;
1269453   +   quit;
1269455   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
1269456   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
1269458   +   %doendpl:
1269460   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
1269461   +/*
1269462   +       MACRO: EM_DECIDECODE
1269463   +
1269464   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
1269465   +       SUPPORT: Taiyeong Lee
1269466   +
1269467   +       HISTORY: 01OCT04 Initial code
1269468   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
1269469   +                to add the corresponding decision code
1269470   +
1269471   +*/
1269472   +
1269473   +
1269474   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
1269475   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
1269476   +
1269477   +    %do;
1269478   +    %let m_data      = &data;
1269479   +    %let m_decdata   = &decdata;
1269480   +    %let m_decmeta   = &decmeta;
1269481   +    %let m_noresfile = &noresfile;
1269482   +    %let m_resfile   = &resfile;
1269483   +    dm "afa c=sashelp.emutil.decidecode.scl";
1269484   +  %end;
1269485   +%mend EM_DECIDECODE;
1269486   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
1269487   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
1269488   +   proc display c=sashelp.emcore.pathscorecode.scl;
1269489   +   run;
1269490   +%mend EM_GETTRAINPATH;
1269491   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
1269492    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
1269493    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
1269494    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
1269495    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
1269496    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1269497    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
1269498    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
1269499    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269500    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269501    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269502    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269503    output;
MPRINT(EM_GETTRAINPATH):   output;
1269504    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
1269505    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
1269506    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
1269507    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
1269508    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1269509    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269510    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269511    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269512    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269513    output;
MPRINT(EM_GETTRAINPATH):   output;
1269514    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
1269515    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
1269516    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
1269517    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
1269518    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1269519    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269520    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269521    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269522    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269523    output;
MPRINT(EM_GETTRAINPATH):   output;
1269524    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
1269525    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
1269526    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1269527    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1269528    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1269529    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269530    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269531    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269532    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269533    output;
MPRINT(EM_GETTRAINPATH):   output;
1269534    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
1269535    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
1269536    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1269537    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1269538    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1269539    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269540    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269541    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269542    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269543    output;
MPRINT(EM_GETTRAINPATH):   output;
1269544    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
1269545    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
1269546    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1269547    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1269548    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1269549    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269550    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269551    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269552    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269553    output;
MPRINT(EM_GETTRAINPATH):   output;
1269554    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
1269555    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
1269556    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1269557    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1269558    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1269559    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269560    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269561    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269562    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269563    output;
MPRINT(EM_GETTRAINPATH):   output;
1269564    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
1269565    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
1269566    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1269567    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1269568    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1269569    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269570    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269571    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269572    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269573    output;
MPRINT(EM_GETTRAINPATH):   output;
1269574    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
1269575    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
1269576    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1269577    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1269578    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1269579    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269580    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269581    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269582    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269583    output;
MPRINT(EM_GETTRAINPATH):   output;
1269584    nodelabel="Grp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp10";
1269585    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
1269586    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1269587    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
1269588    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1269589    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269590    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269591    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269592    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269593    output;
MPRINT(EM_GETTRAINPATH):   output;
1269594    nodelabel="Neural2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural2";
1269595    parent="Grp10";
MPRINT(EM_GETTRAINPATH):   parent="Grp10";
1269596    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
1269597    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
1269598    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1269599    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269600    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269601    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269602    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269603    output;
MPRINT(EM_GETTRAINPATH):   output;
1269604    nodelabel="EndGrp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp9";
1269605    parent="Neural2";
MPRINT(EM_GETTRAINPATH):   parent="Neural2";
1269606    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1269607    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
1269608    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1269609    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1269610    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1269611    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1269612    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1269613    output;
MPRINT(EM_GETTRAINPATH):   output;
1269614    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 4;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp9_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP9_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP9_PATH has 48 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp10" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1269615    *------------------------------------------------------------*;
1269616    * End SCORE: EndGrp9;
1269617    *------------------------------------------------------------*;
1269618
 
1269619    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1269620    * EndGrp9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Scoring DATA data;
1269621    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1269622    data EMWS1.EndGrp9_TRAIN
1269623    / view=EMWS1.EndGrp9_TRAIN
1269624    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_TRAIN / view=EMWS1.EndGrp9_TRAIN ;
1269625    set EMWS1.Neural2_TRAIN
1269626    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN ;
1269627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1269628    quit;
 
1269630    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
1269631    * EndGrp9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Computing metadata for TRAIN data;
1269632    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp9_TRAIN out=WORK.M3UC5U66 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UC5U66;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UC5U66(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UC5U66;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UC5U66;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10LYU73 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T5FSMY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   set WORK.M10LYU73;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp9";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1269978    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1269979    set EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO;
1269980    where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
1269981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMINFO.
      WHERE (DATA='EndGrp9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1269982    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMINFO;
1269983    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1269984    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1269985    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1269989    run;
1269990    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
1269991    set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
1269992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1269993    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
1269994    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1269995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1269996    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1269997    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1269998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1269999    proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1270000    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1270001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1270002    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
1270003    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1270004    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1270005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1270006    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1270007    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1270008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1270009    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:39:23 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:39:23 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3MXWNYJ "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3MXWNYJ new;
MPRINT(EM_DIAGRAM):   run;
1270033    data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT;
1270034    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
1270035    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1270036    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1270037    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1270038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1270039    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
1270040    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1270041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1270042    %let _EMwarndup = 0;
1270043    %let _EMtargetdup =;
1270044    %let _EMASEtargetdup =;
1270045    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1270046    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
1270047    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1270048    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1270049    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1270050    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1270051    end;
MPRINT(EM_DIAGRAM):   end;
1270052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1270053    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
1270054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1270055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1270056    proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
1270057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1270058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1270059    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1270060    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1270061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1270062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1270063    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1270064    set EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_CMeta_TRAIN;
1270065    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
1270066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1270067    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1270068    set EMWS1.EndGrp9_TRAIN(keep=
1270069    F_DepVar
1270070    I_DepVar
1270071    P_DepVar0
1270072    P_DepVar1
1270073    R_DepVar0
1270074    R_DepVar1
1270075    U_DepVar
1270076    _WARN_
1270077    DepVar
1270078    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1270079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2174 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2174 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: There were 2174 observations read from the data set EMWS1.ENDGRP9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2174 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
1274266    %let _cn = %sysfunc(getoption(CENTER));
1274267    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1274268    proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
1274269    var STAT LABEL TRAIN
1274270    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
1274271    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1274272    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1274273    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1274274    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 854.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1274275    title10;
MPRINT(EM_DIAGRAM):   title10;
1274276    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1274277    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
1274278    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1274279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1274280    %let _cn = %sysfunc(getoption(CENTER));
1274281    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1274282    proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
1274283    var from into pct_row pct_col count percent
1274284    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1274285    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1274286    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1274287    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1274288    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1274289    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1274290    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1274291    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1274292    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1274293    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1274294    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1274295    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 855.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1274296    title9;
MPRINT(EM_DIAGRAM):   title9;
1274297    title10;
MPRINT(EM_DIAGRAM):   title10;
1274298    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1274299    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1274300    modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1274301    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1274302    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1274303    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMRANK.DATA.
1274304    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
1274305    %let _cn = %sysfunc(getoption(CENTER));
1274306    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1274307    proc print data=EMWS1.EndGrp9_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMRANK label noobs;
1274308    var
1274309    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1274310    by
1274311    notsorted DATAROLE
1274312    notsorted TARGET
1274313    notsorted TARGETLABEL
1274314    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1274315    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1274316    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1274317    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 856.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1274318    title10;
MPRINT(EM_DIAGRAM):   title10;
1274319    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1274320    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1274321    modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1274322    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1274323    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1274324    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMSCOREDIST.DATA.
1274325    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
1274326    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1274327    set EMWS1.Grp10_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO;
1274328    where _LOOP_=4;
MPRINT(EM_DIAGRAM):   where _LOOP_=4;
1274329    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
1274330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_GROUPINFO.
      WHERE _LOOP_=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1274331    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1274332    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1274333    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1274334    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1274335    set EMWS1.EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK;
1274336    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1274337    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1274338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1274339    data EMWS1.EndGrp9_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMRANK_LOOP;
1274340    set EMWS1.EndGrp9_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK_LOOP temp;
1274341    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS1.ENDGRP9_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMRANK_LOOP has 80 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1274342    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1274343    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1274344    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1274345    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1274346    set EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST;
1274347    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1274348    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1274349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1274350    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
1274351    set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
1274352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP has 80 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1274353    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1274354    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1274355    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1274356    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1274357    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
1274358    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1274359    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1274360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1274361    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
1274362    set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
1274363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT_LOOP has 4 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1274364    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1274365    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1274366    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1274367    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1274368    set EMWS1.EndGrp9_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT;
1274369    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1274370    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1274371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1274372    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
1274373    set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
1274374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 63 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP has 84 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1274375    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1274376    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1274377    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1274378    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1274379    set EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION;
1274380    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1274381    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1274382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1274383    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
1274384    set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
1274385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP has 16 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
