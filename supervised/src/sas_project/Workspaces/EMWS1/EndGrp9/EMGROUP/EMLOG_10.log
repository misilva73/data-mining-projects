*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:03:13 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:06 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:03:06 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3D22TXS "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3D22TXS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMLOG_10.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:06 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMOUTPUT_10.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:07 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3271592    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
3271593    table ROLE*LEVEL/out=WORK.EndGrp9META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp9META;
3271594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.ENDGRP9META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
3271595    proc print data=WORK.EndGrp9META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9META label noobs;
3271596    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3271597    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
3271597  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
3271597  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
3271598    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3271599    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3271600    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP9META.
NOTE: The PROCEDURE PRINT printed page 2218.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3271601    title10;
MPRINT(EM_DIAGRAM):   title10;
3271602    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3271631    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3271632    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3271633    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3271633  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3271633  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3271634       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3271634  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3271634  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3271635    set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
3271636    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3271637    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3271638    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3271639    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3271640    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3271641    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3271642    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3271643    end;
MPRINT(EM_DIAGRAM):   end;
3271644    output;
MPRINT(EM_DIAGRAM):   output;
3271645    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3271646    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3271647    proc print data=WORK.EndGrp9_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9_EVENT noobs label;
3271648    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3271649    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3271650    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3271651    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP9_EVENT.
NOTE: The PROCEDURE PRINT printed page 2219.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3271652    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3271653    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
3271654    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3271655    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3271656    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3271656  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3271656  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3271657    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3271658    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3271659    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2220.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3271660    title10;
MPRINT(EM_DIAGRAM):   title10;
3271661    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp9: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=296;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13534522176497;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1891;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86465477823502;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3272135    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3272136    * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
3272137    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
3272138    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3272139    %let EMEXCEPTIONSTRING=;
3272140    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3272141    * TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp9;
3272142    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272143    %let EM_ACTION = TRAIN;
3272144    %let syscc = 0;
3272145    %macro main;
3272146       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3272147
3272148           filename temp catalog 'sashelp.emutil.endgp_train.source';
3272149           %include temp;
3272150           filename temp;
3272151
3272152           %train;
3272153
3272154       %end;
3272155       %else
3272156          %if %upcase(&EM_ACTION) = SCORE %then %do;
3272157
3272158           filename temp catalog 'sashelp.emutil.endgp_score.source';
3272159           %include temp;
3272160           filename temp;
3272161
3272162           %score;
3272163       %end;
3272164       %else
3272165       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3272166
3272167           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3272168           %include temp;
3272169           filename temp;
3272170
3272171           %postloop;
3272172
3272173       %end;
3272174
3272175       %doendm:
3272176    %mend main;
3272177
3272178    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3272179   +%macro copyModelDs(model=, key=);
3272180   +   %let modelDs  = &em_lib..&model._&key;
3272181   +   %let reportDs = &em_lib..&em_nodeid._&key;
3272182   +   %if %sysfunc(exist(&modelDs)) %then %do;
3272183   +       data &reportDs;
3272184   +          length ModelId $16;
3272185   +          retain ModelId "&model";
3272186   +          set &modelDs;
3272187   +       run;
3272188   +   %end;
3272189   +%mend copyModelDs;
3272190   +
3272191   +%macro traintarget(groupid=);
3272192   +   %em_getname(key=emoutfit, type=DATA);
3272193   +   %let targetname=;
3272194   +   data _null_;
3272195   +     set &em_lib..&groupid._&looptype;
3272196   +     where _LOOP_ = &EMLOOPNUMBER;
3272197   +     call symput('targetname', strip(_TARGET_));
3272198   +   run;
3272199   +   %let modelId =;
3272200   +   data _null_;
3272201   +      set &em_import_data_eminfo;
3272202   +      where key = 'MODEL' and TARGET = "&targetname";
3272203   +      call symput('modelId',   strip(data));
3272204   +   run;
3272205   +   %if "&modelId" ne "" %then %do;
3272206   +       %copyModelDs(model=&modelid, key=EMRANK);
3272207   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3272208   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3272209   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3272210   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3272211   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3272212   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
3272212  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3272213   +   %end;
3272214   +
3272215   +   %doendtgp:
3272216   +%mend;
3272217   +
3272218   +%macro trainboost(groupid=);
3272219   +
3272220   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3272221   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3272222   +
3272223   +   data _null_;
3272224   +      retain index 0;
3272225   +      set &boostinfoDs;
3272226   +      call symput('targetname', strip(_target_));
3272227   +   run;
3272228   +
3272229   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo))
3272229  !+%then %do;
3272230   +       %let decmeta = ;
3272231   +       data _null_;
3272232   +          set &em_import_data_eminfo;
3272233   +          where (key='DECMETA' and TARGET="&targetname");
3272234   +          call symput('DECMETA', strip(data));
3272235   +       run;
3272236   +       %if "&decmeta" eq "" %then %do;
3272237   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3272238   +           %goto doendtb;
3272239   +       %end;
3272240   +
3272241   +       %let predictedVars=;
3272242   +       data _null_;
3272243   +          set &decmeta;
3272244   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3272245   +          else
3272246   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3272247   +          else
3272248   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars',
3272248  !+strip(symget('predictedVars'))!!' '!!strip(variable));
3272249   +       run;
3272250   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3272251   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR
3272251  !+ PREDICTED: &PREDICTEDVARS;
3272252   +       %end;
3272253   +   %end;
3272254   +
3272255   +   * ;
3272256   +   * ENDGROUP &NODEID : Boosting scoring ;
3272257   +   * ;
3272258   +   data &em_lib..&groupid._boostscore;
3272259   +      set &em_import_data;
3272260   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3272261   +      %if "%em_freq" ne "" %then %do ;
3272262   +          keep %em_freq ;
3272263   +      %end ;
3272264   +   run;
3272265   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
3272265  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3272266   +
3272267   +   %doendtb:
3272268   +
3272269   +%mend trainboost;
3272270   +
3272271   +%macro trainbag(groupid=);
3272272   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3272273   +   data _null_;
3272274   +      retain index 0;
3272275   +      set &baginfoDs;
3272276   +      call symput('targetname', strip(_target_));
3272277   +   run;
3272278   +
3272279   +   %let decmeta = ;
3272280   +   data _null_;
3272281   +       set &em_import_data_eminfo;
3272282   +       where (key='DECMETA' and TARGET="&targetname");
3272283   +       call symput('DECMETA', strip(data));
3272284   +   run;
3272285   +   %if "&decmeta" eq "" %then %do;
3272286   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3272287   +       %goto doendtg;
3272288   +   %end;
3272289   +
3272290   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
3272290  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3272291   +
3272292   +   %doendtg:
3272293   +%mend trainbag;
3272294   +
3272295   +%macro traingroup(groupid=);
3272296   +   %let targetNum = 0;
3272297   +
3272298   +   data _temp1;
3272299   +      set &em_lib..&groupid._eminfo;
3272300   +      where key='MODEL';
3272301   +   run;
3272302   +   data _temp2;
3272303   +      set &em_import_data_eminfo;
3272304   +      where key='MODEL';
3272305   +   run;
3272306   +   proc sort data=_temp1; by TARGET DATA;
3272307   +   proc sort data=_temp2; by TARGET DATA;
3272308   +   data _temp2;
3272309   +      merge _temp1(in=_a) _temp2(in=_b);
3272310   +      by TARGET DATA;
3272311   +      if ^_a and _b then output;
3272312   +   run;
3272313   +   data _null_;
3272314   +      retain index 0;
3272315   +      set _temp2 end=eof;
3272316   +      index +1;
3272317   +      where key ='MODEL';
3272318   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3272319   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3272320   +      if eof then
3272321   +         call symput('targetnum', strip(put(index, best.)));
3272322   +   run;
3272323   +   proc datasets lib=work nolist;
3272324   +      delete _temp1 _temp2;
3272325   +   run;
3272326   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3272327   +
3272328   +   %let modelString =;
3272329   +   %do i=1 %to &targetnum;
3272330   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3272331   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3272332   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3272333   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3272334   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3272335   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3272336   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3272337   +            %let modelString = &modelString &&modelid&i;
3272338   +       %end;
3272339   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
3272339  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3272340   +   %end;
3272341   +
3272342   +   %doendtgp:
3272343   +
3272344   +%mend traingroup;
3272345   +
3272346   +%macro getSize(data=, nobsvar=);
3272347   +
3272348   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3272349   +       %let dsid = %sysfunc(open(&data));
3272350   +       %if &dsid %then %do;
3272351   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3272352   +           %let dsid = %sysfunc(close(&dsid));
3272353   +       %end;
3272354   +   %end;
3272355   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3272356   +        proc sql;
3272357   +           reset noprint;
3272358   +           select count(*) into :&nobsvar from &data;
3272359   +        quit;
3272360   +   %end;
3272361   +
3272362   +%mend getsize;
3272363   +
3272364   +%macro train;
3272365   +
3272366   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3272367   +      %let EM_TOOLTYPE=UTILITY;
3272368   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3272369   +          proc delete data=&em_data_eminfo;
3272370   +          run;
3272371   +      %end;
3272372   +      %goto doendtr;
3272373   +   %end;
3272374   +
3272375   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3272375  !+%then %do;
3272376   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3272377   +       %goto doendtr;
3272378   +   %end;
3272379   +
3272380   +   %let xgroupid = ;
3272381   +   data _null_;
3272382   +      set &em_import_data_eminfo;
3272383   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3272384   +      call symput('XGROUPID',  strip(data));
3272385   +      call symput('LOOPTYPE', strip(key));
3272386   +   run;
3272387   +
3272388   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3272389   +       %let nDataObs=0;
3272390   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3272391   +
3272392   +       %let nStartObs=0;
3272393   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3272394   +
3272395   +       %if &nDataObs ne &nStartObs %then %do;
3272396   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3272397   +           %goto doendtr;
3272398   +       %end;
3272399   +
3272400   +       %trainboost(groupid=&xgroupid);
3272401   +   %end;
3272402   +   %else
3272403   +   %if "&looptype" eq "BAGINFO" %then %do;
3272404   +       %trainbag(groupid=&xgroupid);
3272405   +   %end;
3272406   +   %else
3272407   +   %if "&looptype" eq "GROUPINFO" %then %do;
3272408   +       %traingroup(groupid=&xgroupid);
3272409   +   %end;
3272410   +   %else
3272411   +   %if "&looptype" eq "TARGETINFO" %then %do;
3272412   +       %traintarget(groupid=&xgroupid);
3272413   +   %end;
3272414   +
3272415   +   data &em_data_eminfo;
3272416   +      length TARGET KEY $32  DATA $43;
3272417   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3272418   +   run;
3272419   +
3272420   +   %let EM_TOOLTYPE=MODEL;
3272421   +
3272422   +   %doendtr:
3272423   +
3272424   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp10_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set EMWS1.ENDGRP9_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS
CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp9_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp9";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272425    *------------------------------------------------------------*;
3272426    * End TRAIN: EndGrp9;
3272427    *------------------------------------------------------------*;
3272428
 
3272429    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3272430    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3272431    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272432    ;
MPRINT(EM_DIAGRAM):   ;
3272433    ;
MPRINT(EM_DIAGRAM):   ;
3272434    ;
MPRINT(EM_DIAGRAM):   ;
3272435    ;
MPRINT(EM_DIAGRAM):   ;
3272436    quit;
MPRINT(EM_DIAGRAM):   quit;
3272437    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272438    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3272439    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272440    /*; *"; *'; */
3272441    ;
MPRINT(EM_DIAGRAM):   ;
3272442    run;
MPRINT(EM_DIAGRAM):   run;
3272443    quit;
MPRINT(EM_DIAGRAM):   quit;
3272444    /* Reset EM Options */
3272445    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3272446    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3272447    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:10 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:03:10 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0ZNZDNG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0ZNZDNG new;
MPRINT(EM_DIAGRAM):   run;
3272549    %let EMEXCEPTIONSTRING=;
3272550    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3272551    * SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp9;
3272552    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3272553    %let EM_ACTION = SCORE;
3272554    %let syscc = 0;
3272555    %macro main;
3272556       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3272557
3272558           filename temp catalog 'sashelp.emutil.endgp_train.source';
3272559           %include temp;
3272560           filename temp;
3272561
3272562           %train;
3272563
3272564       %end;
3272565       %else
3272566          %if %upcase(&EM_ACTION) = SCORE %then %do;
3272567
3272568           filename temp catalog 'sashelp.emutil.endgp_score.source';
3272569           %include temp;
3272570           filename temp;
3272571
3272572           %score;
3272573       %end;
3272574       %else
3272575       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3272576
3272577           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3272578           %include temp;
3272579           filename temp;
3272580
3272581           %postloop;
3272582
3272583       %end;
3272584
3272585       %doendm:
3272586    %mend main;
3272587
3272588    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3272589   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3272591   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3272592   +       data &out / view=&out;
3272593   +          set &data
3272595   +          %if "&prescore" = "Y" %then %do;
3272596   +              (obs=1)
3272597   +          %end;
3272599   +          ;
3272601   +          %inc &scoreref;
3272603   +          %if "&prescore" eq "Y" %then %do;
3272604   +              drop I_: R_:;
3272605   +          %end;
3272607   +       run;
3272608   +   %end;
3272610   +%mend scoretables;
3272612   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3272613   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3272614   +   data _null_;
3272615   +      retain index 0;
3272616   +      set &infoDs;
3272617   +      call symput('targetname', strip(_target_));
3272618   +      call symput('endloopnum', strip(_loop_));
3272619   +   run;
3272621   +   %let endgrp_decmeta=;
3272622   +   %let endgrp_decdata=;
3272624   +   data _null_;
3272625   +      set &em_import_data_eminfo;
3272626   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3272627   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3272628   +      else
3272629   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3272630   +      else call symput('MODELID', strip(data));
3272631   +   run;
3272633   +   %let headerString= Boosting;
3272634   +   %let prefixString= _BoostVar;
3272636   +   %if "&type" = "BAGINFO" %then %do;
3272637   +        %let headerString = Bagging;
3272638   +        %let prefixString= _BagVar;
3272639   +   %end;
3272641   +   %let targetType=;
3272642   +   %let predictedVars=;
3272643   +   data _null_;
3272644   +      retain index;
3272645   +      set &endgrp_decmeta end=eof;
3272646   +      length tempvar $200;
3272647   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3272648   +      else
3272649   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3272650   +      else
3272651   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3272652   +      else
3272653   +      if _TYPE_ = 'PREDICTED' then do;
3272654   +         index+1;
3272655   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3272656   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3272657   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3272658   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3272659   +      end;
3272660   +      if eof then
3272661   +         call symput('prednum', strip(put(index, best.)));
3272662   +   run;
3272664   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3272665   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3272667   +   filename loopflow "&em_user_loopflowcode";
3272668   +   filename looppub "&em_user_looppubcode";
3272670   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3272671   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3272673   +   %if "&emloopnumber" = "1" %then %do;
3272674   +       data _null_;
3272675   +          rc = fdelete('loopflow');
3272676   +          rc = fdelete('looppub');
3272677   +       run;
3272678   +       data _null_;
3272679   +          file loopflow;
3272680   +          put "&em_codebar;";
3272681   +          put "* &em_nodeid: ;" ;
3272682   +          put "* User: &sysuserid;";
3272683   +          put "* Date: &sysdate: &systime;";
3272684   +          put "&em_codebar ;";
3272685   +          put "* Ensemble Code;";
3272686   +          put "&em_codebar ;";
3272687   +          put "* &headerString: Loop=1;";
3272688   +          put "* Temporary Variables;";
3272689   +          %do i= 1 %to &prednum;
3272690   +              put "drop &&tempvars&i;";
3272691   +              put "&&tempvars&i = 0;";
3272692   +          %end;
3272693   +       run;
3272694   +       %em_copyfile(infref=loopflow, outfref=looppub);
3272695   +   %end;
3272697   +   %let j=&emloopnumber;
3272698   +   %do i = 1 %to &loopcodenum;
3272699   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3272700   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3272702   +       %if (&&loopnode&i eq &em_nodeid ) or
3272703   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3272704   +           data _null_;
3272705   +              file loopflow mod;
3272706   +              put "&em_codebar;";
3272707   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3272708   +              put "* User: &sysuserid;";
3272709   +              put "* Date: &sysdate: &systime;";
3272710   +              put "* &headerString: Loop=&j;";
3272711   +              put "&em_codebar;";
3272712   +           run;
3272713   +           data _null_;
3272714   +              file looppub mod;
3272715   +              put "&em_codebar;";
3272716   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3272717   +              put "* User: &sysuserid;";
3272718   +              put "* Date: &sysdate: &systime;";
3272719   +              put "* &headerString: Loop=&j;";
3272720   +              put "&em_codebar;";
3272721   +           run;
3272722   +       %end;
3272724   +       %if &&loopnode&i ne &em_nodeid %then %do;
3272725   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3272726   +               filename x catalog "&fsourceEntry";
3272727   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3272728   +               filename x;
3272730   +               filename y catalog "&psourceEntry";
3272731   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3272732   +               filename y;
3272733   +           %end;
3272734   +       %end;
3272735   +       %else %do;
3272736   +           %if "&j" ne "1" %then %do;
3272737   +               %let weight = %eval(&j-1);
3272738   +               data _null_;
3272739   +                  file loopflow mod;
3272740   +                  put "&em_codebar;";
3272741   +                  %if "&j" ne "&endloopnum" %then %do;
3272742   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3272743   +                  %end;
3272744   +                  %else %do;
3272745   +                      put "* &headerString: accumulate final probabilities;";
3272746   +                  %end;
3272747   +                  put "&em_codebar;";
3272748   +                  %do k=1 %to &prednum;
3272749   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3272750   +                  %end;
3272751   +               run;
3272752   +               data _null_;
3272753   +                  file looppub mod;
3272754   +                  put "&em_codebar;";
3272755   +                  %if "&j" ne "&endloopnum" %then %do;
3272756   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3272757   +                  %end;
3272758   +                  %else %do;
3272759   +                      put "* &headerString: accumulate final probabilities;";
3272760   +                  %end;
3272761   +                  %do k=1 %to &prednum;
3272762   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3272763   +                  %end;
3272764   +               run;
3272765   +           %end;
3272766   +           %if "&j" ne "&endloopnum" %then %do;
3272767   +               data _null_;
3272768   +                  file loopflow mod;
3272769   +                  put "&em_codebar;";
3272770   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3272771   +                  put "&em_codebar;";
3272772   +               %do k=1 %to &prednum;
3272773   +                  put "&&tempvars&k = &&predvars&k;";
3272774   +               %end;
3272775   +               run;
3272776   +               data _null_;
3272777   +                  file looppub mod;
3272778   +                  put "&em_codebar;";
3272779   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3272780   +                  put "&em_codebar;";
3272781   +               %do k=1 %to &prednum;
3272782   +                   put "&&tempvars&k = &&predvars&k;";
3272783   +               %end;
3272784   +               run;
3272785   +           %end;
3272787   +       %end;
3272788   +   %end;
3272790   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3272791   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3272793   +   filename loopflow;
3272794   +   filename looppub;
3272795   +   filename empub;
3272797   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3272798   +   %let gpTrain=;
3272799   +   %let gpValidate=;
3272800   +   %let gpTest=;
3272802   +   data _null_;
3272803   +      set &groupImportDs;
3272804   +      select(upcase(port));
3272805   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3272806   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3272807   +          when('TEST')     call symput('gpTest',     strip(dataset));
3272808   +       otherwise;
3272809   +      end;
3272810   +   run;
3272812   +   %if "&gpTrain" ne "" %then %do;
3272814   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3272816   +       %if &targetType ne INTERVAL %then %do;
3272817   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3272818   +       %end;
3272820   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3272822   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3272824   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3272825   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3272827   +       filename _decflow "&decflow";
3272828   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3272829   +       filename _decflow;
3272831   +   %end;
3272833   +   %if "&gpTrain" ne "" %then
3272834   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3272835   +   %if "&gpValidate" ne "" %then
3272836   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3272837   +   %if "&gpTest" ne "" %then
3272838   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3272840   +   filename emflow;
3272842   +%mend boostbagcode;
3272844   +%macro score;
3272846   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3272847   +   %inc _dec;
3272848   +   filename _dec;
3272850   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3272852   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3272853   +       %let emexceptionstring = nomodeltarget;
3272854   +       %goto doendpl;
3272855   +   %end;
3272857   +   %LET GROUPID=;
3272858   +   %let LOOPTYPE=;
3272859   +   data _null_;
3272860   +      set &em_import_data_eminfo;
3272861   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3272862   +      call symput('GROUPID',   strip(data));
3272863   +      call symput('LOOPTYPE', strip(key));
3272864   +   run;
3272866   +   %em_getname(key=PATH, type=DATA);
3272868   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3272869   +   %include temp;
3272870   +   filename temp;
3272872   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3272874   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3272875   +       %let deleteString = &em_nodeid._path;
3272876   +       proc datasets lib=&em_lib nolist;
3272877   +          delete &deleteString;
3272878   +       run;
3272879   +       quit;
3272880   +   %end;
3272882   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3272884   +   data score_path;
3272885   +      retain LOOPID &emloopnumber;
3272886   +      set score_path;
3272887   +   run;
3272889   +   proc append base=&em_user_path  data=score_path;
3272890   +   run;
3272892   +   %let EnsembleIndex=0;
3272893   +   data _null_;
3272894   +      retain index 0 ensembleIndex 0;
3272895   +      set score_Path end=eof;
3272896   +      if nodelabel = "&groupid" or index then do;
3272897   +         index + 1;
3272898   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3272899   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3272900   +      end;
3272901   +      if component='Ensemble' then ensembleIndex = index;
3272902   +      if eof then do;
3272903   +         call symput('loopcodenum', strip(put(index, best.)));
3272904   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3272905   +      end;
3272906   +   run;
3272908   +   proc datasets lib=work nolist;
3272909   +      delete score_Path;
3272910   +   run;
3272911   +   quit;
3272913   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3272914   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3272916   +   %doendpl:
3272918   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3272919   +/*
3272920   +       MACRO: EM_DECIDECODE
3272921   +
3272922   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3272923   +       SUPPORT: Taiyeong Lee
3272924   +
3272925   +       HISTORY: 01OCT04 Initial code
3272926   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3272927   +                to add the corresponding decision code
3272928   +
3272929   +*/
3272930   +
3272931   +
3272932   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3272933   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3272934   +
3272935   +    %do;
3272936   +    %let m_data      = &data;
3272937   +    %let m_decdata   = &decdata;
3272938   +    %let m_decmeta   = &decmeta;
3272939   +    %let m_noresfile = &noresfile;
3272940   +    %let m_resfile   = &resfile;
3272941   +    dm "afa c=sashelp.emutil.decidecode.scl";
3272942   +  %end;
3272943   +%mend EM_DECIDECODE;
3272944   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3272945   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3272946   +   proc display c=sashelp.emcore.pathscorecode.scl;
3272947   +   run;
3272948   +%mend EM_GETTRAINPATH;
3272949   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3272950    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3272951    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3272952    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3272953    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3272954    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3272955    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3272956    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3272957    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3272958    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3272959    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3272960    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3272961    output;
MPRINT(EM_GETTRAINPATH):   output;
3272962    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3272963    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3272964    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3272965    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3272966    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3272967    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3272968    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3272969    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3272970    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3272971    output;
MPRINT(EM_GETTRAINPATH):   output;
3272972    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3272973    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3272974    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3272975    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3272976    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3272977    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3272978    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3272979    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3272980    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3272981    output;
MPRINT(EM_GETTRAINPATH):   output;
3272982    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3272983    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3272984    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3272985    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3272986    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3272987    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3272988    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3272989    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3272990    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3272991    output;
MPRINT(EM_GETTRAINPATH):   output;
3272992    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3272993    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3272994    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3272995    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3272996    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3272997    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3272998    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3272999    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273000    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273001    output;
MPRINT(EM_GETTRAINPATH):   output;
3273002    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3273003    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3273004    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3273005    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3273006    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3273007    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273008    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273009    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273010    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273011    output;
MPRINT(EM_GETTRAINPATH):   output;
3273012    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3273013    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3273014    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3273015    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3273016    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3273017    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273018    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273019    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273020    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273021    output;
MPRINT(EM_GETTRAINPATH):   output;
3273022    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3273023    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3273024    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3273025    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3273026    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3273027    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273028    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273029    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273030    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273031    output;
MPRINT(EM_GETTRAINPATH):   output;
3273032    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3273033    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3273034    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3273035    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3273036    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3273037    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273038    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273039    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273040    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273041    output;
MPRINT(EM_GETTRAINPATH):   output;
3273042    nodelabel="Grp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp10";
3273043    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3273044    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3273045    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3273046    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3273047    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273048    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273049    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273050    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273051    output;
MPRINT(EM_GETTRAINPATH):   output;
3273052    nodelabel="Neural2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural2";
3273053    parent="Grp10";
MPRINT(EM_GETTRAINPATH):   parent="Grp10";
3273054    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
3273055    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
3273056    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3273057    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273058    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273059    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273060    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273061    output;
MPRINT(EM_GETTRAINPATH):   output;
3273062    nodelabel="EndGrp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp9";
3273063    parent="Neural2";
MPRINT(EM_GETTRAINPATH):   parent="Neural2";
3273064    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3273065    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3273066    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3273067    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3273068    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3273069    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3273070    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3273071    output;
MPRINT(EM_GETTRAINPATH):   output;
3273072    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp9_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP9_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP9_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp10" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3273073    *------------------------------------------------------------*;
3273074    * End SCORE: EndGrp9;
3273075    *------------------------------------------------------------*;
3273076
 
3273077    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3273078    * EndGrp9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Scoring DATA data;
3273079    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3273080    data EMWS1.EndGrp9_TRAIN
3273081    / view=EMWS1.EndGrp9_TRAIN
3273082    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_TRAIN / view=EMWS1.EndGrp9_TRAIN ;
3273083    set EMWS1.Neural2_TRAIN
3273084    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN ;
3273085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3273086    quit;
 
3273088    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3273089    * EndGrp9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Computing metadata for TRAIN data;
3273090    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp9_TRAIN out=WORK.M15X6OPM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15X6OPM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M15X6OPM(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15X6OPM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M15X6OPM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0UX1Z_J NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WTLKNH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX1Z_J;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp9";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3273436    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3273437    set EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO;
3273438    where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3273439    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMINFO.
      WHERE (DATA='EndGrp9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3273440    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMINFO;
3273441    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3273442    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3273443    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3273447    run;
3273448    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
3273449    set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
3273450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3273451    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
3273452    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3273454    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3273455    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3273457    proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3273458    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3273460    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
3273461    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3273462    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3273463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3273464    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3273465    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3273466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3273467    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:11 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:03:11 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GKMNQF "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GKMNQF new;
MPRINT(EM_DIAGRAM):   run;
3273491    data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT;
3273492    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
3273493    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3273494    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3273495    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3273496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3273497    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
3273498    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3273499    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3273500    %let _EMwarndup = 0;
3273501    %let _EMtargetdup =;
3273502    %let _EMASEtargetdup =;
3273503    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3273504    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
3273505    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3273506    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3273507    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3273508    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3273509    end;
MPRINT(EM_DIAGRAM):   end;
3273510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3273511    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
3273512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3273513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3273514    proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3273515    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3273516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3273517    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3273518    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3273519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3273520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3273521    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3273522    set EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_CMeta_TRAIN;
3273523    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3273524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3273525    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3273526    set EMWS1.EndGrp9_TRAIN(keep=
3273527    F_DepVar
3273528    I_DepVar
3273529    P_DepVar0
3273530    P_DepVar1
3273531    R_DepVar0
3273532    R_DepVar1
3273533    U_DepVar
3273534    _WARN_
3273535    DepVar
3273536    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3273537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2187 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2187 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: There were 2187 observations read from the data set EMWS1.ENDGRP9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2187 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3277724    %let _cn = %sysfunc(getoption(CENTER));
3277725    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3277726    proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
3277727    var STAT LABEL TRAIN
3277728    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3277729    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3277730    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3277731    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3277732    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2221.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3277733    title10;
MPRINT(EM_DIAGRAM):   title10;
3277734    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3277735    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
3277736    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3277737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3277738    %let _cn = %sysfunc(getoption(CENTER));
3277739    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3277740    proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
3277741    var from into pct_row pct_col count percent
3277742    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3277743    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3277744    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3277745    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3277746    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3277747    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3277748    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3277749    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3277750    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3277751    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3277752    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3277753    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2222.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3277754    title9;
MPRINT(EM_DIAGRAM):   title9;
3277755    title10;
MPRINT(EM_DIAGRAM):   title10;
3277756    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3277757    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3277758    modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3277759    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3277760    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3277761    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMRANK.DATA.
3277762    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
3277763    %let _cn = %sysfunc(getoption(CENTER));
3277764    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3277765    proc print data=EMWS1.EndGrp9_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMRANK label noobs;
3277766    var
3277767    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3277768    by
3277769    notsorted DATAROLE
3277770    notsorted TARGET
3277771    notsorted TARGETLABEL
3277772    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3277773    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3277774    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3277775    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2223.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3277776    title10;
MPRINT(EM_DIAGRAM):   title10;
3277777    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3277778    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3277779    modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3277780    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3277781    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3277782    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMSCOREDIST.DATA.
3277783    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3277784    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3277785    set EMWS1.Grp10_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO;
3277786    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3277787    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3277788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3277789    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3277790    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3277791    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3277792    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3277793    set EMWS1.EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK;
3277794    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3277795    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3277796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3277797    data EMWS1.EndGrp9_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMRANK_LOOP;
3277798    set EMWS1.EndGrp9_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK_LOOP temp;
3277799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP9_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3277800    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3277801    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3277802    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3277803    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3277804    set EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST;
3277805    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3277806    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3277807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3277808    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
3277809    set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
3277810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP has 200 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3277811    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3277812    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3277813    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3277814    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3277815    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
3277816    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3277817    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3277818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3277819    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
3277820    set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
3277821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT_LOOP has 10 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3277822    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3277823    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3277824    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3277825    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3277826    set EMWS1.EndGrp9_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT;
3277827    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3277828    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3277829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3277830    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
3277831    set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
3277832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 189 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP has 210 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3277833    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3277834    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3277835    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3277836    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3277837    set EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION;
3277838    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3277839    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3277840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3277841    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
3277842    set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
3277843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
