*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:58:57 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:58:51 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:58:51 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PK_81P "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PK_81P new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMLOG_9.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:58:51 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMOUTPUT_9.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:58:51 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
2937792    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
2937793    table ROLE*LEVEL/out=WORK.EndGrp9META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp9META;
2937794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.ENDGRP9META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
2937795    proc print data=WORK.EndGrp9META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9META label noobs;
2937796    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2937797    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2937797  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2937797  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2937798    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2937799    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2937800    run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP9META.
NOTE: The PROCEDURE PRINT printed page 1990.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2937801    title10;
MPRINT(EM_DIAGRAM):   title10;
2937802    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2937831    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2937832    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2937833    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2937833  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2937833  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2937834       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2937834  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2937834  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2937835    set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
2937836    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2937837    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2937838    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2937839    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2937840    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2937841    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2937842    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2937843    end;
MPRINT(EM_DIAGRAM):   end;
2937844    output;
MPRINT(EM_DIAGRAM):   output;
2937845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2937846    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2937847    proc print data=WORK.EndGrp9_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9_EVENT noobs label;
2937848    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2937849    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2937850    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2937851    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP9_EVENT.
NOTE: The PROCEDURE PRINT printed page 1991.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2937852    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2937853    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
2937854    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2937855    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2937856    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2937856  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2937856  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2937857    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2937858    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2937859    run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1992.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2937860    title10;
MPRINT(EM_DIAGRAM):   title10;
2937861    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp9: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=304;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13681368136813;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1918;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86318631863186;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2938335    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2938336    * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
2938337    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
2938338    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2938339    %let EMEXCEPTIONSTRING=;
2938340    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2938341    * TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp9;
2938342    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938343    %let EM_ACTION = TRAIN;
2938344    %let syscc = 0;
2938345    %macro main;
2938346       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2938347
2938348           filename temp catalog 'sashelp.emutil.endgp_train.source';
2938349           %include temp;
2938350           filename temp;
2938351
2938352           %train;
2938353
2938354       %end;
2938355       %else
2938356          %if %upcase(&EM_ACTION) = SCORE %then %do;
2938357
2938358           filename temp catalog 'sashelp.emutil.endgp_score.source';
2938359           %include temp;
2938360           filename temp;
2938361
2938362           %score;
2938363       %end;
2938364       %else
2938365       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2938366
2938367           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2938368           %include temp;
2938369           filename temp;
2938370
2938371           %postloop;
2938372
2938373       %end;
2938374
2938375       %doendm:
2938376    %mend main;
2938377
2938378    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2938379   +%macro copyModelDs(model=, key=);
2938380   +   %let modelDs  = &em_lib..&model._&key;
2938381   +   %let reportDs = &em_lib..&em_nodeid._&key;
2938382   +   %if %sysfunc(exist(&modelDs)) %then %do;
2938383   +       data &reportDs;
2938384   +          length ModelId $16;
2938385   +          retain ModelId "&model";
2938386   +          set &modelDs;
2938387   +       run;
2938388   +   %end;
2938389   +%mend copyModelDs;
2938390   +
2938391   +%macro traintarget(groupid=);
2938392   +   %em_getname(key=emoutfit, type=DATA);
2938393   +   %let targetname=;
2938394   +   data _null_;
2938395   +     set &em_lib..&groupid._&looptype;
2938396   +     where _LOOP_ = &EMLOOPNUMBER;
2938397   +     call symput('targetname', strip(_TARGET_));
2938398   +   run;
2938399   +   %let modelId =;
2938400   +   data _null_;
2938401   +      set &em_import_data_eminfo;
2938402   +      where key = 'MODEL' and TARGET = "&targetname";
2938403   +      call symput('modelId',   strip(data));
2938404   +   run;
2938405   +   %if "&modelId" ne "" %then %do;
2938406   +       %copyModelDs(model=&modelid, key=EMRANK);
2938407   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2938408   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2938409   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2938410   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2938411   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2938412   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
2938412  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2938413   +   %end;
2938414   +
2938415   +   %doendtgp:
2938416   +%mend;
2938417   +
2938418   +%macro trainboost(groupid=);
2938419   +
2938420   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2938421   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2938422   +
2938423   +   data _null_;
2938424   +      retain index 0;
2938425   +      set &boostinfoDs;
2938426   +      call symput('targetname', strip(_target_));
2938427   +   run;
2938428   +
2938429   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo))
2938429  !+%then %do;
2938430   +       %let decmeta = ;
2938431   +       data _null_;
2938432   +          set &em_import_data_eminfo;
2938433   +          where (key='DECMETA' and TARGET="&targetname");
2938434   +          call symput('DECMETA', strip(data));
2938435   +       run;
2938436   +       %if "&decmeta" eq "" %then %do;
2938437   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2938438   +           %goto doendtb;
2938439   +       %end;
2938440   +
2938441   +       %let predictedVars=;
2938442   +       data _null_;
2938443   +          set &decmeta;
2938444   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2938445   +          else
2938446   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2938447   +          else
2938448   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars',
2938448  !+strip(symget('predictedVars'))!!' '!!strip(variable));
2938449   +       run;
2938450   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2938451   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR
2938451  !+ PREDICTED: &PREDICTEDVARS;
2938452   +       %end;
2938453   +   %end;
2938454   +
2938455   +   * ;
2938456   +   * ENDGROUP &NODEID : Boosting scoring ;
2938457   +   * ;
2938458   +   data &em_lib..&groupid._boostscore;
2938459   +      set &em_import_data;
2938460   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2938461   +      %if "%em_freq" ne "" %then %do ;
2938462   +          keep %em_freq ;
2938463   +      %end ;
2938464   +   run;
2938465   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
2938465  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2938466   +
2938467   +   %doendtb:
2938468   +
2938469   +%mend trainboost;
2938470   +
2938471   +%macro trainbag(groupid=);
2938472   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2938473   +   data _null_;
2938474   +      retain index 0;
2938475   +      set &baginfoDs;
2938476   +      call symput('targetname', strip(_target_));
2938477   +   run;
2938478   +
2938479   +   %let decmeta = ;
2938480   +   data _null_;
2938481   +       set &em_import_data_eminfo;
2938482   +       where (key='DECMETA' and TARGET="&targetname");
2938483   +       call symput('DECMETA', strip(data));
2938484   +   run;
2938485   +   %if "&decmeta" eq "" %then %do;
2938486   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2938487   +       %goto doendtg;
2938488   +   %end;
2938489   +
2938490   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
2938490  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2938491   +
2938492   +   %doendtg:
2938493   +%mend trainbag;
2938494   +
2938495   +%macro traingroup(groupid=);
2938496   +   %let targetNum = 0;
2938497   +
2938498   +   data _temp1;
2938499   +      set &em_lib..&groupid._eminfo;
2938500   +      where key='MODEL';
2938501   +   run;
2938502   +   data _temp2;
2938503   +      set &em_import_data_eminfo;
2938504   +      where key='MODEL';
2938505   +   run;
2938506   +   proc sort data=_temp1; by TARGET DATA;
2938507   +   proc sort data=_temp2; by TARGET DATA;
2938508   +   data _temp2;
2938509   +      merge _temp1(in=_a) _temp2(in=_b);
2938510   +      by TARGET DATA;
2938511   +      if ^_a and _b then output;
2938512   +   run;
2938513   +   data _null_;
2938514   +      retain index 0;
2938515   +      set _temp2 end=eof;
2938516   +      index +1;
2938517   +      where key ='MODEL';
2938518   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2938519   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2938520   +      if eof then
2938521   +         call symput('targetnum', strip(put(index, best.)));
2938522   +   run;
2938523   +   proc datasets lib=work nolist;
2938524   +      delete _temp1 _temp2;
2938525   +   run;
2938526   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2938527   +
2938528   +   %let modelString =;
2938529   +   %do i=1 %to &targetnum;
2938530   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2938531   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2938532   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2938533   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2938534   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2938535   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2938536   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2938537   +            %let modelString = &modelString &&modelid&i;
2938538   +       %end;
2938539   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
2938539  !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2938540   +   %end;
2938541   +
2938542   +   %doendtgp:
2938543   +
2938544   +%mend traingroup;
2938545   +
2938546   +%macro getSize(data=, nobsvar=);
2938547   +
2938548   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2938549   +       %let dsid = %sysfunc(open(&data));
2938550   +       %if &dsid %then %do;
2938551   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2938552   +           %let dsid = %sysfunc(close(&dsid));
2938553   +       %end;
2938554   +   %end;
2938555   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2938556   +        proc sql;
2938557   +           reset noprint;
2938558   +           select count(*) into :&nobsvar from &data;
2938559   +        quit;
2938560   +   %end;
2938561   +
2938562   +%mend getsize;
2938563   +
2938564   +%macro train;
2938565   +
2938566   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2938567   +      %let EM_TOOLTYPE=UTILITY;
2938568   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2938569   +          proc delete data=&em_data_eminfo;
2938570   +          run;
2938571   +      %end;
2938572   +      %goto doendtr;
2938573   +   %end;
2938574   +
2938575   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
2938575  !+%then %do;
2938576   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2938577   +       %goto doendtr;
2938578   +   %end;
2938579   +
2938580   +   %let xgroupid = ;
2938581   +   data _null_;
2938582   +      set &em_import_data_eminfo;
2938583   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2938584   +      call symput('XGROUPID',  strip(data));
2938585   +      call symput('LOOPTYPE', strip(key));
2938586   +   run;
2938587   +
2938588   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2938589   +       %let nDataObs=0;
2938590   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2938591   +
2938592   +       %let nStartObs=0;
2938593   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2938594   +
2938595   +       %if &nDataObs ne &nStartObs %then %do;
2938596   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2938597   +           %goto doendtr;
2938598   +       %end;
2938599   +
2938600   +       %trainboost(groupid=&xgroupid);
2938601   +   %end;
2938602   +   %else
2938603   +   %if "&looptype" eq "BAGINFO" %then %do;
2938604   +       %trainbag(groupid=&xgroupid);
2938605   +   %end;
2938606   +   %else
2938607   +   %if "&looptype" eq "GROUPINFO" %then %do;
2938608   +       %traingroup(groupid=&xgroupid);
2938609   +   %end;
2938610   +   %else
2938611   +   %if "&looptype" eq "TARGETINFO" %then %do;
2938612   +       %traintarget(groupid=&xgroupid);
2938613   +   %end;
2938614   +
2938615   +   data &em_data_eminfo;
2938616   +      length TARGET KEY $32  DATA $43;
2938617   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2938618   +   run;
2938619   +
2938620   +   %let EM_TOOLTYPE=MODEL;
2938621   +
2938622   +   %doendtr:
2938623   +
2938624   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp10_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set EMWS1.ENDGRP9_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS
CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp9_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp9";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938625    *------------------------------------------------------------*;
2938626    * End TRAIN: EndGrp9;
2938627    *------------------------------------------------------------*;
2938628
 
2938629    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2938630    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2938631    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938632    ;
MPRINT(EM_DIAGRAM):   ;
2938633    ;
MPRINT(EM_DIAGRAM):   ;
2938634    ;
MPRINT(EM_DIAGRAM):   ;
2938635    ;
MPRINT(EM_DIAGRAM):   ;
2938636    quit;
MPRINT(EM_DIAGRAM):   quit;
2938637    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938638    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2938639    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938640    /*; *"; *'; */
2938641    ;
MPRINT(EM_DIAGRAM):   ;
2938642    run;
MPRINT(EM_DIAGRAM):   run;
2938643    quit;
MPRINT(EM_DIAGRAM):   quit;
2938644    /* Reset EM Options */
2938645    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2938646    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2938647    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:58:54 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:58:54 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3N89003 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3N89003 new;
MPRINT(EM_DIAGRAM):   run;
2938749    %let EMEXCEPTIONSTRING=;
2938750    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2938751    * SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp9;
2938752    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2938753    %let EM_ACTION = SCORE;
2938754    %let syscc = 0;
2938755    %macro main;
2938756       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2938757
2938758           filename temp catalog 'sashelp.emutil.endgp_train.source';
2938759           %include temp;
2938760           filename temp;
2938761
2938762           %train;
2938763
2938764       %end;
2938765       %else
2938766          %if %upcase(&EM_ACTION) = SCORE %then %do;
2938767
2938768           filename temp catalog 'sashelp.emutil.endgp_score.source';
2938769           %include temp;
2938770           filename temp;
2938771
2938772           %score;
2938773       %end;
2938774       %else
2938775       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2938776
2938777           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2938778           %include temp;
2938779           filename temp;
2938780
2938781           %postloop;
2938782
2938783       %end;
2938784
2938785       %doendm:
2938786    %mend main;
2938787
2938788    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2938789   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2938791   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2938792   +       data &out / view=&out;
2938793   +          set &data
2938795   +          %if "&prescore" = "Y" %then %do;
2938796   +              (obs=1)
2938797   +          %end;
2938799   +          ;
2938801   +          %inc &scoreref;
2938803   +          %if "&prescore" eq "Y" %then %do;
2938804   +              drop I_: R_:;
2938805   +          %end;
2938807   +       run;
2938808   +   %end;
2938810   +%mend scoretables;
2938812   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2938813   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2938814   +   data _null_;
2938815   +      retain index 0;
2938816   +      set &infoDs;
2938817   +      call symput('targetname', strip(_target_));
2938818   +      call symput('endloopnum', strip(_loop_));
2938819   +   run;
2938821   +   %let endgrp_decmeta=;
2938822   +   %let endgrp_decdata=;
2938824   +   data _null_;
2938825   +      set &em_import_data_eminfo;
2938826   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2938827   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2938828   +      else
2938829   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2938830   +      else call symput('MODELID', strip(data));
2938831   +   run;
2938833   +   %let headerString= Boosting;
2938834   +   %let prefixString= _BoostVar;
2938836   +   %if "&type" = "BAGINFO" %then %do;
2938837   +        %let headerString = Bagging;
2938838   +        %let prefixString= _BagVar;
2938839   +   %end;
2938841   +   %let targetType=;
2938842   +   %let predictedVars=;
2938843   +   data _null_;
2938844   +      retain index;
2938845   +      set &endgrp_decmeta end=eof;
2938846   +      length tempvar $200;
2938847   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2938848   +      else
2938849   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2938850   +      else
2938851   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2938852   +      else
2938853   +      if _TYPE_ = 'PREDICTED' then do;
2938854   +         index+1;
2938855   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2938856   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2938857   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2938858   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2938859   +      end;
2938860   +      if eof then
2938861   +         call symput('prednum', strip(put(index, best.)));
2938862   +   run;
2938864   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2938865   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2938867   +   filename loopflow "&em_user_loopflowcode";
2938868   +   filename looppub "&em_user_looppubcode";
2938870   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2938871   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2938873   +   %if "&emloopnumber" = "1" %then %do;
2938874   +       data _null_;
2938875   +          rc = fdelete('loopflow');
2938876   +          rc = fdelete('looppub');
2938877   +       run;
2938878   +       data _null_;
2938879   +          file loopflow;
2938880   +          put "&em_codebar;";
2938881   +          put "* &em_nodeid: ;" ;
2938882   +          put "* User: &sysuserid;";
2938883   +          put "* Date: &sysdate: &systime;";
2938884   +          put "&em_codebar ;";
2938885   +          put "* Ensemble Code;";
2938886   +          put "&em_codebar ;";
2938887   +          put "* &headerString: Loop=1;";
2938888   +          put "* Temporary Variables;";
2938889   +          %do i= 1 %to &prednum;
2938890   +              put "drop &&tempvars&i;";
2938891   +              put "&&tempvars&i = 0;";
2938892   +          %end;
2938893   +       run;
2938894   +       %em_copyfile(infref=loopflow, outfref=looppub);
2938895   +   %end;
2938897   +   %let j=&emloopnumber;
2938898   +   %do i = 1 %to &loopcodenum;
2938899   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2938900   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2938902   +       %if (&&loopnode&i eq &em_nodeid ) or
2938903   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2938904   +           data _null_;
2938905   +              file loopflow mod;
2938906   +              put "&em_codebar;";
2938907   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2938908   +              put "* User: &sysuserid;";
2938909   +              put "* Date: &sysdate: &systime;";
2938910   +              put "* &headerString: Loop=&j;";
2938911   +              put "&em_codebar;";
2938912   +           run;
2938913   +           data _null_;
2938914   +              file looppub mod;
2938915   +              put "&em_codebar;";
2938916   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2938917   +              put "* User: &sysuserid;";
2938918   +              put "* Date: &sysdate: &systime;";
2938919   +              put "* &headerString: Loop=&j;";
2938920   +              put "&em_codebar;";
2938921   +           run;
2938922   +       %end;
2938924   +       %if &&loopnode&i ne &em_nodeid %then %do;
2938925   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2938926   +               filename x catalog "&fsourceEntry";
2938927   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2938928   +               filename x;
2938930   +               filename y catalog "&psourceEntry";
2938931   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2938932   +               filename y;
2938933   +           %end;
2938934   +       %end;
2938935   +       %else %do;
2938936   +           %if "&j" ne "1" %then %do;
2938937   +               %let weight = %eval(&j-1);
2938938   +               data _null_;
2938939   +                  file loopflow mod;
2938940   +                  put "&em_codebar;";
2938941   +                  %if "&j" ne "&endloopnum" %then %do;
2938942   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2938943   +                  %end;
2938944   +                  %else %do;
2938945   +                      put "* &headerString: accumulate final probabilities;";
2938946   +                  %end;
2938947   +                  put "&em_codebar;";
2938948   +                  %do k=1 %to &prednum;
2938949   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2938950   +                  %end;
2938951   +               run;
2938952   +               data _null_;
2938953   +                  file looppub mod;
2938954   +                  put "&em_codebar;";
2938955   +                  %if "&j" ne "&endloopnum" %then %do;
2938956   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2938957   +                  %end;
2938958   +                  %else %do;
2938959   +                      put "* &headerString: accumulate final probabilities;";
2938960   +                  %end;
2938961   +                  %do k=1 %to &prednum;
2938962   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2938963   +                  %end;
2938964   +               run;
2938965   +           %end;
2938966   +           %if "&j" ne "&endloopnum" %then %do;
2938967   +               data _null_;
2938968   +                  file loopflow mod;
2938969   +                  put "&em_codebar;";
2938970   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2938971   +                  put "&em_codebar;";
2938972   +               %do k=1 %to &prednum;
2938973   +                  put "&&tempvars&k = &&predvars&k;";
2938974   +               %end;
2938975   +               run;
2938976   +               data _null_;
2938977   +                  file looppub mod;
2938978   +                  put "&em_codebar;";
2938979   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2938980   +                  put "&em_codebar;";
2938981   +               %do k=1 %to &prednum;
2938982   +                   put "&&tempvars&k = &&predvars&k;";
2938983   +               %end;
2938984   +               run;
2938985   +           %end;
2938987   +       %end;
2938988   +   %end;
2938990   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2938991   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2938993   +   filename loopflow;
2938994   +   filename looppub;
2938995   +   filename empub;
2938997   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2938998   +   %let gpTrain=;
2938999   +   %let gpValidate=;
2939000   +   %let gpTest=;
2939002   +   data _null_;
2939003   +      set &groupImportDs;
2939004   +      select(upcase(port));
2939005   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2939006   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2939007   +          when('TEST')     call symput('gpTest',     strip(dataset));
2939008   +       otherwise;
2939009   +      end;
2939010   +   run;
2939012   +   %if "&gpTrain" ne "" %then %do;
2939014   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2939016   +       %if &targetType ne INTERVAL %then %do;
2939017   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2939018   +       %end;
2939020   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2939022   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2939024   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2939025   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2939027   +       filename _decflow "&decflow";
2939028   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2939029   +       filename _decflow;
2939031   +   %end;
2939033   +   %if "&gpTrain" ne "" %then
2939034   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2939035   +   %if "&gpValidate" ne "" %then
2939036   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2939037   +   %if "&gpTest" ne "" %then
2939038   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2939040   +   filename emflow;
2939042   +%mend boostbagcode;
2939044   +%macro score;
2939046   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2939047   +   %inc _dec;
2939048   +   filename _dec;
2939050   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2939052   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2939053   +       %let emexceptionstring = nomodeltarget;
2939054   +       %goto doendpl;
2939055   +   %end;
2939057   +   %LET GROUPID=;
2939058   +   %let LOOPTYPE=;
2939059   +   data _null_;
2939060   +      set &em_import_data_eminfo;
2939061   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2939062   +      call symput('GROUPID',   strip(data));
2939063   +      call symput('LOOPTYPE', strip(key));
2939064   +   run;
2939066   +   %em_getname(key=PATH, type=DATA);
2939068   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2939069   +   %include temp;
2939070   +   filename temp;
2939072   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2939074   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2939075   +       %let deleteString = &em_nodeid._path;
2939076   +       proc datasets lib=&em_lib nolist;
2939077   +          delete &deleteString;
2939078   +       run;
2939079   +       quit;
2939080   +   %end;
2939082   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2939084   +   data score_path;
2939085   +      retain LOOPID &emloopnumber;
2939086   +      set score_path;
2939087   +   run;
2939089   +   proc append base=&em_user_path  data=score_path;
2939090   +   run;
2939092   +   %let EnsembleIndex=0;
2939093   +   data _null_;
2939094   +      retain index 0 ensembleIndex 0;
2939095   +      set score_Path end=eof;
2939096   +      if nodelabel = "&groupid" or index then do;
2939097   +         index + 1;
2939098   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2939099   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2939100   +      end;
2939101   +      if component='Ensemble' then ensembleIndex = index;
2939102   +      if eof then do;
2939103   +         call symput('loopcodenum', strip(put(index, best.)));
2939104   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2939105   +      end;
2939106   +   run;
2939108   +   proc datasets lib=work nolist;
2939109   +      delete score_Path;
2939110   +   run;
2939111   +   quit;
2939113   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2939114   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2939116   +   %doendpl:
2939118   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2939119   +/*
2939120   +       MACRO: EM_DECIDECODE
2939121   +
2939122   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2939123   +       SUPPORT: Taiyeong Lee
2939124   +
2939125   +       HISTORY: 01OCT04 Initial code
2939126   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2939127   +                to add the corresponding decision code
2939128   +
2939129   +*/
2939130   +
2939131   +
2939132   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2939133   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2939134   +
2939135   +    %do;
2939136   +    %let m_data      = &data;
2939137   +    %let m_decdata   = &decdata;
2939138   +    %let m_decmeta   = &decmeta;
2939139   +    %let m_noresfile = &noresfile;
2939140   +    %let m_resfile   = &resfile;
2939141   +    dm "afa c=sashelp.emutil.decidecode.scl";
2939142   +  %end;
2939143   +%mend EM_DECIDECODE;
2939144   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2939145   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2939146   +   proc display c=sashelp.emcore.pathscorecode.scl;
2939147   +   run;
2939148   +%mend EM_GETTRAINPATH;
2939149   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2939150    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2939151    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2939152    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2939153    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2939154    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2939155    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2939156    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2939157    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939158    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939159    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939160    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939161    output;
MPRINT(EM_GETTRAINPATH):   output;
2939162    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2939163    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2939164    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2939165    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2939166    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2939167    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939168    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939169    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939170    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939171    output;
MPRINT(EM_GETTRAINPATH):   output;
2939172    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2939173    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2939174    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2939175    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2939176    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2939177    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939178    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939179    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939180    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939181    output;
MPRINT(EM_GETTRAINPATH):   output;
2939182    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2939183    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2939184    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2939185    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2939186    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2939187    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939188    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939189    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939190    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939191    output;
MPRINT(EM_GETTRAINPATH):   output;
2939192    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2939193    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2939194    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2939195    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2939196    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2939197    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939198    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939199    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939200    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939201    output;
MPRINT(EM_GETTRAINPATH):   output;
2939202    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2939203    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2939204    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2939205    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2939206    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2939207    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939208    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939209    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939210    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939211    output;
MPRINT(EM_GETTRAINPATH):   output;
2939212    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2939213    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2939214    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2939215    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2939216    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2939217    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939218    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939219    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939220    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939221    output;
MPRINT(EM_GETTRAINPATH):   output;
2939222    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2939223    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2939224    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2939225    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2939226    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2939227    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939228    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939229    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939230    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939231    output;
MPRINT(EM_GETTRAINPATH):   output;
2939232    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2939233    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2939234    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2939235    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2939236    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2939237    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939238    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939239    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939240    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939241    output;
MPRINT(EM_GETTRAINPATH):   output;
2939242    nodelabel="Grp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp10";
2939243    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2939244    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2939245    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2939246    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2939247    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939248    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939249    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939250    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939251    output;
MPRINT(EM_GETTRAINPATH):   output;
2939252    nodelabel="Neural2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural2";
2939253    parent="Grp10";
MPRINT(EM_GETTRAINPATH):   parent="Grp10";
2939254    description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
2939255    component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
2939256    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2939257    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939258    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939259    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939260    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939261    output;
MPRINT(EM_GETTRAINPATH):   output;
2939262    nodelabel="EndGrp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp9";
2939263    parent="Neural2";
MPRINT(EM_GETTRAINPATH):   parent="Neural2";
2939264    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2939265    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2939266    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2939267    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2939268    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2939269    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2939270    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2939271    output;
MPRINT(EM_GETTRAINPATH):   output;
2939272    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 9;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp9_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP9_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP9_PATH has 108 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp10" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2939273    *------------------------------------------------------------*;
2939274    * End SCORE: EndGrp9;
2939275    *------------------------------------------------------------*;
2939276
 
2939277    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2939278    * EndGrp9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Scoring DATA data;
2939279    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2939280    data EMWS1.EndGrp9_TRAIN
2939281    / view=EMWS1.EndGrp9_TRAIN
2939282    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_TRAIN / view=EMWS1.EndGrp9_TRAIN ;
2939283    set EMWS1.Neural2_TRAIN
2939284    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN ;
2939285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2939286    quit;
 
2939288    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2939289    * EndGrp9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Computing metadata for TRAIN data;
2939290    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp9_TRAIN out=WORK.M3ULUE1H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ULUE1H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ULUE1H(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ULUE1H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ULUE1H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0XHJTB5 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NOBFDB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XHJTB5;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp9";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2939636    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2939637    set EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO;
2939638    where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2939639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMINFO.
      WHERE (DATA='EndGrp9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2939640    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMINFO;
2939641    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2939642    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2939643    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2939647    run;
2939648    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
2939649    set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
2939650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2939651    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
2939652    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2939653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2939654    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2939655    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2939656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2939657    proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2939658    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2939659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2939660    data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
2939661    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2939662    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2939663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2939664    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2939665    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2939666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2939667    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:58:56 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:58:56 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O21MP8RP "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O21MP8RP new;
MPRINT(EM_DIAGRAM):   run;
2939691    data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT;
2939692    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
2939693    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2939694    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2939695    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2939696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2939697    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
2939698    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2939699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2939700    %let _EMwarndup = 0;
2939701    %let _EMtargetdup =;
2939702    %let _EMASEtargetdup =;
2939703    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2939704    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
2939705    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2939706    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2939707    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2939708    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2939709    end;
MPRINT(EM_DIAGRAM):   end;
2939710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2939711    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
2939712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2939713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2939714    proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2939715    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2939716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2939717    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2939718    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2939719    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2939720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2939721    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2939722    set EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_CMeta_TRAIN;
2939723    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2939724    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2939725    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2939726    set EMWS1.EndGrp9_TRAIN(keep=
2939727    F_DepVar
2939728    I_DepVar
2939729    P_DepVar0
2939730    P_DepVar1
2939731    R_DepVar0
2939732    R_DepVar1
2939733    U_DepVar
2939734    _WARN_
2939735    DepVar
2939736    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2939737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2222 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2222 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: There were 2222 observations read from the data set EMWS1.ENDGRP9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2222 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2943924    %let _cn = %sysfunc(getoption(CENTER));
2943925    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2943926    proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
2943927    var STAT LABEL TRAIN
2943928    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2943929    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2943930    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2943931    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2943932    run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1993.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2943933    title10;
MPRINT(EM_DIAGRAM):   title10;
2943934    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2943935    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
2943936    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2943937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2943938    %let _cn = %sysfunc(getoption(CENTER));
2943939    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2943940    proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
2943941    var from into pct_row pct_col count percent
2943942    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2943943    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2943944    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2943945    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2943946    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2943947    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2943948    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2943949    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2943950    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2943951    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2943952    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2943953    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1994.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
2943954    title9;
MPRINT(EM_DIAGRAM):   title9;
2943955    title10;
MPRINT(EM_DIAGRAM):   title10;
2943956    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2943957    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2943958    modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2943959    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2943960    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2943961    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMRANK.DATA.
2943962    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2943963    %let _cn = %sysfunc(getoption(CENTER));
2943964    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2943965    proc print data=EMWS1.EndGrp9_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMRANK label noobs;
2943966    var
2943967    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2943968    by
2943969    notsorted DATAROLE
2943970    notsorted TARGET
2943971    notsorted TARGETLABEL
2943972    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2943973    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2943974    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2943975    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1995.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2943976    title10;
MPRINT(EM_DIAGRAM):   title10;
2943977    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2943978    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2943979    modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2943980    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2943981    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2943982    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMSCOREDIST.DATA.
2943983    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
2943984    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2943985    set EMWS1.Grp10_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO;
2943986    where _LOOP_=9;
MPRINT(EM_DIAGRAM):   where _LOOP_=9;
2943987    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2943988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_GROUPINFO.
      WHERE _LOOP_=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2943989    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2943990    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2943991    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2943992    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2943993    set EMWS1.EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK;
2943994    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2943995    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2943996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2943997    data EMWS1.EndGrp9_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMRANK_LOOP;
2943998    set EMWS1.EndGrp9_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK_LOOP temp;
2943999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.ENDGRP9_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMRANK_LOOP has 180 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2944000    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2944001    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2944002    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2944003    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2944004    set EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST;
2944005    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2944006    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2944007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2944008    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
2944009    set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST_LOOP temp;
2944010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 160 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP has 180 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2944011    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2944012    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2944013    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2944014    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2944015    set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
2944016    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2944017    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2944018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2944019    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
2944020    set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT_LOOP temp;
2944021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT_LOOP has 9 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2944022    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2944023    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2944024    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2944025    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2944026    set EMWS1.EndGrp9_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT;
2944027    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2944028    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2944029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2944030    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
2944031    set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT_LOOP temp;
2944032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 168 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP.
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP has 189 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2944033    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2944034    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2944035    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2944036    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2944037    set EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION;
2944038    _LOOP_ =9;
MPRINT(EM_DIAGRAM):   _LOOP_ =9;
2944039    _WHERE_ ="^(cv_var =9)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =9)";
2944040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2944041    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
2944042    set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION_LOOP temp;
2944043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP has 36 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
