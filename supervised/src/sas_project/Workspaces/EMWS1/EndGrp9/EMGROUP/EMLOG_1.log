*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:28:30 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:25 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:28:25 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O22PDDQI "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O22PDDQI new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMLOG_1.log"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:25 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMGROUP\EMOUTPUT_1.out"
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:25 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
266483     proc freq data=EMWS1.EndGrp9_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp9_VariableSet noprint;
266484     table ROLE*LEVEL/out=WORK.EndGrp9META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp9META;
266485     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.ENDGRP9META has 8 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
266486     proc print data=WORK.EndGrp9META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9META label noobs;
266487     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
266488     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
266488   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
266488   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
266489     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
266490     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
266491     run;
 
NOTE: There were 8 observations read from the data set WORK.ENDGRP9META.
NOTE: The PROCEDURE PRINT printed page 175.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
266492     title10;
MPRINT(EM_DIAGRAM):   title10;
266493     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN
EMWS1.Neural2_TRAIN EMWS1.Neural2_TRAIN EMWS1 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
266522     data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
266523     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
266524     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
266524   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
266524   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
266525        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
266525   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
266525   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
266526     set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
266527     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
266528     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
266529     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
266530     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
266531     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
266532     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
266533     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
266534     end;
MPRINT(EM_DIAGRAM):   end;
266535     output;
MPRINT(EM_DIAGRAM):   output;
266536     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
266537     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
266538     proc print data=WORK.EndGrp9_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp9_EVENT noobs label;
266539     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
266540     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
266541     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
266542     run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP9_EVENT.
NOTE: The PROCEDURE PRINT printed page 176.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
266543     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
266544     proc print data = EMWS1.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Neural2_DepVar_DM noobs label;
266545     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
266546     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
266547     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
266547   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
266547   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
266548     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
266549     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
266550     run;
 
NOTE: There were 7 observations read from the data set EMWS1.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 177.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
266551     title10;
MPRINT(EM_DIAGRAM):   title10;
266552     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp9: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=304;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13881278538812;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1886;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86118721461187;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Neural2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Neural2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
267026     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267027     * EndGrp9: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp9: Generation of macros and macro variables;
267028     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
267029     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
267030     %let EMEXCEPTIONSTRING=;
267031     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267032     * TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp9;
267033     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267034     %let EM_ACTION = TRAIN;
267035     %let syscc = 0;
267036     %macro main;
267037        %if %upcase(&EM_ACTION) = TRAIN %then %do;
267038
267039            filename temp catalog 'sashelp.emutil.endgp_train.source';
267040            %include temp;
267041            filename temp;
267042
267043            %train;
267044
267045        %end;
267046        %else
267047           %if %upcase(&EM_ACTION) = SCORE %then %do;
267048
267049            filename temp catalog 'sashelp.emutil.endgp_score.source';
267050            %include temp;
267051            filename temp;
267052
267053            %score;
267054        %end;
267055        %else
267056        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
267057
267058            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
267059            %include temp;
267060            filename temp;
267061
267062            %postloop;
267063
267064        %end;
267065
267066        %doendm:
267067     %mend main;
267068
267069     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
267070    +%macro copyModelDs(model=, key=);
267071    +   %let modelDs  = &em_lib..&model._&key;
267072    +   %let reportDs = &em_lib..&em_nodeid._&key;
267073    +   %if %sysfunc(exist(&modelDs)) %then %do;
267074    +       data &reportDs;
267075    +          length ModelId $16;
267076    +          retain ModelId "&model";
267077    +          set &modelDs;
267078    +       run;
267079    +   %end;
267080    +%mend copyModelDs;
267081    +
267082    +%macro traintarget(groupid=);
267083    +   %em_getname(key=emoutfit, type=DATA);
267084    +   %let targetname=;
267085    +   data _null_;
267086    +     set &em_lib..&groupid._&looptype;
267087    +     where _LOOP_ = &EMLOOPNUMBER;
267088    +     call symput('targetname', strip(_TARGET_));
267089    +   run;
267090    +   %let modelId =;
267091    +   data _null_;
267092    +      set &em_import_data_eminfo;
267093    +      where key = 'MODEL' and TARGET = "&targetname";
267094    +      call symput('modelId',   strip(data));
267095    +   run;
267096    +   %if "&modelId" ne "" %then %do;
267097    +       %copyModelDs(model=&modelid, key=EMRANK);
267098    +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
267099    +       %copyModelDs(model=&modelid, key=EMOUTFIT);
267100    +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
267101    +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
267102    +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
267103    +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
267103   !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
267104    +   %end;
267105    +
267106    +   %doendtgp:
267107    +%mend;
267108    +
267109    +%macro trainboost(groupid=);
267110    +
267111    +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
267112    +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
267113    +
267114    +   data _null_;
267115    +      retain index 0;
267116    +      set &boostinfoDs;
267117    +      call symput('targetname', strip(_target_));
267118    +   run;
267119    +
267120    +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo))
267120   !+%then %do;
267121    +       %let decmeta = ;
267122    +       data _null_;
267123    +          set &em_import_data_eminfo;
267124    +          where (key='DECMETA' and TARGET="&targetname");
267125    +          call symput('DECMETA', strip(data));
267126    +       run;
267127    +       %if "&decmeta" eq "" %then %do;
267128    +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
267129    +           %goto doendtb;
267130    +       %end;
267131    +
267132    +       %let predictedVars=;
267133    +       data _null_;
267134    +          set &decmeta;
267135    +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
267136    +          else
267137    +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
267138    +          else
267139    +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars',
267139   !+strip(symget('predictedVars'))!!' '!!strip(variable));
267140    +       run;
267141    +       %if %index(&EM_DEBUG, _ALL_) %then %do;
267142    +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR
267142   !+ PREDICTED: &PREDICTEDVARS;
267143    +       %end;
267144    +   %end;
267145    +
267146    +   * ;
267147    +   * ENDGROUP &NODEID : Boosting scoring ;
267148    +   * ;
267149    +   data &em_lib..&groupid._boostscore;
267150    +      set &em_import_data;
267151    +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
267152    +      %if "%em_freq" ne "" %then %do ;
267153    +          keep %em_freq ;
267154    +      %end ;
267155    +   run;
267156    +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
267156   !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
267157    +
267158    +   %doendtb:
267159    +
267160    +%mend trainboost;
267161    +
267162    +%macro trainbag(groupid=);
267163    +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
267164    +   data _null_;
267165    +      retain index 0;
267166    +      set &baginfoDs;
267167    +      call symput('targetname', strip(_target_));
267168    +   run;
267169    +
267170    +   %let decmeta = ;
267171    +   data _null_;
267172    +       set &em_import_data_eminfo;
267173    +       where (key='DECMETA' and TARGET="&targetname");
267174    +       call symput('DECMETA', strip(data));
267175    +   run;
267176    +   %if "&decmeta" eq "" %then %do;
267177    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
267178    +       %goto doendtg;
267179    +   %end;
267180    +
267181    +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y,
267181   !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
267182    +
267183    +   %doendtg:
267184    +%mend trainbag;
267185    +
267186    +%macro traingroup(groupid=);
267187    +   %let targetNum = 0;
267188    +
267189    +   data _temp1;
267190    +      set &em_lib..&groupid._eminfo;
267191    +      where key='MODEL';
267192    +   run;
267193    +   data _temp2;
267194    +      set &em_import_data_eminfo;
267195    +      where key='MODEL';
267196    +   run;
267197    +   proc sort data=_temp1; by TARGET DATA;
267198    +   proc sort data=_temp2; by TARGET DATA;
267199    +   data _temp2;
267200    +      merge _temp1(in=_a) _temp2(in=_b);
267201    +      by TARGET DATA;
267202    +      if ^_a and _b then output;
267203    +   run;
267204    +   data _null_;
267205    +      retain index 0;
267206    +      set _temp2 end=eof;
267207    +      index +1;
267208    +      where key ='MODEL';
267209    +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
267210    +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
267211    +      if eof then
267212    +         call symput('targetnum', strip(put(index, best.)));
267213    +   run;
267214    +   proc datasets lib=work nolist;
267215    +      delete _temp1 _temp2;
267216    +   run;
267217    +   %if "&targetNum" eq "0" %then %goto doendtgp;
267218    +
267219    +   %let modelString =;
267220    +   %do i=1 %to &targetnum;
267221    +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
267222    +            %copyModelDs(model=&&modelid&i, key=EMRANK);
267223    +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
267224    +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
267225    +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
267226    +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
267227    +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
267228    +            %let modelString = &modelString &&modelid&i;
267229    +       %end;
267230    +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N,
267230   !+CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
267231    +   %end;
267232    +
267233    +   %doendtgp:
267234    +
267235    +%mend traingroup;
267236    +
267237    +%macro getSize(data=, nobsvar=);
267238    +
267239    +   %if %sysfunc(exist(&data, DATA)) %then %do;
267240    +       %let dsid = %sysfunc(open(&data));
267241    +       %if &dsid %then %do;
267242    +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
267243    +           %let dsid = %sysfunc(close(&dsid));
267244    +       %end;
267245    +   %end;
267246    +    %if %sysfunc(exist(&data, VIEW)) %then %do;
267247    +        proc sql;
267248    +           reset noprint;
267249    +           select count(*) into :&nobsvar from &data;
267250    +        quit;
267251    +   %end;
267252    +
267253    +%mend getsize;
267254    +
267255    +%macro train;
267256    +
267257    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
267258    +      %let EM_TOOLTYPE=UTILITY;
267259    +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
267260    +          proc delete data=&em_data_eminfo;
267261    +          run;
267262    +      %end;
267263    +      %goto doendtr;
267264    +   %end;
267265    +
267266    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
267266   !+%then %do;
267267    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
267268    +       %goto doendtr;
267269    +   %end;
267270    +
267271    +   %let xgroupid = ;
267272    +   data _null_;
267273    +      set &em_import_data_eminfo;
267274    +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
267275    +      call symput('XGROUPID',  strip(data));
267276    +      call symput('LOOPTYPE', strip(key));
267277    +   run;
267278    +
267279    +   %if "&looptype" eq "BOOSTINFO" %then %do;
267280    +       %let nDataObs=0;
267281    +       %getSize(data=&em_import_data, nobsvar=nDataObs);
267282    +
267283    +       %let nStartObs=0;
267284    +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
267285    +
267286    +       %if &nDataObs ne &nStartObs %then %do;
267287    +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
267288    +           %goto doendtr;
267289    +       %end;
267290    +
267291    +       %trainboost(groupid=&xgroupid);
267292    +   %end;
267293    +   %else
267294    +   %if "&looptype" eq "BAGINFO" %then %do;
267295    +       %trainbag(groupid=&xgroupid);
267296    +   %end;
267297    +   %else
267298    +   %if "&looptype" eq "GROUPINFO" %then %do;
267299    +       %traingroup(groupid=&xgroupid);
267300    +   %end;
267301    +   %else
267302    +   %if "&looptype" eq "TARGETINFO" %then %do;
267303    +       %traintarget(groupid=&xgroupid);
267304    +   %end;
267305    +
267306    +   data &em_data_eminfo;
267307    +      length TARGET KEY $32  DATA $43;
267308    +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
267309    +   run;
267310    +
267311    +   %let EM_TOOLTYPE=MODEL;
267312    +
267313    +   %doendtr:
267314    +
267315    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp10_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP10_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Neural2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMRANK.
NOTE: The data set EMWS1.ENDGRP9_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Neural2";
MPRINT(COPYMODELDS):   set EMWS1.Neural2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS
CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp9_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp9";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267316     *------------------------------------------------------------*;
267317     * End TRAIN: EndGrp9;
267318     *------------------------------------------------------------*;
267319
 
267320     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267321     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
267322     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267323     ;
MPRINT(EM_DIAGRAM):   ;
267324     ;
MPRINT(EM_DIAGRAM):   ;
267325     ;
MPRINT(EM_DIAGRAM):   ;
267326     ;
MPRINT(EM_DIAGRAM):   ;
267327     quit;
MPRINT(EM_DIAGRAM):   quit;
267328     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267329     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
267330     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267331     /*; *"; *'; */
267332     ;
MPRINT(EM_DIAGRAM):   ;
267333     run;
MPRINT(EM_DIAGRAM):   run;
267334     quit;
MPRINT(EM_DIAGRAM):   quit;
267335     /* Reset EM Options */
267336     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
267337     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
267338     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:27 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:28:27 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O30C20QA "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O30C20QA new;
MPRINT(EM_DIAGRAM):   run;
267440     %let EMEXCEPTIONSTRING=;
267441     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267442     * SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp9;
267443     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267444     %let EM_ACTION = SCORE;
267445     %let syscc = 0;
267446     %macro main;
267447        %if %upcase(&EM_ACTION) = TRAIN %then %do;
267448
267449            filename temp catalog 'sashelp.emutil.endgp_train.source';
267450            %include temp;
267451            filename temp;
267452
267453            %train;
267454
267455        %end;
267456        %else
267457           %if %upcase(&EM_ACTION) = SCORE %then %do;
267458
267459            filename temp catalog 'sashelp.emutil.endgp_score.source';
267460            %include temp;
267461            filename temp;
267462
267463            %score;
267464        %end;
267465        %else
267466        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
267467
267468            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
267469            %include temp;
267470            filename temp;
267471
267472            %postloop;
267473
267474        %end;
267475
267476        %doendm:
267477     %mend main;
267478
267479     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
267480    +%macro scoreTables(data=, out=, scoreref=, prescore=);
267482    +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
267483    +       data &out / view=&out;
267484    +          set &data
267486    +          %if "&prescore" = "Y" %then %do;
267487    +              (obs=1)
267488    +          %end;
267490    +          ;
267492    +          %inc &scoreref;
267494    +          %if "&prescore" eq "Y" %then %do;
267495    +              drop I_: R_:;
267496    +          %end;
267498    +       run;
267499    +   %end;
267501    +%mend scoretables;
267503    +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
267504    +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
267505    +   data _null_;
267506    +      retain index 0;
267507    +      set &infoDs;
267508    +      call symput('targetname', strip(_target_));
267509    +      call symput('endloopnum', strip(_loop_));
267510    +   run;
267512    +   %let endgrp_decmeta=;
267513    +   %let endgrp_decdata=;
267515    +   data _null_;
267516    +      set &em_import_data_eminfo;
267517    +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
267518    +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
267519    +      else
267520    +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
267521    +      else call symput('MODELID', strip(data));
267522    +   run;
267524    +   %let headerString= Boosting;
267525    +   %let prefixString= _BoostVar;
267527    +   %if "&type" = "BAGINFO" %then %do;
267528    +        %let headerString = Bagging;
267529    +        %let prefixString= _BagVar;
267530    +   %end;
267532    +   %let targetType=;
267533    +   %let predictedVars=;
267534    +   data _null_;
267535    +      retain index;
267536    +      set &endgrp_decmeta end=eof;
267537    +      length tempvar $200;
267538    +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
267539    +      else
267540    +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
267541    +      else
267542    +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
267543    +      else
267544    +      if _TYPE_ = 'PREDICTED' then do;
267545    +         index+1;
267546    +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
267547    +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
267548    +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
267549    +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
267550    +      end;
267551    +      if eof then
267552    +         call symput('prednum', strip(put(index, best.)));
267553    +   run;
267555    +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
267556    +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
267558    +   filename loopflow "&em_user_loopflowcode";
267559    +   filename looppub "&em_user_looppubcode";
267561    +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
267562    +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
267564    +   %if "&emloopnumber" = "1" %then %do;
267565    +       data _null_;
267566    +          rc = fdelete('loopflow');
267567    +          rc = fdelete('looppub');
267568    +       run;
267569    +       data _null_;
267570    +          file loopflow;
267571    +          put "&em_codebar;";
267572    +          put "* &em_nodeid: ;" ;
267573    +          put "* User: &sysuserid;";
267574    +          put "* Date: &sysdate: &systime;";
267575    +          put "&em_codebar ;";
267576    +          put "* Ensemble Code;";
267577    +          put "&em_codebar ;";
267578    +          put "* &headerString: Loop=1;";
267579    +          put "* Temporary Variables;";
267580    +          %do i= 1 %to &prednum;
267581    +              put "drop &&tempvars&i;";
267582    +              put "&&tempvars&i = 0;";
267583    +          %end;
267584    +       run;
267585    +       %em_copyfile(infref=loopflow, outfref=looppub);
267586    +   %end;
267588    +   %let j=&emloopnumber;
267589    +   %do i = 1 %to &loopcodenum;
267590    +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
267591    +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
267593    +       %if (&&loopnode&i eq &em_nodeid ) or
267594    +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
267595    +           data _null_;
267596    +              file loopflow mod;
267597    +              put "&em_codebar;";
267598    +              put "* &&loopnode&i: &&loopdesc&i;" ;
267599    +              put "* User: &sysuserid;";
267600    +              put "* Date: &sysdate: &systime;";
267601    +              put "* &headerString: Loop=&j;";
267602    +              put "&em_codebar;";
267603    +           run;
267604    +           data _null_;
267605    +              file looppub mod;
267606    +              put "&em_codebar;";
267607    +              put "* &&loopnode&i: &&loopdesc&i;" ;
267608    +              put "* User: &sysuserid;";
267609    +              put "* Date: &sysdate: &systime;";
267610    +              put "* &headerString: Loop=&j;";
267611    +              put "&em_codebar;";
267612    +           run;
267613    +       %end;
267615    +       %if &&loopnode&i ne &em_nodeid %then %do;
267616    +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
267617    +               filename x catalog "&fsourceEntry";
267618    +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
267619    +               filename x;
267621    +               filename y catalog "&psourceEntry";
267622    +               %em_copyfile(infref=y, outfref=looppub, append=Y);
267623    +               filename y;
267624    +           %end;
267625    +       %end;
267626    +       %else %do;
267627    +           %if "&j" ne "1" %then %do;
267628    +               %let weight = %eval(&j-1);
267629    +               data _null_;
267630    +                  file loopflow mod;
267631    +                  put "&em_codebar;";
267632    +                  %if "&j" ne "&endloopnum" %then %do;
267633    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
267634    +                  %end;
267635    +                  %else %do;
267636    +                      put "* &headerString: accumulate final probabilities;";
267637    +                  %end;
267638    +                  put "&em_codebar;";
267639    +                  %do k=1 %to &prednum;
267640    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
267641    +                  %end;
267642    +               run;
267643    +               data _null_;
267644    +                  file looppub mod;
267645    +                  put "&em_codebar;";
267646    +                  %if "&j" ne "&endloopnum" %then %do;
267647    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
267648    +                  %end;
267649    +                  %else %do;
267650    +                      put "* &headerString: accumulate final probabilities;";
267651    +                  %end;
267652    +                  %do k=1 %to &prednum;
267653    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
267654    +                  %end;
267655    +               run;
267656    +           %end;
267657    +           %if "&j" ne "&endloopnum" %then %do;
267658    +               data _null_;
267659    +                  file loopflow mod;
267660    +                  put "&em_codebar;";
267661    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
267662    +                  put "&em_codebar;";
267663    +               %do k=1 %to &prednum;
267664    +                  put "&&tempvars&k = &&predvars&k;";
267665    +               %end;
267666    +               run;
267667    +               data _null_;
267668    +                  file looppub mod;
267669    +                  put "&em_codebar;";
267670    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
267671    +                  put "&em_codebar;";
267672    +               %do k=1 %to &prednum;
267673    +                   put "&&tempvars&k = &&predvars&k;";
267674    +               %end;
267675    +               run;
267676    +           %end;
267678    +       %end;
267679    +   %end;
267681    +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
267682    +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
267684    +   filename loopflow;
267685    +   filename looppub;
267686    +   filename empub;
267688    +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
267689    +   %let gpTrain=;
267690    +   %let gpValidate=;
267691    +   %let gpTest=;
267693    +   data _null_;
267694    +      set &groupImportDs;
267695    +      select(upcase(port));
267696    +          when('DATA')     call symput('gpTrain',    strip(dataset));
267697    +          when('VALIDATE') call symput('gpValidate', strip(dataset));
267698    +          when('TEST')     call symput('gpTest',     strip(dataset));
267699    +       otherwise;
267700    +      end;
267701    +   run;
267703    +   %if "&gpTrain" ne "" %then %do;
267705    +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
267707    +       %if &targetType ne INTERVAL %then %do;
267708    +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
267709    +       %end;
267711    +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
267713    +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
267715    +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
267716    +                                                           noresfile=, resfile=%nrbquote(&decflow));
267718    +       filename _decflow "&decflow";
267719    +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
267720    +       filename _decflow;
267722    +   %end;
267724    +   %if "&gpTrain" ne "" %then
267725    +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
267726    +   %if "&gpValidate" ne "" %then
267727    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
267728    +   %if "&gpTest" ne "" %then
267729    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
267731    +   filename emflow;
267733    +%mend boostbagcode;
267735    +%macro score;
267737    +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
267738    +   %inc _dec;
267739    +   filename _dec;
267741    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
267743    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
267744    +       %let emexceptionstring = nomodeltarget;
267745    +       %goto doendpl;
267746    +   %end;
267748    +   %LET GROUPID=;
267749    +   %let LOOPTYPE=;
267750    +   data _null_;
267751    +      set &em_import_data_eminfo;
267752    +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
267753    +      call symput('GROUPID',   strip(data));
267754    +      call symput('LOOPTYPE', strip(key));
267755    +   run;
267757    +   %em_getname(key=PATH, type=DATA);
267759    +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
267760    +   %include temp;
267761    +   filename temp;
267763    +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
267765    +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
267766    +       %let deleteString = &em_nodeid._path;
267767    +       proc datasets lib=&em_lib nolist;
267768    +          delete &deleteString;
267769    +       run;
267770    +       quit;
267771    +   %end;
267773    +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
267775    +   data score_path;
267776    +      retain LOOPID &emloopnumber;
267777    +      set score_path;
267778    +   run;
267780    +   proc append base=&em_user_path  data=score_path;
267781    +   run;
267783    +   %let EnsembleIndex=0;
267784    +   data _null_;
267785    +      retain index 0 ensembleIndex 0;
267786    +      set score_Path end=eof;
267787    +      if nodelabel = "&groupid" or index then do;
267788    +         index + 1;
267789    +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
267790    +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
267791    +      end;
267792    +      if component='Ensemble' then ensembleIndex = index;
267793    +      if eof then do;
267794    +         call symput('loopcodenum', strip(put(index, best.)));
267795    +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
267796    +      end;
267797    +   run;
267799    +   proc datasets lib=work nolist;
267800    +      delete score_Path;
267801    +   run;
267802    +   quit;
267804    +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
267805    +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
267807    +   %doendpl:
267809    +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
267810    +/*
267811    +       MACRO: EM_DECIDECODE
267812    +
267813    +       PURPOSE: Generate EM Decide Score Code for non-interval target.
267814    +       SUPPORT: Taiyeong Lee
267815    +
267816    +       HISTORY: 01OCT04 Initial code
267817    +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
267818    +                to add the corresponding decision code
267819    +
267820    +*/
267821    +
267822    +
267823    +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
267824    + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
267825    +
267826    +    %do;
267827    +    %let m_data      = &data;
267828    +    %let m_decdata   = &decdata;
267829    +    %let m_decmeta   = &decmeta;
267830    +    %let m_noresfile = &noresfile;
267831    +    %let m_resfile   = &resfile;
267832    +    dm "afa c=sashelp.emutil.decidecode.scl";
267833    +  %end;
267834    +%mend EM_DECIDECODE;
267835    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Neural2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
267836    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
267837    +   proc display c=sashelp.emcore.pathscorecode.scl;
267838    +   run;
267839    +%mend EM_GETTRAINPATH;
267840    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
267841     data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
267842     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
267843     nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
267844     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
267845     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
267846     component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
267847     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
267848     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267849     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267850     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267851     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267852     output;
MPRINT(EM_GETTRAINPATH):   output;
267853     nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
267854     parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
267855     description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
267856     component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
267857     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
267858     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267859     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267860     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267861     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267862     output;
MPRINT(EM_GETTRAINPATH):   output;
267863     nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
267864     parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
267865     description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
267866     component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
267867     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
267868     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267869     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267870     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267871     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267872     output;
MPRINT(EM_GETTRAINPATH):   output;
267873     nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
267874     parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
267875     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
267876     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
267877     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
267878     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267879     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267880     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267881     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267882     output;
MPRINT(EM_GETTRAINPATH):   output;
267883     nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
267884     parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
267885     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
267886     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
267887     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
267888     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267889     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267890     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267891     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267892     output;
MPRINT(EM_GETTRAINPATH):   output;
267893     nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
267894     parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
267895     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
267896     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
267897     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
267898     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267899     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267900     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267901     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267902     output;
MPRINT(EM_GETTRAINPATH):   output;
267903     nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
267904     parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
267905     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
267906     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
267907     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
267908     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267909     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267910     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267911     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267912     output;
MPRINT(EM_GETTRAINPATH):   output;
267913     nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
267914     parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
267915     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
267916     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
267917     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
267918     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267919     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267920     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267921     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267922     output;
MPRINT(EM_GETTRAINPATH):   output;
267923     nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
267924     parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
267925     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
267926     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
267927     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
267928     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267929     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267930     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267931     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267932     output;
MPRINT(EM_GETTRAINPATH):   output;
267933     nodelabel="Grp10";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp10";
267934     parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
267935     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
267936     component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
267937     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
267938     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267939     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267940     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267941     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267942     output;
MPRINT(EM_GETTRAINPATH):   output;
267943     nodelabel="Neural2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural2";
267944     parent="Grp10";
MPRINT(EM_GETTRAINPATH):   parent="Grp10";
267945     description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
267946     component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
267947     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
267948     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267949     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267950     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267951     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267952     output;
MPRINT(EM_GETTRAINPATH):   output;
267953     nodelabel="EndGrp9";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp9";
267954     parent="Neural2";
MPRINT(EM_GETTRAINPATH):   parent="Neural2";
267955     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
267956     component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
267957     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
267958     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
267959     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
267960     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
267961     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
267962     output;
MPRINT(EM_GETTRAINPATH):   output;
267963     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 1;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp9_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP9_PATH.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set EMWS1.ENDGRP9_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp10" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267964     *------------------------------------------------------------*;
267965     * End SCORE: EndGrp9;
267966     *------------------------------------------------------------*;
267967
 
267968     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267969     * EndGrp9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Scoring DATA data;
267970     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
267971     data EMWS1.EndGrp9_TRAIN
267972     / view=EMWS1.EndGrp9_TRAIN
267973     ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_TRAIN / view=EMWS1.EndGrp9_TRAIN ;
267974     set EMWS1.Neural2_TRAIN
267975     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_TRAIN ;
267976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
267977     quit;
 
267979     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
267980     * EndGrp9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp9: Computing metadata for TRAIN data;
267981     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp9_TRAIN out=WORK.M38TSOQ6 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38TSOQ6;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M38TSOQ6(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38TSOQ6;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M38TSOQ6;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3HE3Y_J NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RBV3DQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HE3Y_J;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp9";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
268327     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
268328     set EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO;
268329     where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
268330     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMINFO.
      WHERE (DATA='EndGrp9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
268331     data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMINFO;
268332     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
268333     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
268334     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
268338     run;
268339     data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
268340     set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMINFO WORK.MODELTEMP_INFO;
268341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
268342     proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp9_EMINFO NOTHREADS;
268343     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
268344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
268345     proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
268346     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
268347     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
268348     proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
268349     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
268350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
268351     data EMWS1.EndGrp9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp9_EMINFO;
268352     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
268353     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
268354     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP9_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
268355     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
268356     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
268357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
268358     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:28:28 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:28:28 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3U1Q2J6 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3U1Q2J6 new;
MPRINT(EM_DIAGRAM):   run;
268382     data EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT;
268383     set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
268384     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
268385     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
268386     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
268387     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT has 1 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
268388     proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMREPORTFIT nothreads;
268389     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
268390     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
268391     %let _EMwarndup = 0;
268392     %let _EMtargetdup =;
268393     %let _EMASEtargetdup =;
268394     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
268395     set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
268396     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
268397     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
268398     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
268399     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
268400     end;
MPRINT(EM_DIAGRAM):   end;
268401     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
268402     proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
268403     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
268404     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
268405     proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
268406     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
268407     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
268408     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
268409     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
268410     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
268411     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
268412     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
268413     set EMWS1.EndGrp9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_CMeta_TRAIN;
268414     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
268415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
268416     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
268417     set EMWS1.EndGrp9_TRAIN(keep=
268418     F_DepVar
268419     I_DepVar
268420     P_DepVar0
268421     P_DepVar1
268422     R_DepVar0
268423     R_DepVar1
268424     U_DepVar
268425     _WARN_
268426     DepVar
268427     );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
268428     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2190 observations read from the data set EMWS1.GRP10_TRAIN.
NOTE: View EMWS1.ENDGRP9_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2190 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: There were 2190 observations read from the data set EMWS1.ENDGRP9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2190 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
272615     %let _cn = %sysfunc(getoption(CENTER));
272616     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
272617     proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMREPORTFIT noobs label;
272618     var STAT LABEL TRAIN
272619     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
272620     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
272621     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
272622     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
272623     run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 178.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272624     title10;
MPRINT(EM_DIAGRAM):   title10;
272625     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
272626     proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp9_EMCLASSIFICATION nothreads;
272627     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
272628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
272629     %let _cn = %sysfunc(getoption(CENTER));
272630     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
272631     proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMCLASSIFICATION noobs label;
272632     var from into pct_row pct_col count percent
272633     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
272634     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
272635     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
272636     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
272637     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
272638     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
272639     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
272640     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
272641     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
272642     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
272643     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
272644     run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 179.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
272645     title9;
MPRINT(EM_DIAGRAM):   title9;
272646     title10;
MPRINT(EM_DIAGRAM):   title10;
272647     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
272648     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
272649     modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
272650     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
272651     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
272652     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMRANK.DATA.
272653     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
 
272654     %let _cn = %sysfunc(getoption(CENTER));
272655     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
272656     proc print data=EMWS1.EndGrp9_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp9_EMRANK label noobs;
272657     var
272658     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
272659     by
272660     notsorted DATAROLE
272661     notsorted TARGET
272662     notsorted TARGETLABEL
272663     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
272664     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
272665     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
272666     run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 180.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272667     title10;
MPRINT(EM_DIAGRAM):   title10;
272668     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
272669     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
272670     modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
272671     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
272672     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
272673     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP9_EMSCOREDIST.DATA.
272674     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
272675     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
272676     set EMWS1.Grp10_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp10_GROUPINFO;
272677     where _LOOP_=1;
MPRINT(EM_DIAGRAM):   where _LOOP_=1;
272678     call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
272679     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP10_GROUPINFO.
      WHERE _LOOP_=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272680     data temp;
MPRINT(EM_DIAGRAM):    data temp;
272681     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
272682     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
272683     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
272684     set EMWS1.EndGrp9_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMRANK;
272685     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
272686     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
272687     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
272688     data EMWS1.EndGrp9_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMRANK_LOOP;
272689     set temp;
MPRINT(EM_DIAGRAM):   set temp;
272690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMRANK_LOOP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272691     data temp;
MPRINT(EM_DIAGRAM):    data temp;
272692     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
272693     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
272694     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
272695     set EMWS1.EndGrp9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMSCOREDIST;
272696     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
272697     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
272698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP9_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
272699     data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMSCOREDIST_LOOP;
272700     set temp;
MPRINT(EM_DIAGRAM):   set temp;
272701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMSCOREDIST_LOOP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272702     data temp;
MPRINT(EM_DIAGRAM):    data temp;
272703     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
272704     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
272705     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
272706     set EMWS1.EndGrp9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMOUTFIT;
272707     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
272708     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
272709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP9_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
272710     data EMWS1.EndGrp9_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMOUTFIT_LOOP;
272711     set temp;
MPRINT(EM_DIAGRAM):   set temp;
272712     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMOUTFIT_LOOP has 1 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
272713     data temp;
MPRINT(EM_DIAGRAM):    data temp;
272714     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
272715     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
272716     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
272717     set EMWS1.EndGrp9_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMREPORTFIT;
272718     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
272719     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
272720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.ENDGRP9_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
272721     data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMREPORTFIT_LOOP;
272722     set temp;
MPRINT(EM_DIAGRAM):   set temp;
272723     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMREPORTFIT_LOOP has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
272724     data temp;
MPRINT(EM_DIAGRAM):    data temp;
272725     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
272726     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
272727     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
272728     set EMWS1.EndGrp9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp9_EMCLASSIFICATION;
272729     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
272730     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
272731     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP9_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
272732     data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp9_EMCLASSIFICATION_LOOP;
272733     set temp;
MPRINT(EM_DIAGRAM):   set temp;
272734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP9_EMCLASSIFICATION_LOOP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
