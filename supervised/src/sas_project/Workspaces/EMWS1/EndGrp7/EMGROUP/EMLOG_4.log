*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:40:06 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:40:01 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:40:01 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O34V608R "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O34V608R new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMLOG_4.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:40:01 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMOUTPUT_4.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:40:01 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
1338009    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
1338010    table ROLE*LEVEL/out=WORK.EndGrp7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp7META;
1338011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.ENDGRP7META has 9 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
1338012    proc print data=WORK.EndGrp7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7META label noobs;
1338013    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1338014    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
1338015    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1338016    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1338017    run;
 
NOTE: There were 9 observations read from the data set WORK.ENDGRP7META.
NOTE: The PROCEDURE PRINT printed page 887.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1338018    title10;
MPRINT(EM_DIAGRAM):   title10;
1338019    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg4_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1338048    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
1338049    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1338050    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1338051       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1338052    set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
1338053    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1338054    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1338055    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1338056    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1338057    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1338058    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1338059    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1338060    end;
MPRINT(EM_DIAGRAM):   end;
1338061    output;
MPRINT(EM_DIAGRAM):   output;
1338062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1338063    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1338064    proc print data=WORK.EndGrp7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7_EVENT noobs label;
1338065    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1338066    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1338067    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1338068    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP7_EVENT.
NOTE: The PROCEDURE PRINT printed page 888.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1338069    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1338070    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
1338071    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1338072    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
1338073    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1338074    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1338075    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1338076    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 889.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1338077    title10;
MPRINT(EM_DIAGRAM):   title10;
1338078    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp7: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=303;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.1378525932666;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1895;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86214740673339;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
1338553    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1338554    * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
1338555    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
1338556    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
1338557    %let EMEXCEPTIONSTRING=;
1338558    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1338559    * TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp7;
1338560    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338561    %let EM_ACTION = TRAIN;
1338562    %let syscc = 0;
1338563    %macro main;
1338564       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1338565
1338566           filename temp catalog 'sashelp.emutil.endgp_train.source';
1338567           %include temp;
1338568           filename temp;
1338569
1338570           %train;
1338571
1338572       %end;
1338573       %else
1338574          %if %upcase(&EM_ACTION) = SCORE %then %do;
1338575
1338576           filename temp catalog 'sashelp.emutil.endgp_score.source';
1338577           %include temp;
1338578           filename temp;
1338579
1338580           %score;
1338581       %end;
1338582       %else
1338583       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1338584
1338585           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1338586           %include temp;
1338587           filename temp;
1338588
1338589           %postloop;
1338590
1338591       %end;
1338592
1338593       %doendm:
1338594    %mend main;
1338595
1338596    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
1338597   +%macro copyModelDs(model=, key=);
1338598   +   %let modelDs  = &em_lib..&model._&key;
1338599   +   %let reportDs = &em_lib..&em_nodeid._&key;
1338600   +   %if %sysfunc(exist(&modelDs)) %then %do;
1338601   +       data &reportDs;
1338602   +          length ModelId $16;
1338603   +          retain ModelId "&model";
1338604   +          set &modelDs;
1338605   +       run;
1338606   +   %end;
1338607   +%mend copyModelDs;
1338608   +
1338609   +%macro traintarget(groupid=);
1338610   +   %em_getname(key=emoutfit, type=DATA);
1338611   +   %let targetname=;
1338612   +   data _null_;
1338613   +     set &em_lib..&groupid._&looptype;
1338614   +     where _LOOP_ = &EMLOOPNUMBER;
1338615   +     call symput('targetname', strip(_TARGET_));
1338616   +   run;
1338617   +   %let modelId =;
1338618   +   data _null_;
1338619   +      set &em_import_data_eminfo;
1338620   +      where key = 'MODEL' and TARGET = "&targetname";
1338621   +      call symput('modelId',   strip(data));
1338622   +   run;
1338623   +   %if "&modelId" ne "" %then %do;
1338624   +       %copyModelDs(model=&modelid, key=EMRANK);
1338625   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
1338626   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
1338627   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
1338628   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
1338629   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
1338630   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1338631   +   %end;
1338632   +
1338633   +   %doendtgp:
1338634   +%mend;
1338635   +
1338636   +%macro trainboost(groupid=);
1338637   +
1338638   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
1338639   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
1338640   +
1338641   +   data _null_;
1338642   +      retain index 0;
1338643   +      set &boostinfoDs;
1338644   +      call symput('targetname', strip(_target_));
1338645   +   run;
1338646   +
1338647   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
1338648   +       %let decmeta = ;
1338649   +       data _null_;
1338650   +          set &em_import_data_eminfo;
1338651   +          where (key='DECMETA' and TARGET="&targetname");
1338652   +          call symput('DECMETA', strip(data));
1338653   +       run;
1338654   +       %if "&decmeta" eq "" %then %do;
1338655   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1338656   +           %goto doendtb;
1338657   +       %end;
1338658   +
1338659   +       %let predictedVars=;
1338660   +       data _null_;
1338661   +          set &decmeta;
1338662   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1338663   +          else
1338664   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1338665   +          else
1338666   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
1338667   +       run;
1338668   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
1338669   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
1338670   +       %end;
1338671   +   %end;
1338672   +
1338673   +   * ;
1338674   +   * ENDGROUP &NODEID : Boosting scoring ;
1338675   +   * ;
1338676   +   data &em_lib..&groupid._boostscore;
1338677   +      set &em_import_data;
1338678   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
1338679   +      %if "%em_freq" ne "" %then %do ;
1338680   +          keep %em_freq ;
1338681   +      %end ;
1338682   +   run;
1338683   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1338684   +
1338685   +   %doendtb:
1338686   +
1338687   +%mend trainboost;
1338688   +
1338689   +%macro trainbag(groupid=);
1338690   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
1338691   +   data _null_;
1338692   +      retain index 0;
1338693   +      set &baginfoDs;
1338694   +      call symput('targetname', strip(_target_));
1338695   +   run;
1338696   +
1338697   +   %let decmeta = ;
1338698   +   data _null_;
1338699   +       set &em_import_data_eminfo;
1338700   +       where (key='DECMETA' and TARGET="&targetname");
1338701   +       call symput('DECMETA', strip(data));
1338702   +   run;
1338703   +   %if "&decmeta" eq "" %then %do;
1338704   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1338705   +       %goto doendtg;
1338706   +   %end;
1338707   +
1338708   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1338709   +
1338710   +   %doendtg:
1338711   +%mend trainbag;
1338712   +
1338713   +%macro traingroup(groupid=);
1338714   +   %let targetNum = 0;
1338715   +
1338716   +   data _temp1;
1338717   +      set &em_lib..&groupid._eminfo;
1338718   +      where key='MODEL';
1338719   +   run;
1338720   +   data _temp2;
1338721   +      set &em_import_data_eminfo;
1338722   +      where key='MODEL';
1338723   +   run;
1338724   +   proc sort data=_temp1; by TARGET DATA;
1338725   +   proc sort data=_temp2; by TARGET DATA;
1338726   +   data _temp2;
1338727   +      merge _temp1(in=_a) _temp2(in=_b);
1338728   +      by TARGET DATA;
1338729   +      if ^_a and _b then output;
1338730   +   run;
1338731   +   data _null_;
1338732   +      retain index 0;
1338733   +      set _temp2 end=eof;
1338734   +      index +1;
1338735   +      where key ='MODEL';
1338736   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
1338737   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
1338738   +      if eof then
1338739   +         call symput('targetnum', strip(put(index, best.)));
1338740   +   run;
1338741   +   proc datasets lib=work nolist;
1338742   +      delete _temp1 _temp2;
1338743   +   run;
1338744   +   %if "&targetNum" eq "0" %then %goto doendtgp;
1338745   +
1338746   +   %let modelString =;
1338747   +   %do i=1 %to &targetnum;
1338748   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
1338749   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
1338750   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
1338751   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
1338752   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
1338753   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
1338754   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
1338755   +            %let modelString = &modelString &&modelid&i;
1338756   +       %end;
1338757   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
1338758   +   %end;
1338759   +
1338760   +   %doendtgp:
1338761   +
1338762   +%mend traingroup;
1338763   +
1338764   +%macro getSize(data=, nobsvar=);
1338765   +
1338766   +   %if %sysfunc(exist(&data, DATA)) %then %do;
1338767   +       %let dsid = %sysfunc(open(&data));
1338768   +       %if &dsid %then %do;
1338769   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
1338770   +           %let dsid = %sysfunc(close(&dsid));
1338771   +       %end;
1338772   +   %end;
1338773   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
1338774   +        proc sql;
1338775   +           reset noprint;
1338776   +           select count(*) into :&nobsvar from &data;
1338777   +        quit;
1338778   +   %end;
1338779   +
1338780   +%mend getsize;
1338781   +
1338782   +%macro train;
1338783   +
1338784   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
1338785   +      %let EM_TOOLTYPE=UTILITY;
1338786   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
1338787   +          proc delete data=&em_data_eminfo;
1338788   +          run;
1338789   +      %end;
1338790   +      %goto doendtr;
1338791   +   %end;
1338792   +
1338793   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1338794   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
1338795   +       %goto doendtr;
1338796   +   %end;
1338797   +
1338798   +   %let xgroupid = ;
1338799   +   data _null_;
1338800   +      set &em_import_data_eminfo;
1338801   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1338802   +      call symput('XGROUPID',  strip(data));
1338803   +      call symput('LOOPTYPE', strip(key));
1338804   +   run;
1338805   +
1338806   +   %if "&looptype" eq "BOOSTINFO" %then %do;
1338807   +       %let nDataObs=0;
1338808   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
1338809   +
1338810   +       %let nStartObs=0;
1338811   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
1338812   +
1338813   +       %if &nDataObs ne &nStartObs %then %do;
1338814   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
1338815   +           %goto doendtr;
1338816   +       %end;
1338817   +
1338818   +       %trainboost(groupid=&xgroupid);
1338819   +   %end;
1338820   +   %else
1338821   +   %if "&looptype" eq "BAGINFO" %then %do;
1338822   +       %trainbag(groupid=&xgroupid);
1338823   +   %end;
1338824   +   %else
1338825   +   %if "&looptype" eq "GROUPINFO" %then %do;
1338826   +       %traingroup(groupid=&xgroupid);
1338827   +   %end;
1338828   +   %else
1338829   +   %if "&looptype" eq "TARGETINFO" %then %do;
1338830   +       %traintarget(groupid=&xgroupid);
1338831   +   %end;
1338832   +
1338833   +   data &em_data_eminfo;
1338834   +      length TARGET KEY $32  DATA $43;
1338835   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
1338836   +   run;
1338837   +
1338838   +   %let EM_TOOLTYPE=MODEL;
1338839   +
1338840   +   %doendtr:
1338841   +
1338842   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp8_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP8_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMRANK.
NOTE: The data set EMWS1.ENDGRP7_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp7_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp7";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338843    *------------------------------------------------------------*;
1338844    * End TRAIN: EndGrp7;
1338845    *------------------------------------------------------------*;
1338846
 
1338847    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1338848    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
1338849    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338850    ;
MPRINT(EM_DIAGRAM):   ;
1338851    ;
MPRINT(EM_DIAGRAM):   ;
1338852    ;
MPRINT(EM_DIAGRAM):   ;
1338853    ;
MPRINT(EM_DIAGRAM):   ;
1338854    quit;
MPRINT(EM_DIAGRAM):   quit;
1338855    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338856    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
1338857    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338858    /*; *"; *'; */
1338859    ;
MPRINT(EM_DIAGRAM):   ;
1338860    run;
MPRINT(EM_DIAGRAM):   run;
1338861    quit;
MPRINT(EM_DIAGRAM):   quit;
1338862    /* Reset EM Options */
1338863    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
1338864    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
1338865    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:40:03 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:40:03 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0_ZBFKB "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0_ZBFKB new;
MPRINT(EM_DIAGRAM):   run;
1338967    %let EMEXCEPTIONSTRING=;
1338968    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1338969    * SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp7;
1338970    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1338971    %let EM_ACTION = SCORE;
1338972    %let syscc = 0;
1338973    %macro main;
1338974       %if %upcase(&EM_ACTION) = TRAIN %then %do;
1338975
1338976           filename temp catalog 'sashelp.emutil.endgp_train.source';
1338977           %include temp;
1338978           filename temp;
1338979
1338980           %train;
1338981
1338982       %end;
1338983       %else
1338984          %if %upcase(&EM_ACTION) = SCORE %then %do;
1338985
1338986           filename temp catalog 'sashelp.emutil.endgp_score.source';
1338987           %include temp;
1338988           filename temp;
1338989
1338990           %score;
1338991       %end;
1338992       %else
1338993       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
1338994
1338995           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
1338996           %include temp;
1338997           filename temp;
1338998
1338999           %postloop;
1339000
1339001       %end;
1339002
1339003       %doendm:
1339004    %mend main;
1339005
1339006    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
1339007   +%macro scoreTables(data=, out=, scoreref=, prescore=);
1339009   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
1339010   +       data &out / view=&out;
1339011   +          set &data
1339013   +          %if "&prescore" = "Y" %then %do;
1339014   +              (obs=1)
1339015   +          %end;
1339017   +          ;
1339019   +          %inc &scoreref;
1339021   +          %if "&prescore" eq "Y" %then %do;
1339022   +              drop I_: R_:;
1339023   +          %end;
1339025   +       run;
1339026   +   %end;
1339028   +%mend scoretables;
1339030   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
1339031   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
1339032   +   data _null_;
1339033   +      retain index 0;
1339034   +      set &infoDs;
1339035   +      call symput('targetname', strip(_target_));
1339036   +      call symput('endloopnum', strip(_loop_));
1339037   +   run;
1339039   +   %let endgrp_decmeta=;
1339040   +   %let endgrp_decdata=;
1339042   +   data _null_;
1339043   +      set &em_import_data_eminfo;
1339044   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
1339045   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
1339046   +      else
1339047   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
1339048   +      else call symput('MODELID', strip(data));
1339049   +   run;
1339051   +   %let headerString= Boosting;
1339052   +   %let prefixString= _BoostVar;
1339054   +   %if "&type" = "BAGINFO" %then %do;
1339055   +        %let headerString = Bagging;
1339056   +        %let prefixString= _BagVar;
1339057   +   %end;
1339059   +   %let targetType=;
1339060   +   %let predictedVars=;
1339061   +   data _null_;
1339062   +      retain index;
1339063   +      set &endgrp_decmeta end=eof;
1339064   +      length tempvar $200;
1339065   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
1339066   +      else
1339067   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
1339068   +      else
1339069   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
1339070   +      else
1339071   +      if _TYPE_ = 'PREDICTED' then do;
1339072   +         index+1;
1339073   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
1339074   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
1339075   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
1339076   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
1339077   +      end;
1339078   +      if eof then
1339079   +         call symput('prednum', strip(put(index, best.)));
1339080   +   run;
1339082   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
1339083   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
1339085   +   filename loopflow "&em_user_loopflowcode";
1339086   +   filename looppub "&em_user_looppubcode";
1339088   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
1339089   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
1339091   +   %if "&emloopnumber" = "1" %then %do;
1339092   +       data _null_;
1339093   +          rc = fdelete('loopflow');
1339094   +          rc = fdelete('looppub');
1339095   +       run;
1339096   +       data _null_;
1339097   +          file loopflow;
1339098   +          put "&em_codebar;";
1339099   +          put "* &em_nodeid: ;" ;
1339100   +          put "* User: &sysuserid;";
1339101   +          put "* Date: &sysdate: &systime;";
1339102   +          put "&em_codebar ;";
1339103   +          put "* Ensemble Code;";
1339104   +          put "&em_codebar ;";
1339105   +          put "* &headerString: Loop=1;";
1339106   +          put "* Temporary Variables;";
1339107   +          %do i= 1 %to &prednum;
1339108   +              put "drop &&tempvars&i;";
1339109   +              put "&&tempvars&i = 0;";
1339110   +          %end;
1339111   +       run;
1339112   +       %em_copyfile(infref=loopflow, outfref=looppub);
1339113   +   %end;
1339115   +   %let j=&emloopnumber;
1339116   +   %do i = 1 %to &loopcodenum;
1339117   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
1339118   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
1339120   +       %if (&&loopnode&i eq &em_nodeid ) or
1339121   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
1339122   +           data _null_;
1339123   +              file loopflow mod;
1339124   +              put "&em_codebar;";
1339125   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1339126   +              put "* User: &sysuserid;";
1339127   +              put "* Date: &sysdate: &systime;";
1339128   +              put "* &headerString: Loop=&j;";
1339129   +              put "&em_codebar;";
1339130   +           run;
1339131   +           data _null_;
1339132   +              file looppub mod;
1339133   +              put "&em_codebar;";
1339134   +              put "* &&loopnode&i: &&loopdesc&i;" ;
1339135   +              put "* User: &sysuserid;";
1339136   +              put "* Date: &sysdate: &systime;";
1339137   +              put "* &headerString: Loop=&j;";
1339138   +              put "&em_codebar;";
1339139   +           run;
1339140   +       %end;
1339142   +       %if &&loopnode&i ne &em_nodeid %then %do;
1339143   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
1339144   +               filename x catalog "&fsourceEntry";
1339145   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
1339146   +               filename x;
1339148   +               filename y catalog "&psourceEntry";
1339149   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
1339150   +               filename y;
1339151   +           %end;
1339152   +       %end;
1339153   +       %else %do;
1339154   +           %if "&j" ne "1" %then %do;
1339155   +               %let weight = %eval(&j-1);
1339156   +               data _null_;
1339157   +                  file loopflow mod;
1339158   +                  put "&em_codebar;";
1339159   +                  %if "&j" ne "&endloopnum" %then %do;
1339160   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1339161   +                  %end;
1339162   +                  %else %do;
1339163   +                      put "* &headerString: accumulate final probabilities;";
1339164   +                  %end;
1339165   +                  put "&em_codebar;";
1339166   +                  %do k=1 %to &prednum;
1339167   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1339168   +                  %end;
1339169   +               run;
1339170   +               data _null_;
1339171   +                  file looppub mod;
1339172   +                  put "&em_codebar;";
1339173   +                  %if "&j" ne "&endloopnum" %then %do;
1339174   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
1339175   +                  %end;
1339176   +                  %else %do;
1339177   +                      put "* &headerString: accumulate final probabilities;";
1339178   +                  %end;
1339179   +                  %do k=1 %to &prednum;
1339180   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
1339181   +                  %end;
1339182   +               run;
1339183   +           %end;
1339184   +           %if "&j" ne "&endloopnum" %then %do;
1339185   +               data _null_;
1339186   +                  file loopflow mod;
1339187   +                  put "&em_codebar;";
1339188   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1339189   +                  put "&em_codebar;";
1339190   +               %do k=1 %to &prednum;
1339191   +                  put "&&tempvars&k = &&predvars&k;";
1339192   +               %end;
1339193   +               run;
1339194   +               data _null_;
1339195   +                  file looppub mod;
1339196   +                  put "&em_codebar;";
1339197   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
1339198   +                  put "&em_codebar;";
1339199   +               %do k=1 %to &prednum;
1339200   +                   put "&&tempvars&k = &&predvars&k;";
1339201   +               %end;
1339202   +               run;
1339203   +           %end;
1339205   +       %end;
1339206   +   %end;
1339208   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
1339209   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
1339211   +   filename loopflow;
1339212   +   filename looppub;
1339213   +   filename empub;
1339215   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
1339216   +   %let gpTrain=;
1339217   +   %let gpValidate=;
1339218   +   %let gpTest=;
1339220   +   data _null_;
1339221   +      set &groupImportDs;
1339222   +      select(upcase(port));
1339223   +          when('DATA')     call symput('gpTrain',    strip(dataset));
1339224   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
1339225   +          when('TEST')     call symput('gpTest',     strip(dataset));
1339226   +       otherwise;
1339227   +      end;
1339228   +   run;
1339230   +   %if "&gpTrain" ne "" %then %do;
1339232   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
1339234   +       %if &targetType ne INTERVAL %then %do;
1339235   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
1339236   +       %end;
1339238   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
1339240   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
1339242   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
1339243   +                                                           noresfile=, resfile=%nrbquote(&decflow));
1339245   +       filename _decflow "&decflow";
1339246   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
1339247   +       filename _decflow;
1339249   +   %end;
1339251   +   %if "&gpTrain" ne "" %then
1339252   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
1339253   +   %if "&gpValidate" ne "" %then
1339254   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
1339255   +   %if "&gpTest" ne "" %then
1339256   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
1339258   +   filename emflow;
1339260   +%mend boostbagcode;
1339262   +%macro score;
1339264   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
1339265   +   %inc _dec;
1339266   +   filename _dec;
1339268   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
1339270   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
1339271   +       %let emexceptionstring = nomodeltarget;
1339272   +       %goto doendpl;
1339273   +   %end;
1339275   +   %LET GROUPID=;
1339276   +   %let LOOPTYPE=;
1339277   +   data _null_;
1339278   +      set &em_import_data_eminfo;
1339279   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
1339280   +      call symput('GROUPID',   strip(data));
1339281   +      call symput('LOOPTYPE', strip(key));
1339282   +   run;
1339284   +   %em_getname(key=PATH, type=DATA);
1339286   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
1339287   +   %include temp;
1339288   +   filename temp;
1339290   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
1339292   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
1339293   +       %let deleteString = &em_nodeid._path;
1339294   +       proc datasets lib=&em_lib nolist;
1339295   +          delete &deleteString;
1339296   +       run;
1339297   +       quit;
1339298   +   %end;
1339300   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
1339302   +   data score_path;
1339303   +      retain LOOPID &emloopnumber;
1339304   +      set score_path;
1339305   +   run;
1339307   +   proc append base=&em_user_path  data=score_path;
1339308   +   run;
1339310   +   %let EnsembleIndex=0;
1339311   +   data _null_;
1339312   +      retain index 0 ensembleIndex 0;
1339313   +      set score_Path end=eof;
1339314   +      if nodelabel = "&groupid" or index then do;
1339315   +         index + 1;
1339316   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
1339317   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
1339318   +      end;
1339319   +      if component='Ensemble' then ensembleIndex = index;
1339320   +      if eof then do;
1339321   +         call symput('loopcodenum', strip(put(index, best.)));
1339322   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
1339323   +      end;
1339324   +   run;
1339326   +   proc datasets lib=work nolist;
1339327   +      delete score_Path;
1339328   +   run;
1339329   +   quit;
1339331   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
1339332   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
1339334   +   %doendpl:
1339336   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
1339337   +/*
1339338   +       MACRO: EM_DECIDECODE
1339339   +
1339340   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
1339341   +       SUPPORT: Taiyeong Lee
1339342   +
1339343   +       HISTORY: 01OCT04 Initial code
1339344   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
1339345   +                to add the corresponding decision code
1339346   +
1339347   +*/
1339348   +
1339349   +
1339350   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
1339351   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
1339352   +
1339353   +    %do;
1339354   +    %let m_data      = &data;
1339355   +    %let m_decdata   = &decdata;
1339356   +    %let m_decmeta   = &decmeta;
1339357   +    %let m_noresfile = &noresfile;
1339358   +    %let m_resfile   = &resfile;
1339359   +    dm "afa c=sashelp.emutil.decidecode.scl";
1339360   +  %end;
1339361   +%mend EM_DECIDECODE;
1339362   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg4_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
1339363   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
1339364   +   proc display c=sashelp.emcore.pathscorecode.scl;
1339365   +   run;
1339366   +%mend EM_GETTRAINPATH;
1339367   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
1339368    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
1339369    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
1339370    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
1339371    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
1339372    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1339373    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
1339374    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
1339375    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339376    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339377    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339378    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339379    output;
MPRINT(EM_GETTRAINPATH):   output;
1339380    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
1339381    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
1339382    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
1339383    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
1339384    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1339385    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339386    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339387    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339388    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339389    output;
MPRINT(EM_GETTRAINPATH):   output;
1339390    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
1339391    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
1339392    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
1339393    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
1339394    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1339395    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339396    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339397    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339398    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339399    output;
MPRINT(EM_GETTRAINPATH):   output;
1339400    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
1339401    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
1339402    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1339403    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1339404    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1339405    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339406    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339407    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339408    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339409    output;
MPRINT(EM_GETTRAINPATH):   output;
1339410    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
1339411    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
1339412    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1339413    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1339414    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1339415    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339416    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339417    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339418    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339419    output;
MPRINT(EM_GETTRAINPATH):   output;
1339420    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
1339421    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
1339422    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
1339423    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
1339424    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1339425    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339426    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339427    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339428    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339429    output;
MPRINT(EM_GETTRAINPATH):   output;
1339430    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
1339431    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
1339432    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1339433    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1339434    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1339435    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339436    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339437    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339438    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339439    output;
MPRINT(EM_GETTRAINPATH):   output;
1339440    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
1339441    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
1339442    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
1339443    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
1339444    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1339445    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339446    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339447    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339448    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339449    output;
MPRINT(EM_GETTRAINPATH):   output;
1339450    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
1339451    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
1339452    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
1339453    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
1339454    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
1339455    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339456    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339457    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339458    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339459    output;
MPRINT(EM_GETTRAINPATH):   output;
1339460    nodelabel="Grp8";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp8";
1339461    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
1339462    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1339463    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
1339464    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
1339465    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339466    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339467    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339468    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339469    output;
MPRINT(EM_GETTRAINPATH):   output;
1339470    nodelabel="Reg4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg4";
1339471    parent="Grp8";
MPRINT(EM_GETTRAINPATH):   parent="Grp8";
1339472    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
1339473    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
1339474    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1339475    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339476    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339477    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339478    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339479    output;
MPRINT(EM_GETTRAINPATH):   output;
1339480    nodelabel="EndGrp7";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp7";
1339481    parent="Reg4";
MPRINT(EM_GETTRAINPATH):   parent="Reg4";
1339482    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
1339483    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
1339484    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
1339485    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
1339486    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
1339487    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
1339488    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
1339489    output;
MPRINT(EM_GETTRAINPATH):   output;
1339490    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 4;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp7_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP7_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP7_PATH has 48 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp8" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1339491    *------------------------------------------------------------*;
1339492    * End SCORE: EndGrp7;
1339493    *------------------------------------------------------------*;
1339494
 
1339495    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1339496    * EndGrp7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Scoring DATA data;
1339497    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1339498    data EMWS1.EndGrp7_TRAIN
1339499    / view=EMWS1.EndGrp7_TRAIN
1339500    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_TRAIN / view=EMWS1.EndGrp7_TRAIN ;
1339501    set EMWS1.Reg4_TRAIN
1339502    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_TRAIN ;
1339503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1339504    quit;
 
1339506    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
1339507    * EndGrp7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Computing metadata for TRAIN data;
1339508    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp7_TRAIN out=WORK.M3VGF3YM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VGF3YM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VGF3YM(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VGF3YM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VGF3YM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1OY6IEJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Y_DIWF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OY6IEJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp7";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1339854    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1339855    set EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO;
1339856    where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
1339857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMINFO.
      WHERE (DATA='EndGrp7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1339858    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMINFO;
1339859    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1339860    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1339861    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1339865    run;
1339866    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
1339867    set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
1339868    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1339869    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
1339870    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1339871    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1339872    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1339873    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1339874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1339875    proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1339876    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1339877    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1339878    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
1339879    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1339880    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1339881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1339882    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1339883    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1339884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1339885    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:40:05 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:40:05 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O339VHNX "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O339VHNX new;
MPRINT(EM_DIAGRAM):   run;
1339909    data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT;
1339910    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
1339911    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1339912    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1339913    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1339914    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1339915    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
1339916    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1339917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1339918    %let _EMwarndup = 0;
1339919    %let _EMtargetdup =;
1339920    %let _EMASEtargetdup =;
1339921    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1339922    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
1339923    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1339924    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1339925    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1339926    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1339927    end;
MPRINT(EM_DIAGRAM):   end;
1339928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1339929    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
1339930    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1339932    proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
1339933    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1339935    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1339936    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1339937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1339938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1339939    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1339940    set EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_CMeta_TRAIN;
1339941    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
1339942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1339943    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1339944    set EMWS1.EndGrp7_TRAIN(keep=
1339945    F_DepVar
1339946    I_DepVar
1339947    P_DepVar0
1339948    P_DepVar1
1339949    R_DepVar0
1339950    R_DepVar1
1339951    U_DepVar
1339952    _WARN_
1339953    DepVar
1339954    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1339955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2198 observations read from the data set EMWS1.GRP8_TRAIN.
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2198 observations read from the data set EMWS1.REG4_TRAIN.
NOTE: There were 2198 observations read from the data set EMWS1.ENDGRP7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2198 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
1344142    %let _cn = %sysfunc(getoption(CENTER));
1344143    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1344144    proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
1344145    var STAT LABEL TRAIN
1344146    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
1344147    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1344148    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1344149    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1344150    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 890.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1344151    title10;
MPRINT(EM_DIAGRAM):   title10;
1344152    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1344153    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
1344154    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1344155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1344156    %let _cn = %sysfunc(getoption(CENTER));
1344157    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1344158    proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
1344159    var from into pct_row pct_col count percent
1344160    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1344161    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1344162    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1344163    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1344164    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1344165    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1344166    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1344167    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1344168    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1344169    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1344170    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1344171    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 891.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1344172    title9;
MPRINT(EM_DIAGRAM):   title9;
1344173    title10;
MPRINT(EM_DIAGRAM):   title10;
1344174    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1344175    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1344176    modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1344177    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1344178    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1344179    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMRANK.DATA.
1344180    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
1344181    %let _cn = %sysfunc(getoption(CENTER));
1344182    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1344183    proc print data=EMWS1.EndGrp7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMRANK label noobs;
1344184    var
1344185    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1344186    by
1344187    notsorted DATAROLE
1344188    notsorted TARGET
1344189    notsorted TARGETLABEL
1344190    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1344191    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1344192    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1344193    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 892.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1344194    title10;
MPRINT(EM_DIAGRAM):   title10;
1344195    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1344196    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
1344197    modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1344198    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1344199    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
1344200    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMSCOREDIST.DATA.
1344201    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
1344202    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1344203    set EMWS1.Grp8_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp8_GROUPINFO;
1344204    where _LOOP_=4;
MPRINT(EM_DIAGRAM):   where _LOOP_=4;
1344205    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
1344206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP8_GROUPINFO.
      WHERE _LOOP_=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1344207    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1344208    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1344209    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1344210    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1344211    set EMWS1.EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK;
1344212    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1344213    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1344214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344215    data EMWS1.EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMRANK_LOOP;
1344216    set EMWS1.EndGrp7_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK_LOOP temp;
1344217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS1.ENDGRP7_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMRANK_LOOP has 80 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344218    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1344219    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1344220    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1344221    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1344222    set EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST;
1344223    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1344224    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1344225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344226    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
1344227    set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
1344228    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP has 80 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1344229    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1344230    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1344231    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1344232    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1344233    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
1344234    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1344235    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1344236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344237    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
1344238    set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
1344239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT_LOOP has 4 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344240    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1344241    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1344242    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1344243    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1344244    set EMWS1.EndGrp7_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT;
1344245    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1344246    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1344247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1344248    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
1344249    set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
1344250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP has 80 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1344251    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1344252    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
1344253    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
1344254    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
1344255    set EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION;
1344256    _LOOP_ =4;
MPRINT(EM_DIAGRAM):   _LOOP_ =4;
1344257    _WHERE_ ="^(cv_var =4)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =4)";
1344258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1344259    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
1344260    set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
1344261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP has 16 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
