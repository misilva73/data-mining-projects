*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:04:03 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:57 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                17:03:57 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2G13XPG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2G13XPG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMLOG_10.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:57 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMOUTPUT_10.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:03:57 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
3341467    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
3341468    table ROLE*LEVEL/out=WORK.EndGrp7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp7META;
3341469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.ENDGRP7META has 9 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
3341470    proc print data=WORK.EndGrp7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7META label noobs;
3341471    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
3341472    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
3341473    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3341474    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
3341475    run;
 
NOTE: There were 9 observations read from the data set WORK.ENDGRP7META.
NOTE: The PROCEDURE PRINT printed page 2254.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3341476    title10;
MPRINT(EM_DIAGRAM):   title10;
3341477    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg4_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3341506    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
3341507    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3341508    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3341509       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3341510    set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
3341511    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3341512    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3341513    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3341514    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3341515    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3341516    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3341517    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3341518    end;
MPRINT(EM_DIAGRAM):   end;
3341519    output;
MPRINT(EM_DIAGRAM):   output;
3341520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3341521    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3341522    proc print data=WORK.EndGrp7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7_EVENT noobs label;
3341523    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3341524    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3341525    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3341526    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP7_EVENT.
NOTE: The PROCEDURE PRINT printed page 2255.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3341527    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3341528    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
3341529    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3341530    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
3341531    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3341532    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3341533    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3341534    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2256.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3341535    title10;
MPRINT(EM_DIAGRAM):   title10;
3341536    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp7: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=304;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13669064748201;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1920;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86330935251798;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
3342011    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342012    * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
3342013    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
3342014    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
3342015    %let EMEXCEPTIONSTRING=;
3342016    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342017    * TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp7;
3342018    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342019    %let EM_ACTION = TRAIN;
3342020    %let syscc = 0;
3342021    %macro main;
3342022       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3342023
3342024           filename temp catalog 'sashelp.emutil.endgp_train.source';
3342025           %include temp;
3342026           filename temp;
3342027
3342028           %train;
3342029
3342030       %end;
3342031       %else
3342032          %if %upcase(&EM_ACTION) = SCORE %then %do;
3342033
3342034           filename temp catalog 'sashelp.emutil.endgp_score.source';
3342035           %include temp;
3342036           filename temp;
3342037
3342038           %score;
3342039       %end;
3342040       %else
3342041       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3342042
3342043           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3342044           %include temp;
3342045           filename temp;
3342046
3342047           %postloop;
3342048
3342049       %end;
3342050
3342051       %doendm:
3342052    %mend main;
3342053
3342054    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
3342055   +%macro copyModelDs(model=, key=);
3342056   +   %let modelDs  = &em_lib..&model._&key;
3342057   +   %let reportDs = &em_lib..&em_nodeid._&key;
3342058   +   %if %sysfunc(exist(&modelDs)) %then %do;
3342059   +       data &reportDs;
3342060   +          length ModelId $16;
3342061   +          retain ModelId "&model";
3342062   +          set &modelDs;
3342063   +       run;
3342064   +   %end;
3342065   +%mend copyModelDs;
3342066   +
3342067   +%macro traintarget(groupid=);
3342068   +   %em_getname(key=emoutfit, type=DATA);
3342069   +   %let targetname=;
3342070   +   data _null_;
3342071   +     set &em_lib..&groupid._&looptype;
3342072   +     where _LOOP_ = &EMLOOPNUMBER;
3342073   +     call symput('targetname', strip(_TARGET_));
3342074   +   run;
3342075   +   %let modelId =;
3342076   +   data _null_;
3342077   +      set &em_import_data_eminfo;
3342078   +      where key = 'MODEL' and TARGET = "&targetname";
3342079   +      call symput('modelId',   strip(data));
3342080   +   run;
3342081   +   %if "&modelId" ne "" %then %do;
3342082   +       %copyModelDs(model=&modelid, key=EMRANK);
3342083   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
3342084   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
3342085   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
3342086   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
3342087   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
3342088   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3342089   +   %end;
3342090   +
3342091   +   %doendtgp:
3342092   +%mend;
3342093   +
3342094   +%macro trainboost(groupid=);
3342095   +
3342096   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
3342097   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
3342098   +
3342099   +   data _null_;
3342100   +      retain index 0;
3342101   +      set &boostinfoDs;
3342102   +      call symput('targetname', strip(_target_));
3342103   +   run;
3342104   +
3342105   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
3342106   +       %let decmeta = ;
3342107   +       data _null_;
3342108   +          set &em_import_data_eminfo;
3342109   +          where (key='DECMETA' and TARGET="&targetname");
3342110   +          call symput('DECMETA', strip(data));
3342111   +       run;
3342112   +       %if "&decmeta" eq "" %then %do;
3342113   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3342114   +           %goto doendtb;
3342115   +       %end;
3342116   +
3342117   +       %let predictedVars=;
3342118   +       data _null_;
3342119   +          set &decmeta;
3342120   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3342121   +          else
3342122   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3342123   +          else
3342124   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
3342125   +       run;
3342126   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
3342127   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
3342128   +       %end;
3342129   +   %end;
3342130   +
3342131   +   * ;
3342132   +   * ENDGROUP &NODEID : Boosting scoring ;
3342133   +   * ;
3342134   +   data &em_lib..&groupid._boostscore;
3342135   +      set &em_import_data;
3342136   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
3342137   +      %if "%em_freq" ne "" %then %do ;
3342138   +          keep %em_freq ;
3342139   +      %end ;
3342140   +   run;
3342141   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3342142   +
3342143   +   %doendtb:
3342144   +
3342145   +%mend trainboost;
3342146   +
3342147   +%macro trainbag(groupid=);
3342148   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
3342149   +   data _null_;
3342150   +      retain index 0;
3342151   +      set &baginfoDs;
3342152   +      call symput('targetname', strip(_target_));
3342153   +   run;
3342154   +
3342155   +   %let decmeta = ;
3342156   +   data _null_;
3342157   +       set &em_import_data_eminfo;
3342158   +       where (key='DECMETA' and TARGET="&targetname");
3342159   +       call symput('DECMETA', strip(data));
3342160   +   run;
3342161   +   %if "&decmeta" eq "" %then %do;
3342162   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3342163   +       %goto doendtg;
3342164   +   %end;
3342165   +
3342166   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3342167   +
3342168   +   %doendtg:
3342169   +%mend trainbag;
3342170   +
3342171   +%macro traingroup(groupid=);
3342172   +   %let targetNum = 0;
3342173   +
3342174   +   data _temp1;
3342175   +      set &em_lib..&groupid._eminfo;
3342176   +      where key='MODEL';
3342177   +   run;
3342178   +   data _temp2;
3342179   +      set &em_import_data_eminfo;
3342180   +      where key='MODEL';
3342181   +   run;
3342182   +   proc sort data=_temp1; by TARGET DATA;
3342183   +   proc sort data=_temp2; by TARGET DATA;
3342184   +   data _temp2;
3342185   +      merge _temp1(in=_a) _temp2(in=_b);
3342186   +      by TARGET DATA;
3342187   +      if ^_a and _b then output;
3342188   +   run;
3342189   +   data _null_;
3342190   +      retain index 0;
3342191   +      set _temp2 end=eof;
3342192   +      index +1;
3342193   +      where key ='MODEL';
3342194   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
3342195   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
3342196   +      if eof then
3342197   +         call symput('targetnum', strip(put(index, best.)));
3342198   +   run;
3342199   +   proc datasets lib=work nolist;
3342200   +      delete _temp1 _temp2;
3342201   +   run;
3342202   +   %if "&targetNum" eq "0" %then %goto doendtgp;
3342203   +
3342204   +   %let modelString =;
3342205   +   %do i=1 %to &targetnum;
3342206   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
3342207   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
3342208   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
3342209   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
3342210   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
3342211   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
3342212   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
3342213   +            %let modelString = &modelString &&modelid&i;
3342214   +       %end;
3342215   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
3342216   +   %end;
3342217   +
3342218   +   %doendtgp:
3342219   +
3342220   +%mend traingroup;
3342221   +
3342222   +%macro getSize(data=, nobsvar=);
3342223   +
3342224   +   %if %sysfunc(exist(&data, DATA)) %then %do;
3342225   +       %let dsid = %sysfunc(open(&data));
3342226   +       %if &dsid %then %do;
3342227   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
3342228   +           %let dsid = %sysfunc(close(&dsid));
3342229   +       %end;
3342230   +   %end;
3342231   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
3342232   +        proc sql;
3342233   +           reset noprint;
3342234   +           select count(*) into :&nobsvar from &data;
3342235   +        quit;
3342236   +   %end;
3342237   +
3342238   +%mend getsize;
3342239   +
3342240   +%macro train;
3342241   +
3342242   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
3342243   +      %let EM_TOOLTYPE=UTILITY;
3342244   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
3342245   +          proc delete data=&em_data_eminfo;
3342246   +          run;
3342247   +      %end;
3342248   +      %goto doendtr;
3342249   +   %end;
3342250   +
3342251   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3342252   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
3342253   +       %goto doendtr;
3342254   +   %end;
3342255   +
3342256   +   %let xgroupid = ;
3342257   +   data _null_;
3342258   +      set &em_import_data_eminfo;
3342259   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3342260   +      call symput('XGROUPID',  strip(data));
3342261   +      call symput('LOOPTYPE', strip(key));
3342262   +   run;
3342263   +
3342264   +   %if "&looptype" eq "BOOSTINFO" %then %do;
3342265   +       %let nDataObs=0;
3342266   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
3342267   +
3342268   +       %let nStartObs=0;
3342269   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
3342270   +
3342271   +       %if &nDataObs ne &nStartObs %then %do;
3342272   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
3342273   +           %goto doendtr;
3342274   +       %end;
3342275   +
3342276   +       %trainboost(groupid=&xgroupid);
3342277   +   %end;
3342278   +   %else
3342279   +   %if "&looptype" eq "BAGINFO" %then %do;
3342280   +       %trainbag(groupid=&xgroupid);
3342281   +   %end;
3342282   +   %else
3342283   +   %if "&looptype" eq "GROUPINFO" %then %do;
3342284   +       %traingroup(groupid=&xgroupid);
3342285   +   %end;
3342286   +   %else
3342287   +   %if "&looptype" eq "TARGETINFO" %then %do;
3342288   +       %traintarget(groupid=&xgroupid);
3342289   +   %end;
3342290   +
3342291   +   data &em_data_eminfo;
3342292   +      length TARGET KEY $32  DATA $43;
3342293   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
3342294   +   run;
3342295   +
3342296   +   %let EM_TOOLTYPE=MODEL;
3342297   +
3342298   +   %doendtr:
3342299   +
3342300   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp8_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP8_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMRANK.
NOTE: The data set EMWS1.ENDGRP7_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp7_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp7";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342301    *------------------------------------------------------------*;
3342302    * End TRAIN: EndGrp7;
3342303    *------------------------------------------------------------*;
3342304
 
3342305    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342306    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
3342307    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342308    ;
MPRINT(EM_DIAGRAM):   ;
3342309    ;
MPRINT(EM_DIAGRAM):   ;
3342310    ;
MPRINT(EM_DIAGRAM):   ;
3342311    ;
MPRINT(EM_DIAGRAM):   ;
3342312    quit;
MPRINT(EM_DIAGRAM):   quit;
3342313    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342314    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
3342315    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342316    /*; *"; *'; */
3342317    ;
MPRINT(EM_DIAGRAM):   ;
3342318    run;
MPRINT(EM_DIAGRAM):   run;
3342319    quit;
MPRINT(EM_DIAGRAM):   quit;
3342320    /* Reset EM Options */
3342321    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
3342322    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
3342323    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:00 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                17:04:00 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1BP_BZ8 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1BP_BZ8 new;
MPRINT(EM_DIAGRAM):   run;
3342425    %let EMEXCEPTIONSTRING=;
3342426    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342427    * SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp7;
3342428    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342429    %let EM_ACTION = SCORE;
3342430    %let syscc = 0;
3342431    %macro main;
3342432       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3342433
3342434           filename temp catalog 'sashelp.emutil.endgp_train.source';
3342435           %include temp;
3342436           filename temp;
3342437
3342438           %train;
3342439
3342440       %end;
3342441       %else
3342442          %if %upcase(&EM_ACTION) = SCORE %then %do;
3342443
3342444           filename temp catalog 'sashelp.emutil.endgp_score.source';
3342445           %include temp;
3342446           filename temp;
3342447
3342448           %score;
3342449       %end;
3342450       %else
3342451       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3342452
3342453           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3342454           %include temp;
3342455           filename temp;
3342456
3342457           %postloop;
3342458
3342459       %end;
3342460
3342461       %doendm:
3342462    %mend main;
3342463
3342464    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
3342465   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3342467   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
3342468   +       data &out / view=&out;
3342469   +          set &data
3342471   +          %if "&prescore" = "Y" %then %do;
3342472   +              (obs=1)
3342473   +          %end;
3342475   +          ;
3342477   +          %inc &scoreref;
3342479   +          %if "&prescore" eq "Y" %then %do;
3342480   +              drop I_: R_:;
3342481   +          %end;
3342483   +       run;
3342484   +   %end;
3342486   +%mend scoretables;
3342488   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
3342489   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3342490   +   data _null_;
3342491   +      retain index 0;
3342492   +      set &infoDs;
3342493   +      call symput('targetname', strip(_target_));
3342494   +      call symput('endloopnum', strip(_loop_));
3342495   +   run;
3342497   +   %let endgrp_decmeta=;
3342498   +   %let endgrp_decdata=;
3342500   +   data _null_;
3342501   +      set &em_import_data_eminfo;
3342502   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
3342503   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3342504   +      else
3342505   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
3342506   +      else call symput('MODELID', strip(data));
3342507   +   run;
3342509   +   %let headerString= Boosting;
3342510   +   %let prefixString= _BoostVar;
3342512   +   %if "&type" = "BAGINFO" %then %do;
3342513   +        %let headerString = Bagging;
3342514   +        %let prefixString= _BagVar;
3342515   +   %end;
3342517   +   %let targetType=;
3342518   +   %let predictedVars=;
3342519   +   data _null_;
3342520   +      retain index;
3342521   +      set &endgrp_decmeta end=eof;
3342522   +      length tempvar $200;
3342523   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
3342524   +      else
3342525   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
3342526   +      else
3342527   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
3342528   +      else
3342529   +      if _TYPE_ = 'PREDICTED' then do;
3342530   +         index+1;
3342531   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
3342532   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
3342533   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
3342534   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
3342535   +      end;
3342536   +      if eof then
3342537   +         call symput('prednum', strip(put(index, best.)));
3342538   +   run;
3342540   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3342541   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3342543   +   filename loopflow "&em_user_loopflowcode";
3342544   +   filename looppub "&em_user_looppubcode";
3342546   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3342547   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3342549   +   %if "&emloopnumber" = "1" %then %do;
3342550   +       data _null_;
3342551   +          rc = fdelete('loopflow');
3342552   +          rc = fdelete('looppub');
3342553   +       run;
3342554   +       data _null_;
3342555   +          file loopflow;
3342556   +          put "&em_codebar;";
3342557   +          put "* &em_nodeid: ;" ;
3342558   +          put "* User: &sysuserid;";
3342559   +          put "* Date: &sysdate: &systime;";
3342560   +          put "&em_codebar ;";
3342561   +          put "* Ensemble Code;";
3342562   +          put "&em_codebar ;";
3342563   +          put "* &headerString: Loop=1;";
3342564   +          put "* Temporary Variables;";
3342565   +          %do i= 1 %to &prednum;
3342566   +              put "drop &&tempvars&i;";
3342567   +              put "&&tempvars&i = 0;";
3342568   +          %end;
3342569   +       run;
3342570   +       %em_copyfile(infref=loopflow, outfref=looppub);
3342571   +   %end;
3342573   +   %let j=&emloopnumber;
3342574   +   %do i = 1 %to &loopcodenum;
3342575   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3342576   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3342578   +       %if (&&loopnode&i eq &em_nodeid ) or
3342579   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
3342580   +           data _null_;
3342581   +              file loopflow mod;
3342582   +              put "&em_codebar;";
3342583   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3342584   +              put "* User: &sysuserid;";
3342585   +              put "* Date: &sysdate: &systime;";
3342586   +              put "* &headerString: Loop=&j;";
3342587   +              put "&em_codebar;";
3342588   +           run;
3342589   +           data _null_;
3342590   +              file looppub mod;
3342591   +              put "&em_codebar;";
3342592   +              put "* &&loopnode&i: &&loopdesc&i;" ;
3342593   +              put "* User: &sysuserid;";
3342594   +              put "* Date: &sysdate: &systime;";
3342595   +              put "* &headerString: Loop=&j;";
3342596   +              put "&em_codebar;";
3342597   +           run;
3342598   +       %end;
3342600   +       %if &&loopnode&i ne &em_nodeid %then %do;
3342601   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
3342602   +               filename x catalog "&fsourceEntry";
3342603   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
3342604   +               filename x;
3342606   +               filename y catalog "&psourceEntry";
3342607   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
3342608   +               filename y;
3342609   +           %end;
3342610   +       %end;
3342611   +       %else %do;
3342612   +           %if "&j" ne "1" %then %do;
3342613   +               %let weight = %eval(&j-1);
3342614   +               data _null_;
3342615   +                  file loopflow mod;
3342616   +                  put "&em_codebar;";
3342617   +                  %if "&j" ne "&endloopnum" %then %do;
3342618   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3342619   +                  %end;
3342620   +                  %else %do;
3342621   +                      put "* &headerString: accumulate final probabilities;";
3342622   +                  %end;
3342623   +                  put "&em_codebar;";
3342624   +                  %do k=1 %to &prednum;
3342625   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3342626   +                  %end;
3342627   +               run;
3342628   +               data _null_;
3342629   +                  file looppub mod;
3342630   +                  put "&em_codebar;";
3342631   +                  %if "&j" ne "&endloopnum" %then %do;
3342632   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
3342633   +                  %end;
3342634   +                  %else %do;
3342635   +                      put "* &headerString: accumulate final probabilities;";
3342636   +                  %end;
3342637   +                  %do k=1 %to &prednum;
3342638   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
3342639   +                  %end;
3342640   +               run;
3342641   +           %end;
3342642   +           %if "&j" ne "&endloopnum" %then %do;
3342643   +               data _null_;
3342644   +                  file loopflow mod;
3342645   +                  put "&em_codebar;";
3342646   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3342647   +                  put "&em_codebar;";
3342648   +               %do k=1 %to &prednum;
3342649   +                  put "&&tempvars&k = &&predvars&k;";
3342650   +               %end;
3342651   +               run;
3342652   +               data _null_;
3342653   +                  file looppub mod;
3342654   +                  put "&em_codebar;";
3342655   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
3342656   +                  put "&em_codebar;";
3342657   +               %do k=1 %to &prednum;
3342658   +                   put "&&tempvars&k = &&predvars&k;";
3342659   +               %end;
3342660   +               run;
3342661   +           %end;
3342663   +       %end;
3342664   +   %end;
3342666   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3342667   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3342669   +   filename loopflow;
3342670   +   filename looppub;
3342671   +   filename empub;
3342673   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3342674   +   %let gpTrain=;
3342675   +   %let gpValidate=;
3342676   +   %let gpTest=;
3342678   +   data _null_;
3342679   +      set &groupImportDs;
3342680   +      select(upcase(port));
3342681   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3342682   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3342683   +          when('TEST')     call symput('gpTest',     strip(dataset));
3342684   +       otherwise;
3342685   +      end;
3342686   +   run;
3342688   +   %if "&gpTrain" ne "" %then %do;
3342690   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
3342692   +       %if &targetType ne INTERVAL %then %do;
3342693   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
3342694   +       %end;
3342696   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3342698   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
3342700   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
3342701   +                                                           noresfile=, resfile=%nrbquote(&decflow));
3342703   +       filename _decflow "&decflow";
3342704   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
3342705   +       filename _decflow;
3342707   +   %end;
3342709   +   %if "&gpTrain" ne "" %then
3342710   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
3342711   +   %if "&gpValidate" ne "" %then
3342712   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
3342713   +   %if "&gpTest" ne "" %then
3342714   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
3342716   +   filename emflow;
3342718   +%mend boostbagcode;
3342720   +%macro score;
3342722   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
3342723   +   %inc _dec;
3342724   +   filename _dec;
3342726   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
3342728   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
3342729   +       %let emexceptionstring = nomodeltarget;
3342730   +       %goto doendpl;
3342731   +   %end;
3342733   +   %LET GROUPID=;
3342734   +   %let LOOPTYPE=;
3342735   +   data _null_;
3342736   +      set &em_import_data_eminfo;
3342737   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3342738   +      call symput('GROUPID',   strip(data));
3342739   +      call symput('LOOPTYPE', strip(key));
3342740   +   run;
3342742   +   %em_getname(key=PATH, type=DATA);
3342744   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3342745   +   %include temp;
3342746   +   filename temp;
3342748   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
3342750   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
3342751   +       %let deleteString = &em_nodeid._path;
3342752   +       proc datasets lib=&em_lib nolist;
3342753   +          delete &deleteString;
3342754   +       run;
3342755   +       quit;
3342756   +   %end;
3342758   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
3342760   +   data score_path;
3342761   +      retain LOOPID &emloopnumber;
3342762   +      set score_path;
3342763   +   run;
3342765   +   proc append base=&em_user_path  data=score_path;
3342766   +   run;
3342768   +   %let EnsembleIndex=0;
3342769   +   data _null_;
3342770   +      retain index 0 ensembleIndex 0;
3342771   +      set score_Path end=eof;
3342772   +      if nodelabel = "&groupid" or index then do;
3342773   +         index + 1;
3342774   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
3342775   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
3342776   +      end;
3342777   +      if component='Ensemble' then ensembleIndex = index;
3342778   +      if eof then do;
3342779   +         call symput('loopcodenum', strip(put(index, best.)));
3342780   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3342781   +      end;
3342782   +   run;
3342784   +   proc datasets lib=work nolist;
3342785   +      delete score_Path;
3342786   +   run;
3342787   +   quit;
3342789   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3342790   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
3342792   +   %doendpl:
3342794   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
3342795   +/*
3342796   +       MACRO: EM_DECIDECODE
3342797   +
3342798   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
3342799   +       SUPPORT: Taiyeong Lee
3342800   +
3342801   +       HISTORY: 01OCT04 Initial code
3342802   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
3342803   +                to add the corresponding decision code
3342804   +
3342805   +*/
3342806   +
3342807   +
3342808   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
3342809   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
3342810   +
3342811   +    %do;
3342812   +    %let m_data      = &data;
3342813   +    %let m_decdata   = &decdata;
3342814   +    %let m_decmeta   = &decmeta;
3342815   +    %let m_noresfile = &noresfile;
3342816   +    %let m_resfile   = &resfile;
3342817   +    dm "afa c=sashelp.emutil.decidecode.scl";
3342818   +  %end;
3342819   +%mend EM_DECIDECODE;
3342820   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg4_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3342821   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3342822   +   proc display c=sashelp.emcore.pathscorecode.scl;
3342823   +   run;
3342824   +%mend EM_GETTRAINPATH;
3342825   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
3342826    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
3342827    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
3342828    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
3342829    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
3342830    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3342831    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
3342832    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
3342833    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342834    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342835    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342836    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342837    output;
MPRINT(EM_GETTRAINPATH):   output;
3342838    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
3342839    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
3342840    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
3342841    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
3342842    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3342843    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342844    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342845    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342846    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342847    output;
MPRINT(EM_GETTRAINPATH):   output;
3342848    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
3342849    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
3342850    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
3342851    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
3342852    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3342853    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342854    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342855    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342856    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342857    output;
MPRINT(EM_GETTRAINPATH):   output;
3342858    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
3342859    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
3342860    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3342861    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3342862    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3342863    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342864    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342865    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342866    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342867    output;
MPRINT(EM_GETTRAINPATH):   output;
3342868    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
3342869    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
3342870    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3342871    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3342872    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3342873    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342874    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342875    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342876    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342877    output;
MPRINT(EM_GETTRAINPATH):   output;
3342878    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
3342879    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
3342880    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
3342881    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
3342882    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3342883    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342884    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342885    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342886    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342887    output;
MPRINT(EM_GETTRAINPATH):   output;
3342888    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
3342889    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
3342890    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3342891    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3342892    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3342893    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342894    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342895    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342896    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342897    output;
MPRINT(EM_GETTRAINPATH):   output;
3342898    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
3342899    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
3342900    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
3342901    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
3342902    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3342903    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342904    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342905    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342906    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342907    output;
MPRINT(EM_GETTRAINPATH):   output;
3342908    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
3342909    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
3342910    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
3342911    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
3342912    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
3342913    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342914    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342915    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342916    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342917    output;
MPRINT(EM_GETTRAINPATH):   output;
3342918    nodelabel="Grp8";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp8";
3342919    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
3342920    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3342921    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
3342922    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
3342923    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342924    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342925    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342926    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342927    output;
MPRINT(EM_GETTRAINPATH):   output;
3342928    nodelabel="Reg4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg4";
3342929    parent="Grp8";
MPRINT(EM_GETTRAINPATH):   parent="Grp8";
3342930    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
3342931    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
3342932    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3342933    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342934    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342935    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342936    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342937    output;
MPRINT(EM_GETTRAINPATH):   output;
3342938    nodelabel="EndGrp7";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp7";
3342939    parent="Reg4";
MPRINT(EM_GETTRAINPATH):   parent="Reg4";
3342940    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
3342941    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
3342942    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
3342943    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
3342944    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
3342945    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
3342946    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
3342947    output;
MPRINT(EM_GETTRAINPATH):   output;
3342948    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 10;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp7_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP7_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP7_PATH has 120 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp8" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342949    *------------------------------------------------------------*;
3342950    * End SCORE: EndGrp7;
3342951    *------------------------------------------------------------*;
3342952
 
3342953    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342954    * EndGrp7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Scoring DATA data;
3342955    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3342956    data EMWS1.EndGrp7_TRAIN
3342957    / view=EMWS1.EndGrp7_TRAIN
3342958    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_TRAIN / view=EMWS1.EndGrp7_TRAIN ;
3342959    set EMWS1.Reg4_TRAIN
3342960    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_TRAIN ;
3342961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
3342962    quit;
 
3342964    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
3342965    * EndGrp7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Computing metadata for TRAIN data;
3342966    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp7_TRAIN out=WORK.M2AYVCRT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2AYVCRT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2AYVCRT(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2AYVCRT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2AYVCRT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M28ORLCN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SPC6YD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
The SAS System
 
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   set WORK.M28ORLCN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp7";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3343312    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3343313    set EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO;
3343314    where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
3343315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMINFO.
      WHERE (DATA='EndGrp7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3343316    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMINFO;
3343317    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3343318    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3343319    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3343323    run;
3343324    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
3343325    set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
3343326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3343327    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
3343328    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3343329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3343330    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3343331    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3343332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3343333    proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3343334    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3343335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3343336    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
3343337    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3343338    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3343339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3343340    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3343341    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3343342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3343343    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:04:02 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                17:04:02 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0O31BY2 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0O31BY2 new;
MPRINT(EM_DIAGRAM):   run;
3343367    data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT;
3343368    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3343369    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3343370    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3343371    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3343372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3343373    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
3343374    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3343375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3343376    %let _EMwarndup = 0;
3343377    %let _EMtargetdup =;
3343378    %let _EMASEtargetdup =;
3343379    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3343380    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3343381    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3343382    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3343383    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3343384    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3343385    end;
MPRINT(EM_DIAGRAM):   end;
3343386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3343387    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
3343388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3343389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3343390    proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
3343391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3343392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3343393    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3343394    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3343395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3343396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3343397    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3343398    set EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_CMeta_TRAIN;
3343399    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
3343400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3343401    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3343402    set EMWS1.EndGrp7_TRAIN(keep=
3343403    F_DepVar
3343404    I_DepVar
3343405    P_DepVar0
3343406    P_DepVar1
3343407    R_DepVar0
3343408    R_DepVar1
3343409    U_DepVar
3343410    _WARN_
3343411    DepVar
3343412    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3343413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2224 observations read from the data set EMWS1.GRP8_TRAIN.
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2224 observations read from the data set EMWS1.REG4_TRAIN.
NOTE: There were 2224 observations read from the data set EMWS1.ENDGRP7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2224 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
3347600    %let _cn = %sysfunc(getoption(CENTER));
3347601    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3347602    proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
3347603    var STAT LABEL TRAIN
3347604    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3347605    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
3347606    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3347607    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3347608    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2257.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3347609    title10;
MPRINT(EM_DIAGRAM):   title10;
3347610    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3347611    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
3347612    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3347613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347614    %let _cn = %sysfunc(getoption(CENTER));
3347615    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3347616    proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
3347617    var from into pct_row pct_col count percent
3347618    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3347619    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
3347620    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3347621    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3347622    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3347623    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3347624    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3347625    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3347626    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3347627    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3347628    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3347629    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2258.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3347630    title9;
MPRINT(EM_DIAGRAM):   title9;
3347631    title10;
MPRINT(EM_DIAGRAM):   title10;
3347632    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3347633    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3347634    modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3347635    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3347636    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3347637    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMRANK.DATA.
3347638    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3347639    %let _cn = %sysfunc(getoption(CENTER));
3347640    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3347641    proc print data=EMWS1.EndGrp7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMRANK label noobs;
3347642    var
3347643    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3347644    by
3347645    notsorted DATAROLE
3347646    notsorted TARGET
3347647    notsorted TARGETLABEL
3347648    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
3347649    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3347650    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3347651    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2259.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3347652    title10;
MPRINT(EM_DIAGRAM):   title10;
3347653    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3347654    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3347655    modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3347656    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3347657    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
3347658    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMSCOREDIST.DATA.
3347659    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
3347660    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3347661    set EMWS1.Grp8_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp8_GROUPINFO;
3347662    where _LOOP_=10;
MPRINT(EM_DIAGRAM):   where _LOOP_=10;
3347663    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
3347664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP8_GROUPINFO.
      WHERE _LOOP_=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3347665    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3347666    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3347667    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3347668    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3347669    set EMWS1.EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK;
3347670    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3347671    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3347672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347673    data EMWS1.EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMRANK_LOOP;
3347674    set EMWS1.EndGrp7_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK_LOOP temp;
3347675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP7_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMRANK_LOOP has 200 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3347676    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3347677    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3347678    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3347679    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3347680    set EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST;
3347681    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3347682    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3347683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347684    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
3347685    set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
3347686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP has 200 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
3347687    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3347688    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3347689    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3347690    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3347691    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3347692    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3347693    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3347694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347695    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
3347696    set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
3347697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT_LOOP has 10 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3347698    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3347699    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3347700    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3347701    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3347702    set EMWS1.EndGrp7_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT;
3347703    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3347704    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3347705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347706    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
3347707    set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
3347708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 180 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP has 200 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3347709    data temp;
MPRINT(EM_DIAGRAM):    data temp;
3347710    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3347711    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3347712    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3347713    set EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION;
3347714    _LOOP_ =10;
MPRINT(EM_DIAGRAM):   _LOOP_ =10;
3347715    _WHERE_ ="^(cv_var =10)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =10)";
3347716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3347717    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
3347718    set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
3347719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
