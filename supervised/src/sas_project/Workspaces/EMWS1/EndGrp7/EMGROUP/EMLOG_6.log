*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:47:43 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:38 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:47:38 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O33ZK6J4 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O33ZK6J4 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMLOG_6.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:38 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMGROUP\EMOUTPUT_6.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:38 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2005807    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp7_VariableSet noprint;
2005808    table ROLE*LEVEL/out=WORK.EndGrp7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp7META;
2005809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.ENDGRP7META has 9 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
2005810    proc print data=WORK.EndGrp7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7META label noobs;
2005811    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2005812    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2005813    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2005814    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2005815    run;
 
NOTE: There were 9 observations read from the data set WORK.ENDGRP7META.
NOTE: The PROCEDURE PRINT printed page 1340.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2005816    title10;
MPRINT(EM_DIAGRAM):   title10;
2005817    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg4_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2005846    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2005847    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2005848    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2005849       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2005850    set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
2005851    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2005852    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2005853    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2005854    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2005855    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2005856    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2005857    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2005858    end;
MPRINT(EM_DIAGRAM):   end;
2005859    output;
MPRINT(EM_DIAGRAM):   output;
2005860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2005861    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2005862    proc print data=WORK.EndGrp7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7_EVENT noobs label;
2005863    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2005864    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2005865    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2005866    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP7_EVENT.
NOTE: The PROCEDURE PRINT printed page 1341.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2005867    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2005868    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
2005869    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2005870    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2005871    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2005872    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2005873    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2005874    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1342.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2005875    title10;
MPRINT(EM_DIAGRAM):   title10;
2005876    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp7: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=299;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13634290925672;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1894;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86365709074327;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Reg4_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Reg4_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2006351    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2006352    * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
2006353    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2006354    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2006355    %let EMEXCEPTIONSTRING=;
2006356    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2006357    * TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp7;
2006358    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006359    %let EM_ACTION = TRAIN;
2006360    %let syscc = 0;
2006361    %macro main;
2006362       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2006363
2006364           filename temp catalog 'sashelp.emutil.endgp_train.source';
2006365           %include temp;
2006366           filename temp;
2006367
2006368           %train;
2006369
2006370       %end;
2006371       %else
2006372          %if %upcase(&EM_ACTION) = SCORE %then %do;
2006373
2006374           filename temp catalog 'sashelp.emutil.endgp_score.source';
2006375           %include temp;
2006376           filename temp;
2006377
2006378           %score;
2006379       %end;
2006380       %else
2006381       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2006382
2006383           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2006384           %include temp;
2006385           filename temp;
2006386
2006387           %postloop;
2006388
2006389       %end;
2006390
2006391       %doendm:
2006392    %mend main;
2006393
2006394    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2006395   +%macro copyModelDs(model=, key=);
2006396   +   %let modelDs  = &em_lib..&model._&key;
2006397   +   %let reportDs = &em_lib..&em_nodeid._&key;
2006398   +   %if %sysfunc(exist(&modelDs)) %then %do;
2006399   +       data &reportDs;
2006400   +          length ModelId $16;
2006401   +          retain ModelId "&model";
2006402   +          set &modelDs;
2006403   +       run;
2006404   +   %end;
2006405   +%mend copyModelDs;
2006406   +
2006407   +%macro traintarget(groupid=);
2006408   +   %em_getname(key=emoutfit, type=DATA);
2006409   +   %let targetname=;
2006410   +   data _null_;
2006411   +     set &em_lib..&groupid._&looptype;
2006412   +     where _LOOP_ = &EMLOOPNUMBER;
2006413   +     call symput('targetname', strip(_TARGET_));
2006414   +   run;
2006415   +   %let modelId =;
2006416   +   data _null_;
2006417   +      set &em_import_data_eminfo;
2006418   +      where key = 'MODEL' and TARGET = "&targetname";
2006419   +      call symput('modelId',   strip(data));
2006420   +   run;
2006421   +   %if "&modelId" ne "" %then %do;
2006422   +       %copyModelDs(model=&modelid, key=EMRANK);
2006423   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2006424   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2006425   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2006426   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2006427   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2006428   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2006429   +   %end;
2006430   +
2006431   +   %doendtgp:
2006432   +%mend;
2006433   +
2006434   +%macro trainboost(groupid=);
2006435   +
2006436   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2006437   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2006438   +
2006439   +   data _null_;
2006440   +      retain index 0;
2006441   +      set &boostinfoDs;
2006442   +      call symput('targetname', strip(_target_));
2006443   +   run;
2006444   +
2006445   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2006446   +       %let decmeta = ;
2006447   +       data _null_;
2006448   +          set &em_import_data_eminfo;
2006449   +          where (key='DECMETA' and TARGET="&targetname");
2006450   +          call symput('DECMETA', strip(data));
2006451   +       run;
2006452   +       %if "&decmeta" eq "" %then %do;
2006453   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2006454   +           %goto doendtb;
2006455   +       %end;
2006456   +
2006457   +       %let predictedVars=;
2006458   +       data _null_;
2006459   +          set &decmeta;
2006460   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2006461   +          else
2006462   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2006463   +          else
2006464   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2006465   +       run;
2006466   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2006467   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2006468   +       %end;
2006469   +   %end;
2006470   +
2006471   +   * ;
2006472   +   * ENDGROUP &NODEID : Boosting scoring ;
2006473   +   * ;
2006474   +   data &em_lib..&groupid._boostscore;
2006475   +      set &em_import_data;
2006476   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2006477   +      %if "%em_freq" ne "" %then %do ;
2006478   +          keep %em_freq ;
2006479   +      %end ;
2006480   +   run;
2006481   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2006482   +
2006483   +   %doendtb:
2006484   +
2006485   +%mend trainboost;
2006486   +
2006487   +%macro trainbag(groupid=);
2006488   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2006489   +   data _null_;
2006490   +      retain index 0;
2006491   +      set &baginfoDs;
2006492   +      call symput('targetname', strip(_target_));
2006493   +   run;
2006494   +
2006495   +   %let decmeta = ;
2006496   +   data _null_;
2006497   +       set &em_import_data_eminfo;
2006498   +       where (key='DECMETA' and TARGET="&targetname");
2006499   +       call symput('DECMETA', strip(data));
2006500   +   run;
2006501   +   %if "&decmeta" eq "" %then %do;
2006502   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2006503   +       %goto doendtg;
2006504   +   %end;
2006505   +
2006506   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2006507   +
2006508   +   %doendtg:
2006509   +%mend trainbag;
2006510   +
2006511   +%macro traingroup(groupid=);
2006512   +   %let targetNum = 0;
2006513   +
2006514   +   data _temp1;
2006515   +      set &em_lib..&groupid._eminfo;
2006516   +      where key='MODEL';
2006517   +   run;
2006518   +   data _temp2;
2006519   +      set &em_import_data_eminfo;
2006520   +      where key='MODEL';
2006521   +   run;
2006522   +   proc sort data=_temp1; by TARGET DATA;
2006523   +   proc sort data=_temp2; by TARGET DATA;
2006524   +   data _temp2;
2006525   +      merge _temp1(in=_a) _temp2(in=_b);
2006526   +      by TARGET DATA;
2006527   +      if ^_a and _b then output;
2006528   +   run;
2006529   +   data _null_;
2006530   +      retain index 0;
2006531   +      set _temp2 end=eof;
2006532   +      index +1;
2006533   +      where key ='MODEL';
2006534   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2006535   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2006536   +      if eof then
2006537   +         call symput('targetnum', strip(put(index, best.)));
2006538   +   run;
2006539   +   proc datasets lib=work nolist;
2006540   +      delete _temp1 _temp2;
2006541   +   run;
2006542   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2006543   +
2006544   +   %let modelString =;
2006545   +   %do i=1 %to &targetnum;
2006546   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2006547   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2006548   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2006549   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2006550   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2006551   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2006552   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2006553   +            %let modelString = &modelString &&modelid&i;
2006554   +       %end;
2006555   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2006556   +   %end;
2006557   +
2006558   +   %doendtgp:
2006559   +
2006560   +%mend traingroup;
2006561   +
2006562   +%macro getSize(data=, nobsvar=);
2006563   +
2006564   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2006565   +       %let dsid = %sysfunc(open(&data));
2006566   +       %if &dsid %then %do;
2006567   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2006568   +           %let dsid = %sysfunc(close(&dsid));
2006569   +       %end;
2006570   +   %end;
2006571   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2006572   +        proc sql;
2006573   +           reset noprint;
2006574   +           select count(*) into :&nobsvar from &data;
2006575   +        quit;
2006576   +   %end;
2006577   +
2006578   +%mend getsize;
2006579   +
2006580   +%macro train;
2006581   +
2006582   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2006583   +      %let EM_TOOLTYPE=UTILITY;
2006584   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2006585   +          proc delete data=&em_data_eminfo;
2006586   +          run;
2006587   +      %end;
2006588   +      %goto doendtr;
2006589   +   %end;
2006590   +
2006591   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2006592   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2006593   +       %goto doendtr;
2006594   +   %end;
2006595   +
2006596   +   %let xgroupid = ;
2006597   +   data _null_;
2006598   +      set &em_import_data_eminfo;
2006599   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2006600   +      call symput('XGROUPID',  strip(data));
2006601   +      call symput('LOOPTYPE', strip(key));
2006602   +   run;
2006603   +
2006604   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2006605   +       %let nDataObs=0;
2006606   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2006607   +
2006608   +       %let nStartObs=0;
2006609   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2006610   +
2006611   +       %if &nDataObs ne &nStartObs %then %do;
2006612   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2006613   +           %goto doendtr;
2006614   +       %end;
2006615   +
2006616   +       %trainboost(groupid=&xgroupid);
2006617   +   %end;
2006618   +   %else
2006619   +   %if "&looptype" eq "BAGINFO" %then %do;
2006620   +       %trainbag(groupid=&xgroupid);
2006621   +   %end;
2006622   +   %else
2006623   +   %if "&looptype" eq "GROUPINFO" %then %do;
2006624   +       %traingroup(groupid=&xgroupid);
2006625   +   %end;
2006626   +   %else
2006627   +   %if "&looptype" eq "TARGETINFO" %then %do;
2006628   +       %traintarget(groupid=&xgroupid);
2006629   +   %end;
2006630   +
2006631   +   data &em_data_eminfo;
2006632   +      length TARGET KEY $32  DATA $43;
2006633   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2006634   +   run;
2006635   +
2006636   +   %let EM_TOOLTYPE=MODEL;
2006637   +
2006638   +   %doendtr:
2006639   +
2006640   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp8_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP8_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Reg4_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMRANK.
NOTE: The data set EMWS1.ENDGRP7_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST has 20 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Reg4";
MPRINT(COPYMODELDS):   set EMWS1.Reg4_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp7_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp7";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006641    *------------------------------------------------------------*;
2006642    * End TRAIN: EndGrp7;
2006643    *------------------------------------------------------------*;
2006644
 
2006645    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2006646    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2006647    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006648    ;
MPRINT(EM_DIAGRAM):   ;
2006649    ;
MPRINT(EM_DIAGRAM):   ;
2006650    ;
MPRINT(EM_DIAGRAM):   ;
2006651    ;
MPRINT(EM_DIAGRAM):   ;
2006652    quit;
MPRINT(EM_DIAGRAM):   quit;
2006653    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006654    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2006655    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006656    /*; *"; *'; */
2006657    ;
MPRINT(EM_DIAGRAM):   ;
2006658    run;
MPRINT(EM_DIAGRAM):   run;
2006659    quit;
MPRINT(EM_DIAGRAM):   quit;
2006660    /* Reset EM Options */
2006661    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2006662    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2006663    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:40 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:47:40 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O357IOIM "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O357IOIM new;
MPRINT(EM_DIAGRAM):   run;
2006765    %let EMEXCEPTIONSTRING=;
2006766    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2006767    * SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp7;
2006768    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2006769    %let EM_ACTION = SCORE;
2006770    %let syscc = 0;
2006771    %macro main;
2006772       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2006773
2006774           filename temp catalog 'sashelp.emutil.endgp_train.source';
2006775           %include temp;
2006776           filename temp;
2006777
2006778           %train;
2006779
2006780       %end;
2006781       %else
2006782          %if %upcase(&EM_ACTION) = SCORE %then %do;
2006783
2006784           filename temp catalog 'sashelp.emutil.endgp_score.source';
2006785           %include temp;
2006786           filename temp;
2006787
2006788           %score;
2006789       %end;
2006790       %else
2006791       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2006792
2006793           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2006794           %include temp;
2006795           filename temp;
2006796
2006797           %postloop;
2006798
2006799       %end;
2006800
2006801       %doendm:
2006802    %mend main;
2006803
2006804    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2006805   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2006807   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2006808   +       data &out / view=&out;
2006809   +          set &data
2006811   +          %if "&prescore" = "Y" %then %do;
2006812   +              (obs=1)
2006813   +          %end;
2006815   +          ;
2006817   +          %inc &scoreref;
2006819   +          %if "&prescore" eq "Y" %then %do;
2006820   +              drop I_: R_:;
2006821   +          %end;
2006823   +       run;
2006824   +   %end;
2006826   +%mend scoretables;
2006828   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2006829   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2006830   +   data _null_;
2006831   +      retain index 0;
2006832   +      set &infoDs;
2006833   +      call symput('targetname', strip(_target_));
2006834   +      call symput('endloopnum', strip(_loop_));
2006835   +   run;
2006837   +   %let endgrp_decmeta=;
2006838   +   %let endgrp_decdata=;
2006840   +   data _null_;
2006841   +      set &em_import_data_eminfo;
2006842   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2006843   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2006844   +      else
2006845   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2006846   +      else call symput('MODELID', strip(data));
2006847   +   run;
2006849   +   %let headerString= Boosting;
2006850   +   %let prefixString= _BoostVar;
2006852   +   %if "&type" = "BAGINFO" %then %do;
2006853   +        %let headerString = Bagging;
2006854   +        %let prefixString= _BagVar;
2006855   +   %end;
2006857   +   %let targetType=;
2006858   +   %let predictedVars=;
2006859   +   data _null_;
2006860   +      retain index;
2006861   +      set &endgrp_decmeta end=eof;
2006862   +      length tempvar $200;
2006863   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2006864   +      else
2006865   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2006866   +      else
2006867   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2006868   +      else
2006869   +      if _TYPE_ = 'PREDICTED' then do;
2006870   +         index+1;
2006871   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2006872   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2006873   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2006874   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2006875   +      end;
2006876   +      if eof then
2006877   +         call symput('prednum', strip(put(index, best.)));
2006878   +   run;
2006880   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2006881   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2006883   +   filename loopflow "&em_user_loopflowcode";
2006884   +   filename looppub "&em_user_looppubcode";
2006886   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2006887   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2006889   +   %if "&emloopnumber" = "1" %then %do;
2006890   +       data _null_;
2006891   +          rc = fdelete('loopflow');
2006892   +          rc = fdelete('looppub');
2006893   +       run;
2006894   +       data _null_;
2006895   +          file loopflow;
2006896   +          put "&em_codebar;";
2006897   +          put "* &em_nodeid: ;" ;
2006898   +          put "* User: &sysuserid;";
2006899   +          put "* Date: &sysdate: &systime;";
2006900   +          put "&em_codebar ;";
2006901   +          put "* Ensemble Code;";
2006902   +          put "&em_codebar ;";
2006903   +          put "* &headerString: Loop=1;";
2006904   +          put "* Temporary Variables;";
2006905   +          %do i= 1 %to &prednum;
2006906   +              put "drop &&tempvars&i;";
2006907   +              put "&&tempvars&i = 0;";
2006908   +          %end;
2006909   +       run;
2006910   +       %em_copyfile(infref=loopflow, outfref=looppub);
2006911   +   %end;
2006913   +   %let j=&emloopnumber;
2006914   +   %do i = 1 %to &loopcodenum;
2006915   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2006916   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2006918   +       %if (&&loopnode&i eq &em_nodeid ) or
2006919   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2006920   +           data _null_;
2006921   +              file loopflow mod;
2006922   +              put "&em_codebar;";
2006923   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2006924   +              put "* User: &sysuserid;";
2006925   +              put "* Date: &sysdate: &systime;";
2006926   +              put "* &headerString: Loop=&j;";
2006927   +              put "&em_codebar;";
2006928   +           run;
2006929   +           data _null_;
2006930   +              file looppub mod;
2006931   +              put "&em_codebar;";
2006932   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2006933   +              put "* User: &sysuserid;";
2006934   +              put "* Date: &sysdate: &systime;";
2006935   +              put "* &headerString: Loop=&j;";
2006936   +              put "&em_codebar;";
2006937   +           run;
2006938   +       %end;
2006940   +       %if &&loopnode&i ne &em_nodeid %then %do;
2006941   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2006942   +               filename x catalog "&fsourceEntry";
2006943   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2006944   +               filename x;
2006946   +               filename y catalog "&psourceEntry";
2006947   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2006948   +               filename y;
2006949   +           %end;
2006950   +       %end;
2006951   +       %else %do;
2006952   +           %if "&j" ne "1" %then %do;
2006953   +               %let weight = %eval(&j-1);
2006954   +               data _null_;
2006955   +                  file loopflow mod;
2006956   +                  put "&em_codebar;";
2006957   +                  %if "&j" ne "&endloopnum" %then %do;
2006958   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2006959   +                  %end;
2006960   +                  %else %do;
2006961   +                      put "* &headerString: accumulate final probabilities;";
2006962   +                  %end;
2006963   +                  put "&em_codebar;";
2006964   +                  %do k=1 %to &prednum;
2006965   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2006966   +                  %end;
2006967   +               run;
2006968   +               data _null_;
2006969   +                  file looppub mod;
2006970   +                  put "&em_codebar;";
2006971   +                  %if "&j" ne "&endloopnum" %then %do;
2006972   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2006973   +                  %end;
2006974   +                  %else %do;
2006975   +                      put "* &headerString: accumulate final probabilities;";
2006976   +                  %end;
2006977   +                  %do k=1 %to &prednum;
2006978   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2006979   +                  %end;
2006980   +               run;
2006981   +           %end;
2006982   +           %if "&j" ne "&endloopnum" %then %do;
2006983   +               data _null_;
2006984   +                  file loopflow mod;
2006985   +                  put "&em_codebar;";
2006986   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2006987   +                  put "&em_codebar;";
2006988   +               %do k=1 %to &prednum;
2006989   +                  put "&&tempvars&k = &&predvars&k;";
2006990   +               %end;
2006991   +               run;
2006992   +               data _null_;
2006993   +                  file looppub mod;
2006994   +                  put "&em_codebar;";
2006995   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2006996   +                  put "&em_codebar;";
2006997   +               %do k=1 %to &prednum;
2006998   +                   put "&&tempvars&k = &&predvars&k;";
2006999   +               %end;
2007000   +               run;
2007001   +           %end;
2007003   +       %end;
2007004   +   %end;
2007006   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2007007   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2007009   +   filename loopflow;
2007010   +   filename looppub;
2007011   +   filename empub;
2007013   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2007014   +   %let gpTrain=;
2007015   +   %let gpValidate=;
2007016   +   %let gpTest=;
2007018   +   data _null_;
2007019   +      set &groupImportDs;
2007020   +      select(upcase(port));
2007021   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2007022   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2007023   +          when('TEST')     call symput('gpTest',     strip(dataset));
2007024   +       otherwise;
2007025   +      end;
2007026   +   run;
2007028   +   %if "&gpTrain" ne "" %then %do;
2007030   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2007032   +       %if &targetType ne INTERVAL %then %do;
2007033   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2007034   +       %end;
2007036   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2007038   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2007040   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2007041   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2007043   +       filename _decflow "&decflow";
2007044   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2007045   +       filename _decflow;
2007047   +   %end;
2007049   +   %if "&gpTrain" ne "" %then
2007050   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2007051   +   %if "&gpValidate" ne "" %then
2007052   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2007053   +   %if "&gpTest" ne "" %then
2007054   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2007056   +   filename emflow;
2007058   +%mend boostbagcode;
2007060   +%macro score;
2007062   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2007063   +   %inc _dec;
2007064   +   filename _dec;
2007066   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2007068   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2007069   +       %let emexceptionstring = nomodeltarget;
2007070   +       %goto doendpl;
2007071   +   %end;
2007073   +   %LET GROUPID=;
2007074   +   %let LOOPTYPE=;
2007075   +   data _null_;
2007076   +      set &em_import_data_eminfo;
2007077   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2007078   +      call symput('GROUPID',   strip(data));
2007079   +      call symput('LOOPTYPE', strip(key));
2007080   +   run;
2007082   +   %em_getname(key=PATH, type=DATA);
2007084   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2007085   +   %include temp;
2007086   +   filename temp;
2007088   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2007090   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2007091   +       %let deleteString = &em_nodeid._path;
2007092   +       proc datasets lib=&em_lib nolist;
2007093   +          delete &deleteString;
2007094   +       run;
2007095   +       quit;
2007096   +   %end;
2007098   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2007100   +   data score_path;
2007101   +      retain LOOPID &emloopnumber;
2007102   +      set score_path;
2007103   +   run;
2007105   +   proc append base=&em_user_path  data=score_path;
2007106   +   run;
2007108   +   %let EnsembleIndex=0;
2007109   +   data _null_;
2007110   +      retain index 0 ensembleIndex 0;
2007111   +      set score_Path end=eof;
2007112   +      if nodelabel = "&groupid" or index then do;
2007113   +         index + 1;
2007114   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2007115   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2007116   +      end;
2007117   +      if component='Ensemble' then ensembleIndex = index;
2007118   +      if eof then do;
2007119   +         call symput('loopcodenum', strip(put(index, best.)));
2007120   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2007121   +      end;
2007122   +   run;
2007124   +   proc datasets lib=work nolist;
2007125   +      delete score_Path;
2007126   +   run;
2007127   +   quit;
2007129   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2007130   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2007132   +   %doendpl:
2007134   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2007135   +/*
2007136   +       MACRO: EM_DECIDECODE
2007137   +
2007138   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2007139   +       SUPPORT: Taiyeong Lee
2007140   +
2007141   +       HISTORY: 01OCT04 Initial code
2007142   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2007143   +                to add the corresponding decision code
2007144   +
2007145   +*/
2007146   +
2007147   +
2007148   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2007149   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2007150   +
2007151   +    %do;
2007152   +    %let m_data      = &data;
2007153   +    %let m_decdata   = &decdata;
2007154   +    %let m_decmeta   = &decmeta;
2007155   +    %let m_noresfile = &noresfile;
2007156   +    %let m_resfile   = &resfile;
2007157   +    dm "afa c=sashelp.emutil.decidecode.scl";
2007158   +  %end;
2007159   +%mend EM_DECIDECODE;
2007160   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Reg4_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2007161   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2007162   +   proc display c=sashelp.emcore.pathscorecode.scl;
2007163   +   run;
2007164   +%mend EM_GETTRAINPATH;
2007165   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2007166    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2007167    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2007168    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2007169    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2007170    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2007171    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2007172    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2007173    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007174    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007175    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007176    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007177    output;
MPRINT(EM_GETTRAINPATH):   output;
2007178    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2007179    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2007180    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2007181    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2007182    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2007183    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007184    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007185    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007186    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007187    output;
MPRINT(EM_GETTRAINPATH):   output;
2007188    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2007189    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2007190    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2007191    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2007192    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2007193    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007194    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007195    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007196    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007197    output;
MPRINT(EM_GETTRAINPATH):   output;
2007198    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2007199    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2007200    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2007201    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2007202    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2007203    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007204    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007205    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007206    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007207    output;
MPRINT(EM_GETTRAINPATH):   output;
2007208    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2007209    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2007210    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2007211    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2007212    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2007213    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007214    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007215    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007216    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007217    output;
MPRINT(EM_GETTRAINPATH):   output;
2007218    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2007219    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2007220    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2007221    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2007222    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2007223    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007224    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007225    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007226    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007227    output;
MPRINT(EM_GETTRAINPATH):   output;
2007228    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2007229    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2007230    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2007231    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2007232    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2007233    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007234    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007235    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007236    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007237    output;
MPRINT(EM_GETTRAINPATH):   output;
2007238    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2007239    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2007240    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2007241    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2007242    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2007243    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007244    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007245    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007246    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007247    output;
MPRINT(EM_GETTRAINPATH):   output;
2007248    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2007249    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2007250    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2007251    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2007252    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2007253    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007254    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007255    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007256    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007257    output;
MPRINT(EM_GETTRAINPATH):   output;
2007258    nodelabel="Grp8";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp8";
2007259    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2007260    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2007261    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2007262    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2007263    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007264    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007265    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007266    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007267    output;
MPRINT(EM_GETTRAINPATH):   output;
2007268    nodelabel="Reg4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg4";
2007269    parent="Grp8";
MPRINT(EM_GETTRAINPATH):   parent="Grp8";
2007270    description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
2007271    component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
2007272    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2007273    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007274    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007275    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007276    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007277    output;
MPRINT(EM_GETTRAINPATH):   output;
2007278    nodelabel="EndGrp7";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp7";
2007279    parent="Reg4";
MPRINT(EM_GETTRAINPATH):   parent="Reg4";
2007280    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2007281    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2007282    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2007283    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2007284    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2007285    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2007286    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2007287    output;
MPRINT(EM_GETTRAINPATH):   output;
2007288    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 6;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp7_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP7_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP7_PATH has 72 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp8" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2007289    *------------------------------------------------------------*;
2007290    * End SCORE: EndGrp7;
2007291    *------------------------------------------------------------*;
2007292
 
2007293    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2007294    * EndGrp7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Scoring DATA data;
2007295    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2007296    data EMWS1.EndGrp7_TRAIN
2007297    / view=EMWS1.EndGrp7_TRAIN
2007298    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_TRAIN / view=EMWS1.EndGrp7_TRAIN ;
2007299    set EMWS1.Reg4_TRAIN
2007300    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_TRAIN ;
2007301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.REG4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2007302    quit;
 
2007304    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2007305    * EndGrp7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Computing metadata for TRAIN data;
2007306    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp7_TRAIN out=WORK.M2D8N631 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D8N631;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8N631(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D8N631;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8N631;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M028HXHF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VKR691(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   set WORK.M028HXHF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp7";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2007652    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2007653    set EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO;
2007654    where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2007655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMINFO.
      WHERE (DATA='EndGrp7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2007656    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMINFO;
2007657    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2007658    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2007659    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2007663    run;
2007664    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
2007665    set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
2007666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2007667    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
2007668    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2007669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2007670    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2007671    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2007672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007673    proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2007674    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2007675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2007676    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
2007677    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2007678    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2007679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007680    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2007681    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2007682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2007683    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:47:42 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:47:42 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2CM_BL9 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2CM_BL9 new;
MPRINT(EM_DIAGRAM):   run;
2007707    data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT;
2007708    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
2007709    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2007710    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2007711    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2007712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007713    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
2007714    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2007715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2007716    %let _EMwarndup = 0;
2007717    %let _EMtargetdup =;
2007718    %let _EMASEtargetdup =;
2007719    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2007720    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
2007721    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2007722    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2007723    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2007724    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2007725    end;
MPRINT(EM_DIAGRAM):   end;
2007726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2007727    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
2007728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2007729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.REG4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2007730    proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2007731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2007732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 20 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007733    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2007734    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2007735    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2007736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 20 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007737    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2007738    set EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_CMeta_TRAIN;
2007739    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2007740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2007741    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2007742    set EMWS1.EndGrp7_TRAIN(keep=
2007743    F_DepVar
2007744    I_DepVar
2007745    P_DepVar0
2007746    P_DepVar1
2007747    R_DepVar0
2007748    R_DepVar1
2007749    U_DepVar
2007750    _WARN_
2007751    DepVar
2007752    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2007753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2193 observations read from the data set EMWS1.GRP8_TRAIN.
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2193 observations read from the data set EMWS1.REG4_TRAIN.
NOTE: There were 2193 observations read from the data set EMWS1.ENDGRP7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2193 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2011940    %let _cn = %sysfunc(getoption(CENTER));
2011941    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2011942    proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMREPORTFIT noobs label;
2011943    var STAT LABEL TRAIN
2011944    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2011945    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2011946    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2011947    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2011948    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1343.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2011949    title10;
MPRINT(EM_DIAGRAM):   title10;
2011950    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2011951    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION nothreads;
2011952    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2011953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2011954    %let _cn = %sysfunc(getoption(CENTER));
2011955    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2011956    proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMCLASSIFICATION noobs label;
2011957    var from into pct_row pct_col count percent
2011958    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2011959    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2011960    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2011961    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2011962    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2011963    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2011964    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2011965    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2011966    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2011967    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2011968    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2011969    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1344.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2011970    title9;
MPRINT(EM_DIAGRAM):   title9;
2011971    title10;
MPRINT(EM_DIAGRAM):   title10;
2011972    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2011973    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2011974    modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2011975    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2011976    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2011977    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMRANK.DATA.
2011978    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2011979    %let _cn = %sysfunc(getoption(CENTER));
2011980    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2011981    proc print data=EMWS1.EndGrp7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMRANK label noobs;
2011982    var
2011983    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2011984    by
2011985    notsorted DATAROLE
2011986    notsorted TARGET
2011987    notsorted TARGETLABEL
2011988    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2011989    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2011990    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2011991    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1345.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2011992    title10;
MPRINT(EM_DIAGRAM):   title10;
2011993    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2011994    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2011995    modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2011996    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2011997    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2011998    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMSCOREDIST.DATA.
2011999    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2012000    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2012001    set EMWS1.Grp8_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp8_GROUPINFO;
2012002    where _LOOP_=6;
MPRINT(EM_DIAGRAM):   where _LOOP_=6;
2012003    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2012004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP8_GROUPINFO.
      WHERE _LOOP_=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2012005    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2012006    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2012007    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2012008    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2012009    set EMWS1.EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK;
2012010    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2012011    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2012012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2012013    data EMWS1.EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMRANK_LOOP;
2012014    set EMWS1.EndGrp7_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK_LOOP temp;
2012015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP7_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMRANK_LOOP has 120 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2012016    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2012017    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2012018    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2012019    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2012020    set EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST;
2012021    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2012022    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2012023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 20 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2012024    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
2012025    set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST_LOOP temp;
2012026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP has 120 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2012027    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2012028    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2012029    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2012030    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2012031    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
2012032    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2012033    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2012034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2012035    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
2012036    set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT_LOOP temp;
2012037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT_LOOP has 6 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2012038    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2012039    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2012040    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2012041    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2012042    set EMWS1.EndGrp7_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT;
2012043    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2012044    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2012045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2012046    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
2012047    set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT_LOOP temp;
2012048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP has 120 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2012049    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2012050    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2012051    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2012052    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2012053    set EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION;
2012054    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2012055    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2012056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2012057    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
2012058    set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP temp;
2012059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP has 24 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
