*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                17:09:29 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:16 o'clock"
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Post Grouping Log
Date:                02 June 2018
Time:                17:09:16 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2V91LOA "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2V91LOA new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:16 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:16 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
3735749    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3735750    set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
3735751    where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
MPRINT(EM_DIAGRAM):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO');
3735752    call symput('EMGROUPMODE', strip(key));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPMODE', strip(key));
3735753    call symput('EMGROUPID', strip(data));
MPRINT(EM_DIAGRAM):   call symput('EMGROUPID', strip(data));
3735754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3735755    data WORK.M3KO2R33;
MPRINT(EM_DIAGRAM):    data WORK.M3KO2R33;
3735756    set WORK.M3KO2R33;
MPRINT(EM_DIAGRAM):   set WORK.M3KO2R33;
3735757    where upcase(NAME) in(
3735758    "DEPVAR"
3735759    );
MPRINT(EM_DIAGRAM):   where upcase(NAME) in( "DEPVAR" );
3735760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3KO2R33.
      WHERE UPCASE(NAME)='DEPVAR';
NOTE: The data set WORK.M3KO2R33 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3735761    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN
EMWS1.Reg4_TRAIN EMWS1.Reg4_TRAIN EMWS1 Reg4_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Reg4_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
3735790    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
3735791    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
3735792    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
3735792  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
3735792  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
3735793       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
3735793  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
3735793  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
3735794    set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.REG4_DEPVAR_DM( where=(_TYPE_="TARGET"));
3735795    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
3735796    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
3735797    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
3735798    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
3735799    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
3735800    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
3735801    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
3735802    end;
MPRINT(EM_DIAGRAM):   end;
3735803    output;
MPRINT(EM_DIAGRAM):   output;
3735804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3735805    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3735806    proc print data=WORK.EndGrp7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp7_EVENT noobs label;
3735807    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
3735808    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3735809    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
3735810    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP7_EVENT.
NOTE: The PROCEDURE PRINT printed page 2442.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3735811    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
3735812    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Reg4_DepVar_DM noobs label;
3735813    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
3735814    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
3735815    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
3735815  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
3735815  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
3735816    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3735817    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
3735818    run;
 
NOTE: There were 7 observations read from the data set EMWS1.REG4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2443.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3735819    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp7: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3736281    %let EMEXCEPTIONSTRING=;
3736282    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3736283    * POSTLOOP: EndGrp7;
MPRINT(EM_DIAGRAM):   * POSTLOOP: EndGrp7;
3736284    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3736285    %let EM_ACTION = POSTLOOP;
3736286    %let syscc = 0;
3736287    %macro main;
3736288       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3736289
3736290           filename temp catalog 'sashelp.emutil.endgp_train.source';
3736291           %include temp;
3736292           filename temp;
3736293
3736294           %train;
3736295
3736296       %end;
3736297       %else
3736298          %if %upcase(&EM_ACTION) = SCORE %then %do;
3736299
3736300           filename temp catalog 'sashelp.emutil.endgp_score.source';
3736301           %include temp;
3736302           filename temp;
3736303
3736304           %score;
3736305       %end;
3736306       %else
3736307       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3736308
3736309           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3736310           %include temp;
3736311           filename temp;
3736312
3736313           %postloop;
3736314
3736315       %end;
3736316
3736317       %doendm:
3736318    %mend main;
3736319
3736320    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_postloop.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_POSTLOOP.SOURCE.
3736321   +%macro scoreTables(data=, out=, scoreref=, prescore=);
3736323   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW)))
3736323  !+%then %do;
3736324   +       data &out / view=&out;
3736325   +          set &data
3736328   +          %if "&prescore" = "Y" %then %do;
3736329   +              (obs=1)
3736330   +          %end;
3736332   +          ;
3736334   +       %let fexist = %sysfunc(fexist(&scoreref));
3736335   +       %if &fexist %then %do;
3736336   +          %inc &scoreref;
3736337   +       %end;
3736339   +       %if "&prescore" eq "Y" %then %do;
3736340   +          drop I_: R_:;
3736341   +       %end;
3736343   +       run;
3736344   +   %end;
3736346   +%mend scoretables;
3736348   +%macro postboostbag(groupid=, type=);
3736349   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3736350   +   data _null_;
3736351   +      retain index 0;
3736352   +      set &infoDs;
3736353   +      call symput('targetname', strip(_target_));
3736354   +   run;
3736356   +   data _null_;
3736357   +      set &em_import_data_eminfo;
3736358   +      where key in('MODEL', 'DECMETA') and TARGET="&targetname";
3736359   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
3736360   +      else call symput('MODELID', strip(data));
3736361   +   run;
3736363   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
3736364   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
3736366   +   filename loopflow "&em_user_loopflowcode";
3736367   +   filename looppub "&em_user_looppubcode";
3736369   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3736370   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3736372   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
3736373   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
3736375   +   filename loopflow;
3736376   +   filename looppub;
3736377   +   filename emflow;
3736378   +   filename empub;
3736380   +   %let EMGROUPASSMT = Y;
3736382   +   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y, DECSCORECODE=Y,
3736382  !+FITSTATISTICS=N, CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3736384   +   %em_getname(key=emoutfit, type=DATA);
3736385   +   %em_getname(key=emoutfit_loop, type=DATA);
3736387   +   data &em_user_emoutfit;
3736388   +      set &em_user_emoutfit_loop end=eof;
3736389   +      drop _LOOP_ _WHERE_;
3736390   +      if eof then output;
3736391   +   run;
3736393   +%mend postboostbag;
3736395   +%macro postgroup(groupid=, type=);
3736396   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3736397   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3736399   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3736400   +   %let _XValidation = 0;
3736402   +   data _null_;
3736403   +      retain index 0;
3736404   +      set &infoDs end=eof;
3736405   +      index + 1;
3736406   +      call symput('loopwhere'!!strip(put(index, best.)), tranwrd(strip(_wheredesc_),
3736406  !+ '"', '""'));
3736407   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3736408   +      if eof and substr(_WHERE_, 1, 2)='^(' then
3736409   +         call symput('_XValidation', '1');
3736410   +   run;
3736412   +   %let grouptarget=;
3736413   +   /* Looping Over Groups Only.  Retrieve targets from EMINFO */
3736414   +   %if "&looptarget1" eq "" %then %do;
3736415   +      data _null_;
3736416   +         set &em_import_data_eminfo;
3736417   +         where key in('MODEL');
3736418   +         call symput('grouptarget', strip(symget('grouptarget'))!!'
3736418  !+'!!strip(target));
3736419   +      run;
3736420   +   %end;
3736422   +   %do j=1 %to &emloopnumber;
3736423   +       %let EnsembleIndex=0;
3736424   +       data _null_;
3736425   +          retain index 0 ensembleIndex 0;
3736426   +          set &em_user_path end=eof;
3736427   +          where LOOPID=&j;
3736428   +          if nodelabel = "&groupid" or index then do;
3736429   +             index + 1;
3736430   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3736431   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3736432   +             call symput('loopaccum'!!strip(put(index, best.)),
3736432  !+strip(accumulatedScoreCode));
3736433   +          end;
3736434   +          if component='Ensemble' then ensembleIndex = index;
3736435   +          if eof then do;
3736436   +             call symput('loopcodenum', strip(put(index, best.)));
3736437   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3736438   +          end;
3736439   +       run;
3736441   +       %do i = 1 %to &loopcodenum;
3736442   +           %let fsourceEntry =
3736442  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3736443   +           %let psourceEntry =
3736443  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3736445   +           %if (&&loopnode&i eq &em_nodeid ) or
3736446   +               ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or
3736446  !+&i>&ensembleIndex or &i=&ensembleIndex) ) %then %do;
3736448   +               data _null_;
3736449   +                  file emflow mod;
3736450   +                  put "&em_codebar;";
3736451   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3736452   +                  put "* User: &sysuserid;";
3736453   +                  put "* Date: &sysdate: &systime;";
3736454   +                  %if "&&loopwhere&j" ne "" %then %do;
3736455   +                      put "* Group: &&loopwhere&j;";
3736456   +                  %end;
3736457   +                  %if "&&looptarget&j" ne "" %then %do;
3736458   +                       put "* Target: &&looptarget&j;";
3736459   +                  %end;
3736460   +                  put "&em_codebar ;";
3736461   +               run;
3736462   +               data _null_;
3736463   +                   file empub mod;
3736464   +                   put "&em_codebar ;";
3736465   +                   put "* &&loopnode&i: &&loopdesc&i;" ;
3736466   +                   put "* User: &sysuserid;";
3736467   +                   put "* Date: &sysdate: &systime;";
3736468   +                   %if "&&loopwhere&j" ne "" %then %do;
3736469   +                       put "* Group: &&loopwhere&j;";
3736470   +                   %end;
3736471   +                   %if "&&looptarget&j" ne "" %then %do;
3736472   +                       put "* Target: &&looptarget&j;";
3736473   +                   %end;
3736474   +                   put "&em_codebar;";
3736475   +               run;
3736476   +           %end;
3736478   +           %if ("&&loopnode&i" ne "&em_nodeid" ) %then %do;
3736479   +               %if (&ensembleIndex = 0) or (&i=1 or &i>&ensembleIndex or
3736479  !+&i=&ensembleIndex) %then %do;
3736480   +                   %if "&&loopnode&i" eq "&groupid" and "&_XValidation" eq "1" %then
3736480  !+ %do;
3736481   +                       filename y catalog "&psourceEntry";
3736482   +                       %em_copyfile(infref=y, outfref=emflow, append=Y);
3736483   +                       filename y;
3736484   +                   %end;
3736485   +                   %else %do;
3736486   +                       filename x catalog "&fsourceEntry";
3736487   +                       %em_copyfile(infref=x, outfref=emflow, append=Y);
3736488   +                       filename x;
3736489   +                   %end;
3736491   +                   filename y catalog "&psourceEntry";
3736492   +                   %em_copyfile(infref=y, outfref=empub, append=Y);
3736493   +                   filename y;
3736494   +               %end;
3736495   +           %end;
3736496   +           %else %do;
3736497   +              %if "&&loopwhere&j" ne "" %then %do;
3736498   +                  data _null_;
3736499   +                     file emflow mod;
3736500   +                     put 'end;';
3736501   +                  run;
3736502   +                  data _null_;
3736503   +                     file empub mod;
3736504   +                     put 'end;';
3736505   +                  run;
3736506   +               %end;
3736507   +           %end;
3736508   +       %end;
3736509   +   %end;
3736510   +   filename emflow;
3736511   +   filename empub;
3736513   +   /* Stratify Model Need to Recompute All Assessment Reports */
3736514   +   %if "&grouptarget" eq "" %then %do;
3736515   +       %let assessTarget=;
3736516   +       %do j=1 %to &emloopnumber;
3736517   +           %let targetname = &&looptarget&j;
3736518   +           %if ^%index(&assesstarget, &targetname) and ("&targetname" ne "") %then
3736518  !+%do;
3736519   +               %let assesstarget = &assesstarget &targetname;
3736520   +               %let index = 1;
3736521   +               %do %while( %scan(%sysfunc(strip(&targetname)), &index) ne
3736521  !+%sysfunc(strip(&targetname)));
3736522   +                   %let index = %eval(&index + 1);
3736523   +               %end;
3736524   +               %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &index
3736524  !+,%str( ));
3736526   +               %if "&targetlevel" ne "INTERVAL" %then
3736527   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3736527  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3736528   +               %else
3736529   +                   %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3736529  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3736530   +           %end;
3736531   +       %end;
3736532   +   %end;
3736533   +   %else %do;
3736534   +       %do i=1 %to &em_num_target;
3736535   +           %let targetname = %scan(%em_target, &i, %str( )) ;
3736536   +           %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &i ,%str( ));
3736538   +           %if %sysfunc(indexw(&grouptarget, &targetname)) %then %do;
3736539   +              %if "&targetlevel" ne "INTERVAL" %then
3736540   +                  %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3736540  !+DECSCORECODE=Y, FITSTATISTICS=Y, CLASSIFICATION=Y, PREDICTED=Y);
3736541   +              %else
3736542   +                 %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=Y,
3736542  !+DECSCORECODE=Y, FITSTATISTICS=Y, RESIDUALS=Y, PREDICTED=Y);
3736543   +           %end;
3736544   +           %else %do;
3736545   +               %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N,
3736545  !+DECSCORECODE=N, FITSTATISTICS=N, RESIDUALS=N, PREDICTED=N);
3736546   +           %end;
3736547   +       %end;
3736548   +   %end;
3736549   +   %let EMGROUPASSMT = N;
3736550   +%mend postgroup;
3736552   +%macro posttarget(groupid=, type=);
3736553   +   filename emflow "&EM_FILE_EMFLOWSCORECODE";
3736554   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
3736556   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
3736557   +   data _null_;
3736558   +      retain index 0;
3736559   +      set &infoDs end=eof;
3736560   +      index + 1;
3736561   +      call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
3736562   +   run;
3736564   +   %do j=1 %to &emloopnumber;
3736565   +       %let EnsembleIndex=0;
3736566   +       data _null_;
3736567   +          retain index 0 ensembleIndex 0;
3736568   +          set &em_user_path end=eof;
3736569   +          where LOOPID=&j;
3736570   +          if nodelabel = "&groupid" or index then do;
3736571   +             index + 1;
3736572   +             call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3736573   +             call symput('loopdesc'!!strip(put(index, best.)),  strip(component));
3736574   +             call symput('loopaccum'!!strip(put(index, best.)),
3736574  !+strip(accumulatedScoreCode));
3736575   +          end;
3736576   +          if component='Ensemble' then ensembleIndex = index;
3736577   +          if eof then do;
3736578   +             call symput('loopcodenum', strip(put(index, best.)));
3736579   +             call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
3736580   +          end;
3736581   +       run;
3736583   +       %do i = 1 %to &loopcodenum;
3736584   +           %let fsourceEntry =
3736584  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
3736585   +           %let psourceEntry =
3736585  !+&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
3736587   +           %if (&&loopnode&i ne &em_nodeid ) and
3736588   +               ( (&ensembleIndex = 0) or (&i>=&ensembleIndex) ) %then %do;
3736589   +               data _null_;
3736590   +                  file emflow mod;
3736591   +                  put "&em_codebar;";
3736592   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3736593   +                  put "* User: &sysuserid;";
3736594   +                  put "* Date: &sysdate: &systime;";
3736595   +                  put "* Target: &&looptarget&j;";
3736596   +                  put "&em_codebar ;";
3736597   +               run;
3736598   +               data _null_;
3736599   +                  file empub mod;
3736600   +                  put "&em_codebar ;";
3736601   +                  put "* &&loopnode&i: &&loopdesc&i;" ;
3736602   +                  put "* User: &sysuserid;";
3736603   +                  put "* Date: &sysdate: &systime;";
3736604   +                  put "* Target: &&looptarget&j;";
3736605   +                  put "&em_codebar;";
3736606   +               run;
3736608   +               filename x catalog "&fsourceEntry";
3736609   +               %em_copyfile(infref=x, outfref=emflow, append=Y);
3736610   +               filename x;
3736612   +               filename y catalog "&psourceEntry";
3736613   +               %em_copyfile(infref=y, outfref=empub, append=Y);
3736614   +               filename y;
3736615   +           %end;
3736616   +       %end;
3736617   +   %end;
3736618   +   filename emflow;
3736619   +   filename empub;
3736621   +   %do j=1 %to &emloopnumber;
3736622   +       %let targetname = &&looptarget&j;
3736623   +       %let k = 1;
3736624   +       %do %while( %scan(%sysfunc(strip(&targetname)), &k) ne
3736624  !+%sysfunc(strip(&targetname)));
3736625   +           %let k = %eval(&k + 1);
3736626   +       %end;
3736627   +       %let targetlevel = %scan(%sysfunc(strip(%em_target_level)), &k ,%str( ));
3736628   +       %if "&targetlevel" ne "INTERVAL" %then
3736629   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3736629  !+FITSTATISTICS=N, CLASSIFICATION=N, PREDICTED=Y);
3736630   +       %else
3736631   +           %em_model(DATA=&gptrain, TARGET=&targetname , ASSESS=N, DECSCORECODE=N,
3736631  !+FITSTATISTICS=N, RESIDUALS=N, PREDICTED=Y);
3736632   +       %let EMGROUPASSMT = N;
3736633   +   %end;
3736635   +%mend posttarget;
3736637   +%macro postloop;
3736639   +   %if ^%symexist(em_import_data_eminfo) %then %goto doendpl;
3736641   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo))
3736641  !+%then %do;
3736642   +       %let emexceptionstring = nomodeltarget;
3736643   +       %goto doendpl;
3736644   +   %end;
3736646   +   %let targetName=;
3736647   +   %let endgrp_decmeta=;
3736649   +   data _null_;
3736650   +      set &em_import_data_eminfo;
3736651   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
3736652   +      call symput('GROUPID',   strip(data));
3736653   +      call symput('LOOPTYPE', strip(key));
3736654   +   run;
3736656   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
3736657   +   %include temp;
3736658   +   filename temp;
3736660   +   %em_getname(key=PATH, type=DATA);
3736662   +   %if ^%sysfunc(exist(&em_user_path)) %then %goto doendpl;
3736664   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
3736666   +   %let gptrain=;
3736667   +   %let gpvalidate=;
3736668   +   %let gptest=;
3736670   +   data _null_;
3736671   +      set &groupImportDs;
3736672   +      select(upcase(port));
3736673   +          when('DATA')     call symput('gpTrain',    strip(dataset));
3736674   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
3736675   +          when('TEST')     call symput('gpTest',     strip(dataset));
3736676   +       otherwise;
3736677   +      end;
3736678   +   run;
3736679   +   %let gpTrain =&em_lib..%sysfunc(strip(&gpTrain));
3736681   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
3736681  !+%postboostbag(groupid=&groupid, type=&looptype);
3736682   +   %else
3736683   +   %if ("&looptype" eq "GROUPINFO") %then %postgroup(groupid=&groupid,
3736683  !+type=&looptype);
3736684   +   %else
3736685   +   %if ("&looptype" eq "TARGETINFO") %then %posttarget(groupid=&groupid,
3736685  !+type=&looptype);
3736687   +   %let deleteString = &em_nodeid._path;
3736689   +   proc sort data=&em_user_path nodupkey;
3736690   +      by nodelabel;
3736691   +   run;
3736692   +   %let loopnodenum=0;
3736693   +   data _null_;
3736694   +      retain index 0;
3736695   +      set &em_user_path end=eof;
3736696   +      if nodelabel = "&groupid" or index then do;
3736697   +         index + 1;
3736698   +         call symput('loopnode'!!strip(put(index, best.)),  strip(nodelabel));
3736699   +      end;
3736700   +      if eof then do;
3736701   +         call symput('loopnodenum', strip(put(index, best.)));
3736702   +      end;
3736703   +   run;
3736704   +   proc datasets lib=&em_lib nolist;
3736705   +      delete &deleteString;
3736706   +      delete
3736707   +      %do i = 1 %to &loopnodenum;
3736708   +          %let loopcatalog = %sysfunc(strip(&&loopnode&i))_LOOP;
3736709   +          %if %sysfunc(cexist(&em_lib..%sysfunc(strip(&&loopnode&i))_LOOP)) %then
3736709  !+%do;
3736711   +              &loopcatalog
3736712   +          %end;
3736713   +          %if &i = &loopnodenum %then %do;
3736714   +              / mt=catalog;
3736715   +          %end;
3736716   +      %end;
3736717   +   run;
3736718   +   quit;
3736720   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
3736722   +   %if "&gpTrain" ne "" and (("&looptype" eq "BOOSTINFO") or ("&looptype" eq
3736722  !+"BAGINFO")) %then %do;
3736724   +       %let targetType = ;
3736725   +       data _null_;
3736726   +          set &endgrp_decmeta;
3736727   +          where _TYPE_='TARGET';
3736728   +          call symput('TARGETTYPE', strip(level));
3736729   +       run;
3736731   +       filename empub "&EM_FILE_EMPUBLISHSCORECODE" MOD;
3736733   +       %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow,
3736733  !+prescore=Y);
3736735   +       %if &targetType ne 'INTERVAL' %then %do;
3736736   +           %makeClassificationVars(target=&target, data=&em_export_train,
3736736  !+decmeta=&endgrp_decmeta, publish=Y, fref=empub);
3736737   +       %end;
3736739   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
3736741   +       %em_model(TARGET=&targetname, ASSESS=Y, DECSCORECODE=Y, FITSTATISTICS=Y,
3736741  !+CLASSIFICATION=Y, RESIDUALS=Y, PREDICTED=Y);
3736743   +       filename empub;
3736745   +   %end;
3736747   +   %if "&gpTrain" ne "" %then
3736748   +        %scoreTables(data=&gpTrain,     out=&em_export_train,    scoreref=emflow);
3736749   +   %if "&gpValidate" ne "" %then
3736750   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),
3736750  !+out=&em_export_validate, scoreref=emflow);
3736751   +   %if "&gpTest" ne "" %then
3736752   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),
3736752  !+out=&em_export_test,     scoreref=emflow);
3736754   +   filename emflow;
3736756   +   %doendpl:
3736758   +%mend postloop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Reg4_EMINFO;
MPRINT(POSTLOOP):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO',
'INDEXINFO');
MPRINT(POSTLOOP):   call symput('GROUPID', strip(data));
MPRINT(POSTLOOP):   call symput('LOOPTYPE', strip(key));
MPRINT(POSTLOOP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
3736759   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
3736760   +   proc display c=sashelp.emcore.pathscorecode.scl;
3736761   +   run;
3736762   +%mend EM_GETTRAINPATH;
3736763   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(POSTLOOP):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(POSTLOOP):  ;
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   set EMWS1.Grp8_importset;
MPRINT(POSTLOOP):   select(upcase(port));
MPRINT(POSTLOOP):   when('DATA') call symput('gpTrain', strip(dataset));
MPRINT(POSTLOOP):   when('VALIDATE') call symput('gpValidate', strip(dataset));
MPRINT(POSTLOOP):   when('TEST') call symput('gpTest', strip(dataset));
MPRINT(POSTLOOP):   otherwise;
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.GRP8_IMPORTSET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas";
MPRINT(POSTGROUP):   filename empub "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas";
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0;
MPRINT(POSTGROUP):   set EMWS1.Grp8_GROUPINFO end=eof;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopwhere'!!strip(put(index, best.)),
tranwrd(strip(_wheredesc_), '"', '""'));
MPRINT(POSTGROUP):   call symput('looptarget'!!strip(put(index, best.)), strip(_target_));
MPRINT(POSTGROUP):   if eof and substr(_WHERE_, 1, 2)='^(' then call symput('_XValidation',
'1');
MPRINT(POSTGROUP):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.GRP8_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   set EMWS1.Reg4_EMINFO;
MPRINT(POSTGROUP):   where key in('MODEL');
MPRINT(POSTGROUP):   call symput('grouptarget', strip(symget('grouptarget'))!!'
'!!strip(target));
MPRINT(POSTGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.REG4_EMINFO.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=1;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=217,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=254,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=471,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6370,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =1);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5627,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6588,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5845,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=2;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6594,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=5851,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6811,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6068,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6848,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6105,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=7065,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_2.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=6322,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=12964,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =2);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11478,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13182,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11696,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=3;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13188,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11702,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13405,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=11919,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=13442,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=11956,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=13659,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_3.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=12173,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19558,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =3);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17329,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19776,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17547,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=4;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=19782,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17553,
      Last Modified=02 June 2018 17:09:19 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=19999,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=17770,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=20036,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=17807,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=20253,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_4.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=18024,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26152,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =4);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23180,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26370,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23398,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=5;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26376,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23404,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26593,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23621,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=26630,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=23658,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=26847,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_5.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=23875,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32746,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =5);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29031,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32964,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29249,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=6;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=32970,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29255,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33187,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29472,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=33224,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=29509,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=33441,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_6.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=29726,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39340,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =6);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=34882,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39558,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35100,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=7;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39564,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35106,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=39781,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35323,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=39818,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=35360,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=40035,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_7.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=35577,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=45934,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =7);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40733,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46152,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40951,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=8;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46158,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=40957,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46375,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41174,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46412,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=41211,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=46629,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_8.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=41428,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52528,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =8);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46584,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52746,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46802,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=9;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52752,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=46808,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52969,
      Last Modified=02 June 2018 17:09:20 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47025,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=53006,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=47062,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53223,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_9.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=47279,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59122,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =9);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52435,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59340,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52653,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   retain index 0 ensembleIndex 0;
MPRINT(POSTGROUP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTGROUP):   where LOOPID=10;
MPRINT(POSTGROUP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTGROUP):   index + 1;
MPRINT(POSTGROUP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTGROUP):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(POSTGROUP):   call symput('loopaccum'!!strip(put(index, best.)),
strip(accumulatedScoreCode));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   if component='Ensemble' then ensembleIndex = index;
MPRINT(POSTGROUP):   if eof then do;
MPRINT(POSTGROUP):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(POSTGROUP):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(POSTGROUP):   end;
MPRINT(POSTGROUP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
      WHERE LOOPID=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59346,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Grp8: StartGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52659,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59564,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMFLOW.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Grp8_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=52877,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 2 records were written to the file EMPUB.
      The minimum record length was 10.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=59603,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* Reg4: Regression;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=52916,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename x catalog "EMWS1.Reg4_LOOP.EMFLOWCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file emflow MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("x",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=59821,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 249 records were written to the file EMFLOW.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(POSTGROUP):   filename y catalog "EMWS1.Reg4_LOOP.EMPUBLISHCODE_10.source";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file empub MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("y",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=53134,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 213 records were written to the file EMPUB.
      The minimum record length was 1.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):  ;
MPRINT(POSTGROUP):   filename y;
NOTE: Fileref Y has been deassigned.
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=65726,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMFLOW.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put "*------------------------------------------------------------* ;";
MPRINT(POSTGROUP):   put "* EndGrp7: EndGroup;" ;
MPRINT(POSTGROUP):   put "* User: misil;";
MPRINT(POSTGROUP):   put "* Date: 02JUN18: 16:25;";
MPRINT(POSTGROUP):   put "* Group: ^(cv_var =10);";
MPRINT(POSTGROUP):   put "*------------------------------------------------------------*;";
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58296,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 6 records were written to the file EMPUB.
      The minimum record length was 14.
      The maximum record length was 64.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file emflow mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMFLOW is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=65945,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMFLOW.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   data _null_;
MPRINT(POSTGROUP):   file empub mod;
MPRINT(POSTGROUP):   put 'end;';
MPRINT(POSTGROUP):   run;
 
NOTE: The file EMPUB is:
 
      Filename=C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=58515,
      Last Modified=02 June 2018 17:09:21 o'clock,
      Create Time=02 June 2018 17:09:19 o'clock
 
NOTE: 1 record was written to the file EMPUB.
      The minimum record length was 4.
      The maximum record length was 4.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTGROUP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(POSTGROUP):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   set WORK.EM_USER_MODEL end=eof;
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   if eof then do;
MPRINT(EM_MODEL):   data = "EMWS1.TRANS2_TRAIN";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "Y";
MPRINT(EM_MODEL):   decscorecode = "Y";
MPRINT(EM_MODEL):   fitstatistics = "Y";
MPRINT(EM_MODEL):   classification = "Y";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   output;
MPRINT(EM_MODEL):   end;
MPRINT(EM_MODEL):   run;
 
NOTE: There were 6 observations read from the data set WORK.EM_USER_MODEL.
NOTE: The data set WORK.EM_USER_MODEL has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   proc sort data=EMWS1.EndGrp7_PATH nodupkey;
MPRINT(POSTLOOP):   by nodelabel;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 120 observations read from the data set EMWS1.ENDGRP7_PATH.
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.ENDGRP7_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   data _null_;
MPRINT(POSTLOOP):   retain index 0;
MPRINT(POSTLOOP):   set EMWS1.EndGrp7_PATH end=eof;
MPRINT(POSTLOOP):   if nodelabel = "Grp8" or index then do;
MPRINT(POSTLOOP):   index + 1;
MPRINT(POSTLOOP):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   if eof then do;
MPRINT(POSTLOOP):   call symput('loopnodenum', strip(put(index, best.)));
MPRINT(POSTLOOP):   end;
MPRINT(POSTLOOP):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP7_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(POSTLOOP):   proc datasets lib=EMWS1 nolist;
MPRINT(POSTLOOP):   delete EndGrp7_path;
MPRINT(POSTLOOP):   delete Grp8_LOOP Reg4_LOOP / mt=catalog;
MPRINT(POSTLOOP):   run;
 
NOTE: Deleting EMWS1.ENDGRP7_PATH (memtype=DATA).
NOTE: Deleting EMWS1.GRP8_LOOP (memtype=CATALOG).
NOTE: Deleting EMWS1.REG4_LOOP (memtype=CATALOG).
MPRINT(POSTLOOP):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(POSTLOOP):   filename emflow "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas" MOD;
MPRINT(SCORETABLES):   data EMWS1.EndGrp7_TRAIN / view=EMWS1.EndGrp7_TRAIN;
MPRINT(SCORETABLES):   set EMWS1.Trans2_TRAIN ;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\misil\Desktop\DM
      2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMFLOWSCORE.sas.
3736764   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3736765   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3736766   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3736767   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3736768   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3736769   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3736770   +if (cv_var =1)  then do;
MPRINT(SCORETABLES):   if (cv_var =1) then do;
3736771   +_XVAL_=1;
MPRINT(SCORETABLES):   _XVAL_=1;
3736772   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3736773   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3736774   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3736775   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3736776   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3736777   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3736778   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3736779   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3736780   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3736781   +
3736782   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3736783   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3736784   +
3736785   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3736786   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3736787   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3736788   +array REG4_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_1DRF [2] $12 _temporary_ ('1' '0' );
3736789   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3736790   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3736791   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3736792   +ARRAY REG4_1DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_1DRU[2] _TEMPORARY_ (1 0);
3736793   +
3736794   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3736795   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3736796   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3736797   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3736798   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3736799   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3736800   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3736801   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3736802   +end;
MPRINT(SCORETABLES):   end;
3736803   +else do;
MPRINT(SCORETABLES):   else do;
3736804   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3736805   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3736806   +   end;
MPRINT(SCORETABLES):   end;
3736807   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3736808   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3736809   +   end;
MPRINT(SCORETABLES):   end;
3736810   +   else do;
MPRINT(SCORETABLES):   else do;
3736811   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3736812   +   end;
MPRINT(SCORETABLES):   end;
3736813   +end;
MPRINT(SCORETABLES):   end;
3736814   +
3736815   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3736816   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3736817   +
3736818   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3736819   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3736820   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736821   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736822   +end;
MPRINT(SCORETABLES):   end;
3736823   +
3736824   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3736825   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3736826   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736827   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736828   +end;
MPRINT(SCORETABLES):   end;
3736829   +
3736830   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3736831   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3736832   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736833   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736834   +end;
MPRINT(SCORETABLES):   end;
3736835   +
3736836   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3736837   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3736838   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736839   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736840   +end;
MPRINT(SCORETABLES):   end;
3736841   +
3736842   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3736843   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3736844   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736845   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736846   +end;
MPRINT(SCORETABLES):   end;
3736847   +
3736848   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3736849   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3736850   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736851   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736852   +end;
MPRINT(SCORETABLES):   end;
3736853   +
3736854   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3736855   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3736856   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736857   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736858   +end;
MPRINT(SCORETABLES):   end;
3736859   +
3736860   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3736861   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3736862   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736863   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736864   +end;
MPRINT(SCORETABLES):   end;
3736865   +
3736866   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3736867   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3736868   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3736869   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3736870   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3736871   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3736872   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3736873   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3736874   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3736875   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3736876   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3736877   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3736878   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3736879   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736880   +end;
MPRINT(SCORETABLES):   end;
3736881   +else do;
MPRINT(SCORETABLES):   else do;
3736882   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3736883   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3736884   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3736885   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3736886   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3736887   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3736888   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3736889   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3736890   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3736891   +         end;
MPRINT(SCORETABLES):   end;
3736892   +         else do;
MPRINT(SCORETABLES):   else do;
3736893   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3736894   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3736895   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3736896   +            end;
MPRINT(SCORETABLES):   end;
3736897   +         end;
MPRINT(SCORETABLES):   end;
3736898   +      end;
MPRINT(SCORETABLES):   end;
3736899   +      else do;
MPRINT(SCORETABLES):   else do;
3736900   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3736901   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3736902   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3736903   +         end;
MPRINT(SCORETABLES):   end;
3736904   +      end;
MPRINT(SCORETABLES):   end;
3736905   +   end;
MPRINT(SCORETABLES):   end;
3736906   +   else do;
MPRINT(SCORETABLES):   else do;
3736907   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3736908   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3736909   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3736910   +      end;
MPRINT(SCORETABLES):   end;
3736911   +      else do;
MPRINT(SCORETABLES):   else do;
3736912   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3736913   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3736914   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3736915   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3736916   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3736917   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3736918   +         end;
MPRINT(SCORETABLES):   end;
3736919   +      end;
MPRINT(SCORETABLES):   end;
3736920   +   end;
MPRINT(SCORETABLES):   end;
3736921   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3736922   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3736923   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3736924   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3736925   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3736926   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3736927   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3736928   +   end;
MPRINT(SCORETABLES):   end;
3736929   +end;
MPRINT(SCORETABLES):   end;
3736930   +
3736931   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3736932   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3736933   +   _P0 = 0.1367989056;
MPRINT(SCORETABLES):   _P0 = 0.1367989056;
3736934   +   _P1 = 0.8632010944;
MPRINT(SCORETABLES):   _P1 = 0.8632010944;
3736935   +   goto REG4_1DR1;
MPRINT(SCORETABLES):   goto REG4_1DR1;
3736936   +end;
MPRINT(SCORETABLES):   end;
3736937   +
3736938   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3736939   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3736940   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3736941   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3736942   +
3736943   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3736944   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3736945   +_LP0 = _LP0 + (    1.03808755220941) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.03808755220941) * _TEMP * _1_0;
3736946   +_LP0 = _LP0 + (   -1.19100553375722) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.19100553375722) * _TEMP * _1_1;
3736947   +_LP0 = _LP0 + (    0.79168251073603) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.79168251073603) * _TEMP * _1_2;
3736948   +_LP0 = _LP0 + (   -1.52093047715283) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.52093047715283) * _TEMP * _1_3;
3736949   +
3736950   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3736951   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3736952   +_LP0 = _LP0 + (    14.8804732948495 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.8804732948495 * _TEMP);
3736953   +
3736954   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3736955   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3736956   +_LP0 = _LP0 + (    24.8729273107436 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.8729273107436 * _TEMP);
3736957   +
3736958   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3736959   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3736960   +_LP0 = _LP0 + (    22.4395027229892 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.4395027229892 * _TEMP);
3736961   +
3736962   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3736963   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3736964   +_LP0 = _LP0 + (     11.163293404343 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.163293404343 * _TEMP);
3736965   +
3736966   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3736967   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3736968   +_LP0 = _LP0 + (    2.36729198083681 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.36729198083681 * _TEMP);
3736969   +
3736970   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3736971   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3736972   +_LP0 = _LP0 + (   -12.7184616758133 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.7184616758133 * _TEMP);
3736973   +
3736974   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3736975   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3736976   +_LP0 = _LP0 + (    2.10261562679445 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.10261562679445 * _TEMP);
3736977   +
3736978   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3736979   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3736980   +_LP0 = _LP0 + (     13.783547250057 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.783547250057 * _TEMP);
3736981   +
3736982   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3736983   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3736984   +_TEMP =     -20.653639854419 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.653639854419 + _LP0;
3736985   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3736986   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3736987   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3736988   +end;
MPRINT(SCORETABLES):   end;
3736989   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3736990   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3736991   +
3736992   +REG4_1DR1:
3736993   +
3736994   +*** Residuals;
MPRINT(SCORETABLES):   REG4_1DR1: *** Residuals;
3736995   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3736996   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3736997   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3736998   +end;
MPRINT(SCORETABLES):   end;
3736999   +else do;
MPRINT(SCORETABLES):   else do;
3737000   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3737001   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3737002   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3737003   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3737004   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3737005   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3737006   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3737007   +   end;
MPRINT(SCORETABLES):   end;
3737008   +end;
MPRINT(SCORETABLES):   end;
3737009   +
3737010   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3737011   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3737012   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3737013   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3737014   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3737015   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3737016   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3737017   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3737018   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3737019   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3737020   +end;
MPRINT(SCORETABLES):   end;
3737021   +I_DepVar = REG4_1DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_1DRF[_IY];
3737022   +U_DepVar = REG4_1DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_1DRU[_IY];
3737023   +
3737024   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737025   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3737026   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737027   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737028   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3737029   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737030   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737031   +* Group: ^(cv_var =1);
MPRINT(SCORETABLES):   * Group: ^(cv_var =1);
3737032   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737033   +end;
MPRINT(SCORETABLES):   end;
3737034   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737035   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3737036   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737037   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737038   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3737039   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737040   +if (cv_var =2)  then do;
MPRINT(SCORETABLES):   if (cv_var =2) then do;
3737041   +_XVAL_=2;
MPRINT(SCORETABLES):   _XVAL_=2;
3737042   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737043   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3737044   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737045   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737046   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3737047   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737048   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737049   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3737050   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737051   +
3737052   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3737053   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3737054   +
3737055   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3737056   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3737057   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3737058   +array REG4_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_2DRF [2] $12 _temporary_ ('1' '0' );
3737059   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3737060   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3737061   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3737062   +ARRAY REG4_2DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_2DRU[2] _TEMPORARY_ (1 0);
3737063   +
3737064   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3737065   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3737066   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3737067   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3737068   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3737069   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737070   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3737071   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737072   +end;
MPRINT(SCORETABLES):   end;
3737073   +else do;
MPRINT(SCORETABLES):   else do;
3737074   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3737075   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3737076   +   end;
MPRINT(SCORETABLES):   end;
3737077   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3737078   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3737079   +   end;
MPRINT(SCORETABLES):   end;
3737080   +   else do;
MPRINT(SCORETABLES):   else do;
3737081   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737082   +   end;
MPRINT(SCORETABLES):   end;
3737083   +end;
MPRINT(SCORETABLES):   end;
3737084   +
3737085   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3737086   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3737087   +
3737088   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3737089   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3737090   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737091   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737092   +end;
MPRINT(SCORETABLES):   end;
3737093   +
3737094   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3737095   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3737096   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737097   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737098   +end;
MPRINT(SCORETABLES):   end;
3737099   +
3737100   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3737101   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3737102   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737103   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737104   +end;
MPRINT(SCORETABLES):   end;
3737105   +
3737106   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3737107   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3737108   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737109   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737110   +end;
MPRINT(SCORETABLES):   end;
3737111   +
3737112   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3737113   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3737114   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737115   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737116   +end;
MPRINT(SCORETABLES):   end;
3737117   +
3737118   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3737119   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3737120   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737121   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737122   +end;
MPRINT(SCORETABLES):   end;
3737123   +
3737124   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3737125   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3737126   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737127   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737128   +end;
MPRINT(SCORETABLES):   end;
3737129   +
3737130   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3737131   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3737132   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737133   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737134   +end;
MPRINT(SCORETABLES):   end;
3737135   +
3737136   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3737137   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3737138   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3737139   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3737140   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3737141   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3737142   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3737143   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3737144   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737145   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737146   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737147   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737148   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737149   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737150   +end;
MPRINT(SCORETABLES):   end;
3737151   +else do;
MPRINT(SCORETABLES):   else do;
3737152   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3737153   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3737154   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737155   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3737156   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3737157   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3737158   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3737159   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3737160   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737161   +         end;
MPRINT(SCORETABLES):   end;
3737162   +         else do;
MPRINT(SCORETABLES):   else do;
3737163   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3737164   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3737165   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737166   +            end;
MPRINT(SCORETABLES):   end;
3737167   +         end;
MPRINT(SCORETABLES):   end;
3737168   +      end;
MPRINT(SCORETABLES):   end;
3737169   +      else do;
MPRINT(SCORETABLES):   else do;
3737170   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3737171   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3737172   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737173   +         end;
MPRINT(SCORETABLES):   end;
3737174   +      end;
MPRINT(SCORETABLES):   end;
3737175   +   end;
MPRINT(SCORETABLES):   end;
3737176   +   else do;
MPRINT(SCORETABLES):   else do;
3737177   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3737178   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3737179   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737180   +      end;
MPRINT(SCORETABLES):   end;
3737181   +      else do;
MPRINT(SCORETABLES):   else do;
3737182   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3737183   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3737184   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3737185   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3737186   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3737187   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737188   +         end;
MPRINT(SCORETABLES):   end;
3737189   +      end;
MPRINT(SCORETABLES):   end;
3737190   +   end;
MPRINT(SCORETABLES):   end;
3737191   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3737192   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737193   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737194   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737195   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737196   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3737197   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737198   +   end;
MPRINT(SCORETABLES):   end;
3737199   +end;
MPRINT(SCORETABLES):   end;
3737200   +
3737201   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3737202   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3737203   +   _P0 = 0.1361352216;
MPRINT(SCORETABLES):   _P0 = 0.1361352216;
3737204   +   _P1 = 0.8638647784;
MPRINT(SCORETABLES):   _P1 = 0.8638647784;
3737205   +   goto REG4_2DR1;
MPRINT(SCORETABLES):   goto REG4_2DR1;
3737206   +end;
MPRINT(SCORETABLES):   end;
3737207   +
3737208   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3737209   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3737210   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3737211   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3737212   +
3737213   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3737214   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3737215   +_LP0 = _LP0 + (    0.82226852309163) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.82226852309163) * _TEMP * _1_0;
3737216   +_LP0 = _LP0 + (    -1.2640367243992) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.2640367243992) * _TEMP * _1_1;
3737217   +_LP0 = _LP0 + (    0.89724819263702) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.89724819263702) * _TEMP * _1_2;
3737218   +_LP0 = _LP0 + (   -1.59537556224852) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.59537556224852) * _TEMP * _1_3;
3737219   +
3737220   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3737221   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3737222   +_LP0 = _LP0 + (    14.6155989146511 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.6155989146511 * _TEMP);
3737223   +
3737224   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3737225   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3737226   +_LP0 = _LP0 + (    23.9766417887873 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.9766417887873 * _TEMP);
3737227   +
3737228   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3737229   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3737230   +_LP0 = _LP0 + (    22.5382413105003 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.5382413105003 * _TEMP);
3737231   +
3737232   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3737233   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3737234   +_LP0 = _LP0 + (     11.438557158303 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.438557158303 * _TEMP);
3737235   +
3737236   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3737237   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3737238   +_LP0 = _LP0 + (    2.31831505919813 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.31831505919813 * _TEMP);
3737239   +
3737240   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3737241   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3737242   +_LP0 = _LP0 + (   -12.6301086317698 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.6301086317698 * _TEMP);
3737243   +
3737244   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3737245   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3737246   +_LP0 = _LP0 + (    2.02217947123863 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.02217947123863 * _TEMP);
3737247   +
3737248   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3737249   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3737250   +_LP0 = _LP0 + (    13.9424595622074 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.9424595622074 * _TEMP);
3737251   +
3737252   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3737253   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3737254   +_TEMP =    -20.4233454952081 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.4233454952081 + _LP0;
3737255   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3737256   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3737257   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3737258   +end;
MPRINT(SCORETABLES):   end;
3737259   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3737260   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3737261   +
3737262   +REG4_2DR1:
3737263   +
3737264   +*** Residuals;
MPRINT(SCORETABLES):   REG4_2DR1: *** Residuals;
3737265   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3737266   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3737267   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3737268   +end;
MPRINT(SCORETABLES):   end;
3737269   +else do;
MPRINT(SCORETABLES):   else do;
3737270   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3737271   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3737272   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3737273   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3737274   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3737275   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3737276   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3737277   +   end;
MPRINT(SCORETABLES):   end;
3737278   +end;
MPRINT(SCORETABLES):   end;
3737279   +
3737280   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3737281   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3737282   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3737283   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3737284   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3737285   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3737286   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3737287   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3737288   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3737289   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3737290   +end;
MPRINT(SCORETABLES):   end;
3737291   +I_DepVar = REG4_2DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_2DRF[_IY];
3737292   +U_DepVar = REG4_2DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_2DRU[_IY];
3737293   +
3737294   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737295   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3737296   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737297   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737298   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3737299   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737300   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737301   +* Group: ^(cv_var =2);
MPRINT(SCORETABLES):   * Group: ^(cv_var =2);
3737302   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737303   +end;
MPRINT(SCORETABLES):   end;
3737304   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737305   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3737306   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737307   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737308   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3737309   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737310   +if (cv_var =3)  then do;
MPRINT(SCORETABLES):   if (cv_var =3) then do;
3737311   +_XVAL_=3;
MPRINT(SCORETABLES):   _XVAL_=3;
3737312   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737313   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3737314   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737315   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737316   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3737317   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737318   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737319   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3737320   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737321   +
3737322   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3737323   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3737324   +
3737325   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3737326   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3737327   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3737328   +array REG4_3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_3DRF [2] $12 _temporary_ ('1' '0' );
3737329   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3737330   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3737331   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3737332   +ARRAY REG4_3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_3DRU[2] _TEMPORARY_ (1 0);
3737333   +
3737334   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3737335   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3737336   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3737337   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3737338   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3737339   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737340   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3737341   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737342   +end;
MPRINT(SCORETABLES):   end;
3737343   +else do;
MPRINT(SCORETABLES):   else do;
3737344   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3737345   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3737346   +   end;
MPRINT(SCORETABLES):   end;
3737347   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3737348   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3737349   +   end;
MPRINT(SCORETABLES):   end;
3737350   +   else do;
MPRINT(SCORETABLES):   else do;
3737351   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737352   +   end;
MPRINT(SCORETABLES):   end;
3737353   +end;
MPRINT(SCORETABLES):   end;
3737354   +
3737355   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3737356   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3737357   +
3737358   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3737359   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3737360   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737361   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737362   +end;
MPRINT(SCORETABLES):   end;
3737363   +
3737364   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3737365   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3737366   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737367   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737368   +end;
MPRINT(SCORETABLES):   end;
3737369   +
3737370   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3737371   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3737372   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737373   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737374   +end;
MPRINT(SCORETABLES):   end;
3737375   +
3737376   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3737377   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3737378   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737379   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737380   +end;
MPRINT(SCORETABLES):   end;
3737381   +
3737382   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3737383   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3737384   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737385   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737386   +end;
MPRINT(SCORETABLES):   end;
3737387   +
3737388   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3737389   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3737390   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737391   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737392   +end;
MPRINT(SCORETABLES):   end;
3737393   +
3737394   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3737395   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3737396   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737397   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737398   +end;
MPRINT(SCORETABLES):   end;
3737399   +
3737400   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3737401   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3737402   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737403   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737404   +end;
MPRINT(SCORETABLES):   end;
3737405   +
3737406   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3737407   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3737408   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3737409   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3737410   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3737411   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3737412   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3737413   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3737414   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737415   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737416   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737417   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737418   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737419   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737420   +end;
MPRINT(SCORETABLES):   end;
3737421   +else do;
MPRINT(SCORETABLES):   else do;
3737422   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3737423   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3737424   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737425   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3737426   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3737427   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3737428   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3737429   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3737430   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737431   +         end;
MPRINT(SCORETABLES):   end;
3737432   +         else do;
MPRINT(SCORETABLES):   else do;
3737433   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3737434   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3737435   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737436   +            end;
MPRINT(SCORETABLES):   end;
3737437   +         end;
MPRINT(SCORETABLES):   end;
3737438   +      end;
MPRINT(SCORETABLES):   end;
3737439   +      else do;
MPRINT(SCORETABLES):   else do;
3737440   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3737441   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3737442   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737443   +         end;
MPRINT(SCORETABLES):   end;
3737444   +      end;
MPRINT(SCORETABLES):   end;
3737445   +   end;
MPRINT(SCORETABLES):   end;
3737446   +   else do;
MPRINT(SCORETABLES):   else do;
3737447   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3737448   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3737449   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737450   +      end;
MPRINT(SCORETABLES):   end;
3737451   +      else do;
MPRINT(SCORETABLES):   else do;
3737452   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3737453   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3737454   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3737455   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3737456   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3737457   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737458   +         end;
MPRINT(SCORETABLES):   end;
3737459   +      end;
MPRINT(SCORETABLES):   end;
3737460   +   end;
MPRINT(SCORETABLES):   end;
3737461   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3737462   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737463   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737464   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737465   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737466   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3737467   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737468   +   end;
MPRINT(SCORETABLES):   end;
3737469   +end;
MPRINT(SCORETABLES):   end;
3737470   +
3737471   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3737472   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3737473   +   _P0 = 0.1383908046;
MPRINT(SCORETABLES):   _P0 = 0.1383908046;
3737474   +   _P1 = 0.8616091954;
MPRINT(SCORETABLES):   _P1 = 0.8616091954;
3737475   +   goto REG4_3DR1;
MPRINT(SCORETABLES):   goto REG4_3DR1;
3737476   +end;
MPRINT(SCORETABLES):   end;
3737477   +
3737478   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3737479   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3737480   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3737481   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3737482   +
3737483   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3737484   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3737485   +_LP0 = _LP0 + (    0.93854314372159) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.93854314372159) * _TEMP * _1_0;
3737486   +_LP0 = _LP0 + (   -1.26584343145971) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.26584343145971) * _TEMP * _1_1;
3737487   +_LP0 = _LP0 + (    0.78692486842832) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.78692486842832) * _TEMP * _1_2;
3737488   +_LP0 = _LP0 + (   -1.59983235823846) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.59983235823846) * _TEMP * _1_3;
3737489   +
3737490   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3737491   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3737492   +_LP0 = _LP0 + (     14.958391988902 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.958391988902 * _TEMP);
3737493   +
3737494   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3737495   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3737496   +_LP0 = _LP0 + (    24.0194397539908 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.0194397539908 * _TEMP);
3737497   +
3737498   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3737499   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3737500   +_LP0 = _LP0 + (    21.6811940978555 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 21.6811940978555 * _TEMP);
3737501   +
3737502   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3737503   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3737504   +_LP0 = _LP0 + (    10.8467936482961 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 10.8467936482961 * _TEMP);
3737505   +
3737506   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3737507   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3737508   +_LP0 = _LP0 + (    2.18814112253695 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.18814112253695 * _TEMP);
3737509   +
3737510   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3737511   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3737512   +_LP0 = _LP0 + (   -12.6712141759687 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.6712141759687 * _TEMP);
3737513   +
3737514   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3737515   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3737516   +_LP0 = _LP0 + (     1.8431025837574 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.8431025837574 * _TEMP);
3737517   +
3737518   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3737519   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3737520   +_LP0 = _LP0 + (    14.0426112372932 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.0426112372932 * _TEMP);
3737521   +
3737522   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3737523   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3737524   +_TEMP =    -20.0480624898983 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.0480624898983 + _LP0;
3737525   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3737526   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3737527   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3737528   +end;
MPRINT(SCORETABLES):   end;
3737529   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3737530   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3737531   +
3737532   +REG4_3DR1:
3737533   +
3737534   +*** Residuals;
MPRINT(SCORETABLES):   REG4_3DR1: *** Residuals;
3737535   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3737536   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3737537   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3737538   +end;
MPRINT(SCORETABLES):   end;
3737539   +else do;
MPRINT(SCORETABLES):   else do;
3737540   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3737541   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3737542   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3737543   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3737544   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3737545   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3737546   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3737547   +   end;
MPRINT(SCORETABLES):   end;
3737548   +end;
MPRINT(SCORETABLES):   end;
3737549   +
3737550   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3737551   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3737552   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3737553   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3737554   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3737555   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3737556   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3737557   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3737558   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3737559   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3737560   +end;
MPRINT(SCORETABLES):   end;
3737561   +I_DepVar = REG4_3DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_3DRF[_IY];
3737562   +U_DepVar = REG4_3DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_3DRU[_IY];
3737563   +
3737564   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737565   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3737566   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737567   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737568   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3737569   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737570   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737571   +* Group: ^(cv_var =3);
MPRINT(SCORETABLES):   * Group: ^(cv_var =3);
3737572   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737573   +end;
MPRINT(SCORETABLES):   end;
3737574   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737575   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3737576   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737577   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737578   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3737579   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737580   +if (cv_var =4)  then do;
MPRINT(SCORETABLES):   if (cv_var =4) then do;
3737581   +_XVAL_=4;
MPRINT(SCORETABLES):   _XVAL_=4;
3737582   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737583   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3737584   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737585   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737586   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3737587   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737588   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737589   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3737590   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737591   +
3737592   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3737593   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3737594   +
3737595   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3737596   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3737597   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3737598   +array REG4_4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_4DRF [2] $12 _temporary_ ('1' '0' );
3737599   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3737600   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3737601   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3737602   +ARRAY REG4_4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_4DRU[2] _TEMPORARY_ (1 0);
3737603   +
3737604   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3737605   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3737606   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3737607   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3737608   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3737609   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737610   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3737611   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737612   +end;
MPRINT(SCORETABLES):   end;
3737613   +else do;
MPRINT(SCORETABLES):   else do;
3737614   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3737615   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3737616   +   end;
MPRINT(SCORETABLES):   end;
3737617   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3737618   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3737619   +   end;
MPRINT(SCORETABLES):   end;
3737620   +   else do;
MPRINT(SCORETABLES):   else do;
3737621   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737622   +   end;
MPRINT(SCORETABLES):   end;
3737623   +end;
MPRINT(SCORETABLES):   end;
3737624   +
3737625   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3737626   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3737627   +
3737628   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3737629   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3737630   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737631   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737632   +end;
MPRINT(SCORETABLES):   end;
3737633   +
3737634   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3737635   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3737636   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737637   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737638   +end;
MPRINT(SCORETABLES):   end;
3737639   +
3737640   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3737641   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3737642   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737643   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737644   +end;
MPRINT(SCORETABLES):   end;
3737645   +
3737646   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3737647   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3737648   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737649   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737650   +end;
MPRINT(SCORETABLES):   end;
3737651   +
3737652   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3737653   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3737654   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737655   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737656   +end;
MPRINT(SCORETABLES):   end;
3737657   +
3737658   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3737659   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3737660   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737661   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737662   +end;
MPRINT(SCORETABLES):   end;
3737663   +
3737664   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3737665   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3737666   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737667   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737668   +end;
MPRINT(SCORETABLES):   end;
3737669   +
3737670   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3737671   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3737672   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737673   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737674   +end;
MPRINT(SCORETABLES):   end;
3737675   +
3737676   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3737677   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3737678   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3737679   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3737680   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3737681   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3737682   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3737683   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3737684   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737685   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737686   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737687   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737688   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737689   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737690   +end;
MPRINT(SCORETABLES):   end;
3737691   +else do;
MPRINT(SCORETABLES):   else do;
3737692   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3737693   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3737694   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737695   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3737696   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3737697   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3737698   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3737699   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3737700   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737701   +         end;
MPRINT(SCORETABLES):   end;
3737702   +         else do;
MPRINT(SCORETABLES):   else do;
3737703   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3737704   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3737705   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737706   +            end;
MPRINT(SCORETABLES):   end;
3737707   +         end;
MPRINT(SCORETABLES):   end;
3737708   +      end;
MPRINT(SCORETABLES):   end;
3737709   +      else do;
MPRINT(SCORETABLES):   else do;
3737710   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3737711   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3737712   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737713   +         end;
MPRINT(SCORETABLES):   end;
3737714   +      end;
MPRINT(SCORETABLES):   end;
3737715   +   end;
MPRINT(SCORETABLES):   end;
3737716   +   else do;
MPRINT(SCORETABLES):   else do;
3737717   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3737718   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3737719   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737720   +      end;
MPRINT(SCORETABLES):   end;
3737721   +      else do;
MPRINT(SCORETABLES):   else do;
3737722   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3737723   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3737724   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3737725   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3737726   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3737727   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737728   +         end;
MPRINT(SCORETABLES):   end;
3737729   +      end;
MPRINT(SCORETABLES):   end;
3737730   +   end;
MPRINT(SCORETABLES):   end;
3737731   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3737732   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737733   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737734   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737735   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737736   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3737737   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737738   +   end;
MPRINT(SCORETABLES):   end;
3737739   +end;
MPRINT(SCORETABLES):   end;
3737740   +
3737741   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3737742   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3737743   +   _P0 = 0.1378525933;
MPRINT(SCORETABLES):   _P0 = 0.1378525933;
3737744   +   _P1 = 0.8621474067;
MPRINT(SCORETABLES):   _P1 = 0.8621474067;
3737745   +   goto REG4_4DR1;
MPRINT(SCORETABLES):   goto REG4_4DR1;
3737746   +end;
MPRINT(SCORETABLES):   end;
3737747   +
3737748   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3737749   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3737750   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3737751   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3737752   +
3737753   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3737754   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3737755   +_LP0 = _LP0 + (    0.83059649345174) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.83059649345174) * _TEMP * _1_0;
3737756   +_LP0 = _LP0 + (   -1.11096259417095) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.11096259417095) * _TEMP * _1_1;
3737757   +_LP0 = _LP0 + (    0.75185426374672) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.75185426374672) * _TEMP * _1_2;
3737758   +_LP0 = _LP0 + (    -1.5706453947675) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.5706453947675) * _TEMP * _1_3;
3737759   +
3737760   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3737761   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3737762   +_LP0 = _LP0 + (    15.1290661846033 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.1290661846033 * _TEMP);
3737763   +
3737764   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3737765   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3737766   +_LP0 = _LP0 + (    24.6532930037244 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.6532930037244 * _TEMP);
3737767   +
3737768   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3737769   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3737770   +_LP0 = _LP0 + (    21.9543556871406 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 21.9543556871406 * _TEMP);
3737771   +
3737772   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3737773   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3737774   +_LP0 = _LP0 + (    11.6666048315737 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.6666048315737 * _TEMP);
3737775   +
3737776   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3737777   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3737778   +_LP0 = _LP0 + (    2.53821866590362 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.53821866590362 * _TEMP);
3737779   +
3737780   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3737781   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3737782   +_LP0 = _LP0 + (   -12.8376556792485 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.8376556792485 * _TEMP);
3737783   +
3737784   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3737785   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3737786   +_LP0 = _LP0 + (    1.96186894828488 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.96186894828488 * _TEMP);
3737787   +
3737788   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3737789   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3737790   +_LP0 = _LP0 + (    13.8748298983876 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.8748298983876 * _TEMP);
3737791   +
3737792   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3737793   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3737794   +_TEMP =    -20.7749761927267 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.7749761927267 + _LP0;
3737795   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3737796   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3737797   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3737798   +end;
MPRINT(SCORETABLES):   end;
3737799   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3737800   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3737801   +
3737802   +REG4_4DR1:
3737803   +
3737804   +*** Residuals;
MPRINT(SCORETABLES):   REG4_4DR1: *** Residuals;
3737805   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3737806   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3737807   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3737808   +end;
MPRINT(SCORETABLES):   end;
3737809   +else do;
MPRINT(SCORETABLES):   else do;
3737810   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3737811   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3737812   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3737813   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3737814   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3737815   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3737816   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3737817   +   end;
MPRINT(SCORETABLES):   end;
3737818   +end;
MPRINT(SCORETABLES):   end;
3737819   +
3737820   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3737821   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3737822   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3737823   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3737824   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3737825   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3737826   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3737827   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3737828   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3737829   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3737830   +end;
MPRINT(SCORETABLES):   end;
3737831   +I_DepVar = REG4_4DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_4DRF[_IY];
3737832   +U_DepVar = REG4_4DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_4DRU[_IY];
3737833   +
3737834   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737835   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3737836   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737837   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737838   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3737839   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737840   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737841   +* Group: ^(cv_var =4);
MPRINT(SCORETABLES):   * Group: ^(cv_var =4);
3737842   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737843   +end;
MPRINT(SCORETABLES):   end;
3737844   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737845   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3737846   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737847   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737848   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3737849   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737850   +if (cv_var =5)  then do;
MPRINT(SCORETABLES):   if (cv_var =5) then do;
3737851   +_XVAL_=5;
MPRINT(SCORETABLES):   _XVAL_=5;
3737852   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3737853   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3737854   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3737855   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3737856   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3737857   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3737858   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737859   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3737860   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3737861   +
3737862   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3737863   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3737864   +
3737865   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3737866   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3737867   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3737868   +array REG4_5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_5DRF [2] $12 _temporary_ ('1' '0' );
3737869   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3737870   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3737871   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3737872   +ARRAY REG4_5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_5DRU[2] _TEMPORARY_ (1 0);
3737873   +
3737874   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3737875   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3737876   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3737877   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3737878   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3737879   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737880   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3737881   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737882   +end;
MPRINT(SCORETABLES):   end;
3737883   +else do;
MPRINT(SCORETABLES):   else do;
3737884   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3737885   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3737886   +   end;
MPRINT(SCORETABLES):   end;
3737887   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3737888   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3737889   +   end;
MPRINT(SCORETABLES):   end;
3737890   +   else do;
MPRINT(SCORETABLES):   else do;
3737891   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3737892   +   end;
MPRINT(SCORETABLES):   end;
3737893   +end;
MPRINT(SCORETABLES):   end;
3737894   +
3737895   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3737896   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3737897   +
3737898   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3737899   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3737900   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737901   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737902   +end;
MPRINT(SCORETABLES):   end;
3737903   +
3737904   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3737905   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3737906   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737907   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737908   +end;
MPRINT(SCORETABLES):   end;
3737909   +
3737910   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3737911   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3737912   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737913   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737914   +end;
MPRINT(SCORETABLES):   end;
3737915   +
3737916   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3737917   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3737918   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737919   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737920   +end;
MPRINT(SCORETABLES):   end;
3737921   +
3737922   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3737923   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3737924   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737925   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737926   +end;
MPRINT(SCORETABLES):   end;
3737927   +
3737928   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3737929   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3737930   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737931   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737932   +end;
MPRINT(SCORETABLES):   end;
3737933   +
3737934   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3737935   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3737936   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737937   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737938   +end;
MPRINT(SCORETABLES):   end;
3737939   +
3737940   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3737941   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3737942   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737943   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737944   +end;
MPRINT(SCORETABLES):   end;
3737945   +
3737946   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3737947   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3737948   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3737949   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3737950   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3737951   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3737952   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3737953   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3737954   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3737955   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3737956   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3737957   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3737958   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3737959   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3737960   +end;
MPRINT(SCORETABLES):   end;
3737961   +else do;
MPRINT(SCORETABLES):   else do;
3737962   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3737963   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3737964   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3737965   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3737966   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3737967   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3737968   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3737969   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3737970   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737971   +         end;
MPRINT(SCORETABLES):   end;
3737972   +         else do;
MPRINT(SCORETABLES):   else do;
3737973   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3737974   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3737975   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737976   +            end;
MPRINT(SCORETABLES):   end;
3737977   +         end;
MPRINT(SCORETABLES):   end;
3737978   +      end;
MPRINT(SCORETABLES):   end;
3737979   +      else do;
MPRINT(SCORETABLES):   else do;
3737980   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3737981   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3737982   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737983   +         end;
MPRINT(SCORETABLES):   end;
3737984   +      end;
MPRINT(SCORETABLES):   end;
3737985   +   end;
MPRINT(SCORETABLES):   end;
3737986   +   else do;
MPRINT(SCORETABLES):   else do;
3737987   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3737988   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3737989   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737990   +      end;
MPRINT(SCORETABLES):   end;
3737991   +      else do;
MPRINT(SCORETABLES):   else do;
3737992   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3737993   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3737994   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3737995   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3737996   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3737997   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3737998   +         end;
MPRINT(SCORETABLES):   end;
3737999   +      end;
MPRINT(SCORETABLES):   end;
3738000   +   end;
MPRINT(SCORETABLES):   end;
3738001   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3738002   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738003   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738004   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738005   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738006   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3738007   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738008   +   end;
MPRINT(SCORETABLES):   end;
3738009   +end;
MPRINT(SCORETABLES):   end;
3738010   +
3738011   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3738012   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3738013   +   _P0 = 0.1408386509;
MPRINT(SCORETABLES):   _P0 = 0.1408386509;
3738014   +   _P1 = 0.8591613491;
MPRINT(SCORETABLES):   _P1 = 0.8591613491;
3738015   +   goto REG4_5DR1;
MPRINT(SCORETABLES):   goto REG4_5DR1;
3738016   +end;
MPRINT(SCORETABLES):   end;
3738017   +
3738018   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3738019   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3738020   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3738021   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3738022   +
3738023   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3738024   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3738025   +_LP0 = _LP0 + (    0.77838197632085) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.77838197632085) * _TEMP * _1_0;
3738026   +_LP0 = _LP0 + (    -1.1269295779705) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.1269295779705) * _TEMP * _1_1;
3738027   +_LP0 = _LP0 + (    0.91515523448982) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91515523448982) * _TEMP * _1_2;
3738028   +_LP0 = _LP0 + (   -1.51842318648076) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.51842318648076) * _TEMP * _1_3;
3738029   +
3738030   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3738031   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3738032   +_LP0 = _LP0 + (    15.1420466482846 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.1420466482846 * _TEMP);
3738033   +
3738034   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3738035   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3738036   +_LP0 = _LP0 + (    26.5963235303508 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 26.5963235303508 * _TEMP);
3738037   +
3738038   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3738039   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3738040   +_LP0 = _LP0 + (    22.3497904143416 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.3497904143416 * _TEMP);
3738041   +
3738042   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3738043   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3738044   +_LP0 = _LP0 + (    13.0706851848623 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.0706851848623 * _TEMP);
3738045   +
3738046   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3738047   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3738048   +_LP0 = _LP0 + (    2.40786951179865 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.40786951179865 * _TEMP);
3738049   +
3738050   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3738051   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3738052   +_LP0 = _LP0 + (   -13.2105355957362 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -13.2105355957362 * _TEMP);
3738053   +
3738054   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3738055   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3738056   +_LP0 = _LP0 + (    1.95993364054896 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.95993364054896 * _TEMP);
3738057   +
3738058   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3738059   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3738060   +_LP0 = _LP0 + (    14.0248066243716 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.0248066243716 * _TEMP);
3738061   +
3738062   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3738063   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3738064   +_TEMP =    -21.8839580309568 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -21.8839580309568 + _LP0;
3738065   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3738066   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3738067   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3738068   +end;
MPRINT(SCORETABLES):   end;
3738069   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3738070   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3738071   +
3738072   +REG4_5DR1:
3738073   +
3738074   +*** Residuals;
MPRINT(SCORETABLES):   REG4_5DR1: *** Residuals;
3738075   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3738076   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3738077   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3738078   +end;
MPRINT(SCORETABLES):   end;
3738079   +else do;
MPRINT(SCORETABLES):   else do;
3738080   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3738081   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3738082   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3738083   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3738084   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3738085   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3738086   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3738087   +   end;
MPRINT(SCORETABLES):   end;
3738088   +end;
MPRINT(SCORETABLES):   end;
3738089   +
3738090   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3738091   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3738092   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3738093   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3738094   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3738095   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3738096   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3738097   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3738098   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3738099   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3738100   +end;
MPRINT(SCORETABLES):   end;
3738101   +I_DepVar = REG4_5DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_5DRF[_IY];
3738102   +U_DepVar = REG4_5DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_5DRU[_IY];
3738103   +
3738104   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738105   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3738106   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738107   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738108   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3738109   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738110   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738111   +* Group: ^(cv_var =5);
MPRINT(SCORETABLES):   * Group: ^(cv_var =5);
3738112   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738113   +end;
MPRINT(SCORETABLES):   end;
3738114   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738115   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3738116   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738117   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738118   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3738119   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738120   +if (cv_var =6)  then do;
MPRINT(SCORETABLES):   if (cv_var =6) then do;
3738121   +_XVAL_=6;
MPRINT(SCORETABLES):   _XVAL_=6;
3738122   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738123   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3738124   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738125   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738126   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3738127   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738128   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738129   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3738130   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738131   +
3738132   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3738133   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3738134   +
3738135   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3738136   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3738137   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3738138   +array REG4_6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_6DRF [2] $12 _temporary_ ('1' '0' );
3738139   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3738140   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3738141   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3738142   +ARRAY REG4_6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_6DRU[2] _TEMPORARY_ (1 0);
3738143   +
3738144   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3738145   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3738146   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3738147   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3738148   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3738149   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738150   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3738151   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738152   +end;
MPRINT(SCORETABLES):   end;
3738153   +else do;
MPRINT(SCORETABLES):   else do;
3738154   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3738155   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3738156   +   end;
MPRINT(SCORETABLES):   end;
3738157   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3738158   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3738159   +   end;
MPRINT(SCORETABLES):   end;
3738160   +   else do;
MPRINT(SCORETABLES):   else do;
3738161   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738162   +   end;
MPRINT(SCORETABLES):   end;
3738163   +end;
MPRINT(SCORETABLES):   end;
3738164   +
3738165   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3738166   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3738167   +
3738168   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3738169   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3738170   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738171   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738172   +end;
MPRINT(SCORETABLES):   end;
3738173   +
3738174   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3738175   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3738176   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738177   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738178   +end;
MPRINT(SCORETABLES):   end;
3738179   +
3738180   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3738181   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3738182   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738183   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738184   +end;
MPRINT(SCORETABLES):   end;
3738185   +
3738186   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3738187   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3738188   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738189   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738190   +end;
MPRINT(SCORETABLES):   end;
3738191   +
3738192   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3738193   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3738194   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738195   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738196   +end;
MPRINT(SCORETABLES):   end;
3738197   +
3738198   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3738199   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3738200   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738201   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738202   +end;
MPRINT(SCORETABLES):   end;
3738203   +
3738204   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3738205   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3738206   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738207   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738208   +end;
MPRINT(SCORETABLES):   end;
3738209   +
3738210   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3738211   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3738212   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738213   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738214   +end;
MPRINT(SCORETABLES):   end;
3738215   +
3738216   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3738217   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3738218   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3738219   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3738220   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3738221   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3738222   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3738223   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3738224   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738225   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738226   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738227   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738228   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738229   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738230   +end;
MPRINT(SCORETABLES):   end;
3738231   +else do;
MPRINT(SCORETABLES):   else do;
3738232   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3738233   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3738234   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738235   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3738236   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3738237   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3738238   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3738239   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3738240   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738241   +         end;
MPRINT(SCORETABLES):   end;
3738242   +         else do;
MPRINT(SCORETABLES):   else do;
3738243   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3738244   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3738245   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738246   +            end;
MPRINT(SCORETABLES):   end;
3738247   +         end;
MPRINT(SCORETABLES):   end;
3738248   +      end;
MPRINT(SCORETABLES):   end;
3738249   +      else do;
MPRINT(SCORETABLES):   else do;
3738250   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3738251   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3738252   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738253   +         end;
MPRINT(SCORETABLES):   end;
3738254   +      end;
MPRINT(SCORETABLES):   end;
3738255   +   end;
MPRINT(SCORETABLES):   end;
3738256   +   else do;
MPRINT(SCORETABLES):   else do;
3738257   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3738258   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3738259   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738260   +      end;
MPRINT(SCORETABLES):   end;
3738261   +      else do;
MPRINT(SCORETABLES):   else do;
3738262   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3738263   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3738264   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3738265   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3738266   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3738267   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738268   +         end;
MPRINT(SCORETABLES):   end;
3738269   +      end;
MPRINT(SCORETABLES):   end;
3738270   +   end;
MPRINT(SCORETABLES):   end;
3738271   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3738272   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738273   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738274   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738275   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738276   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3738277   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738278   +   end;
MPRINT(SCORETABLES):   end;
3738279   +end;
MPRINT(SCORETABLES):   end;
3738280   +
3738281   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3738282   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3738283   +   _P0 = 0.1363429093;
MPRINT(SCORETABLES):   _P0 = 0.1363429093;
3738284   +   _P1 = 0.8636570907;
MPRINT(SCORETABLES):   _P1 = 0.8636570907;
3738285   +   goto REG4_6DR1;
MPRINT(SCORETABLES):   goto REG4_6DR1;
3738286   +end;
MPRINT(SCORETABLES):   end;
3738287   +
3738288   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3738289   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3738290   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3738291   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3738292   +
3738293   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3738294   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3738295   +_LP0 = _LP0 + (    0.91777551874282) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.91777551874282) * _TEMP * _1_0;
3738296   +_LP0 = _LP0 + (   -1.17826263315959) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.17826263315959) * _TEMP * _1_1;
3738297   +_LP0 = _LP0 + (    0.84693233013835) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.84693233013835) * _TEMP * _1_2;
3738298   +_LP0 = _LP0 + (   -1.52481551026407) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.52481551026407) * _TEMP * _1_3;
3738299   +
3738300   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3738301   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3738302   +_LP0 = _LP0 + (    14.5119884498738 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.5119884498738 * _TEMP);
3738303   +
3738304   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3738305   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3738306   +_LP0 = _LP0 + (    24.0619793851356 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.0619793851356 * _TEMP);
3738307   +
3738308   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3738309   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3738310   +_LP0 = _LP0 + (    21.7290901916459 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 21.7290901916459 * _TEMP);
3738311   +
3738312   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3738313   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3738314   +_LP0 = _LP0 + (    10.4064715791048 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 10.4064715791048 * _TEMP);
3738315   +
3738316   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3738317   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3738318   +_LP0 = _LP0 + (    1.96228861345527 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.96228861345527 * _TEMP);
3738319   +
3738320   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3738321   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3738322   +_LP0 = _LP0 + (   -12.4290893773579 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.4290893773579 * _TEMP);
3738323   +
3738324   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3738325   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3738326   +_LP0 = _LP0 + (    1.90765827940306 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.90765827940306 * _TEMP);
3738327   +
3738328   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3738329   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3738330   +_LP0 = _LP0 + (    13.7450819737275 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.7450819737275 * _TEMP);
3738331   +
3738332   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3738333   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3738334   +_TEMP =    -19.7137568515627 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -19.7137568515627 + _LP0;
3738335   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3738336   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3738337   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3738338   +end;
MPRINT(SCORETABLES):   end;
3738339   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3738340   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3738341   +
3738342   +REG4_6DR1:
3738343   +
3738344   +*** Residuals;
MPRINT(SCORETABLES):   REG4_6DR1: *** Residuals;
3738345   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3738346   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3738347   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3738348   +end;
MPRINT(SCORETABLES):   end;
3738349   +else do;
MPRINT(SCORETABLES):   else do;
3738350   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3738351   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3738352   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3738353   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3738354   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3738355   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3738356   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3738357   +   end;
MPRINT(SCORETABLES):   end;
3738358   +end;
MPRINT(SCORETABLES):   end;
3738359   +
3738360   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3738361   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3738362   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3738363   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3738364   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3738365   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3738366   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3738367   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3738368   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3738369   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3738370   +end;
MPRINT(SCORETABLES):   end;
3738371   +I_DepVar = REG4_6DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_6DRF[_IY];
3738372   +U_DepVar = REG4_6DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_6DRU[_IY];
3738373   +
3738374   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738375   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3738376   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738377   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738378   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3738379   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738380   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738381   +* Group: ^(cv_var =6);
MPRINT(SCORETABLES):   * Group: ^(cv_var =6);
3738382   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738383   +end;
MPRINT(SCORETABLES):   end;
3738384   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738385   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3738386   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738387   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738388   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3738389   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738390   +if (cv_var =7)  then do;
MPRINT(SCORETABLES):   if (cv_var =7) then do;
3738391   +_XVAL_=7;
MPRINT(SCORETABLES):   _XVAL_=7;
3738392   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738393   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3738394   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738395   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738396   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3738397   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738398   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738399   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3738400   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738401   +
3738402   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3738403   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3738404   +
3738405   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3738406   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3738407   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3738408   +array REG4_7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_7DRF [2] $12 _temporary_ ('1' '0' );
3738409   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3738410   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3738411   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3738412   +ARRAY REG4_7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_7DRU[2] _TEMPORARY_ (1 0);
3738413   +
3738414   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3738415   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3738416   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3738417   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3738418   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3738419   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738420   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3738421   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738422   +end;
MPRINT(SCORETABLES):   end;
3738423   +else do;
MPRINT(SCORETABLES):   else do;
3738424   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3738425   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3738426   +   end;
MPRINT(SCORETABLES):   end;
3738427   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3738428   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3738429   +   end;
MPRINT(SCORETABLES):   end;
3738430   +   else do;
MPRINT(SCORETABLES):   else do;
3738431   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738432   +   end;
MPRINT(SCORETABLES):   end;
3738433   +end;
MPRINT(SCORETABLES):   end;
3738434   +
3738435   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3738436   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3738437   +
3738438   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3738439   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3738440   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738441   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738442   +end;
MPRINT(SCORETABLES):   end;
3738443   +
3738444   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3738445   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3738446   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738447   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738448   +end;
MPRINT(SCORETABLES):   end;
3738449   +
3738450   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3738451   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3738452   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738453   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738454   +end;
MPRINT(SCORETABLES):   end;
3738455   +
3738456   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3738457   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3738458   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738459   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738460   +end;
MPRINT(SCORETABLES):   end;
3738461   +
3738462   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3738463   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3738464   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738465   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738466   +end;
MPRINT(SCORETABLES):   end;
3738467   +
3738468   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3738469   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3738470   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738471   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738472   +end;
MPRINT(SCORETABLES):   end;
3738473   +
3738474   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3738475   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3738476   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738477   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738478   +end;
MPRINT(SCORETABLES):   end;
3738479   +
3738480   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3738481   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3738482   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738483   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738484   +end;
MPRINT(SCORETABLES):   end;
3738485   +
3738486   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3738487   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3738488   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3738489   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3738490   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3738491   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3738492   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3738493   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3738494   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738495   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738496   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738497   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738498   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738499   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738500   +end;
MPRINT(SCORETABLES):   end;
3738501   +else do;
MPRINT(SCORETABLES):   else do;
3738502   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3738503   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3738504   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738505   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3738506   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3738507   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3738508   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3738509   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3738510   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738511   +         end;
MPRINT(SCORETABLES):   end;
3738512   +         else do;
MPRINT(SCORETABLES):   else do;
3738513   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3738514   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3738515   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738516   +            end;
MPRINT(SCORETABLES):   end;
3738517   +         end;
MPRINT(SCORETABLES):   end;
3738518   +      end;
MPRINT(SCORETABLES):   end;
3738519   +      else do;
MPRINT(SCORETABLES):   else do;
3738520   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3738521   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3738522   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738523   +         end;
MPRINT(SCORETABLES):   end;
3738524   +      end;
MPRINT(SCORETABLES):   end;
3738525   +   end;
MPRINT(SCORETABLES):   end;
3738526   +   else do;
MPRINT(SCORETABLES):   else do;
3738527   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3738528   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3738529   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738530   +      end;
MPRINT(SCORETABLES):   end;
3738531   +      else do;
MPRINT(SCORETABLES):   else do;
3738532   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3738533   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3738534   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3738535   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3738536   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3738537   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738538   +         end;
MPRINT(SCORETABLES):   end;
3738539   +      end;
MPRINT(SCORETABLES):   end;
3738540   +   end;
MPRINT(SCORETABLES):   end;
3738541   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3738542   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738543   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738544   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738545   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738546   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3738547   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738548   +   end;
MPRINT(SCORETABLES):   end;
3738549   +end;
MPRINT(SCORETABLES):   end;
3738550   +
3738551   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3738552   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3738553   +   _P0 = 0.1394077449;
MPRINT(SCORETABLES):   _P0 = 0.1394077449;
3738554   +   _P1 = 0.8605922551;
MPRINT(SCORETABLES):   _P1 = 0.8605922551;
3738555   +   goto REG4_7DR1;
MPRINT(SCORETABLES):   goto REG4_7DR1;
3738556   +end;
MPRINT(SCORETABLES):   end;
3738557   +
3738558   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3738559   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3738560   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3738561   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3738562   +
3738563   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3738564   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3738565   +_LP0 = _LP0 + (    0.83142604197719) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.83142604197719) * _TEMP * _1_0;
3738566   +_LP0 = _LP0 + (   -1.17380201579021) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.17380201579021) * _TEMP * _1_1;
3738567   +_LP0 = _LP0 + (    0.92183512201262) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.92183512201262) * _TEMP * _1_2;
3738568   +_LP0 = _LP0 + (   -1.51262877311728) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.51262877311728) * _TEMP * _1_3;
3738569   +
3738570   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3738571   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3738572   +_LP0 = _LP0 + (    15.0191457346734 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.0191457346734 * _TEMP);
3738573   +
3738574   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3738575   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3738576   +_LP0 = _LP0 + (    24.4728825624109 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.4728825624109 * _TEMP);
3738577   +
3738578   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3738579   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3738580   +_LP0 = _LP0 + (    23.1217305553683 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 23.1217305553683 * _TEMP);
3738581   +
3738582   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3738583   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3738584   +_LP0 = _LP0 + (    11.3755702312975 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.3755702312975 * _TEMP);
3738585   +
3738586   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3738587   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3738588   +_LP0 = _LP0 + (    2.17693938360647 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.17693938360647 * _TEMP);
3738589   +
3738590   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3738591   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3738592   +_LP0 = _LP0 + (   -12.9109911208732 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.9109911208732 * _TEMP);
3738593   +
3738594   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3738595   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3738596   +_LP0 = _LP0 + (    2.21431066866078 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.21431066866078 * _TEMP);
3738597   +
3738598   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3738599   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3738600   +_LP0 = _LP0 + (    14.1091358247804 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.1091358247804 * _TEMP);
3738601   +
3738602   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3738603   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3738604   +_TEMP =    -20.7519176436889 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.7519176436889 + _LP0;
3738605   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3738606   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3738607   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3738608   +end;
MPRINT(SCORETABLES):   end;
3738609   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3738610   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3738611   +
3738612   +REG4_7DR1:
3738613   +
3738614   +*** Residuals;
MPRINT(SCORETABLES):   REG4_7DR1: *** Residuals;
3738615   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3738616   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3738617   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3738618   +end;
MPRINT(SCORETABLES):   end;
3738619   +else do;
MPRINT(SCORETABLES):   else do;
3738620   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3738621   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3738622   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3738623   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3738624   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3738625   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3738626   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3738627   +   end;
MPRINT(SCORETABLES):   end;
3738628   +end;
MPRINT(SCORETABLES):   end;
3738629   +
3738630   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3738631   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3738632   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3738633   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3738634   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3738635   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3738636   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3738637   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3738638   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3738639   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3738640   +end;
MPRINT(SCORETABLES):   end;
3738641   +I_DepVar = REG4_7DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_7DRF[_IY];
3738642   +U_DepVar = REG4_7DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_7DRU[_IY];
3738643   +
3738644   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738645   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3738646   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738647   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738648   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3738649   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738650   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738651   +* Group: ^(cv_var =7);
MPRINT(SCORETABLES):   * Group: ^(cv_var =7);
3738652   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738653   +end;
MPRINT(SCORETABLES):   end;
3738654   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738655   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3738656   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738657   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738658   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3738659   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738660   +if (cv_var =8)  then do;
MPRINT(SCORETABLES):   if (cv_var =8) then do;
3738661   +_XVAL_=8;
MPRINT(SCORETABLES):   _XVAL_=8;
3738662   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738663   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3738664   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738665   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738666   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3738667   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738668   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738669   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3738670   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738671   +
3738672   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3738673   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3738674   +
3738675   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3738676   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3738677   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3738678   +array REG4_8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_8DRF [2] $12 _temporary_ ('1' '0' );
3738679   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3738680   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3738681   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3738682   +ARRAY REG4_8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_8DRU[2] _TEMPORARY_ (1 0);
3738683   +
3738684   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3738685   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3738686   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3738687   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3738688   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3738689   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738690   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3738691   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738692   +end;
MPRINT(SCORETABLES):   end;
3738693   +else do;
MPRINT(SCORETABLES):   else do;
3738694   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3738695   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3738696   +   end;
MPRINT(SCORETABLES):   end;
3738697   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3738698   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3738699   +   end;
MPRINT(SCORETABLES):   end;
3738700   +   else do;
MPRINT(SCORETABLES):   else do;
3738701   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738702   +   end;
MPRINT(SCORETABLES):   end;
3738703   +end;
MPRINT(SCORETABLES):   end;
3738704   +
3738705   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3738706   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3738707   +
3738708   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3738709   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3738710   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738711   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738712   +end;
MPRINT(SCORETABLES):   end;
3738713   +
3738714   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3738715   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3738716   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738717   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738718   +end;
MPRINT(SCORETABLES):   end;
3738719   +
3738720   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3738721   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3738722   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738723   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738724   +end;
MPRINT(SCORETABLES):   end;
3738725   +
3738726   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3738727   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3738728   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738729   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738730   +end;
MPRINT(SCORETABLES):   end;
3738731   +
3738732   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3738733   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3738734   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738735   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738736   +end;
MPRINT(SCORETABLES):   end;
3738737   +
3738738   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3738739   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3738740   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738741   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738742   +end;
MPRINT(SCORETABLES):   end;
3738743   +
3738744   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3738745   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3738746   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738747   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738748   +end;
MPRINT(SCORETABLES):   end;
3738749   +
3738750   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3738751   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3738752   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738753   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738754   +end;
MPRINT(SCORETABLES):   end;
3738755   +
3738756   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3738757   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3738758   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3738759   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3738760   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3738761   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3738762   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3738763   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3738764   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738765   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738766   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738767   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738768   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738769   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738770   +end;
MPRINT(SCORETABLES):   end;
3738771   +else do;
MPRINT(SCORETABLES):   else do;
3738772   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3738773   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3738774   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738775   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3738776   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3738777   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3738778   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3738779   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3738780   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738781   +         end;
MPRINT(SCORETABLES):   end;
3738782   +         else do;
MPRINT(SCORETABLES):   else do;
3738783   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3738784   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3738785   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738786   +            end;
MPRINT(SCORETABLES):   end;
3738787   +         end;
MPRINT(SCORETABLES):   end;
3738788   +      end;
MPRINT(SCORETABLES):   end;
3738789   +      else do;
MPRINT(SCORETABLES):   else do;
3738790   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3738791   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3738792   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738793   +         end;
MPRINT(SCORETABLES):   end;
3738794   +      end;
MPRINT(SCORETABLES):   end;
3738795   +   end;
MPRINT(SCORETABLES):   end;
3738796   +   else do;
MPRINT(SCORETABLES):   else do;
3738797   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3738798   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3738799   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738800   +      end;
MPRINT(SCORETABLES):   end;
3738801   +      else do;
MPRINT(SCORETABLES):   else do;
3738802   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3738803   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3738804   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3738805   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3738806   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3738807   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3738808   +         end;
MPRINT(SCORETABLES):   end;
3738809   +      end;
MPRINT(SCORETABLES):   end;
3738810   +   end;
MPRINT(SCORETABLES):   end;
3738811   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3738812   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3738813   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3738814   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3738815   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3738816   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3738817   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738818   +   end;
MPRINT(SCORETABLES):   end;
3738819   +end;
MPRINT(SCORETABLES):   end;
3738820   +
3738821   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3738822   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3738823   +   _P0 = 0.1354214648;
MPRINT(SCORETABLES):   _P0 = 0.1354214648;
3738824   +   _P1 = 0.8645785352;
MPRINT(SCORETABLES):   _P1 = 0.8645785352;
3738825   +   goto REG4_8DR1;
MPRINT(SCORETABLES):   goto REG4_8DR1;
3738826   +end;
MPRINT(SCORETABLES):   end;
3738827   +
3738828   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3738829   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3738830   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3738831   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3738832   +
3738833   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3738834   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3738835   +_LP0 = _LP0 + (    0.87670170368075) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.87670170368075) * _TEMP * _1_0;
3738836   +_LP0 = _LP0 + (   -1.12242808326107) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.12242808326107) * _TEMP * _1_1;
3738837   +_LP0 = _LP0 + (    0.96901948833113) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.96901948833113) * _TEMP * _1_2;
3738838   +_LP0 = _LP0 + (   -1.43662892618683) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.43662892618683) * _TEMP * _1_3;
3738839   +
3738840   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3738841   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3738842   +_LP0 = _LP0 + (    14.8989435099402 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.8989435099402 * _TEMP);
3738843   +
3738844   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3738845   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3738846   +_LP0 = _LP0 + (    24.4384704565334 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.4384704565334 * _TEMP);
3738847   +
3738848   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3738849   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3738850   +_LP0 = _LP0 + (    22.9375112147046 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.9375112147046 * _TEMP);
3738851   +
3738852   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3738853   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3738854   +_LP0 = _LP0 + (    11.1387550702181 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.1387550702181 * _TEMP);
3738855   +
3738856   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3738857   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3738858   +_LP0 = _LP0 + (    2.31287993458048 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.31287993458048 * _TEMP);
3738859   +
3738860   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3738861   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3738862   +_LP0 = _LP0 + (   -12.8763991664589 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.8763991664589 * _TEMP);
3738863   +
3738864   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3738865   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3738866   +_LP0 = _LP0 + (    2.63555975426856 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.63555975426856 * _TEMP);
3738867   +
3738868   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3738869   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3738870   +_LP0 = _LP0 + (     14.078067961964 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.078067961964 * _TEMP);
3738871   +
3738872   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3738873   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3738874   +_TEMP =    -20.8398651330765 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.8398651330765 + _LP0;
3738875   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3738876   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3738877   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3738878   +end;
MPRINT(SCORETABLES):   end;
3738879   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3738880   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3738881   +
3738882   +REG4_8DR1:
3738883   +
3738884   +*** Residuals;
MPRINT(SCORETABLES):   REG4_8DR1: *** Residuals;
3738885   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3738886   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3738887   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3738888   +end;
MPRINT(SCORETABLES):   end;
3738889   +else do;
MPRINT(SCORETABLES):   else do;
3738890   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3738891   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3738892   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3738893   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3738894   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3738895   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3738896   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3738897   +   end;
MPRINT(SCORETABLES):   end;
3738898   +end;
MPRINT(SCORETABLES):   end;
3738899   +
3738900   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3738901   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3738902   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3738903   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3738904   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3738905   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3738906   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3738907   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3738908   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3738909   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3738910   +end;
MPRINT(SCORETABLES):   end;
3738911   +I_DepVar = REG4_8DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_8DRF[_IY];
3738912   +U_DepVar = REG4_8DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_8DRU[_IY];
3738913   +
3738914   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738915   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3738916   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738917   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738918   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3738919   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738920   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738921   +* Group: ^(cv_var =8);
MPRINT(SCORETABLES):   * Group: ^(cv_var =8);
3738922   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738923   +end;
MPRINT(SCORETABLES):   end;
3738924   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738925   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3738926   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738927   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738928   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3738929   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738930   +if (cv_var =9)  then do;
MPRINT(SCORETABLES):   if (cv_var =9) then do;
3738931   +_XVAL_=9;
MPRINT(SCORETABLES):   _XVAL_=9;
3738932   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3738933   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3738934   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3738935   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3738936   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3738937   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3738938   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738939   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3738940   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3738941   +
3738942   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3738943   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3738944   +
3738945   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3738946   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3738947   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3738948   +array REG4_9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_9DRF [2] $12 _temporary_ ('1' '0' );
3738949   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3738950   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3738951   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3738952   +ARRAY REG4_9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_9DRU[2] _TEMPORARY_ (1 0);
3738953   +
3738954   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3738955   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3738956   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3738957   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3738958   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3738959   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3738960   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3738961   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738962   +end;
MPRINT(SCORETABLES):   end;
3738963   +else do;
MPRINT(SCORETABLES):   else do;
3738964   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3738965   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3738966   +   end;
MPRINT(SCORETABLES):   end;
3738967   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3738968   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3738969   +   end;
MPRINT(SCORETABLES):   end;
3738970   +   else do;
MPRINT(SCORETABLES):   else do;
3738971   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3738972   +   end;
MPRINT(SCORETABLES):   end;
3738973   +end;
MPRINT(SCORETABLES):   end;
3738974   +
3738975   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3738976   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3738977   +
3738978   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3738979   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3738980   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738981   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738982   +end;
MPRINT(SCORETABLES):   end;
3738983   +
3738984   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3738985   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3738986   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738987   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738988   +end;
MPRINT(SCORETABLES):   end;
3738989   +
3738990   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3738991   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3738992   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738993   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3738994   +end;
MPRINT(SCORETABLES):   end;
3738995   +
3738996   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3738997   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3738998   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3738999   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739000   +end;
MPRINT(SCORETABLES):   end;
3739001   +
3739002   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3739003   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3739004   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739005   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739006   +end;
MPRINT(SCORETABLES):   end;
3739007   +
3739008   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3739009   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3739010   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739011   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739012   +end;
MPRINT(SCORETABLES):   end;
3739013   +
3739014   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3739015   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3739016   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739017   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739018   +end;
MPRINT(SCORETABLES):   end;
3739019   +
3739020   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3739021   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3739022   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739023   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739024   +end;
MPRINT(SCORETABLES):   end;
3739025   +
3739026   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3739027   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3739028   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3739029   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3739030   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3739031   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3739032   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3739033   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3739034   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3739035   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3739036   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3739037   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3739038   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739039   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739040   +end;
MPRINT(SCORETABLES):   end;
3739041   +else do;
MPRINT(SCORETABLES):   else do;
3739042   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3739043   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3739044   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3739045   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3739046   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3739047   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3739048   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3739049   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3739050   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739051   +         end;
MPRINT(SCORETABLES):   end;
3739052   +         else do;
MPRINT(SCORETABLES):   else do;
3739053   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3739054   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3739055   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739056   +            end;
MPRINT(SCORETABLES):   end;
3739057   +         end;
MPRINT(SCORETABLES):   end;
3739058   +      end;
MPRINT(SCORETABLES):   end;
3739059   +      else do;
MPRINT(SCORETABLES):   else do;
3739060   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3739061   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3739062   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739063   +         end;
MPRINT(SCORETABLES):   end;
3739064   +      end;
MPRINT(SCORETABLES):   end;
3739065   +   end;
MPRINT(SCORETABLES):   end;
3739066   +   else do;
MPRINT(SCORETABLES):   else do;
3739067   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3739068   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3739069   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739070   +      end;
MPRINT(SCORETABLES):   end;
3739071   +      else do;
MPRINT(SCORETABLES):   else do;
3739072   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3739073   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3739074   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3739075   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3739076   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3739077   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739078   +         end;
MPRINT(SCORETABLES):   end;
3739079   +      end;
MPRINT(SCORETABLES):   end;
3739080   +   end;
MPRINT(SCORETABLES):   end;
3739081   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3739082   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3739083   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3739084   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3739085   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3739086   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3739087   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739088   +   end;
MPRINT(SCORETABLES):   end;
3739089   +end;
MPRINT(SCORETABLES):   end;
3739090   +
3739091   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3739092   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3739093   +   _P0 = 0.1390909091;
MPRINT(SCORETABLES):   _P0 = 0.1390909091;
3739094   +   _P1 = 0.8609090909;
MPRINT(SCORETABLES):   _P1 = 0.8609090909;
3739095   +   goto REG4_9DR1;
MPRINT(SCORETABLES):   goto REG4_9DR1;
3739096   +end;
MPRINT(SCORETABLES):   end;
3739097   +
3739098   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3739099   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3739100   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3739101   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3739102   +
3739103   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3739104   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3739105   +_LP0 = _LP0 + (    0.93376096494709) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.93376096494709) * _TEMP * _1_0;
3739106   +_LP0 = _LP0 + (   -1.15121940580441) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.15121940580441) * _TEMP * _1_1;
3739107   +_LP0 = _LP0 + (    0.88099158272972) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.88099158272972) * _TEMP * _1_2;
3739108   +_LP0 = _LP0 + (   -1.45455332078954) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.45455332078954) * _TEMP * _1_3;
3739109   +
3739110   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3739111   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3739112   +_LP0 = _LP0 + (    15.1385168314056 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 15.1385168314056 * _TEMP);
3739113   +
3739114   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3739115   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3739116   +_LP0 = _LP0 + (    24.5180018980359 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.5180018980359 * _TEMP);
3739117   +
3739118   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3739119   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3739120   +_LP0 = _LP0 + (    22.4307660014274 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 22.4307660014274 * _TEMP);
3739121   +
3739122   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3739123   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3739124   +_LP0 = _LP0 + (    11.6259766329663 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.6259766329663 * _TEMP);
3739125   +
3739126   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3739127   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3739128   +_LP0 = _LP0 + (    2.16520264309441 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.16520264309441 * _TEMP);
3739129   +
3739130   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3739131   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3739132   +_LP0 = _LP0 + (   -12.8353046073634 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.8353046073634 * _TEMP);
3739133   +
3739134   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3739135   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3739136   +_LP0 = _LP0 + (    2.08550439067608 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.08550439067608 * _TEMP);
3739137   +
3739138   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3739139   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3739140   +_LP0 = _LP0 + (    14.1342726079651 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.1342726079651 * _TEMP);
3739141   +
3739142   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3739143   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3739144   +_TEMP =     -20.799536669788 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.799536669788 + _LP0;
3739145   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3739146   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3739147   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3739148   +end;
MPRINT(SCORETABLES):   end;
3739149   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3739150   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3739151   +
3739152   +REG4_9DR1:
3739153   +
3739154   +*** Residuals;
MPRINT(SCORETABLES):   REG4_9DR1: *** Residuals;
3739155   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3739156   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3739157   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3739158   +end;
MPRINT(SCORETABLES):   end;
3739159   +else do;
MPRINT(SCORETABLES):   else do;
3739160   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3739161   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3739162   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3739163   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3739164   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3739165   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3739166   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3739167   +   end;
MPRINT(SCORETABLES):   end;
3739168   +end;
MPRINT(SCORETABLES):   end;
3739169   +
3739170   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3739171   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3739172   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3739173   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3739174   +_MAXP = _P0;
The SAS System
 
MPRINT(SCORETABLES):   _MAXP = _P0;
3739175   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3739176   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3739177   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3739178   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3739179   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3739180   +end;
MPRINT(SCORETABLES):   end;
3739181   +I_DepVar = REG4_9DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_9DRF[_IY];
3739182   +U_DepVar = REG4_9DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_9DRU[_IY];
3739183   +
3739184   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739185   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3739186   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739187   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3739188   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3739189   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3739190   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3739191   +* Group: ^(cv_var =9);
MPRINT(SCORETABLES):   * Group: ^(cv_var =9);
3739192   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3739193   +end;
MPRINT(SCORETABLES):   end;
3739194   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3739195   +* Grp8: StartGroup;
MPRINT(SCORETABLES):   * Grp8: StartGroup;
3739196   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3739197   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3739198   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3739199   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3739200   +if (cv_var =10)  then do;
MPRINT(SCORETABLES):   if (cv_var =10) then do;
3739201   +_XVAL_=10;
MPRINT(SCORETABLES):   _XVAL_=10;
3739202   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3739203   +* Reg4: Regression;
MPRINT(SCORETABLES):   * Reg4: Regression;
3739204   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3739205   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3739206   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3739207   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3739208   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739209   +*** begin scoring code for regression;
MPRINT(SCORETABLES):   *** begin scoring code for regression;
3739210   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739211   +
3739212   +length _WARN_ $4;
MPRINT(SCORETABLES):   length _WARN_ $4;
3739213   +label _WARN_ = 'Warnings' ;
MPRINT(SCORETABLES):   label _WARN_ = 'Warnings' ;
3739214   +
3739215   +length I_DepVar $ 12;
MPRINT(SCORETABLES):   length I_DepVar $ 12;
3739216   +label I_DepVar = 'Into: DepVar' ;
MPRINT(SCORETABLES):   label I_DepVar = 'Into: DepVar' ;
3739217   +*** Target Values;
MPRINT(SCORETABLES):   *** Target Values;
3739218   +array REG4_10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(SCORETABLES):   array REG4_10DRF [2] $12 _temporary_ ('1' '0' );
3739219   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(SCORETABLES):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3739220   +format U_DepVar BEST.;
MPRINT(SCORETABLES):   format U_DepVar BEST.;
3739221   +*** Unnormalized target values;
MPRINT(SCORETABLES):   *** Unnormalized target values;
3739222   +ARRAY REG4_10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(SCORETABLES):   ARRAY REG4_10DRU[2] _TEMPORARY_ (1 0);
3739223   +
3739224   +*** Generate dummy variables for DepVar ;
MPRINT(SCORETABLES):   *** Generate dummy variables for DepVar ;
3739225   +drop _Y ;
MPRINT(SCORETABLES):   drop _Y ;
3739226   +label F_DepVar = 'From: DepVar' ;
MPRINT(SCORETABLES):   label F_DepVar = 'From: DepVar' ;
3739227   +length F_DepVar $ 12;
MPRINT(SCORETABLES):   length F_DepVar $ 12;
3739228   +F_DepVar = put( DepVar , BEST. );
MPRINT(SCORETABLES):   F_DepVar = put( DepVar , BEST. );
3739229   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3739230   +if missing( DepVar ) then do;
MPRINT(SCORETABLES):   if missing( DepVar ) then do;
3739231   +   _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3739232   +end;
MPRINT(SCORETABLES):   end;
3739233   +else do;
MPRINT(SCORETABLES):   else do;
3739234   +   if F_DepVar = '0'  then do;
MPRINT(SCORETABLES):   if F_DepVar = '0' then do;
3739235   +      _Y = 1;
MPRINT(SCORETABLES):   _Y = 1;
3739236   +   end;
MPRINT(SCORETABLES):   end;
3739237   +   else if F_DepVar = '1'  then do;
MPRINT(SCORETABLES):   else if F_DepVar = '1' then do;
3739238   +      _Y = 0;
MPRINT(SCORETABLES):   _Y = 0;
3739239   +   end;
MPRINT(SCORETABLES):   end;
3739240   +   else do;
MPRINT(SCORETABLES):   else do;
3739241   +      _Y = .;
MPRINT(SCORETABLES):   _Y = .;
3739242   +   end;
MPRINT(SCORETABLES):   end;
3739243   +end;
MPRINT(SCORETABLES):   end;
3739244   +
3739245   +drop _DM_BAD;
MPRINT(SCORETABLES):   drop _DM_BAD;
3739246   +_DM_BAD=0;
MPRINT(SCORETABLES):   _DM_BAD=0;
3739247   +
3739248   +*** Check MntCard_Games for missing values ;
MPRINT(SCORETABLES):   *** Check MntCard_Games for missing values ;
3739249   +if missing( MntCard_Games ) then do;
MPRINT(SCORETABLES):   if missing( MntCard_Games ) then do;
3739250   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739251   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739252   +end;
MPRINT(SCORETABLES):   end;
3739253   +
3739254   +*** Check NumCatalogPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumCatalogPurchases for missing values ;
3739255   +if missing( NumCatalogPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumCatalogPurchases ) then do;
3739256   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739257   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739258   +end;
MPRINT(SCORETABLES):   end;
3739259   +
3739260   +*** Check NumDealsPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumDealsPurchases for missing values ;
3739261   +if missing( NumDealsPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumDealsPurchases ) then do;
3739262   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739263   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739264   +end;
MPRINT(SCORETABLES):   end;
3739265   +
3739266   +*** Check NumWebPurchases for missing values ;
MPRINT(SCORETABLES):   *** Check NumWebPurchases for missing values ;
3739267   +if missing( NumWebPurchases ) then do;
MPRINT(SCORETABLES):   if missing( NumWebPurchases ) then do;
3739268   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739269   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739270   +end;
MPRINT(SCORETABLES):   end;
3739271   +
3739272   +*** Check RANGE_Frq for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Frq for missing values ;
3739273   +if missing( RANGE_Frq ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Frq ) then do;
3739274   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739275   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739276   +end;
MPRINT(SCORETABLES):   end;
3739277   +
3739278   +*** Check RANGE_Recency for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_Recency for missing values ;
3739279   +if missing( RANGE_Recency ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_Recency ) then do;
3739280   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739281   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739282   +end;
MPRINT(SCORETABLES):   end;
3739283   +
3739284   +*** Check RANGE_average_purchase for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_average_purchase for missing values ;
3739285   +if missing( RANGE_average_purchase ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_average_purchase ) then do;
3739286   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739287   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739288   +end;
MPRINT(SCORETABLES):   end;
3739289   +
3739290   +*** Check RANGE_campaign_acceptance for missing values ;
MPRINT(SCORETABLES):   *** Check RANGE_campaign_acceptance for missing values ;
3739291   +if missing( RANGE_campaign_acceptance ) then do;
MPRINT(SCORETABLES):   if missing( RANGE_campaign_acceptance ) then do;
3739292   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739293   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739294   +end;
MPRINT(SCORETABLES):   end;
3739295   +
3739296   +*** Generate dummy variables for Marital_Status ;
MPRINT(SCORETABLES):   *** Generate dummy variables for Marital_Status ;
3739297   +drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(SCORETABLES):   drop _1_0 _1_1 _1_2 _1_3 ;
3739298   +*** encoding is sparse, initialize to zero;
MPRINT(SCORETABLES):   *** encoding is sparse, initialize to zero;
3739299   +_1_0 = 0;
MPRINT(SCORETABLES):   _1_0 = 0;
3739300   +_1_1 = 0;
MPRINT(SCORETABLES):   _1_1 = 0;
3739301   +_1_2 = 0;
MPRINT(SCORETABLES):   _1_2 = 0;
3739302   +_1_3 = 0;
MPRINT(SCORETABLES):   _1_3 = 0;
3739303   +if missing( Marital_Status ) then do;
MPRINT(SCORETABLES):   if missing( Marital_Status ) then do;
3739304   +   _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3739305   +   _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3739306   +   _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3739307   +   _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3739308   +   substr(_warn_,1,1) = 'M';
MPRINT(SCORETABLES):   substr(_warn_,1,1) = 'M';
3739309   +   _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739310   +end;
MPRINT(SCORETABLES):   end;
3739311   +else do;
MPRINT(SCORETABLES):   else do;
3739312   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(SCORETABLES):   length _dm8 $ 8;
MPRINT(SCORETABLES):   drop _dm8 ;
3739313   +   _dm8 = put( Marital_Status , $8. );
MPRINT(SCORETABLES):   _dm8 = put( Marital_Status , $8. );
3739314   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3739315   +   _dm_find = 0; drop _dm_find;
MPRINT(SCORETABLES):   _dm_find = 0;
MPRINT(SCORETABLES):   drop _dm_find;
3739316   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'SINGLE' then do;
3739317   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 <= 'MARRIED' then do;
3739318   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'DIVORCED' then do;
3739319   +            _1_0 = 1;
MPRINT(SCORETABLES):   _1_0 = 1;
3739320   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739321   +         end;
MPRINT(SCORETABLES):   end;
3739322   +         else do;
MPRINT(SCORETABLES):   else do;
3739323   +            if _dm8 = 'MARRIED'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'MARRIED' then do;
3739324   +               _1_1 = 1;
MPRINT(SCORETABLES):   _1_1 = 1;
3739325   +               _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739326   +            end;
MPRINT(SCORETABLES):   end;
3739327   +         end;
MPRINT(SCORETABLES):   end;
3739328   +      end;
MPRINT(SCORETABLES):   end;
3739329   +      else do;
MPRINT(SCORETABLES):   else do;
3739330   +         if _dm8 = 'SINGLE'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'SINGLE' then do;
3739331   +            _1_2 = 1;
MPRINT(SCORETABLES):   _1_2 = 1;
3739332   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739333   +         end;
MPRINT(SCORETABLES):   end;
3739334   +      end;
MPRINT(SCORETABLES):   end;
3739335   +   end;
MPRINT(SCORETABLES):   end;
3739336   +   else do;
MPRINT(SCORETABLES):   else do;
3739337   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'TOGETHER' then do;
3739338   +         _1_3 = 1;
MPRINT(SCORETABLES):   _1_3 = 1;
3739339   +         _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739340   +      end;
MPRINT(SCORETABLES):   end;
3739341   +      else do;
MPRINT(SCORETABLES):   else do;
3739342   +         if _dm8 = 'WIDOW'  then do;
MPRINT(SCORETABLES):   if _dm8 = 'WIDOW' then do;
3739343   +            _1_0 = -1;
MPRINT(SCORETABLES):   _1_0 = -1;
3739344   +            _1_1 = -1;
MPRINT(SCORETABLES):   _1_1 = -1;
3739345   +            _1_2 = -1;
MPRINT(SCORETABLES):   _1_2 = -1;
3739346   +            _1_3 = -1;
MPRINT(SCORETABLES):   _1_3 = -1;
3739347   +            _dm_find = 1;
MPRINT(SCORETABLES):   _dm_find = 1;
3739348   +         end;
MPRINT(SCORETABLES):   end;
3739349   +      end;
MPRINT(SCORETABLES):   end;
3739350   +   end;
MPRINT(SCORETABLES):   end;
3739351   +   if not _dm_find then do;
MPRINT(SCORETABLES):   if not _dm_find then do;
3739352   +      _1_0 = .;
MPRINT(SCORETABLES):   _1_0 = .;
3739353   +      _1_1 = .;
MPRINT(SCORETABLES):   _1_1 = .;
3739354   +      _1_2 = .;
MPRINT(SCORETABLES):   _1_2 = .;
3739355   +      _1_3 = .;
MPRINT(SCORETABLES):   _1_3 = .;
3739356   +      substr(_warn_,2,1) = 'U';
MPRINT(SCORETABLES):   substr(_warn_,2,1) = 'U';
3739357   +      _DM_BAD = 1;
MPRINT(SCORETABLES):   _DM_BAD = 1;
3739358   +   end;
MPRINT(SCORETABLES):   end;
3739359   +end;
MPRINT(SCORETABLES):   end;
3739360   +
3739361   +*** If missing inputs, use averages;
MPRINT(SCORETABLES):   *** If missing inputs, use averages;
3739362   +if _DM_BAD > 0 then do;
MPRINT(SCORETABLES):   if _DM_BAD > 0 then do;
3739363   +   _P0 = 0.1366906475;
MPRINT(SCORETABLES):   _P0 = 0.1366906475;
3739364   +   _P1 = 0.8633093525;
MPRINT(SCORETABLES):   _P1 = 0.8633093525;
3739365   +   goto REG4_10DR1;
MPRINT(SCORETABLES):   goto REG4_10DR1;
3739366   +end;
MPRINT(SCORETABLES):   end;
3739367   +
3739368   +*** Compute Linear Predictor;
MPRINT(SCORETABLES):   *** Compute Linear Predictor;
3739369   +drop _TEMP;
MPRINT(SCORETABLES):   drop _TEMP;
3739370   +drop _LP0;
MPRINT(SCORETABLES):   drop _LP0;
3739371   +_LP0 = 0;
MPRINT(SCORETABLES):   _LP0 = 0;
3739372   +
3739373   +***  Effect: Marital_Status ;
MPRINT(SCORETABLES):   *** Effect: Marital_Status ;
3739374   +_TEMP = 1;
MPRINT(SCORETABLES):   _TEMP = 1;
3739375   +_LP0 = _LP0 + (    0.95495150288565) * _TEMP * _1_0;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.95495150288565) * _TEMP * _1_0;
3739376   +_LP0 = _LP0 + (   -1.07233889994522) * _TEMP * _1_1;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.07233889994522) * _TEMP * _1_1;
3739377   +_LP0 = _LP0 + (    0.88224733972368) * _TEMP * _1_2;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 0.88224733972368) * _TEMP * _1_2;
3739378   +_LP0 = _LP0 + (   -1.47580943406575) * _TEMP * _1_3;
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -1.47580943406575) * _TEMP * _1_3;
3739379   +
3739380   +***  Effect: MntCard_Games ;
MPRINT(SCORETABLES):   *** Effect: MntCard_Games ;
3739381   +_TEMP = MntCard_Games ;
MPRINT(SCORETABLES):   _TEMP = MntCard_Games ;
3739382   +_LP0 = _LP0 + (    14.6951980095576 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 14.6951980095576 * _TEMP);
3739383   +
3739384   +***  Effect: NumCatalogPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumCatalogPurchases ;
3739385   +_TEMP = NumCatalogPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumCatalogPurchases ;
3739386   +_LP0 = _LP0 + (    24.3540123515798 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 24.3540123515798 * _TEMP);
3739387   +
3739388   +***  Effect: NumDealsPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumDealsPurchases ;
3739389   +_TEMP = NumDealsPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumDealsPurchases ;
3739390   +_LP0 = _LP0 + (    21.5840566705822 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 21.5840566705822 * _TEMP);
3739391   +
3739392   +***  Effect: NumWebPurchases ;
MPRINT(SCORETABLES):   *** Effect: NumWebPurchases ;
3739393   +_TEMP = NumWebPurchases ;
MPRINT(SCORETABLES):   _TEMP = NumWebPurchases ;
3739394   +_LP0 = _LP0 + (    11.2145756312201 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 11.2145756312201 * _TEMP);
3739395   +
3739396   +***  Effect: RANGE_Frq ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Frq ;
3739397   +_TEMP = RANGE_Frq ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Frq ;
3739398   +_LP0 = _LP0 + (    2.24448065568259 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 2.24448065568259 * _TEMP);
3739399   +
3739400   +***  Effect: RANGE_Recency ;
MPRINT(SCORETABLES):   *** Effect: RANGE_Recency ;
3739401   +_TEMP = RANGE_Recency ;
MPRINT(SCORETABLES):   _TEMP = RANGE_Recency ;
3739402   +_LP0 = _LP0 + (   -12.6064237469222 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( -12.6064237469222 * _TEMP);
3739403   +
3739404   +***  Effect: RANGE_average_purchase ;
MPRINT(SCORETABLES):   *** Effect: RANGE_average_purchase ;
3739405   +_TEMP = RANGE_average_purchase ;
MPRINT(SCORETABLES):   _TEMP = RANGE_average_purchase ;
3739406   +_LP0 = _LP0 + (    1.84849854586879 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 1.84849854586879 * _TEMP);
3739407   +
3739408   +***  Effect: RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   *** Effect: RANGE_campaign_acceptance ;
3739409   +_TEMP = RANGE_campaign_acceptance ;
MPRINT(SCORETABLES):   _TEMP = RANGE_campaign_acceptance ;
3739410   +_LP0 = _LP0 + (    13.5794493750423 * _TEMP);
MPRINT(SCORETABLES):   _LP0 = _LP0 + ( 13.5794493750423 * _TEMP);
3739411   +
3739412   +*** Naive Posterior Probabilities;
MPRINT(SCORETABLES):   *** Naive Posterior Probabilities;
3739413   +drop _MAXP _IY _P0 _P1;
MPRINT(SCORETABLES):   drop _MAXP _IY _P0 _P1;
3739414   +_TEMP =    -20.2914447144298 + _LP0;
MPRINT(SCORETABLES):   _TEMP = -20.2914447144298 + _LP0;
3739415   +if (_TEMP < 0) then do;
MPRINT(SCORETABLES):   if (_TEMP < 0) then do;
3739416   +   _TEMP = exp(_TEMP);
MPRINT(SCORETABLES):   _TEMP = exp(_TEMP);
3739417   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(SCORETABLES):   _P0 = _TEMP / (1 + _TEMP);
3739418   +end;
MPRINT(SCORETABLES):   end;
3739419   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(SCORETABLES):   else _P0 = 1 / (1 + exp(-_TEMP));
3739420   +_P1 = 1.0 - _P0;
MPRINT(SCORETABLES):   _P1 = 1.0 - _P0;
3739421   +
3739422   +REG4_10DR1:
3739423   +
3739424   +*** Residuals;
MPRINT(SCORETABLES):   REG4_10DR1: *** Residuals;
3739425   +if (_Y = .) then do;
MPRINT(SCORETABLES):   if (_Y = .) then do;
3739426   +   R_DepVar1 = .;
MPRINT(SCORETABLES):   R_DepVar1 = .;
3739427   +   R_DepVar0 = .;
MPRINT(SCORETABLES):   R_DepVar0 = .;
3739428   +end;
MPRINT(SCORETABLES):   end;
3739429   +else do;
MPRINT(SCORETABLES):   else do;
3739430   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(SCORETABLES):   label R_DepVar1 = 'Residual: DepVar=1' ;
3739431   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(SCORETABLES):   label R_DepVar0 = 'Residual: DepVar=0' ;
3739432   +   R_DepVar1 = - _P0;
MPRINT(SCORETABLES):   R_DepVar1 = - _P0;
3739433   +   R_DepVar0 = - _P1;
MPRINT(SCORETABLES):   R_DepVar0 = - _P1;
3739434   +   select( _Y );
MPRINT(SCORETABLES):   select( _Y );
3739435   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(SCORETABLES):   when (0) R_DepVar1 = R_DepVar1 + 1;
3739436   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(SCORETABLES):   when (1) R_DepVar0 = R_DepVar0 + 1;
3739437   +   end;
MPRINT(SCORETABLES):   end;
3739438   +end;
MPRINT(SCORETABLES):   end;
3739439   +
3739440   +*** Posterior Probabilities and Predicted Level;
MPRINT(SCORETABLES):   *** Posterior Probabilities and Predicted Level;
3739441   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(SCORETABLES):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3739442   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(SCORETABLES):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3739443   +P_DepVar1 = _P0;
MPRINT(SCORETABLES):   P_DepVar1 = _P0;
3739444   +_MAXP = _P0;
MPRINT(SCORETABLES):   _MAXP = _P0;
3739445   +_IY = 1;
MPRINT(SCORETABLES):   _IY = 1;
3739446   +P_DepVar0 = _P1;
MPRINT(SCORETABLES):   P_DepVar0 = _P1;
3739447   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(SCORETABLES):   if (_P1 > _MAXP + 1E-8) then do;
3739448   +   _MAXP = _P1;
MPRINT(SCORETABLES):   _MAXP = _P1;
3739449   +   _IY = 2;
MPRINT(SCORETABLES):   _IY = 2;
3739450   +end;
MPRINT(SCORETABLES):   end;
3739451   +I_DepVar = REG4_10DRF[_IY];
MPRINT(SCORETABLES):   I_DepVar = REG4_10DRF[_IY];
3739452   +U_DepVar = REG4_10DRU[_IY];
MPRINT(SCORETABLES):   U_DepVar = REG4_10DRU[_IY];
3739453   +
3739454   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739455   +***** end scoring code for regression;
MPRINT(SCORETABLES):   ***** end scoring code for regression;
3739456   +*************************************;
MPRINT(SCORETABLES):   *************************************;
3739457   +*------------------------------------------------------------*;
MPRINT(SCORETABLES):   *------------------------------------------------------------*;
3739458   +* EndGrp7: EndGroup;
MPRINT(SCORETABLES):   * EndGrp7: EndGroup;
3739459   +* User: misil;
MPRINT(SCORETABLES):   * User: misil;
3739460   +* Date: 02JUN18: 16:25;
MPRINT(SCORETABLES):   * Date: 02JUN18: 16:25;
3739461   +* Group: ^(cv_var =10);
MPRINT(SCORETABLES):   * Group: ^(cv_var =10);
3739462   +*------------------------------------------------------------* ;
MPRINT(SCORETABLES):   *------------------------------------------------------------* ;
3739463   +end;
MPRINT(SCORETABLES):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TRANS2_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
MPRINT(POSTLOOP):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End POSTLOOP: EndGrp7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3739464    *------------------------------------------------------------*;
3739465    * End POSTLOOP: EndGrp7;
3739466    *------------------------------------------------------------*;
3739467
 
NOTE: There were 10 observations read from the data set EMWS1.GRP8_EMLOOPINFO.
NOTE: The data set EMWS1.ENDGRP7_EMLOOPINFO has 10 observations and 3 variables.
3739468    proc print data=EMWS1.EndGrp7_EMLOOPINFO noobs label;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.EndGrp7_EMLOOPINFO noobs label;
3739469    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rptgroupsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Group Summary";
MPRINT(EM_DIAGRAM):   run;
3739470    run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP7_EMLOOPINFO.
NOTE: The PROCEDURE PRINT printed page 2444.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
3739471    title9;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS1.EndGrp7_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if trim(F_DepVar) ^in("", ".") then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
3739495    data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT;
3739496    set WORK.OUTFITDATA;
MPRINT(EM_DIAGRAM):   set WORK.OUTFITDATA;
3739497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.OUTFITDATA.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3739498    data EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT;
3739499    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3739500    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
3739501    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
3739501  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
3739502    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
3739503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3739504    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMREPORTFIT nothreads;
3739505    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
3739506    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3739507    %let _EMwarndup = 0;
3739508    %let _EMtargetdup =;
3739509    %let _EMASEtargetdup =;
3739510    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3739511    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3739512    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
3739513    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
3739514    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
3739515    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
3739516    end;
MPRINT(EM_DIAGRAM):   end;
3739517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3739518    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3739519    * EndGrp7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp7: Computing metadata for TRAIN data;
3739520    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp7_TRAIN out=WORK.M1IKDTM2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1IKDTM2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IKDTM2(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1IKDTM2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IKDTM2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1QDVK13 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27A5R72(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE =
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID',
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QDVK13;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Reg4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Reg4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp7";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3739871    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3739872    set EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO;
3739873    where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
3739874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMINFO.
      WHERE (DATA='EndGrp7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3739875    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMINFO;
3739876    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3739877    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3739878    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
3739882    run;
3739883    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
3739884    set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMINFO WORK.MODELTEMP_INFO;
3739885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3739886    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp7_EMINFO NOTHREADS;
3739887    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3739888    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3739889    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Reg4_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3739890    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3739891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.REG4_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3739892    proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3739893    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3739894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3739895    data EMWS1.EndGrp7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMINFO;
3739896    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3739897    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3739898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP7_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3739899    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3739900    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3739901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3739902    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE
or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp7: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp7: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=334;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13705375461633;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=2103;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86294624538366;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3740364    %let EMEXCEPTIONSTRING=;
3740365    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3740366    * POSTLOOPREPORT: EndGrp7;
MPRINT(EM_DIAGRAM):   * POSTLOOPREPORT: EndGrp7;
3740367    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3740368    %let EM_ACTION = POSTLOOPREPORT;
3740369    %let syscc = 0;
3740370    %macro main;
3740371       %if %upcase(&EM_ACTION) = TRAIN %then %do;
3740372
3740373           filename temp catalog 'sashelp.emutil.endgp_train.source';
3740374           %include temp;
3740375           filename temp;
3740376
3740377           %train;
3740378
3740379       %end;
3740380       %else
3740381          %if %upcase(&EM_ACTION) = SCORE %then %do;
3740382
3740383           filename temp catalog 'sashelp.emutil.endgp_score.source';
3740384           %include temp;
3740385           filename temp;
3740386
3740387           %score;
3740388       %end;
3740389       %else
3740390       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
3740391
3740392           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
3740393           %include temp;
3740394           filename temp;
3740395
3740396           %postloop;
3740397
3740398       %end;
3740399
3740400       %doendm:
3740401    %mend main;
3740402
3740403    %main;
MPRINT(EM_DIAGRAM):
MPRINT(EM_DIAGRAM):  ;
3740404    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3740405    * End POSTLOOPREPORT: EndGrp7;
MPRINT(EM_DIAGRAM):   * End POSTLOOPREPORT: EndGrp7;
3740406    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3740407
 
3740408    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Reg4_CMeta_TRAIN out=WORK.SUBSETINMETA;
3740409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3740410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.REG4_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3740411    proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp7_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
3740412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3740413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.ENDGRP7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 22 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3740414    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
3740415    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
3740416    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
3740417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 22 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3740418    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
3740419    set EMWS1.EndGrp7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_CMeta_TRAIN;
3740420    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
3740420  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
3740421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3740422    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
3740423    set EMWS1.EndGrp7_TRAIN(keep=
3740424    F_DepVar
3740425    I_DepVar
3740426    P_DepVar0
3740427    P_DepVar1
3740428    R_DepVar0
3740429    R_DepVar1
3740430    U_DepVar
3740431    _WARN_
3740432    DepVar
3740433    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
3740434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2437 observations read from the data set EMWS1.EMCODE3_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.META_TRAIN.
NOTE: View EMWS1.ENDGRP7_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2437 observations read from the data set EMWS1.TRANS2_TRAIN.
NOTE: There were 2437 observations read from the data set EMWS1.ENDGRP7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2437 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.EndGrp7_19CAVC1 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.EndGrp7_19CAVC1;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 EVENT $32 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.EndGrp7_19CAVC1(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   retain EVENT '1';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp7_19CAVC1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.EndGrp7_19CAVC1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg4_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.1370537546 _NEVENTS
334 _NNONEVENTS 2103 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2437));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 9.6012780316961E-11 OVLMAX 0.9999998574 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTLIFT = ((_NEVENTS+_NNONEVENTS) / 20) /AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2437 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
(2437/20)) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2437)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP /((20-GROUP+1)* 2437/20) ) / (
AVGNUMRESP / (2437/20))) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2437 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * 2437/20 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE *
((20-GROUP+1)* 2437/20));
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2437;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
3744721    %let grouptarget=0;
3744722    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
3744723    set EMWS1.Grp8_EMLOOPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp8_EMLOOPINFO;
3744724    if _TARGET_ ne "" then do;
MPRINT(EM_DIAGRAM):   if _TARGET_ ne "" then do;
3744725    call symput('grouptarget', '1');
MPRINT(EM_DIAGRAM):   call symput('grouptarget', '1');
3744726    stop;
MPRINT(EM_DIAGRAM):   stop;
3744727    end;
MPRINT(EM_DIAGRAM):   end;
3744728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _TARGET_ is uninitialized.
NOTE: There were 10 observations read from the data set EMWS1.GRP8_EMLOOPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3744729    data work.EMOUTFIT;
MPRINT(EM_DIAGRAM):    data work.EMOUTFIT;
3744730    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744731    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744732    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744732  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744733    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744734    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744735    set EMWS1.EndGrp7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT;
3744736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT.
NOTE: The data set WORK.EMOUTFIT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744737    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMOUTFIT_LOOP;
3744738    set EMWS1.EndGrp7_EMOUTFIT_LOOP work.EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMOUTFIT_LOOP work.EMOUTFIT;
3744739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP7_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMOUTFIT_LOOP has 11 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744740    data work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):    data work.EMREPORTFIT;
3744741    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744742    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744743    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744743  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744744    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744745    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744746    set EMWS1.EndGrp7_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT;
3744747    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT.
NOTE: The data set WORK.EMREPORTFIT has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744748    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMREPORTFIT_LOOP;
3744749    set EMWS1.EndGrp7_EMREPORTFIT_LOOP work.EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMREPORTFIT_LOOP work.EMREPORTFIT;
3744750    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP.
NOTE: There were 9 observations read from the data set WORK.EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP has 209 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744751    data work.EMRANK;
MPRINT(EM_DIAGRAM):    data work.EMRANK;
3744752    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744753    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744754    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744754  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744755    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744756    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744757    set EMWS1.EndGrp7_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK;
3744758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMRANK.
NOTE: The data set WORK.EMRANK has 20 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744759    data EMWS1.EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMRANK_LOOP;
3744760    set EMWS1.EndGrp7_EMRANK_LOOP work.EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMRANK_LOOP work.EMRANK;
3744761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.ENDGRP7_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMRANK.
NOTE: The data set EMWS1.ENDGRP7_EMRANK_LOOP has 220 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744762    data work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data work.EMSCOREDIST;
3744763    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744764    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744765    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744765  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744766    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744767    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744768    set EMWS1.EndGrp7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST;
3744769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST.
NOTE: The data set WORK.EMSCOREDIST has 20 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744770    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMSCOREDIST_LOOP;
3744771    set EMWS1.EndGrp7_EMSCOREDIST_LOOP work.EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMSCOREDIST_LOOP work.EMSCOREDIST;
3744772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 200 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP.
NOTE: There were 20 observations read from the data set WORK.EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP has 220 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744773    data work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):    data work.EMCLASSIFICATION;
3744774    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744775    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744776    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744776  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744777    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744778    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744779    set EMWS1.EndGrp7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION;
3744780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION.
NOTE: The data set WORK.EMCLASSIFICATION has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
3744781    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMCLASSIFICATION_LOOP;
3744782    set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMCLASSIFICATION_LOOP work.EMCLASSIFICATION;
3744783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3744784    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP out=_temp;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP out=_temp;
3744785    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3744786    where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
MPRINT(EM_DIAGRAM):   where _type_='PREDICTION' and correct and INTO ne '' and FROM ne '';
3744787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
      WHERE (_type_='PREDICTION') and correct and (INTO not = ' ') and (FROM not = ' ');
NOTE: The data set WORK._TEMP has 22 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744788    data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL totalCount
3744788  ! totalPercent);
MPRINT(EM_DIAGRAM):   data _total(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
totalCount totalPercent);
3744789    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3744790    retain totalCount totalPercent;
MPRINT(EM_DIAGRAM):   retain totalCount totalPercent;
3744791    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3744792    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3744793    totalCount = count;
MPRINT(EM_DIAGRAM):   totalCount = count;
3744794    totalPercent = percent;
MPRINT(EM_DIAGRAM):   totalPercent = percent;
3744795    end;
MPRINT(EM_DIAGRAM):   end;
3744796    else do;
MPRINT(EM_DIAGRAM):   else do;
3744797    totalCount + count;
MPRINT(EM_DIAGRAM):   totalCount + count;
3744798    totalPercent + percent;
MPRINT(EM_DIAGRAM):   totalPercent + percent;
3744799    end;
MPRINT(EM_DIAGRAM):   end;
3744800    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3744801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TOTAL has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3744802    data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL eventCount
3744802  ! eventPercent);
MPRINT(EM_DIAGRAM):   data _event(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
eventCount eventPercent);
3744803    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3744804    where strip(FROM) eq strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) eq strip(EVENT);
3744805    by _LOOP_ DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ DATAROLE TARGET;
3744806    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3744807    eventCount = count;
MPRINT(EM_DIAGRAM):   eventCount = count;
3744808    eventPercent = percent;
MPRINT(EM_DIAGRAM):   eventPercent = percent;
3744809    end;
MPRINT(EM_DIAGRAM):   end;
3744810    else do;
MPRINT(EM_DIAGRAM):   else do;
3744811    eventCount + count;
MPRINT(EM_DIAGRAM):   eventCount + count;
3744812    eventPercent + percent;
MPRINT(EM_DIAGRAM):   eventPercent + percent;
3744813    end;
MPRINT(EM_DIAGRAM):   end;
3744814    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3744815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable first.modelid is uninitialized.
NOTE: Variable last.modelid is uninitialized.
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM)=STRIP(EVENT);
NOTE: The data set WORK._EVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3744816    data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL neventCount
3744816  ! neventPercent);
MPRINT(EM_DIAGRAM):   data _nevent(keep=_LOOP_ _WHERE_ MODELID DATAROLE TARGET TARGETLABEL
neventCount neventPercent);
3744817    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
3744818    retain neventCount neventPercent 0;
MPRINT(EM_DIAGRAM):   retain neventCount neventPercent 0;
3744819    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3744820    where strip(FROM) ne strip(EVENT);
MPRINT(EM_DIAGRAM):   where strip(FROM) ne strip(EVENT);
3744821    if first._LOOP_ or first.modelid or first.target or first.datarole then do;
MPRINT(EM_DIAGRAM):   if first._LOOP_ or first.modelid or first.target or first.datarole then
do;
3744822    neventCount = count;
MPRINT(EM_DIAGRAM):   neventCount = count;
3744823    neventPercent = percent;
MPRINT(EM_DIAGRAM):   neventPercent = percent;
3744824    end;
MPRINT(EM_DIAGRAM):   end;
3744825    else do;
MPRINT(EM_DIAGRAM):   else do;
3744826    neventCount + count;
MPRINT(EM_DIAGRAM):   neventCount + count;
3744827    neventPercent + percent;
MPRINT(EM_DIAGRAM):   neventPercent + percent;
3744828    end;
MPRINT(EM_DIAGRAM):   end;
3744829    if last._LOOP_ or last.modelid or last.target or last.datarole then output;
MPRINT(EM_DIAGRAM):   if last._LOOP_ or last.modelid or last.target or last.datarole then
output;
3744830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP.
      WHERE STRIP(FROM) not = STRIP(EVENT);
NOTE: The data set WORK._NEVENT has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
3744831    data EMWS1.EndGrp7_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMMISC_LOOP;
3744832    merge _total _event _nevent;
MPRINT(EM_DIAGRAM):   merge _total _event _nevent;
3744833    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3744834    label TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel,   NOQUOTE))"
3744834  ! targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3744834  ! eventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctEvent_vlabel,  NOQUOTE))"
3744835       eventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,  NOQUOTE))"
3744835  ! neventPercent = "%sysfunc(sasmsg(sashelp.dmine, assmt_pctNEvent_vlabel, NOQUOTE))"
3744835  ! neventCount = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumNEvent_vlabel, NOQUOTE))"
3744836       totalPercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel,    NOQUOTE))"
3744836  !  totalCount = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalcount_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable" targetLabel = "Target Label"
eventPercent = "Percentage of Events" eventCount = "Number of Events" neventPercent =
"Percentage of Nonevents" neventCount = "Number of Nonevents" totalPercent = "Total
Percentage" totalCount = "Total Count";
3744837    if neventCount = . then neventCount = 0;
MPRINT(EM_DIAGRAM):   if neventCount = . then neventCount = 0;
3744838    if eventCount = . then eventCount = 0;
MPRINT(EM_DIAGRAM):   if eventCount = . then eventCount = 0;
3744839    if neventPercent = . then neventPercent = 0;
MPRINT(EM_DIAGRAM):   if neventPercent = . then neventPercent = 0;
3744840    if eventPercent = . then eventPercent = 0;
MPRINT(EM_DIAGRAM):   if eventPercent = . then eventPercent = 0;
3744841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._TOTAL.
NOTE: There were 11 observations read from the data set WORK._EVENT.
NOTE: There were 11 observations read from the data set WORK._NEVENT.
NOTE: The data set EMWS1.ENDGRP7_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3744842    proc sort data=EMWS1.EndGrp7_EMMISC_LOOP;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp7_EMMISC_LOOP;
3744843    by _LOOP_ MODELID DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   by _LOOP_ MODELID DATAROLE TARGET;
3744844    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.ENDGRP7_EMMISC_LOOP.
NOTE: The data set EMWS1.ENDGRP7_EMMISC_LOOP has 11 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3744845    data work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):    data work.EMEVENTREPORT;
3744846    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
3744847    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
3744848    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ =
3744848  !  "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
3744849    retain _LOOP_ 11;
MPRINT(EM_DIAGRAM):   retain _LOOP_ 11;
3744850    retain _WHERE_ "_OVERALL_";
MPRINT(EM_DIAGRAM):   retain _WHERE_ "_OVERALL_";
3744851    set EMWS1.EndGrp7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMEVENTREPORT;
3744852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMEVENTREPORT.
NOTE: The data set WORK.EMEVENTREPORT has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744853    data EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
3744854    set work.EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set work.EMEVENTREPORT;
3744855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.EMEVENTREPORT.
NOTE: The data set EMWS1.ENDGRP7_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
3744856    %let _cn = %sysfunc(getoption(CENTER));
3744857    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3744858    proc print data=EMWS1.EndGrp7_EMREPORTFIT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMREPORTFIT_LOOP noobs label;
3744859    var STAT LABEL TRAIN
3744860    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
3744861    by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
MPRINT(EM_DIAGRAM):   by _WHERE_ notsorted TARGET notsorted TARGETLABEL notsorted;
3744862    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3744863    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
3744864    run;
 
NOTE: There were 209 observations read from the data set EMWS1.ENDGRP7_EMREPORTFIT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2445.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744865    title10;
MPRINT(EM_DIAGRAM):   title10;
3744866    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3744867    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP nothreads;
3744868    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3744869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
NOTE: The data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP has 44 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744870    %let _cn = %sysfunc(getoption(CENTER));
3744871    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
3744872    proc print data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMCLASSIFICATION_LOOP noobs label;
3744873    var from into pct_row pct_col count percent
3744874    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
3744875    by DATAROLE _WHERE_ TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE _WHERE_ TARGET TARGETLABEL;
3744876    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
3744877    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
3744878    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
3744879    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
3744880    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
3744881    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
3744882    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
3744883    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3744884    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
3744885    run;
 
NOTE: There were 44 observations read from the data set EMWS1.ENDGRP7_EMCLASSIFICATION_LOOP.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2446.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3744886    title9;
MPRINT(EM_DIAGRAM):   title9;
3744887    title10;
MPRINT(EM_DIAGRAM):   title10;
3744888    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3744889    %let _cn = %sysfunc(getoption(CENTER));
3744890    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3744891    data EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
3744892    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
3744892  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
3744893    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3744893  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
3744893  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
3744893  ! FALSEEVENT
3744894    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
3744894  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
3744894  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
3744895       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
3744896    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
3744897    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
3744898    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
3744899    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
3744900    set EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp7_EMEVENTREPORT_LOOP;
3744901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMEVENTREPORT_LOOP.
NOTE: The data set EMWS1.ENDGRP7_EMEVENTREPORT_LOOP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744902    proc print data=EMWS1.EndGrp7_EMEVENTREPORT_LOOP noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMEVENTREPORT_LOOP noobs label;
3744903    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3744904    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
3744905    by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted TARGETLABEL;
3744906    run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP7_EMEVENTREPORT_LOOP.
NOTE: The PROCEDURE PRINT printed page 2447.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
3744907    title10;
MPRINT(EM_DIAGRAM):   title10;
3744908    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3744909    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3744910    modify EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3744911    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3744912    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3744912  ! ;
MPRINT(EM_DIAGRAM):   run;
3744913    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMRANK_LOOP.DATA.
3744914    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
3744915    %let _cn = %sysfunc(getoption(CENTER));
3744916    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3744917    proc print data=EMWS1.EndGrp7_EMRANK_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMRANK_LOOP label noobs;
3744918    var
3744919    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
3744920    by
3744921    notsorted DATAROLE
3744922    notsorted _WHERE_
3744923    notsorted TARGET
3744924    notsorted TARGETLABEL
3744925    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3744926    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3744927    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
3744928    run;
 
NOTE: There were 220 observations read from the data set EMWS1.ENDGRP7_EMRANK_LOOP.
NOTE: The PROCEDURE PRINT printed page 2448.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744929    title10;
MPRINT(EM_DIAGRAM):   title10;
3744930    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3744931    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
3744932    modify EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   modify EndGrp7_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
3744933    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
3744933  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
3744934    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
3744934  ! ;
MPRINT(EM_DIAGRAM):   run;
3744935    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP7_EMSCOREDIST_LOOP.DATA.
3744936    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
3744937    %let _cn = %sysfunc(getoption(CENTER));
3744938    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
3744939    proc print data=EMWS1.EndGrp7_EMSCOREDIST_LOOP label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp7_EMSCOREDIST_LOOP label noobs;
3744940    var
3744941    p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
3744942    by
3744943    notsorted DATAROLE
3744944    notsorted _WHERE_
3744945    notsorted TARGET
3744946    notsorted TARGETLABEL
3744947    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted _WHERE_ notsorted TARGET notsorted
TARGETLABEL ;
3744948    where TARGET in(
3744949    "DepVar"
3744950    );
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
3744951    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
3744952    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
3744953    run;
 
NOTE: There were 220 observations read from the data set EMWS1.ENDGRP7_EMSCOREDIST_LOOP.
      WHERE TARGET='DepVar';
NOTE: The PROCEDURE PRINT printed page 2449.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
3744954    title10;
MPRINT(EM_DIAGRAM):   title10;
3744955    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
3744956    %let emexceptionstring =;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:29 o'clock"
);
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:09:29 o'clock"
);
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Post Grouping Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM
2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp7\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp7_EMREPORT;
MPRINT(EM_DIAGRAM):   length ID 8 KEY $30 VALUE $512;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='PROPERTIES';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SETTINGS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=1;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\TRAINPROPERTIES.xml";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="VARIABLES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=3;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMTRAINVARIABLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLLOG";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=4;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\EMLOG.log";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="TOOLOUTPUT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=5;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\EMOUTPUT.out";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="NOTES";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Properties";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=6;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\EMNOTES.txt";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FLOWCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Sasresults";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=7;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='TEXT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="SASCODE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Scoring";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="EXTERNAL";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=8;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="MISCLASSIFICATIONMANY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMMISC_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=10;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="TOTALPERCENT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE="BAR";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="FITSTATPLOT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMOUTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=11;
MPRINT(EM_DIAGRAM):   KEY="FREQ";
MPRINT(EM_DIAGRAM):   VALUE="_ANYNUMERIC_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSRANKOVERLAY";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMRANK_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="DECILE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="LIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BASELIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="BESTLIFTC";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=12;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='LATTICE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='LATTICETYPE';
MPRINT(EM_DIAGRAM):   VALUE='LINEPLOT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="ASSESSSCOREDIST";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMSCOREDIST_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY='PARM';
MPRINT(EM_DIAGRAM):   VALUE="DepVar";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="WHERE";
MPRINT(EM_DIAGRAM):   VALUE="TARGET='DepVar'";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="X";
MPRINT(EM_DIAGRAM):   VALUE="SCORE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="Y";
MPRINT(EM_DIAGRAM):   VALUE="PERCENTAGEOFNONEVENTS";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEX";
MPRINT(EM_DIAGRAM):   VALUE="DATAROLE";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="LATTICEY";
MPRINT(EM_DIAGRAM):   VALUE="_WHERE_";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=13;
MPRINT(EM_DIAGRAM):   KEY="NROWS";
MPRINT(EM_DIAGRAM):   VALUE="1";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="REPORTFITSTAT";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=14;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMREPORTFIT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="eventratestat";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Assess";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="N";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=15;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMEVENTREPORT_LOOP";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='VIEWTYPE';
MPRINT(EM_DIAGRAM):   VALUE='DATA';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='DESCRIPTION';
MPRINT(EM_DIAGRAM):   VALUE="miningresult";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='BLOCK';
MPRINT(EM_DIAGRAM):   VALUE="Gp";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='AUTODISPLAY';
MPRINT(EM_DIAGRAM):   VALUE="Y";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='TYPE';
MPRINT(EM_DIAGRAM):   VALUE="DATA";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   id=16;
MPRINT(EM_DIAGRAM):   KEY='FILE';
MPRINT(EM_DIAGRAM):   VALUE="EndGrp7_EMLOOPINFO";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
