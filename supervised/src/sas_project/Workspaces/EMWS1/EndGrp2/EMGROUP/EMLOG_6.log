*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:48:05 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:00 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:48:00 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O07J2N3T "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O07J2N3T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMLOG_6.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:00 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMOUTPUT_6.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:00 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2040751    proc freq data=EMWS1.EndGrp2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp2_VariableSet noprint;
2040752    table ROLE*LEVEL/out=WORK.EndGrp2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp2META;
2040753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.ENDGRP2META has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
2040754    proc print data=WORK.EndGrp2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2META label noobs;
2040755    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2040756    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2040757    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2040758    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2040759    run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRP2META.
NOTE: The PROCEDURE PRINT printed page 1358.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2040760    title10;
MPRINT(EM_DIAGRAM):   title10;
2040761    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2040790    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2040791    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2040792    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2040793       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2040794    set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
2040795    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2040796    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2040797    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2040798    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2040799    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2040800    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2040801    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2040802    end;
MPRINT(EM_DIAGRAM):   end;
2040803    output;
MPRINT(EM_DIAGRAM):   output;
2040804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2040805    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2040806    proc print data=WORK.EndGrp2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2_EVENT noobs label;
2040807    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2040808    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2040809    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2040810    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP2_EVENT.
NOTE: The PROCEDURE PRINT printed page 1359.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2040811    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2040812    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
2040813    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2040814    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2040815    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2040816    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2040817    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2040818    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1360.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2040819    title10;
MPRINT(EM_DIAGRAM):   title10;
2040820    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=305;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13958810068649;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1880;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.8604118993135;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2041298    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2041299    * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
2041300    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2041301    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2041302    %let EMEXCEPTIONSTRING=;
2041303    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2041304    * TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp2;
2041305    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041306    %let EM_ACTION = TRAIN;
2041307    %let syscc = 0;
2041308    %macro main;
2041309       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2041310
2041311           filename temp catalog 'sashelp.emutil.endgp_train.source';
2041312           %include temp;
2041313           filename temp;
2041314
2041315           %train;
2041316
2041317       %end;
2041318       %else
2041319          %if %upcase(&EM_ACTION) = SCORE %then %do;
2041320
2041321           filename temp catalog 'sashelp.emutil.endgp_score.source';
2041322           %include temp;
2041323           filename temp;
2041324
2041325           %score;
2041326       %end;
2041327       %else
2041328       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2041329
2041330           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2041331           %include temp;
2041332           filename temp;
2041333
2041334           %postloop;
2041335
2041336       %end;
2041337
2041338       %doendm:
2041339    %mend main;
2041340
2041341    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2041342   +%macro copyModelDs(model=, key=);
2041343   +   %let modelDs  = &em_lib..&model._&key;
2041344   +   %let reportDs = &em_lib..&em_nodeid._&key;
2041345   +   %if %sysfunc(exist(&modelDs)) %then %do;
2041346   +       data &reportDs;
2041347   +          length ModelId $16;
2041348   +          retain ModelId "&model";
2041349   +          set &modelDs;
2041350   +       run;
2041351   +   %end;
2041352   +%mend copyModelDs;
2041353   +
2041354   +%macro traintarget(groupid=);
2041355   +   %em_getname(key=emoutfit, type=DATA);
2041356   +   %let targetname=;
2041357   +   data _null_;
2041358   +     set &em_lib..&groupid._&looptype;
2041359   +     where _LOOP_ = &EMLOOPNUMBER;
2041360   +     call symput('targetname', strip(_TARGET_));
2041361   +   run;
2041362   +   %let modelId =;
2041363   +   data _null_;
2041364   +      set &em_import_data_eminfo;
2041365   +      where key = 'MODEL' and TARGET = "&targetname";
2041366   +      call symput('modelId',   strip(data));
2041367   +   run;
2041368   +   %if "&modelId" ne "" %then %do;
2041369   +       %copyModelDs(model=&modelid, key=EMRANK);
2041370   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2041371   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2041372   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2041373   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2041374   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2041375   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2041376   +   %end;
2041377   +
2041378   +   %doendtgp:
2041379   +%mend;
2041380   +
2041381   +%macro trainboost(groupid=);
2041382   +
2041383   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2041384   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2041385   +
2041386   +   data _null_;
2041387   +      retain index 0;
2041388   +      set &boostinfoDs;
2041389   +      call symput('targetname', strip(_target_));
2041390   +   run;
2041391   +
2041392   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2041393   +       %let decmeta = ;
2041394   +       data _null_;
2041395   +          set &em_import_data_eminfo;
2041396   +          where (key='DECMETA' and TARGET="&targetname");
2041397   +          call symput('DECMETA', strip(data));
2041398   +       run;
2041399   +       %if "&decmeta" eq "" %then %do;
2041400   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2041401   +           %goto doendtb;
2041402   +       %end;
2041403   +
2041404   +       %let predictedVars=;
2041405   +       data _null_;
2041406   +          set &decmeta;
2041407   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2041408   +          else
2041409   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2041410   +          else
2041411   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2041412   +       run;
2041413   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2041414   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2041415   +       %end;
2041416   +   %end;
2041417   +
2041418   +   * ;
2041419   +   * ENDGROUP &NODEID : Boosting scoring ;
2041420   +   * ;
2041421   +   data &em_lib..&groupid._boostscore;
2041422   +      set &em_import_data;
2041423   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2041424   +      %if "%em_freq" ne "" %then %do ;
2041425   +          keep %em_freq ;
2041426   +      %end ;
2041427   +   run;
2041428   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2041429   +
2041430   +   %doendtb:
2041431   +
2041432   +%mend trainboost;
2041433   +
2041434   +%macro trainbag(groupid=);
2041435   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2041436   +   data _null_;
2041437   +      retain index 0;
2041438   +      set &baginfoDs;
2041439   +      call symput('targetname', strip(_target_));
2041440   +   run;
2041441   +
2041442   +   %let decmeta = ;
2041443   +   data _null_;
2041444   +       set &em_import_data_eminfo;
2041445   +       where (key='DECMETA' and TARGET="&targetname");
2041446   +       call symput('DECMETA', strip(data));
2041447   +   run;
2041448   +   %if "&decmeta" eq "" %then %do;
2041449   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2041450   +       %goto doendtg;
2041451   +   %end;
2041452   +
2041453   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2041454   +
2041455   +   %doendtg:
2041456   +%mend trainbag;
2041457   +
2041458   +%macro traingroup(groupid=);
2041459   +   %let targetNum = 0;
2041460   +
2041461   +   data _temp1;
2041462   +      set &em_lib..&groupid._eminfo;
2041463   +      where key='MODEL';
2041464   +   run;
2041465   +   data _temp2;
2041466   +      set &em_import_data_eminfo;
2041467   +      where key='MODEL';
2041468   +   run;
2041469   +   proc sort data=_temp1; by TARGET DATA;
2041470   +   proc sort data=_temp2; by TARGET DATA;
2041471   +   data _temp2;
2041472   +      merge _temp1(in=_a) _temp2(in=_b);
2041473   +      by TARGET DATA;
2041474   +      if ^_a and _b then output;
2041475   +   run;
2041476   +   data _null_;
2041477   +      retain index 0;
2041478   +      set _temp2 end=eof;
2041479   +      index +1;
2041480   +      where key ='MODEL';
2041481   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2041482   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2041483   +      if eof then
2041484   +         call symput('targetnum', strip(put(index, best.)));
2041485   +   run;
2041486   +   proc datasets lib=work nolist;
2041487   +      delete _temp1 _temp2;
2041488   +   run;
2041489   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2041490   +
2041491   +   %let modelString =;
2041492   +   %do i=1 %to &targetnum;
2041493   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2041494   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2041495   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2041496   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2041497   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2041498   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2041499   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2041500   +            %let modelString = &modelString &&modelid&i;
2041501   +       %end;
2041502   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2041503   +   %end;
2041504   +
2041505   +   %doendtgp:
2041506   +
2041507   +%mend traingroup;
2041508   +
2041509   +%macro getSize(data=, nobsvar=);
2041510   +
2041511   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2041512   +       %let dsid = %sysfunc(open(&data));
2041513   +       %if &dsid %then %do;
2041514   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2041515   +           %let dsid = %sysfunc(close(&dsid));
2041516   +       %end;
2041517   +   %end;
2041518   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2041519   +        proc sql;
2041520   +           reset noprint;
2041521   +           select count(*) into :&nobsvar from &data;
2041522   +        quit;
2041523   +   %end;
2041524   +
2041525   +%mend getsize;
2041526   +
2041527   +%macro train;
2041528   +
2041529   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2041530   +      %let EM_TOOLTYPE=UTILITY;
2041531   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2041532   +          proc delete data=&em_data_eminfo;
2041533   +          run;
2041534   +      %end;
2041535   +      %goto doendtr;
2041536   +   %end;
2041537   +
2041538   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2041539   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2041540   +       %goto doendtr;
2041541   +   %end;
2041542   +
2041543   +   %let xgroupid = ;
2041544   +   data _null_;
2041545   +      set &em_import_data_eminfo;
2041546   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2041547   +      call symput('XGROUPID',  strip(data));
2041548   +      call symput('LOOPTYPE', strip(key));
2041549   +   run;
2041550   +
2041551   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2041552   +       %let nDataObs=0;
2041553   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2041554   +
2041555   +       %let nStartObs=0;
2041556   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2041557   +
2041558   +       %if &nDataObs ne &nStartObs %then %do;
2041559   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2041560   +           %goto doendtr;
2041561   +       %end;
2041562   +
2041563   +       %trainboost(groupid=&xgroupid);
2041564   +   %end;
2041565   +   %else
2041566   +   %if "&looptype" eq "BAGINFO" %then %do;
2041567   +       %trainbag(groupid=&xgroupid);
2041568   +   %end;
2041569   +   %else
2041570   +   %if "&looptype" eq "GROUPINFO" %then %do;
2041571   +       %traingroup(groupid=&xgroupid);
2041572   +   %end;
2041573   +   %else
2041574   +   %if "&looptype" eq "TARGETINFO" %then %do;
2041575   +       %traintarget(groupid=&xgroupid);
2041576   +   %end;
2041577   +
2041578   +   data &em_data_eminfo;
2041579   +      length TARGET KEY $32  DATA $43;
2041580   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2041581   +   run;
2041582   +
2041583   +   %let EM_TOOLTYPE=MODEL;
2041584   +
2041585   +   %doendtr:
2041586   +
2041587   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp2_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE2_EMRANK.
NOTE: The data set EMWS1.ENDGRP2_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.TREE2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST has 12 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp2_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp2";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041588    *------------------------------------------------------------*;
2041589    * End TRAIN: EndGrp2;
2041590    *------------------------------------------------------------*;
2041591
 
2041592    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2041593    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2041594    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041595    ;
MPRINT(EM_DIAGRAM):   ;
2041596    ;
MPRINT(EM_DIAGRAM):   ;
2041597    ;
MPRINT(EM_DIAGRAM):   ;
2041598    ;
MPRINT(EM_DIAGRAM):   ;
2041599    quit;
MPRINT(EM_DIAGRAM):   quit;
2041600    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041601    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2041602    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041603    /*; *"; *'; */
2041604    ;
MPRINT(EM_DIAGRAM):   ;
2041605    run;
MPRINT(EM_DIAGRAM):   run;
2041606    quit;
MPRINT(EM_DIAGRAM):   quit;
2041607    /* Reset EM Options */
2041608    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2041609    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2041610    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:03 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:48:03 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35Q4P6W "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35Q4P6W new;
MPRINT(EM_DIAGRAM):   run;
2041712    %let EMEXCEPTIONSTRING=;
2041713    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2041714    * SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp2;
2041715    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2041716    %let EM_ACTION = SCORE;
2041717    %let syscc = 0;
2041718    %macro main;
2041719       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2041720
2041721           filename temp catalog 'sashelp.emutil.endgp_train.source';
2041722           %include temp;
2041723           filename temp;
2041724
2041725           %train;
2041726
2041727       %end;
2041728       %else
2041729          %if %upcase(&EM_ACTION) = SCORE %then %do;
2041730
2041731           filename temp catalog 'sashelp.emutil.endgp_score.source';
2041732           %include temp;
2041733           filename temp;
2041734
2041735           %score;
2041736       %end;
2041737       %else
2041738       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2041739
2041740           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2041741           %include temp;
2041742           filename temp;
2041743
2041744           %postloop;
2041745
2041746       %end;
2041747
2041748       %doendm:
2041749    %mend main;
2041750
2041751    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2041752   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2041754   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2041755   +       data &out / view=&out;
2041756   +          set &data
2041758   +          %if "&prescore" = "Y" %then %do;
2041759   +              (obs=1)
2041760   +          %end;
2041762   +          ;
2041764   +          %inc &scoreref;
2041766   +          %if "&prescore" eq "Y" %then %do;
2041767   +              drop I_: R_:;
2041768   +          %end;
2041770   +       run;
2041771   +   %end;
2041773   +%mend scoretables;
2041775   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2041776   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2041777   +   data _null_;
2041778   +      retain index 0;
2041779   +      set &infoDs;
2041780   +      call symput('targetname', strip(_target_));
2041781   +      call symput('endloopnum', strip(_loop_));
2041782   +   run;
2041784   +   %let endgrp_decmeta=;
2041785   +   %let endgrp_decdata=;
2041787   +   data _null_;
2041788   +      set &em_import_data_eminfo;
2041789   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2041790   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2041791   +      else
2041792   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2041793   +      else call symput('MODELID', strip(data));
2041794   +   run;
2041796   +   %let headerString= Boosting;
2041797   +   %let prefixString= _BoostVar;
2041799   +   %if "&type" = "BAGINFO" %then %do;
2041800   +        %let headerString = Bagging;
2041801   +        %let prefixString= _BagVar;
2041802   +   %end;
2041804   +   %let targetType=;
2041805   +   %let predictedVars=;
2041806   +   data _null_;
2041807   +      retain index;
2041808   +      set &endgrp_decmeta end=eof;
2041809   +      length tempvar $200;
2041810   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2041811   +      else
2041812   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2041813   +      else
2041814   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2041815   +      else
2041816   +      if _TYPE_ = 'PREDICTED' then do;
2041817   +         index+1;
2041818   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2041819   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2041820   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2041821   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2041822   +      end;
2041823   +      if eof then
2041824   +         call symput('prednum', strip(put(index, best.)));
2041825   +   run;
2041827   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2041828   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2041830   +   filename loopflow "&em_user_loopflowcode";
2041831   +   filename looppub "&em_user_looppubcode";
2041833   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2041834   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2041836   +   %if "&emloopnumber" = "1" %then %do;
2041837   +       data _null_;
2041838   +          rc = fdelete('loopflow');
2041839   +          rc = fdelete('looppub');
2041840   +       run;
2041841   +       data _null_;
2041842   +          file loopflow;
2041843   +          put "&em_codebar;";
2041844   +          put "* &em_nodeid: ;" ;
2041845   +          put "* User: &sysuserid;";
2041846   +          put "* Date: &sysdate: &systime;";
2041847   +          put "&em_codebar ;";
2041848   +          put "* Ensemble Code;";
2041849   +          put "&em_codebar ;";
2041850   +          put "* &headerString: Loop=1;";
2041851   +          put "* Temporary Variables;";
2041852   +          %do i= 1 %to &prednum;
2041853   +              put "drop &&tempvars&i;";
2041854   +              put "&&tempvars&i = 0;";
2041855   +          %end;
2041856   +       run;
2041857   +       %em_copyfile(infref=loopflow, outfref=looppub);
2041858   +   %end;
2041860   +   %let j=&emloopnumber;
2041861   +   %do i = 1 %to &loopcodenum;
2041862   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2041863   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2041865   +       %if (&&loopnode&i eq &em_nodeid ) or
2041866   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2041867   +           data _null_;
2041868   +              file loopflow mod;
2041869   +              put "&em_codebar;";
2041870   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2041871   +              put "* User: &sysuserid;";
2041872   +              put "* Date: &sysdate: &systime;";
2041873   +              put "* &headerString: Loop=&j;";
2041874   +              put "&em_codebar;";
2041875   +           run;
2041876   +           data _null_;
2041877   +              file looppub mod;
2041878   +              put "&em_codebar;";
2041879   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2041880   +              put "* User: &sysuserid;";
2041881   +              put "* Date: &sysdate: &systime;";
2041882   +              put "* &headerString: Loop=&j;";
2041883   +              put "&em_codebar;";
2041884   +           run;
2041885   +       %end;
2041887   +       %if &&loopnode&i ne &em_nodeid %then %do;
2041888   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2041889   +               filename x catalog "&fsourceEntry";
2041890   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2041891   +               filename x;
2041893   +               filename y catalog "&psourceEntry";
2041894   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2041895   +               filename y;
2041896   +           %end;
2041897   +       %end;
2041898   +       %else %do;
2041899   +           %if "&j" ne "1" %then %do;
2041900   +               %let weight = %eval(&j-1);
2041901   +               data _null_;
2041902   +                  file loopflow mod;
2041903   +                  put "&em_codebar;";
2041904   +                  %if "&j" ne "&endloopnum" %then %do;
2041905   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2041906   +                  %end;
2041907   +                  %else %do;
2041908   +                      put "* &headerString: accumulate final probabilities;";
2041909   +                  %end;
2041910   +                  put "&em_codebar;";
2041911   +                  %do k=1 %to &prednum;
2041912   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2041913   +                  %end;
2041914   +               run;
2041915   +               data _null_;
2041916   +                  file looppub mod;
2041917   +                  put "&em_codebar;";
2041918   +                  %if "&j" ne "&endloopnum" %then %do;
2041919   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2041920   +                  %end;
2041921   +                  %else %do;
2041922   +                      put "* &headerString: accumulate final probabilities;";
2041923   +                  %end;
2041924   +                  %do k=1 %to &prednum;
2041925   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2041926   +                  %end;
2041927   +               run;
2041928   +           %end;
2041929   +           %if "&j" ne "&endloopnum" %then %do;
2041930   +               data _null_;
2041931   +                  file loopflow mod;
2041932   +                  put "&em_codebar;";
2041933   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2041934   +                  put "&em_codebar;";
2041935   +               %do k=1 %to &prednum;
2041936   +                  put "&&tempvars&k = &&predvars&k;";
2041937   +               %end;
2041938   +               run;
2041939   +               data _null_;
2041940   +                  file looppub mod;
2041941   +                  put "&em_codebar;";
2041942   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2041943   +                  put "&em_codebar;";
2041944   +               %do k=1 %to &prednum;
2041945   +                   put "&&tempvars&k = &&predvars&k;";
2041946   +               %end;
2041947   +               run;
2041948   +           %end;
2041950   +       %end;
2041951   +   %end;
2041953   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2041954   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2041956   +   filename loopflow;
2041957   +   filename looppub;
2041958   +   filename empub;
2041960   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2041961   +   %let gpTrain=;
2041962   +   %let gpValidate=;
2041963   +   %let gpTest=;
2041965   +   data _null_;
2041966   +      set &groupImportDs;
2041967   +      select(upcase(port));
2041968   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2041969   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2041970   +          when('TEST')     call symput('gpTest',     strip(dataset));
2041971   +       otherwise;
2041972   +      end;
2041973   +   run;
2041975   +   %if "&gpTrain" ne "" %then %do;
2041977   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2041979   +       %if &targetType ne INTERVAL %then %do;
2041980   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2041981   +       %end;
2041983   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2041985   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2041987   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2041988   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2041990   +       filename _decflow "&decflow";
2041991   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2041992   +       filename _decflow;
2041994   +   %end;
2041996   +   %if "&gpTrain" ne "" %then
2041997   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2041998   +   %if "&gpValidate" ne "" %then
2041999   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2042000   +   %if "&gpTest" ne "" %then
2042001   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2042003   +   filename emflow;
2042005   +%mend boostbagcode;
2042007   +%macro score;
2042009   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2042010   +   %inc _dec;
2042011   +   filename _dec;
2042013   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2042015   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2042016   +       %let emexceptionstring = nomodeltarget;
2042017   +       %goto doendpl;
2042018   +   %end;
2042020   +   %LET GROUPID=;
2042021   +   %let LOOPTYPE=;
2042022   +   data _null_;
2042023   +      set &em_import_data_eminfo;
2042024   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2042025   +      call symput('GROUPID',   strip(data));
2042026   +      call symput('LOOPTYPE', strip(key));
2042027   +   run;
2042029   +   %em_getname(key=PATH, type=DATA);
2042031   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2042032   +   %include temp;
2042033   +   filename temp;
2042035   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2042037   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2042038   +       %let deleteString = &em_nodeid._path;
2042039   +       proc datasets lib=&em_lib nolist;
2042040   +          delete &deleteString;
2042041   +       run;
2042042   +       quit;
2042043   +   %end;
2042045   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2042047   +   data score_path;
2042048   +      retain LOOPID &emloopnumber;
2042049   +      set score_path;
2042050   +   run;
2042052   +   proc append base=&em_user_path  data=score_path;
2042053   +   run;
2042055   +   %let EnsembleIndex=0;
2042056   +   data _null_;
2042057   +      retain index 0 ensembleIndex 0;
2042058   +      set score_Path end=eof;
2042059   +      if nodelabel = "&groupid" or index then do;
2042060   +         index + 1;
2042061   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2042062   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2042063   +      end;
2042064   +      if component='Ensemble' then ensembleIndex = index;
2042065   +      if eof then do;
2042066   +         call symput('loopcodenum', strip(put(index, best.)));
2042067   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2042068   +      end;
2042069   +   run;
2042071   +   proc datasets lib=work nolist;
2042072   +      delete score_Path;
2042073   +   run;
2042074   +   quit;
2042076   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2042077   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2042079   +   %doendpl:
2042081   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2042082   +/*
2042083   +       MACRO: EM_DECIDECODE
2042084   +
2042085   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2042086   +       SUPPORT: Taiyeong Lee
2042087   +
2042088   +       HISTORY: 01OCT04 Initial code
2042089   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2042090   +                to add the corresponding decision code
2042091   +
2042092   +*/
2042093   +
2042094   +
2042095   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2042096   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2042097   +
2042098   +    %do;
2042099   +    %let m_data      = &data;
2042100   +    %let m_decdata   = &decdata;
2042101   +    %let m_decmeta   = &decmeta;
2042102   +    %let m_noresfile = &noresfile;
2042103   +    %let m_resfile   = &resfile;
2042104   +    dm "afa c=sashelp.emutil.decidecode.scl";
2042105   +  %end;
2042106   +%mend EM_DECIDECODE;
2042107   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2042108   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2042109   +   proc display c=sashelp.emcore.pathscorecode.scl;
2042110   +   run;
2042111   +%mend EM_GETTRAINPATH;
2042112   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2042113    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2042114    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2042115    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2042116    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2042117    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2042118    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2042119    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2042120    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042121    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042122    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042123    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042124    output;
MPRINT(EM_GETTRAINPATH):   output;
2042125    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2042126    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2042127    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2042128    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2042129    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2042130    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042131    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042132    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042133    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042134    output;
MPRINT(EM_GETTRAINPATH):   output;
2042135    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2042136    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2042137    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2042138    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2042139    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2042140    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042141    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042142    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042143    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042144    output;
MPRINT(EM_GETTRAINPATH):   output;
2042145    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2042146    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2042147    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2042148    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2042149    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2042150    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042151    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042152    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042153    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042154    output;
MPRINT(EM_GETTRAINPATH):   output;
2042155    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2042156    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2042157    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2042158    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2042159    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2042160    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042161    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042162    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042163    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042164    output;
MPRINT(EM_GETTRAINPATH):   output;
2042165    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2042166    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2042167    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2042168    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2042169    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2042170    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042171    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042172    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042173    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042174    output;
MPRINT(EM_GETTRAINPATH):   output;
2042175    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2042176    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2042177    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2042178    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2042179    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2042180    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042181    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042182    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042183    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042184    output;
MPRINT(EM_GETTRAINPATH):   output;
2042185    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2042186    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2042187    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2042188    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2042189    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2042190    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042191    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042192    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042193    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042194    output;
MPRINT(EM_GETTRAINPATH):   output;
2042195    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2042196    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2042197    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2042198    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2042199    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2042200    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042201    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042202    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042203    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042204    output;
MPRINT(EM_GETTRAINPATH):   output;
2042205    nodelabel="Grp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp2";
2042206    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2042207    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2042208    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2042209    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2042210    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042211    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042212    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042213    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042214    output;
MPRINT(EM_GETTRAINPATH):   output;
2042215    nodelabel="Tree2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree2";
2042216    parent="Grp2";
MPRINT(EM_GETTRAINPATH):   parent="Grp2";
2042217    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2042218    component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
2042219    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2042220    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042221    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042222    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042223    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042224    output;
MPRINT(EM_GETTRAINPATH):   output;
2042225    nodelabel="EndGrp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp2";
2042226    parent="Tree2";
MPRINT(EM_GETTRAINPATH):   parent="Tree2";
2042227    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2042228    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2042229    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2042230    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2042231    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2042232    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2042233    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2042234    output;
MPRINT(EM_GETTRAINPATH):   output;
2042235    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 6;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp2_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP2_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP2_PATH has 72 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp2" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2042236    *------------------------------------------------------------*;
2042237    * End SCORE: EndGrp2;
2042238    *------------------------------------------------------------*;
2042239
 
2042240    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2042241    * EndGrp2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Scoring DATA data;
2042242    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2042243    data EMWS1.EndGrp2_TRAIN
2042244    / view=EMWS1.EndGrp2_TRAIN
2042245    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_TRAIN / view=EMWS1.EndGrp2_TRAIN ;
2042246    set EMWS1.Tree2_TRAIN
2042247    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_TRAIN ;
2042248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2042249    quit;
 
2042251    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2042252    * EndGrp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Computing metadata for TRAIN data;
2042253    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp2_TRAIN out=WORK.M0G1L_7E noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0G1L_7E;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0G1L_7E(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0G1L_7E;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0G1L_7E;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M165TLIU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34OPFUI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   set WORK.M165TLIU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2042599    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2042600    set EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO;
2042601    where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2042602    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMINFO.
      WHERE (DATA='EndGrp2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2042603    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMINFO;
2042604    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2042605    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2042606    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2042610    run;
2042611    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
2042612    set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
2042613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2042614    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
2042615    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2042616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2042617    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2042618    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2042619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2042620    proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2042621    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2042622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2042623    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
2042624    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2042625    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2042626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2042627    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2042628    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2042629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2042630    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:04 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:48:04 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0RQJ5GP "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0RQJ5GP new;
MPRINT(EM_DIAGRAM):   run;
2042654    data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT;
2042655    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2042656    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2042657    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2042658    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2042659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2042660    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
2042661    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2042662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2042663    %let _EMwarndup = 0;
2042664    %let _EMtargetdup =;
2042665    %let _EMASEtargetdup =;
2042666    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2042667    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2042668    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2042669    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2042670    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2042671    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2042672    end;
MPRINT(EM_DIAGRAM):   end;
2042673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2042674    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
2042675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2042676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2042677    proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2042678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2042679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2042680    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2042681    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2042682    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2042683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2042684    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2042685    set EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_CMeta_TRAIN;
2042686    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2042687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2042688    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2042689    set EMWS1.EndGrp2_TRAIN(keep=
2042690    F_DepVar
2042691    I_DepVar
2042692    P_DepVar0
2042693    P_DepVar1
2042694    Q_DepVar0
2042695    Q_DepVar1
2042696    R_DepVar0
2042697    R_DepVar1
2042698    U_DepVar
2042699    _WARN_
2042700    DepVar
2042701    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2042702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2185 observations read from the data set EMWS1.GRP2_TRAIN.
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2185 observations read from the data set EMWS1.TREE2_TRAIN.
NOTE: There were 2185 observations read from the data set EMWS1.ENDGRP2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2185 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2046889    %let _cn = %sysfunc(getoption(CENTER));
2046890    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2046891    proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
2046892    var STAT LABEL TRAIN
2046893    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2046894    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2046895    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2046896    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2046897    run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1361.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2046898    title10;
MPRINT(EM_DIAGRAM):   title10;
2046899    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2046900    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
2046901    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2046902    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046903    %let _cn = %sysfunc(getoption(CENTER));
2046904    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2046905    proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
2046906    var from into pct_row pct_col count percent
2046907    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2046908    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2046909    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2046910    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2046911    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2046912    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2046913    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2046914    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2046915    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2046916    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2046917    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2046918    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1362.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046919    title9;
MPRINT(EM_DIAGRAM):   title9;
2046920    title10;
MPRINT(EM_DIAGRAM):   title10;
2046921    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2046922    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2046923    modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2046924    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2046925    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2046926    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMRANK.DATA.
2046927    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2046928    %let _cn = %sysfunc(getoption(CENTER));
2046929    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2046930    proc print data=EMWS1.EndGrp2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMRANK label noobs;
2046931    var
2046932    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2046933    by
2046934    notsorted DATAROLE
2046935    notsorted TARGET
2046936    notsorted TARGETLABEL
2046937    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2046938    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2046939    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2046940    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1363.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2046941    title10;
MPRINT(EM_DIAGRAM):   title10;
2046942    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2046943    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2046944    modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2046945    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2046946    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2046947    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMSCOREDIST.DATA.
2046948    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
 
2046949    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2046950    set EMWS1.Grp2_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp2_GROUPINFO;
2046951    where _LOOP_=6;
MPRINT(EM_DIAGRAM):   where _LOOP_=6;
2046952    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2046953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP2_GROUPINFO.
      WHERE _LOOP_=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2046954    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2046955    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2046956    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2046957    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2046958    set EMWS1.EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK;
2046959    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2046960    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2046961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046962    data EMWS1.EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMRANK_LOOP;
2046963    set EMWS1.EndGrp2_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK_LOOP temp;
2046964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set EMWS1.ENDGRP2_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMRANK_LOOP has 120 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046965    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2046966    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2046967    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2046968    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2046969    set EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST;
2046970    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2046971    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2046972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 12 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2046973    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
2046974    set EMWS1.EndGrp2_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST_LOOP temp;
2046975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP.
NOTE: There were 12 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP has 78 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2046976    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2046977    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2046978    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2046979    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2046980    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2046981    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2046982    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2046983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046984    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
2046985    set EMWS1.EndGrp2_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT_LOOP temp;
2046986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT_LOOP has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2046987    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2046988    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2046989    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2046990    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2046991    set EMWS1.EndGrp2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT;
2046992    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2046993    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2046994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2046995    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
2046996    set EMWS1.EndGrp2_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT_LOOP temp;
2046997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2046998    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2046999    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2047000    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2047001    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2047002    set EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION;
2047003    _LOOP_ =6;
MPRINT(EM_DIAGRAM):   _LOOP_ =6;
2047004    _WHERE_ ="^(cv_var =6)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =6)";
2047005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2047006    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
2047007    set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP temp;
2047008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP has 24 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
