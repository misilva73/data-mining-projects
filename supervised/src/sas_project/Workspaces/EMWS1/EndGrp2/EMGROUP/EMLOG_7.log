*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:52:00 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:51:54 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:51:54 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O03KAR12 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O03KAR12 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMLOG_7.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:51:54 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMOUTPUT_7.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:51:54 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2374727    proc freq data=EMWS1.EndGrp2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp2_VariableSet noprint;
2374728    table ROLE*LEVEL/out=WORK.EndGrp2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp2META;
2374729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.ENDGRP2META has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
2374730    proc print data=WORK.EndGrp2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2META label noobs;
2374731    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2374732    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
2374733    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2374734    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2374735    run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRP2META.
NOTE: The PROCEDURE PRINT printed page 1591.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2374736    title10;
MPRINT(EM_DIAGRAM):   title10;
2374737    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2374766    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
2374767    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2374768    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2374769       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2374770    set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
2374771    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2374772    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2374773    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2374774    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2374775    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2374776    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2374777    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2374778    end;
MPRINT(EM_DIAGRAM):   end;
2374779    output;
MPRINT(EM_DIAGRAM):   output;
2374780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2374781    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2374782    proc print data=WORK.EndGrp2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2_EVENT noobs label;
2374783    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2374784    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2374785    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2374786    run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP2_EVENT.
NOTE: The PROCEDURE PRINT printed page 1592.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2374787    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2374788    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
2374789    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2374790    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
2374791    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2374792    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2374793    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2374794    run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1593.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2374795    title10;
MPRINT(EM_DIAGRAM):   title10;
2374796    %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=297;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.1350613915416;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1902;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86493860845839;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
2375272    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2375273    * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
2375274    * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
2375275    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
2375276    %let EMEXCEPTIONSTRING=;
2375277    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2375278    * TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp2;
2375279    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375280    %let EM_ACTION = TRAIN;
2375281    %let syscc = 0;
2375282    %macro main;
2375283       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2375284
2375285           filename temp catalog 'sashelp.emutil.endgp_train.source';
2375286           %include temp;
2375287           filename temp;
2375288
2375289           %train;
2375290
2375291       %end;
2375292       %else
2375293          %if %upcase(&EM_ACTION) = SCORE %then %do;
2375294
2375295           filename temp catalog 'sashelp.emutil.endgp_score.source';
2375296           %include temp;
2375297           filename temp;
2375298
2375299           %score;
2375300       %end;
2375301       %else
2375302       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2375303
2375304           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2375305           %include temp;
2375306           filename temp;
2375307
2375308           %postloop;
2375309
2375310       %end;
2375311
2375312       %doendm:
2375313    %mend main;
2375314
2375315    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
2375316   +%macro copyModelDs(model=, key=);
2375317   +   %let modelDs  = &em_lib..&model._&key;
2375318   +   %let reportDs = &em_lib..&em_nodeid._&key;
2375319   +   %if %sysfunc(exist(&modelDs)) %then %do;
2375320   +       data &reportDs;
2375321   +          length ModelId $16;
2375322   +          retain ModelId "&model";
2375323   +          set &modelDs;
2375324   +       run;
2375325   +   %end;
2375326   +%mend copyModelDs;
2375327   +
2375328   +%macro traintarget(groupid=);
2375329   +   %em_getname(key=emoutfit, type=DATA);
2375330   +   %let targetname=;
2375331   +   data _null_;
2375332   +     set &em_lib..&groupid._&looptype;
2375333   +     where _LOOP_ = &EMLOOPNUMBER;
2375334   +     call symput('targetname', strip(_TARGET_));
2375335   +   run;
2375336   +   %let modelId =;
2375337   +   data _null_;
2375338   +      set &em_import_data_eminfo;
2375339   +      where key = 'MODEL' and TARGET = "&targetname";
2375340   +      call symput('modelId',   strip(data));
2375341   +   run;
2375342   +   %if "&modelId" ne "" %then %do;
2375343   +       %copyModelDs(model=&modelid, key=EMRANK);
2375344   +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
2375345   +       %copyModelDs(model=&modelid, key=EMOUTFIT);
2375346   +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
2375347   +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
2375348   +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
2375349   +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2375350   +   %end;
2375351   +
2375352   +   %doendtgp:
2375353   +%mend;
2375354   +
2375355   +%macro trainboost(groupid=);
2375356   +
2375357   +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
2375358   +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
2375359   +
2375360   +   data _null_;
2375361   +      retain index 0;
2375362   +      set &boostinfoDs;
2375363   +      call symput('targetname', strip(_target_));
2375364   +   run;
2375365   +
2375366   +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
2375367   +       %let decmeta = ;
2375368   +       data _null_;
2375369   +          set &em_import_data_eminfo;
2375370   +          where (key='DECMETA' and TARGET="&targetname");
2375371   +          call symput('DECMETA', strip(data));
2375372   +       run;
2375373   +       %if "&decmeta" eq "" %then %do;
2375374   +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2375375   +           %goto doendtb;
2375376   +       %end;
2375377   +
2375378   +       %let predictedVars=;
2375379   +       data _null_;
2375380   +          set &decmeta;
2375381   +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2375382   +          else
2375383   +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2375384   +          else
2375385   +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
2375386   +       run;
2375387   +       %if %index(&EM_DEBUG, _ALL_) %then %do;
2375388   +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
2375389   +       %end;
2375390   +   %end;
2375391   +
2375392   +   * ;
2375393   +   * ENDGROUP &NODEID : Boosting scoring ;
2375394   +   * ;
2375395   +   data &em_lib..&groupid._boostscore;
2375396   +      set &em_import_data;
2375397   +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
2375398   +      %if "%em_freq" ne "" %then %do ;
2375399   +          keep %em_freq ;
2375400   +      %end ;
2375401   +   run;
2375402   +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2375403   +
2375404   +   %doendtb:
2375405   +
2375406   +%mend trainboost;
2375407   +
2375408   +%macro trainbag(groupid=);
2375409   +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
2375410   +   data _null_;
2375411   +      retain index 0;
2375412   +      set &baginfoDs;
2375413   +      call symput('targetname', strip(_target_));
2375414   +   run;
2375415   +
2375416   +   %let decmeta = ;
2375417   +   data _null_;
2375418   +       set &em_import_data_eminfo;
2375419   +       where (key='DECMETA' and TARGET="&targetname");
2375420   +       call symput('DECMETA', strip(data));
2375421   +   run;
2375422   +   %if "&decmeta" eq "" %then %do;
2375423   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2375424   +       %goto doendtg;
2375425   +   %end;
2375426   +
2375427   +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2375428   +
2375429   +   %doendtg:
2375430   +%mend trainbag;
2375431   +
2375432   +%macro traingroup(groupid=);
2375433   +   %let targetNum = 0;
2375434   +
2375435   +   data _temp1;
2375436   +      set &em_lib..&groupid._eminfo;
2375437   +      where key='MODEL';
2375438   +   run;
2375439   +   data _temp2;
2375440   +      set &em_import_data_eminfo;
2375441   +      where key='MODEL';
2375442   +   run;
2375443   +   proc sort data=_temp1; by TARGET DATA;
2375444   +   proc sort data=_temp2; by TARGET DATA;
2375445   +   data _temp2;
2375446   +      merge _temp1(in=_a) _temp2(in=_b);
2375447   +      by TARGET DATA;
2375448   +      if ^_a and _b then output;
2375449   +   run;
2375450   +   data _null_;
2375451   +      retain index 0;
2375452   +      set _temp2 end=eof;
2375453   +      index +1;
2375454   +      where key ='MODEL';
2375455   +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
2375456   +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
2375457   +      if eof then
2375458   +         call symput('targetnum', strip(put(index, best.)));
2375459   +   run;
2375460   +   proc datasets lib=work nolist;
2375461   +      delete _temp1 _temp2;
2375462   +   run;
2375463   +   %if "&targetNum" eq "0" %then %goto doendtgp;
2375464   +
2375465   +   %let modelString =;
2375466   +   %do i=1 %to &targetnum;
2375467   +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
2375468   +            %copyModelDs(model=&&modelid&i, key=EMRANK);
2375469   +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
2375470   +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
2375471   +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
2375472   +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
2375473   +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
2375474   +            %let modelString = &modelString &&modelid&i;
2375475   +       %end;
2375476   +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
2375477   +   %end;
2375478   +
2375479   +   %doendtgp:
2375480   +
2375481   +%mend traingroup;
2375482   +
2375483   +%macro getSize(data=, nobsvar=);
2375484   +
2375485   +   %if %sysfunc(exist(&data, DATA)) %then %do;
2375486   +       %let dsid = %sysfunc(open(&data));
2375487   +       %if &dsid %then %do;
2375488   +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
2375489   +           %let dsid = %sysfunc(close(&dsid));
2375490   +       %end;
2375491   +   %end;
2375492   +    %if %sysfunc(exist(&data, VIEW)) %then %do;
2375493   +        proc sql;
2375494   +           reset noprint;
2375495   +           select count(*) into :&nobsvar from &data;
2375496   +        quit;
2375497   +   %end;
2375498   +
2375499   +%mend getsize;
2375500   +
2375501   +%macro train;
2375502   +
2375503   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
2375504   +      %let EM_TOOLTYPE=UTILITY;
2375505   +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
2375506   +          proc delete data=&em_data_eminfo;
2375507   +          run;
2375508   +      %end;
2375509   +      %goto doendtr;
2375510   +   %end;
2375511   +
2375512   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2375513   +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
2375514   +       %goto doendtr;
2375515   +   %end;
2375516   +
2375517   +   %let xgroupid = ;
2375518   +   data _null_;
2375519   +      set &em_import_data_eminfo;
2375520   +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2375521   +      call symput('XGROUPID',  strip(data));
2375522   +      call symput('LOOPTYPE', strip(key));
2375523   +   run;
2375524   +
2375525   +   %if "&looptype" eq "BOOSTINFO" %then %do;
2375526   +       %let nDataObs=0;
2375527   +       %getSize(data=&em_import_data, nobsvar=nDataObs);
2375528   +
2375529   +       %let nStartObs=0;
2375530   +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
2375531   +
2375532   +       %if &nDataObs ne &nStartObs %then %do;
2375533   +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
2375534   +           %goto doendtr;
2375535   +       %end;
2375536   +
2375537   +       %trainboost(groupid=&xgroupid);
2375538   +   %end;
2375539   +   %else
2375540   +   %if "&looptype" eq "BAGINFO" %then %do;
2375541   +       %trainbag(groupid=&xgroupid);
2375542   +   %end;
2375543   +   %else
2375544   +   %if "&looptype" eq "GROUPINFO" %then %do;
2375545   +       %traingroup(groupid=&xgroupid);
2375546   +   %end;
2375547   +   %else
2375548   +   %if "&looptype" eq "TARGETINFO" %then %do;
2375549   +       %traintarget(groupid=&xgroupid);
2375550   +   %end;
2375551   +
2375552   +   data &em_data_eminfo;
2375553   +      length TARGET KEY $32  DATA $43;
2375554   +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
2375555   +   run;
2375556   +
2375557   +   %let EM_TOOLTYPE=MODEL;
2375558   +
2375559   +   %doendtr:
2375560   +
2375561   +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp2_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE2_EMRANK.
NOTE: The data set EMWS1.ENDGRP2_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.TREE2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST has 14 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp2_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp2";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375562    *------------------------------------------------------------*;
2375563    * End TRAIN: EndGrp2;
2375564    *------------------------------------------------------------*;
2375565
 
2375566    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2375567    * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
2375568    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375569    ;
MPRINT(EM_DIAGRAM):   ;
2375570    ;
MPRINT(EM_DIAGRAM):   ;
2375571    ;
MPRINT(EM_DIAGRAM):   ;
2375572    ;
MPRINT(EM_DIAGRAM):   ;
2375573    quit;
MPRINT(EM_DIAGRAM):   quit;
2375574    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375575    * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
2375576    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375577    /*; *"; *'; */
2375578    ;
MPRINT(EM_DIAGRAM):   ;
2375579    run;
MPRINT(EM_DIAGRAM):   run;
2375580    quit;
MPRINT(EM_DIAGRAM):   quit;
2375581    /* Reset EM Options */
2375582    options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
2375583    options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
2375584    goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:51:57 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:51:57 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2MK32W6 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2MK32W6 new;
MPRINT(EM_DIAGRAM):   run;
2375686    %let EMEXCEPTIONSTRING=;
2375687    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2375688    * SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp2;
2375689    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2375690    %let EM_ACTION = SCORE;
2375691    %let syscc = 0;
2375692    %macro main;
2375693       %if %upcase(&EM_ACTION) = TRAIN %then %do;
2375694
2375695           filename temp catalog 'sashelp.emutil.endgp_train.source';
2375696           %include temp;
2375697           filename temp;
2375698
2375699           %train;
2375700
2375701       %end;
2375702       %else
2375703          %if %upcase(&EM_ACTION) = SCORE %then %do;
2375704
2375705           filename temp catalog 'sashelp.emutil.endgp_score.source';
2375706           %include temp;
2375707           filename temp;
2375708
2375709           %score;
2375710       %end;
2375711       %else
2375712       %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
2375713
2375714           filename temp catalog 'sashelp.emutil.endgp_postloop.source';
2375715           %include temp;
2375716           filename temp;
2375717
2375718           %postloop;
2375719
2375720       %end;
2375721
2375722       %doendm:
2375723    %mend main;
2375724
2375725    %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
2375726   +%macro scoreTables(data=, out=, scoreref=, prescore=);
2375728   +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
2375729   +       data &out / view=&out;
2375730   +          set &data
2375732   +          %if "&prescore" = "Y" %then %do;
2375733   +              (obs=1)
2375734   +          %end;
2375736   +          ;
2375738   +          %inc &scoreref;
2375740   +          %if "&prescore" eq "Y" %then %do;
2375741   +              drop I_: R_:;
2375742   +          %end;
2375744   +       run;
2375745   +   %end;
2375747   +%mend scoretables;
2375749   +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
2375750   +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
2375751   +   data _null_;
2375752   +      retain index 0;
2375753   +      set &infoDs;
2375754   +      call symput('targetname', strip(_target_));
2375755   +      call symput('endloopnum', strip(_loop_));
2375756   +   run;
2375758   +   %let endgrp_decmeta=;
2375759   +   %let endgrp_decdata=;
2375761   +   data _null_;
2375762   +      set &em_import_data_eminfo;
2375763   +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
2375764   +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
2375765   +      else
2375766   +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
2375767   +      else call symput('MODELID', strip(data));
2375768   +   run;
2375770   +   %let headerString= Boosting;
2375771   +   %let prefixString= _BoostVar;
2375773   +   %if "&type" = "BAGINFO" %then %do;
2375774   +        %let headerString = Bagging;
2375775   +        %let prefixString= _BagVar;
2375776   +   %end;
2375778   +   %let targetType=;
2375779   +   %let predictedVars=;
2375780   +   data _null_;
2375781   +      retain index;
2375782   +      set &endgrp_decmeta end=eof;
2375783   +      length tempvar $200;
2375784   +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
2375785   +      else
2375786   +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
2375787   +      else
2375788   +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
2375789   +      else
2375790   +      if _TYPE_ = 'PREDICTED' then do;
2375791   +         index+1;
2375792   +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
2375793   +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
2375794   +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
2375795   +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
2375796   +      end;
2375797   +      if eof then
2375798   +         call symput('prednum', strip(put(index, best.)));
2375799   +   run;
2375801   +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
2375802   +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
2375804   +   filename loopflow "&em_user_loopflowcode";
2375805   +   filename looppub "&em_user_looppubcode";
2375807   +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
2375808   +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
2375810   +   %if "&emloopnumber" = "1" %then %do;
2375811   +       data _null_;
2375812   +          rc = fdelete('loopflow');
2375813   +          rc = fdelete('looppub');
2375814   +       run;
2375815   +       data _null_;
2375816   +          file loopflow;
2375817   +          put "&em_codebar;";
2375818   +          put "* &em_nodeid: ;" ;
2375819   +          put "* User: &sysuserid;";
2375820   +          put "* Date: &sysdate: &systime;";
2375821   +          put "&em_codebar ;";
2375822   +          put "* Ensemble Code;";
2375823   +          put "&em_codebar ;";
2375824   +          put "* &headerString: Loop=1;";
2375825   +          put "* Temporary Variables;";
2375826   +          %do i= 1 %to &prednum;
2375827   +              put "drop &&tempvars&i;";
2375828   +              put "&&tempvars&i = 0;";
2375829   +          %end;
2375830   +       run;
2375831   +       %em_copyfile(infref=loopflow, outfref=looppub);
2375832   +   %end;
2375834   +   %let j=&emloopnumber;
2375835   +   %do i = 1 %to &loopcodenum;
2375836   +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
2375837   +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
2375839   +       %if (&&loopnode&i eq &em_nodeid ) or
2375840   +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
2375841   +           data _null_;
2375842   +              file loopflow mod;
2375843   +              put "&em_codebar;";
2375844   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2375845   +              put "* User: &sysuserid;";
2375846   +              put "* Date: &sysdate: &systime;";
2375847   +              put "* &headerString: Loop=&j;";
2375848   +              put "&em_codebar;";
2375849   +           run;
2375850   +           data _null_;
2375851   +              file looppub mod;
2375852   +              put "&em_codebar;";
2375853   +              put "* &&loopnode&i: &&loopdesc&i;" ;
2375854   +              put "* User: &sysuserid;";
2375855   +              put "* Date: &sysdate: &systime;";
2375856   +              put "* &headerString: Loop=&j;";
2375857   +              put "&em_codebar;";
2375858   +           run;
2375859   +       %end;
2375861   +       %if &&loopnode&i ne &em_nodeid %then %do;
2375862   +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
2375863   +               filename x catalog "&fsourceEntry";
2375864   +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
2375865   +               filename x;
2375867   +               filename y catalog "&psourceEntry";
2375868   +               %em_copyfile(infref=y, outfref=looppub, append=Y);
2375869   +               filename y;
2375870   +           %end;
2375871   +       %end;
2375872   +       %else %do;
2375873   +           %if "&j" ne "1" %then %do;
2375874   +               %let weight = %eval(&j-1);
2375875   +               data _null_;
2375876   +                  file loopflow mod;
2375877   +                  put "&em_codebar;";
2375878   +                  %if "&j" ne "&endloopnum" %then %do;
2375879   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2375880   +                  %end;
2375881   +                  %else %do;
2375882   +                      put "* &headerString: accumulate final probabilities;";
2375883   +                  %end;
2375884   +                  put "&em_codebar;";
2375885   +                  %do k=1 %to &prednum;
2375886   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2375887   +                  %end;
2375888   +               run;
2375889   +               data _null_;
2375890   +                  file looppub mod;
2375891   +                  put "&em_codebar;";
2375892   +                  %if "&j" ne "&endloopnum" %then %do;
2375893   +                      put "* &headerString: accumulate probabilities for iteration: &j;";
2375894   +                  %end;
2375895   +                  %else %do;
2375896   +                      put "* &headerString: accumulate final probabilities;";
2375897   +                  %end;
2375898   +                  %do k=1 %to &prednum;
2375899   +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
2375900   +                  %end;
2375901   +               run;
2375902   +           %end;
2375903   +           %if "&j" ne "&endloopnum" %then %do;
2375904   +               data _null_;
2375905   +                  file loopflow mod;
2375906   +                  put "&em_codebar;";
2375907   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2375908   +                  put "&em_codebar;";
2375909   +               %do k=1 %to &prednum;
2375910   +                  put "&&tempvars&k = &&predvars&k;";
2375911   +               %end;
2375912   +               run;
2375913   +               data _null_;
2375914   +                  file looppub mod;
2375915   +                  put "&em_codebar;";
2375916   +                  put "* &headerString: Saving Probabilities for Next Iteration;";
2375917   +                  put "&em_codebar;";
2375918   +               %do k=1 %to &prednum;
2375919   +                   put "&&tempvars&k = &&predvars&k;";
2375920   +               %end;
2375921   +               run;
2375922   +           %end;
2375924   +       %end;
2375925   +   %end;
2375927   +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
2375928   +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
2375930   +   filename loopflow;
2375931   +   filename looppub;
2375932   +   filename empub;
2375934   +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
2375935   +   %let gpTrain=;
2375936   +   %let gpValidate=;
2375937   +   %let gpTest=;
2375939   +   data _null_;
2375940   +      set &groupImportDs;
2375941   +      select(upcase(port));
2375942   +          when('DATA')     call symput('gpTrain',    strip(dataset));
2375943   +          when('VALIDATE') call symput('gpValidate', strip(dataset));
2375944   +          when('TEST')     call symput('gpTest',     strip(dataset));
2375945   +       otherwise;
2375946   +      end;
2375947   +   run;
2375949   +   %if "&gpTrain" ne "" %then %do;
2375951   +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
2375953   +       %if &targetType ne INTERVAL %then %do;
2375954   +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
2375955   +       %end;
2375957   +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
2375959   +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
2375961   +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
2375962   +                                                           noresfile=, resfile=%nrbquote(&decflow));
2375964   +       filename _decflow "&decflow";
2375965   +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
2375966   +       filename _decflow;
2375968   +   %end;
2375970   +   %if "&gpTrain" ne "" %then
2375971   +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
2375972   +   %if "&gpValidate" ne "" %then
2375973   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
2375974   +   %if "&gpTest" ne "" %then
2375975   +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
2375977   +   filename emflow;
2375979   +%mend boostbagcode;
2375981   +%macro score;
2375983   +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
2375984   +   %inc _dec;
2375985   +   filename _dec;
2375987   +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
2375989   +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
2375990   +       %let emexceptionstring = nomodeltarget;
2375991   +       %goto doendpl;
2375992   +   %end;
2375994   +   %LET GROUPID=;
2375995   +   %let LOOPTYPE=;
2375996   +   data _null_;
2375997   +      set &em_import_data_eminfo;
2375998   +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2375999   +      call symput('GROUPID',   strip(data));
2376000   +      call symput('LOOPTYPE', strip(key));
2376001   +   run;
2376003   +   %em_getname(key=PATH, type=DATA);
2376005   +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
2376006   +   %include temp;
2376007   +   filename temp;
2376009   +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
2376011   +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
2376012   +       %let deleteString = &em_nodeid._path;
2376013   +       proc datasets lib=&em_lib nolist;
2376014   +          delete &deleteString;
2376015   +       run;
2376016   +       quit;
2376017   +   %end;
2376019   +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
2376021   +   data score_path;
2376022   +      retain LOOPID &emloopnumber;
2376023   +      set score_path;
2376024   +   run;
2376026   +   proc append base=&em_user_path  data=score_path;
2376027   +   run;
2376029   +   %let EnsembleIndex=0;
2376030   +   data _null_;
2376031   +      retain index 0 ensembleIndex 0;
2376032   +      set score_Path end=eof;
2376033   +      if nodelabel = "&groupid" or index then do;
2376034   +         index + 1;
2376035   +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
2376036   +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
2376037   +      end;
2376038   +      if component='Ensemble' then ensembleIndex = index;
2376039   +      if eof then do;
2376040   +         call symput('loopcodenum', strip(put(index, best.)));
2376041   +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
2376042   +      end;
2376043   +   run;
2376045   +   proc datasets lib=work nolist;
2376046   +      delete score_Path;
2376047   +   run;
2376048   +   quit;
2376050   +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
2376051   +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
2376053   +   %doendpl:
2376055   +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
2376056   +/*
2376057   +       MACRO: EM_DECIDECODE
2376058   +
2376059   +       PURPOSE: Generate EM Decide Score Code for non-interval target.
2376060   +       SUPPORT: Taiyeong Lee
2376061   +
2376062   +       HISTORY: 01OCT04 Initial code
2376063   +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
2376064   +                to add the corresponding decision code
2376065   +
2376066   +*/
2376067   +
2376068   +
2376069   +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
2376070   + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
2376071   +
2376072   +    %do;
2376073   +    %let m_data      = &data;
2376074   +    %let m_decdata   = &decdata;
2376075   +    %let m_decmeta   = &decmeta;
2376076   +    %let m_noresfile = &noresfile;
2376077   +    %let m_resfile   = &resfile;
2376078   +    dm "afa c=sashelp.emutil.decidecode.scl";
2376079   +  %end;
2376080   +%mend EM_DECIDECODE;
2376081   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
2376082   +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
2376083   +   proc display c=sashelp.emcore.pathscorecode.scl;
2376084   +   run;
2376085   +%mend EM_GETTRAINPATH;
2376086   +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
2376087    data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
2376088    length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
2376089    nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
2376090    parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
2376091    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2376092    component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
2376093    tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
2376094    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376095    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376096    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376097    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376098    output;
MPRINT(EM_GETTRAINPATH):   output;
2376099    nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
2376100    parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
2376101    description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
2376102    component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
2376103    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2376104    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376105    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376106    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376107    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376108    output;
MPRINT(EM_GETTRAINPATH):   output;
2376109    nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
2376110    parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
2376111    description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
2376112    component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
2376113    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2376114    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376115    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376116    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376117    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376118    output;
MPRINT(EM_GETTRAINPATH):   output;
2376119    nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
2376120    parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
2376121    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2376122    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2376123    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2376124    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376125    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376126    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376127    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376128    output;
MPRINT(EM_GETTRAINPATH):   output;
2376129    nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
2376130    parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
2376131    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2376132    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2376133    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2376134    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376135    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376136    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376137    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376138    output;
MPRINT(EM_GETTRAINPATH):   output;
2376139    nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
2376140    parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
2376141    description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
2376142    component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
2376143    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2376144    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376145    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376146    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376147    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376148    output;
MPRINT(EM_GETTRAINPATH):   output;
2376149    nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
2376150    parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
2376151    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2376152    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2376153    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2376154    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376155    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376156    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376157    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376158    output;
MPRINT(EM_GETTRAINPATH):   output;
2376159    nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
2376160    parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
2376161    description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
2376162    component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
2376163    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2376164    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376165    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376166    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376167    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376168    output;
MPRINT(EM_GETTRAINPATH):   output;
2376169    nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
2376170    parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
2376171    description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
2376172    component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
2376173    tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
2376174    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376175    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376176    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376177    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376178    output;
MPRINT(EM_GETTRAINPATH):   output;
2376179    nodelabel="Grp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp2";
2376180    parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
2376181    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2376182    component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
2376183    tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
2376184    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376185    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376186    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376187    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376188    output;
MPRINT(EM_GETTRAINPATH):   output;
2376189    nodelabel="Tree2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree2";
2376190    parent="Grp2";
MPRINT(EM_GETTRAINPATH):   parent="Grp2";
2376191    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2376192    component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
2376193    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2376194    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376195    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376196    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376197    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376198    output;
MPRINT(EM_GETTRAINPATH):   output;
2376199    nodelabel="EndGrp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp2";
2376200    parent="Tree2";
MPRINT(EM_GETTRAINPATH):   parent="Tree2";
2376201    description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
2376202    component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
2376203    tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
2376204    FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
2376205    PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
2376206    PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
2376207    accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
2376208    output;
MPRINT(EM_GETTRAINPATH):   output;
2376209    run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 7;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp2_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP2_PATH.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: 12 observations added.
NOTE: The data set EMWS1.ENDGRP2_PATH has 84 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp2" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376210    *------------------------------------------------------------*;
2376211    * End SCORE: EndGrp2;
2376212    *------------------------------------------------------------*;
2376213
 
2376214    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2376215    * EndGrp2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Scoring DATA data;
2376216    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2376217    data EMWS1.EndGrp2_TRAIN
2376218    / view=EMWS1.EndGrp2_TRAIN
2376219    ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_TRAIN / view=EMWS1.EndGrp2_TRAIN ;
2376220    set EMWS1.Tree2_TRAIN
2376221    ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_TRAIN ;
2376222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2376223    quit;
 
2376225    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
2376226    * EndGrp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Computing metadata for TRAIN data;
2376227    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp2_TRAIN out=WORK.M0JBIEJT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JBIEJT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JBIEJT(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JBIEJT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JBIEJT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1FB85P4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F1WIJO(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FB85P4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2376573    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2376574    set EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO;
2376575    where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
2376576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMINFO.
      WHERE (DATA='EndGrp2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376577    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMINFO;
2376578    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2376579    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2376580    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2376584    run;
2376585    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
2376586    set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
2376587    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2376588    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
2376589    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2376590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376591    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2376592    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2376593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2376594    proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2376595    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2376596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376597    data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
2376598    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2376599    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2376600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376601    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2376602    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2376603    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2376604    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:51:59 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:51:59 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BOMQ08 "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BOMQ08 new;
MPRINT(EM_DIAGRAM):   run;
2376628    data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT;
2376629    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2376630    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2376631    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2376632    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2376633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2376634    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
2376635    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2376636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2376637    %let _EMwarndup = 0;
2376638    %let _EMtargetdup =;
2376639    %let _EMASEtargetdup =;
2376640    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2376641    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2376642    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2376643    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2376644    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2376645    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2376646    end;
MPRINT(EM_DIAGRAM):   end;
2376647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376648    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
2376649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2376650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2376651    proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
2376652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2376653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2376654    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2376655    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2376656    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2376657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376658    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2376659    set EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_CMeta_TRAIN;
2376660    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
2376661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2376662    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2376663    set EMWS1.EndGrp2_TRAIN(keep=
2376664    F_DepVar
2376665    I_DepVar
2376666    P_DepVar0
2376667    P_DepVar1
2376668    Q_DepVar0
2376669    Q_DepVar1
2376670    R_DepVar0
2376671    R_DepVar1
2376672    U_DepVar
2376673    _WARN_
2376674    DepVar
2376675    );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2376676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2199 observations read from the data set EMWS1.GRP2_TRAIN.
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2199 observations read from the data set EMWS1.TREE2_TRAIN.
NOTE: There were 2199 observations read from the data set EMWS1.ENDGRP2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2199 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
2380863    %let _cn = %sysfunc(getoption(CENTER));
2380864    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2380865    proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
2380866    var STAT LABEL TRAIN
2380867    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
2380868    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2380869    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2380870    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2380871    run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1594.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2380872    title10;
MPRINT(EM_DIAGRAM):   title10;
2380873    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2380874    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
2380875    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2380876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380877    %let _cn = %sysfunc(getoption(CENTER));
2380878    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2380879    proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
2380880    var from into pct_row pct_col count percent
2380881    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2380882    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2380883    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2380884    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2380885    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2380886    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2380887    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2380888    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2380889    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2380890    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2380891    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2380892    run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1595.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380893    title9;
MPRINT(EM_DIAGRAM):   title9;
2380894    title10;
MPRINT(EM_DIAGRAM):   title10;
2380895    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2380896    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2380897    modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2380898    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2380899    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2380900    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMRANK.DATA.
2380901    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
2380902    %let _cn = %sysfunc(getoption(CENTER));
2380903    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2380904    proc print data=EMWS1.EndGrp2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMRANK label noobs;
2380905    var
2380906    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2380907    by
2380908    notsorted DATAROLE
2380909    notsorted TARGET
2380910    notsorted TARGETLABEL
2380911    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2380912    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2380913    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2380914    run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1596.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2380915    title10;
MPRINT(EM_DIAGRAM):   title10;
2380916    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2380917    proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
2380918    modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2380919    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2380920    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2380921    run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMSCOREDIST.DATA.
2380922    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
2380923    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2380924    set EMWS1.Grp2_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp2_GROUPINFO;
2380925    where _LOOP_=7;
MPRINT(EM_DIAGRAM):   where _LOOP_=7;
2380926    call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
2380927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP2_GROUPINFO.
      WHERE _LOOP_=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2380928    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2380929    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2380930    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2380931    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2380932    set EMWS1.EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK;
2380933    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2380934    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2380935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
2380936    data EMWS1.EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMRANK_LOOP;
2380937    set EMWS1.EndGrp2_EMRANK_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK_LOOP temp;
2380938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 120 observations read from the data set EMWS1.ENDGRP2_EMRANK_LOOP.
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMRANK_LOOP has 140 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
2380939    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2380940    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2380941    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2380942    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2380943    set EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST;
2380944    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2380945    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2380946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 14 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
2380947    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
2380948    set EMWS1.EndGrp2_EMSCOREDIST_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST_LOOP temp;
2380949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 78 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP.
NOTE: There were 14 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP has 92 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2380950    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2380951    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2380952    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2380953    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2380954    set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
2380955    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2380956    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2380957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380958    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
2380959    set EMWS1.EndGrp2_EMOUTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT_LOOP temp;
The SAS System
 
2380960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT_LOOP.
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT_LOOP has 7 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380961    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2380962    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2380963    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2380964    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2380965    set EMWS1.EndGrp2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT;
2380966    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2380967    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2380968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380969    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
2380970    set EMWS1.EndGrp2_EMREPORTFIT_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT_LOOP temp;
2380971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP.
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP has 56 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2380972    data temp;
MPRINT(EM_DIAGRAM):    data temp;
2380973    length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
2380974    format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
2380975    label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
2380976    set EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION;
2380977    _LOOP_ =7;
MPRINT(EM_DIAGRAM):   _LOOP_ =7;
2380978    _WHERE_ ="^(cv_var =7)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =7)";
2380979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2380980    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
2380981    set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP temp;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION_LOOP temp;
2380982    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP.
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP has 28 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
