*------------------------------------------------------------*
User:                misil
Date:                02 June 2018
Time:                16:29:31 o'clock
Site:                70107571
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:29:26 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                02 June 2018
Time:                16:29:26 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O183JDSC "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O183JDSC new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMLOG_1.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:29:26 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMGROUP\EMOUTPUT_1.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:29:26 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                misil";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
371291     proc freq data=EMWS1.EndGrp2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.EndGrp2_VariableSet noprint;
371292     table ROLE*LEVEL/out=WORK.EndGrp2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.EndGrp2META;
371293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.ENDGRP2META has 11 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
371294     proc print data=WORK.EndGrp2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2META label noobs;
371295     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
371296     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
371297     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
371298     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
371299     run;
 
NOTE: There were 11 observations read from the data set WORK.ENDGRP2META.
NOTE: The PROCEDURE PRINT printed page 229.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371300     title10;
MPRINT(EM_DIAGRAM):   title10;
371301     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN
EMWS1.Tree2_TRAIN EMWS1.Tree2_TRAIN EMWS1 Tree2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS1.Tree2_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
371330     data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.EndGrp2_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
371331     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
371332     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
371333        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
371334     set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS1.TREE2_DEPVAR_DM( where=(_TYPE_="TARGET"));
371335     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
371336     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
371337     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
371338     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
371339     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
371340     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
371341     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
371342     end;
MPRINT(EM_DIAGRAM):   end;
371343     output;
MPRINT(EM_DIAGRAM):   output;
371344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENDGRP2_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
371345     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
371346     proc print data=WORK.EndGrp2_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.EndGrp2_EVENT noobs label;
371347     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
371348     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
371349     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
371350     run;
 
NOTE: There were 1 observations read from the data set WORK.ENDGRP2_EVENT.
NOTE: The PROCEDURE PRINT printed page 230.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
371351     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
371352     proc print data = EMWS1.Tree2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Tree2_DepVar_DM noobs label;
371353     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
371354     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
371355     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
371356     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
371357     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
371358     run;
 
NOTE: There were 7 observations read from the data set EMWS1.TREE2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 231.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
371359     title10;
MPRINT(EM_DIAGRAM):   title10;
371360     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'WarGameStore_sasProject';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'WarGame classification';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * EndGrp2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.DepVar;
MPRINT(EM_DECDATA):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   DepVar="1";
MPRINT(EM_DECDATA):   COUNT=300;
MPRINT(EM_DECDATA):   DATAPRIOR=0.13673708920187;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.13654984069185;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   DepVar="0";
MPRINT(EM_DECDATA):   COUNT=1897;
MPRINT(EM_DECDATA):   DATAPRIOR=0.86326291079812;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.86345015930814;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="DepVar";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree2_DepVar_DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree2_DepVar_DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
371838     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
371839     * EndGrp2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * EndGrp2: Generation of macros and macro variables;
371840     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
371841     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
371842     %let EMEXCEPTIONSTRING=;
371843     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
371844     * TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   * TRAIN: EndGrp2;
371845     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371846     %let EM_ACTION = TRAIN;
371847     %let syscc = 0;
371848     %macro main;
371849        %if %upcase(&EM_ACTION) = TRAIN %then %do;
371850
371851            filename temp catalog 'sashelp.emutil.endgp_train.source';
371852            %include temp;
371853            filename temp;
371854
371855            %train;
371856
371857        %end;
371858        %else
371859           %if %upcase(&EM_ACTION) = SCORE %then %do;
371860
371861            filename temp catalog 'sashelp.emutil.endgp_score.source';
371862            %include temp;
371863            filename temp;
371864
371865            %score;
371866        %end;
371867        %else
371868        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
371869
371870            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
371871            %include temp;
371872            filename temp;
371873
371874            %postloop;
371875
371876        %end;
371877
371878        %doendm:
371879     %mend main;
371880
371881     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_TRAIN.SOURCE.
371882    +%macro copyModelDs(model=, key=);
371883    +   %let modelDs  = &em_lib..&model._&key;
371884    +   %let reportDs = &em_lib..&em_nodeid._&key;
371885    +   %if %sysfunc(exist(&modelDs)) %then %do;
371886    +       data &reportDs;
371887    +          length ModelId $16;
371888    +          retain ModelId "&model";
371889    +          set &modelDs;
371890    +       run;
371891    +   %end;
371892    +%mend copyModelDs;
371893    +
371894    +%macro traintarget(groupid=);
371895    +   %em_getname(key=emoutfit, type=DATA);
371896    +   %let targetname=;
371897    +   data _null_;
371898    +     set &em_lib..&groupid._&looptype;
371899    +     where _LOOP_ = &EMLOOPNUMBER;
371900    +     call symput('targetname', strip(_TARGET_));
371901    +   run;
371902    +   %let modelId =;
371903    +   data _null_;
371904    +      set &em_import_data_eminfo;
371905    +      where key = 'MODEL' and TARGET = "&targetname";
371906    +      call symput('modelId',   strip(data));
371907    +   run;
371908    +   %if "&modelId" ne "" %then %do;
371909    +       %copyModelDs(model=&modelid, key=EMRANK);
371910    +       %copyModelDs(model=&modelid, key=EMSCOREDIST);
371911    +       %copyModelDs(model=&modelid, key=EMOUTFIT);
371912    +       %copyModelDs(model=&modelid, key=EMCLASSIFICATION);
371913    +       %copyModelDs(model=&modelid, key=EMEVENREPORT);
371914    +       %copyModelDs(model=&modelid, key=EMRESIDUALS);
371915    +       %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
371916    +   %end;
371917    +
371918    +   %doendtgp:
371919    +%mend;
371920    +
371921    +%macro trainboost(groupid=);
371922    +
371923    +   %let boostinfoDs  = &em_lib..%sysfunc(strip(&groupid))_boostinfo;
371924    +   %let boostscoreDs = &em_lib..%sysfunc(strip(&groupid))_boostscore;
371925    +
371926    +   data _null_;
371927    +      retain index 0;
371928    +      set &boostinfoDs;
371929    +      call symput('targetname', strip(_target_));
371930    +   run;
371931    +
371932    +   %if "&em_import_data_eminfo" ne "" and %sysfunc(exist(&em_import_data_eminfo)) %then %do;
371933    +       %let decmeta = ;
371934    +       data _null_;
371935    +          set &em_import_data_eminfo;
371936    +          where (key='DECMETA' and TARGET="&targetname");
371937    +          call symput('DECMETA', strip(data));
371938    +       run;
371939    +       %if "&decmeta" eq "" %then %do;
371940    +           %let emexceptionstring = EMTOOL.NOTARGETMODELED;
371941    +           %goto doendtb;
371942    +       %end;
371943    +
371944    +       %let predictedVars=;
371945    +       data _null_;
371946    +          set &decmeta;
371947    +          if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
371948    +          else
371949    +          if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
371950    +          else
371951    +          if _TYPE_ = 'PREDICTED' then call symput('predictedvars', strip(symget('predictedVars'))!!' '!!strip(variable));
371952    +       run;
371953    +       %if %index(&EM_DEBUG, _ALL_) %then %do;
371954    +           %put GROUPID: &GROUPID DECMETA: &DECMETA FROMVAR: &FROMVAR INTO: &INTOVAR PREDICTED: &PREDICTEDVARS;
371955    +       %end;
371956    +   %end;
371957    +
371958    +   * ;
371959    +   * ENDGROUP &NODEID : Boosting scoring ;
371960    +   * ;
371961    +   data &em_lib..&groupid._boostscore;
371962    +      set &em_import_data;
371963    +      keep _WARN_ &targetname &fromvar &intovar &predictedvars;
371964    +      %if "%em_freq" ne "" %then %do ;
371965    +          keep %em_freq ;
371966    +      %end ;
371967    +   run;
371968    +   %em_model(TARGET=&targetname , ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
371969    +
371970    +   %doendtb:
371971    +
371972    +%mend trainboost;
371973    +
371974    +%macro trainbag(groupid=);
371975    +   %let baginfoDs  = &em_lib..%sysfunc(strip(&groupid))_baginfo;
371976    +   data _null_;
371977    +      retain index 0;
371978    +      set &baginfoDs;
371979    +      call symput('targetname', strip(_target_));
371980    +   run;
371981    +
371982    +   %let decmeta = ;
371983    +   data _null_;
371984    +       set &em_import_data_eminfo;
371985    +       where (key='DECMETA' and TARGET="&targetname");
371986    +       call symput('DECMETA', strip(data));
371987    +   run;
371988    +   %if "&decmeta" eq "" %then %do;
371989    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
371990    +       %goto doendtg;
371991    +   %end;
371992    +
371993    +   %em_model(TARGET=&targetname, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=Y, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
371994    +
371995    +   %doendtg:
371996    +%mend trainbag;
371997    +
371998    +%macro traingroup(groupid=);
371999    +   %let targetNum = 0;
372000    +
372001    +   data _temp1;
372002    +      set &em_lib..&groupid._eminfo;
372003    +      where key='MODEL';
372004    +   run;
372005    +   data _temp2;
372006    +      set &em_import_data_eminfo;
372007    +      where key='MODEL';
372008    +   run;
372009    +   proc sort data=_temp1; by TARGET DATA;
372010    +   proc sort data=_temp2; by TARGET DATA;
372011    +   data _temp2;
372012    +      merge _temp1(in=_a) _temp2(in=_b);
372013    +      by TARGET DATA;
372014    +      if ^_a and _b then output;
372015    +   run;
372016    +   data _null_;
372017    +      retain index 0;
372018    +      set _temp2 end=eof;
372019    +      index +1;
372020    +      where key ='MODEL';
372021    +      call symput('MODELID'!!strip(put(index, best.)), strip(data));
372022    +      call symput('TARGET'!!strip(put(index, best.)), strip(target));
372023    +      if eof then
372024    +         call symput('targetnum', strip(put(index, best.)));
372025    +   run;
372026    +   proc datasets lib=work nolist;
372027    +      delete _temp1 _temp2;
372028    +   run;
372029    +   %if "&targetNum" eq "0" %then %goto doendtgp;
372030    +
372031    +   %let modelString =;
372032    +   %do i=1 %to &targetnum;
372033    +        %if ^%sysfunc(indexw(&modelString, &&modelid&i)) %then %do;
372034    +            %copyModelDs(model=&&modelid&i, key=EMRANK);
372035    +            %copyModelDs(model=&&modelid&i, key=EMSCOREDIST);
372036    +            %copyModelDs(model=&&modelid&i, key=EMOUTFIT);
372037    +            %copyModelDs(model=&&modelid&i, key=EMCLASSIFICATION);
372038    +            %copyModelDs(model=&&modelid&i, key=EMEVENREPORT);
372039    +            %copyModelDs(model=&&modelid&i, key=EMRESIDUALS);
372040    +            %let modelString = &modelString &&modelid&i;
372041    +       %end;
372042    +       %em_model(TARGET=&&target&i, ASSESS=N, DECSCORECODE=N, FITSTATISTICS=N, CLASSIFICATION=N, RESIDUALS=N, PREDICTED=Y);
372043    +   %end;
372044    +
372045    +   %doendtgp:
372046    +
372047    +%mend traingroup;
372048    +
372049    +%macro getSize(data=, nobsvar=);
372050    +
372051    +   %if %sysfunc(exist(&data, DATA)) %then %do;
372052    +       %let dsid = %sysfunc(open(&data));
372053    +       %if &dsid %then %do;
372054    +           %let &&nobsvar = %sysfunc(attrn(&dsid, NLOBS));
372055    +           %let dsid = %sysfunc(close(&dsid));
372056    +       %end;
372057    +   %end;
372058    +    %if %sysfunc(exist(&data, VIEW)) %then %do;
372059    +        proc sql;
372060    +           reset noprint;
372061    +           select count(*) into :&nobsvar from &data;
372062    +        quit;
372063    +   %end;
372064    +
372065    +%mend getsize;
372066    +
372067    +%macro train;
372068    +
372069    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %do;
372070    +      %let EM_TOOLTYPE=UTILITY;
372071    +      %if %sysfunc(exist(&em_data_eminfo)) %then %do;
372072    +          proc delete data=&em_data_eminfo;
372073    +          run;
372074    +      %end;
372075    +      %goto doendtr;
372076    +   %end;
372077    +
372078    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
372079    +       %let emexceptionstring = EMTOOL.NOTARGETMODELED;
372080    +       %goto doendtr;
372081    +   %end;
372082    +
372083    +   %let xgroupid = ;
372084    +   data _null_;
372085    +      set &em_import_data_eminfo;
372086    +      where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
372087    +      call symput('XGROUPID',  strip(data));
372088    +      call symput('LOOPTYPE', strip(key));
372089    +   run;
372090    +
372091    +   %if "&looptype" eq "BOOSTINFO" %then %do;
372092    +       %let nDataObs=0;
372093    +       %getSize(data=&em_import_data, nobsvar=nDataObs);
372094    +
372095    +       %let nStartObs=0;
372096    +       %getsize(data=&em_lib..&xgroupid._train, nobsvar=nStartObs);
372097    +
372098    +       %if &nDataObs ne &nStartObs %then %do;
372099    +           %let emexceptionstring = EMTOOL.BOOSTERRORNOBSCHANGED;
372100    +           %goto doendtr;
372101    +       %end;
372102    +
372103    +       %trainboost(groupid=&xgroupid);
372104    +   %end;
372105    +   %else
372106    +   %if "&looptype" eq "BAGINFO" %then %do;
372107    +       %trainbag(groupid=&xgroupid);
372108    +   %end;
372109    +   %else
372110    +   %if "&looptype" eq "GROUPINFO" %then %do;
372111    +       %traingroup(groupid=&xgroupid);
372112    +   %end;
372113    +   %else
372114    +   %if "&looptype" eq "TARGETINFO" %then %do;
372115    +       %traintarget(groupid=&xgroupid);
372116    +   %end;
372117    +
372118    +   data &em_data_eminfo;
372119    +      length TARGET KEY $32  DATA $43;
372120    +      TARGET=''; KEY='ENDGROUP'; DATA="&em_nodeid"; output;
372121    +   run;
372122    +
372123    +   %let EM_TOOLTYPE=MODEL;
372124    +
372125    +   %doendtr:
372126    +
372127    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAIN):   where key in('GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(TRAIN):   call symput('XGROUPID', strip(data));
MPRINT(TRAIN):   call symput('LOOPTYPE', strip(key));
MPRINT(TRAIN):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp1;
MPRINT(TRAINGROUP):   set EMWS1.Grp2_eminfo;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.GRP2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   set EMWS1.Tree2_EMINFO;
MPRINT(TRAINGROUP):   where key='MODEL';
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key='MODEL';
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp1;
MPRINT(TRAINGROUP):   by TARGET DATA;
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP1 has 0 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc sort data=_temp2;
MPRINT(TRAINGROUP):   by TARGET DATA;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _temp2;
MPRINT(TRAINGROUP):   merge _temp1(in=_a) _temp2(in=_b);
MPRINT(TRAINGROUP):   by TARGET DATA;
MPRINT(TRAINGROUP):   if ^_a and _b then output;
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   data _null_;
MPRINT(TRAINGROUP):   retain index 0;
MPRINT(TRAINGROUP):   set _temp2 end=eof;
MPRINT(TRAINGROUP):   index +1;
MPRINT(TRAINGROUP):   where key ='MODEL';
MPRINT(TRAINGROUP):   call symput('MODELID'!!strip(put(index, best.)), strip(data));
MPRINT(TRAINGROUP):   call symput('TARGET'!!strip(put(index, best.)), strip(target));
MPRINT(TRAINGROUP):   if eof then call symput('targetnum', strip(put(index, best.)));
MPRINT(TRAINGROUP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE key='MODEL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):   proc datasets lib=work nolist;
MPRINT(TRAINGROUP):   delete _temp1 _temp2;
MPRINT(TRAINGROUP):   run;
 
NOTE: Deleting WORK._TEMP1 (memtype=DATA).
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMRANK;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMRANK;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.TREE2_EMRANK.
NOTE: The data set EMWS1.ENDGRP2_EMRANK has 20 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMSCOREDIST;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.TREE2_EMSCOREDIST.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST has 11 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMOUTFIT;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(COPYMODELDS):   data EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   length ModelId $16;
MPRINT(COPYMODELDS):   retain ModelId "Tree2";
MPRINT(COPYMODELDS):   set EMWS1.Tree2_EMCLASSIFICATION;
MPRINT(COPYMODELDS):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(TRAINGROUP):  ;
MPRINT(EM_MODEL):   data WORK.EM_USER_MODEL;
MPRINT(EM_MODEL):   length DATA $65 TARGET $32 PREDICTED ASSESS DECSCORECODE FITSTATISTICS CLASSIFICATION RESIDUALS $1;
MPRINT(EM_MODEL):   data = "";
MPRINT(EM_MODEL):   target = "DepVar";
MPRINT(EM_MODEL):   predicted = "Y";
MPRINT(EM_MODEL):   assess = "N";
MPRINT(EM_MODEL):   decscorecode = "N";
MPRINT(EM_MODEL):   fitstatistics = "N";
MPRINT(EM_MODEL):   classification = "N";
MPRINT(EM_MODEL):   residuals = "N";
MPRINT(EM_MODEL):   run;
 
NOTE: The data set WORK.EM_USER_MODEL has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAINGROUP):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.EndGrp2_EMINFO;
MPRINT(TRAIN):   length TARGET KEY $32 DATA $43;
MPRINT(TRAIN):   TARGET='';
MPRINT(TRAIN):   KEY='ENDGROUP';
MPRINT(TRAIN):   DATA="EndGrp2";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372128     *------------------------------------------------------------*;
372129     * End TRAIN: EndGrp2;
372130     *------------------------------------------------------------*;
372131
 
372132     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
372133     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
372134     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372135     ;
MPRINT(EM_DIAGRAM):   ;
372136     ;
MPRINT(EM_DIAGRAM):   ;
372137     ;
MPRINT(EM_DIAGRAM):   ;
372138     ;
MPRINT(EM_DIAGRAM):   ;
372139     quit;
MPRINT(EM_DIAGRAM):   quit;
372140     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372141     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
372142     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372143     /*; *"; *'; */
372144     ;
MPRINT(EM_DIAGRAM):   ;
372145     run;
MPRINT(EM_DIAGRAM):   run;
372146     quit;
MPRINT(EM_DIAGRAM):   quit;
372147     /* Reset EM Options */
372148     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
372149     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
372150     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:29:28 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                02 June 2018
Time:                16:29:28 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O38MJMEH "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O38MJMEH new;
MPRINT(EM_DIAGRAM):   run;
372252     %let EMEXCEPTIONSTRING=;
372253     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
372254     * SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   * SCORE: EndGrp2;
372255     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372256     %let EM_ACTION = SCORE;
372257     %let syscc = 0;
372258     %macro main;
372259        %if %upcase(&EM_ACTION) = TRAIN %then %do;
372260
372261            filename temp catalog 'sashelp.emutil.endgp_train.source';
372262            %include temp;
372263            filename temp;
372264
372265            %train;
372266
372267        %end;
372268        %else
372269           %if %upcase(&EM_ACTION) = SCORE %then %do;
372270
372271            filename temp catalog 'sashelp.emutil.endgp_score.source';
372272            %include temp;
372273            filename temp;
372274
372275            %score;
372276        %end;
372277        %else
372278        %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
372279
372280            filename temp catalog 'sashelp.emutil.endgp_postloop.source';
372281            %include temp;
372282            filename temp;
372283
372284            %postloop;
372285
372286        %end;
372287
372288        %doendm:
372289     %mend main;
372290
372291     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.endgp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.ENDGP_SCORE.SOURCE.
372292    +%macro scoreTables(data=, out=, scoreref=, prescore=);
372294    +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
372295    +       data &out / view=&out;
372296    +          set &data
372298    +          %if "&prescore" = "Y" %then %do;
372299    +              (obs=1)
372300    +          %end;
372302    +          ;
372304    +          %inc &scoreref;
372306    +          %if "&prescore" eq "Y" %then %do;
372307    +              drop I_: R_:;
372308    +          %end;
372310    +       run;
372311    +   %end;
372313    +%mend scoretables;
372315    +%macro boostbagcode(groupid=, type=, EnsembleIndex=);
372316    +   %let infoDs = &em_lib..%sysfunc(strip(&groupid))_&type;
372317    +   data _null_;
372318    +      retain index 0;
372319    +      set &infoDs;
372320    +      call symput('targetname', strip(_target_));
372321    +      call symput('endloopnum', strip(_loop_));
372322    +   run;
372324    +   %let endgrp_decmeta=;
372325    +   %let endgrp_decdata=;
372327    +   data _null_;
372328    +      set &em_import_data_eminfo;
372329    +      where key in('MODEL', 'DECMETA', 'DECDATA') and TARGET="&targetname";
372330    +      if key='DECMETA' then call symput('ENDGRP_DECMETA', strip(data));
372331    +      else
372332    +      if key='DECDATA' then call symput('ENDGRP_DECDATA', strip(data));
372333    +      else call symput('MODELID', strip(data));
372334    +   run;
372336    +   %let headerString= Boosting;
372337    +   %let prefixString= _BoostVar;
372339    +   %if "&type" = "BAGINFO" %then %do;
372340    +        %let headerString = Bagging;
372341    +        %let prefixString= _BagVar;
372342    +   %end;
372344    +   %let targetType=;
372345    +   %let predictedVars=;
372346    +   data _null_;
372347    +      retain index;
372348    +      set &endgrp_decmeta end=eof;
372349    +      length tempvar $200;
372350    +      if _TYPE_='TARGET' then call symput('TARGETTYPE', strip(level));
372351    +      else
372352    +      if _TYPE_ = 'FROM' then call symput('FROMVAR', strip(variable));
372353    +      else
372354    +      if _TYPE_ = 'INTO' then call symput('INTOVAR', strip(variable));
372355    +      else
372356    +      if _TYPE_ = 'PREDICTED' then do;
372357    +         index+1;
372358    +         call symput('predvars'!!strip(put(index, best.)), strip(variable));
372359    +         tempvar = strip("&em_nodeid")!!'_'!!strip(variable);
372360    +         if length(tempvar)<=32 then call symput('tempvars'!!strip(put(index, best.)), strip(tempvar));
372361    +         else call symput('tempvars'!!strip(put(index, best.)), strip("&prefixString")!!strip(put(index, best.)));
372362    +      end;
372363    +      if eof then
372364    +         call symput('prednum', strip(put(index, best.)));
372365    +   run;
372367    +   %em_getname(key=LOOPFLOWCODE, type=FILE, extension=sas);
372368    +   %em_getname(key=LOOPPUBCODE,  type=FILE, extension=sas);
372370    +   filename loopflow "&em_user_loopflowcode";
372371    +   filename looppub "&em_user_looppubcode";
372373    +   filename emflow "&EM_FILE_EMFLOWSCORECODE" MOD;
372374    +   filename empub "&EM_FILE_EMPUBLISHSCORECODE";
372376    +   %if "&emloopnumber" = "1" %then %do;
372377    +       data _null_;
372378    +          rc = fdelete('loopflow');
372379    +          rc = fdelete('looppub');
372380    +       run;
372381    +       data _null_;
372382    +          file loopflow;
372383    +          put "&em_codebar;";
372384    +          put "* &em_nodeid: ;" ;
372385    +          put "* User: &sysuserid;";
372386    +          put "* Date: &sysdate: &systime;";
372387    +          put "&em_codebar ;";
372388    +          put "* Ensemble Code;";
372389    +          put "&em_codebar ;";
372390    +          put "* &headerString: Loop=1;";
372391    +          put "* Temporary Variables;";
372392    +          %do i= 1 %to &prednum;
372393    +              put "drop &&tempvars&i;";
372394    +              put "&&tempvars&i = 0;";
372395    +          %end;
372396    +       run;
372397    +       %em_copyfile(infref=loopflow, outfref=looppub);
372398    +   %end;
372400    +   %let j=&emloopnumber;
372401    +   %do i = 1 %to &loopcodenum;
372402    +       %let fsourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMFLOWCODE_&j..source;
372403    +       %let psourceEntry = &em_lib..%sysfunc(strip(&&loopnode&i))_LOOP.EMPUBLISHCODE_&j..source;
372405    +       %if (&&loopnode&i eq &em_nodeid ) or
372406    +           ( (&&loopnode&i ne &em_nodeid) and (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex )) %then %do;
372407    +           data _null_;
372408    +              file loopflow mod;
372409    +              put "&em_codebar;";
372410    +              put "* &&loopnode&i: &&loopdesc&i;" ;
372411    +              put "* User: &sysuserid;";
372412    +              put "* Date: &sysdate: &systime;";
372413    +              put "* &headerString: Loop=&j;";
372414    +              put "&em_codebar;";
372415    +           run;
372416    +           data _null_;
372417    +              file looppub mod;
372418    +              put "&em_codebar;";
372419    +              put "* &&loopnode&i: &&loopdesc&i;" ;
372420    +              put "* User: &sysuserid;";
372421    +              put "* Date: &sysdate: &systime;";
372422    +              put "* &headerString: Loop=&j;";
372423    +              put "&em_codebar;";
372424    +           run;
372425    +       %end;
372427    +       %if &&loopnode&i ne &em_nodeid %then %do;
372428    +           %if (&ensembleIndex = 0) or (&i=1 or &i>=&ensembleIndex ) %then %do;
372429    +               filename x catalog "&fsourceEntry";
372430    +               %em_copyfile(infref=x, outfref=loopflow, append=Y);
372431    +               filename x;
372433    +               filename y catalog "&psourceEntry";
372434    +               %em_copyfile(infref=y, outfref=looppub, append=Y);
372435    +               filename y;
372436    +           %end;
372437    +       %end;
372438    +       %else %do;
372439    +           %if "&j" ne "1" %then %do;
372440    +               %let weight = %eval(&j-1);
372441    +               data _null_;
372442    +                  file loopflow mod;
372443    +                  put "&em_codebar;";
372444    +                  %if "&j" ne "&endloopnum" %then %do;
372445    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
372446    +                  %end;
372447    +                  %else %do;
372448    +                      put "* &headerString: accumulate final probabilities;";
372449    +                  %end;
372450    +                  put "&em_codebar;";
372451    +                  %do k=1 %to &prednum;
372452    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
372453    +                  %end;
372454    +               run;
372455    +               data _null_;
372456    +                  file looppub mod;
372457    +                  put "&em_codebar;";
372458    +                  %if "&j" ne "&endloopnum" %then %do;
372459    +                      put "* &headerString: accumulate probabilities for iteration: &j;";
372460    +                  %end;
372461    +                  %else %do;
372462    +                      put "* &headerString: accumulate final probabilities;";
372463    +                  %end;
372464    +                  %do k=1 %to &prednum;
372465    +                      put "&&predvars&k = &&tempvars&k*(&weight/&j) + &&predvars&k*(1/&j);";
372466    +                  %end;
372467    +               run;
372468    +           %end;
372469    +           %if "&j" ne "&endloopnum" %then %do;
372470    +               data _null_;
372471    +                  file loopflow mod;
372472    +                  put "&em_codebar;";
372473    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
372474    +                  put "&em_codebar;";
372475    +               %do k=1 %to &prednum;
372476    +                  put "&&tempvars&k = &&predvars&k;";
372477    +               %end;
372478    +               run;
372479    +               data _null_;
372480    +                  file looppub mod;
372481    +                  put "&em_codebar;";
372482    +                  put "* &headerString: Saving Probabilities for Next Iteration;";
372483    +                  put "&em_codebar;";
372484    +               %do k=1 %to &prednum;
372485    +                   put "&&tempvars&k = &&predvars&k;";
372486    +               %end;
372487    +               run;
372488    +           %end;
372490    +       %end;
372491    +   %end;
372493    +   %em_copyfile(infref=loopflow, outfref=emflow, append=N);
372494    +   %em_copyfile(infref=looppub,  outfref=empub,  append=N);
372496    +   filename loopflow;
372497    +   filename looppub;
372498    +   filename empub;
372500    +   %let groupImportDs = &em_lib..%sysfunc(strip(&groupid))_importset;
372501    +   %let gpTrain=;
372502    +   %let gpValidate=;
372503    +   %let gpTest=;
372505    +   data _null_;
372506    +      set &groupImportDs;
372507    +      select(upcase(port));
372508    +          when('DATA')     call symput('gpTrain',    strip(dataset));
372509    +          when('VALIDATE') call symput('gpValidate', strip(dataset));
372510    +          when('TEST')     call symput('gpTest',     strip(dataset));
372511    +       otherwise;
372512    +      end;
372513    +   run;
372515    +   %if "&gpTrain" ne "" %then %do;
372517    +       %scoreTables(data=&em_lib..&gpTrain,     out=&em_export_train,    scoreref=emflow, prescore=Y);
372519    +       %if &targetType ne INTERVAL %then %do;
372520    +           %makeClassificationVars(target=&targetname, data=&em_export_train, decmeta=&endgrp_decmeta, publish=N, fref=emflow);
372521    +       %end;
372523    +       %makeResidualVars(target=&targetname, decmeta=&endgrp_decmeta, fref=emflow);
372525    +       %let decflow = %sysfunc(Pathname(WORK))&em_dsep._decflow.sas;
372527    +       %em_decidecode(data=&em_export_train , decdata=&ENDGRP_DECDATA , decmeta=&ENDGRP_DECMETA ,
372528    +                                                           noresfile=, resfile=%nrbquote(&decflow));
372530    +       filename _decflow "&decflow";
372531    +       %em_copyfile(infref=_decflow, outfref=emflow, append=Y);
372532    +       filename _decflow;
372534    +   %end;
372536    +   %if "&gpTrain" ne "" %then
372537    +        %scoreTables(data=&em_lib..%sysfunc(strip(&gpTrain)),     out=&em_export_train,    scoreref=emflow);
372538    +   %if "&gpValidate" ne "" %then
372539    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpValidate)),  out=&em_export_validate, scoreref=emflow);
372540    +   %if "&gpTest" ne "" %then
372541    +       %scoreTables(data=&em_lib..%sysfunc(strip(&gpTest)),      out=&em_export_test,     scoreref=emflow);
372543    +   filename emflow;
372545    +%mend boostbagcode;
372547    +%macro score;
372549    +   filename _dec catalog "sashelp.emutil.em_decidecode.source";
372550    +   %inc _dec;
372551    +   filename _dec;
372553    +   %if ^%symexist(em_import_data_eminfo) or ("&emloopmode" eq "") %then %goto doendpl;
372555    +   %if "&em_import_data_eminfo" eq "" or ^%sysfunc(exist(&em_import_data_eminfo)) %then %do;
372556    +       %let emexceptionstring = nomodeltarget;
372557    +       %goto doendpl;
372558    +   %end;
372560    +   %LET GROUPID=;
372561    +   %let LOOPTYPE=;
372562    +   data _null_;
372563    +      set &em_import_data_eminfo;
372564    +      where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
372565    +      call symput('GROUPID',   strip(data));
372566    +      call symput('LOOPTYPE', strip(key));
372567    +   run;
372569    +   %em_getname(key=PATH, type=DATA);
372571    +   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
372572    +   %include temp;
372573    +   filename temp;
372575    +   %em_gettrainpath(NODEID=&em_nodeid, OUTPATH= score_path);
372577    +   %if &emloopnumber = 1 and %sysfunc(exist(&em_user_path)) %then %do;
372578    +       %let deleteString = &em_nodeid._path;
372579    +       proc datasets lib=&em_lib nolist;
372580    +          delete &deleteString;
372581    +       run;
372582    +       quit;
372583    +   %end;
372585    +   %if ^%sysfunc(exist(WORK.score_path)) %then %goto doendpl;
372587    +   data score_path;
372588    +      retain LOOPID &emloopnumber;
372589    +      set score_path;
372590    +   run;
372592    +   proc append base=&em_user_path  data=score_path;
372593    +   run;
372595    +   %let EnsembleIndex=0;
372596    +   data _null_;
372597    +      retain index 0 ensembleIndex 0;
372598    +      set score_Path end=eof;
372599    +      if nodelabel = "&groupid" or index then do;
372600    +         index + 1;
372601    +         call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
372602    +         call symput('loopdesc'!!strip(put(index, best.)), strip(component));
372603    +      end;
372604    +      if component='Ensemble' then ensembleIndex = index;
372605    +      if eof then do;
372606    +         call symput('loopcodenum', strip(put(index, best.)));
372607    +         call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
372608    +      end;
372609    +   run;
372611    +   proc datasets lib=work nolist;
372612    +      delete score_Path;
372613    +   run;
372614    +   quit;
372616    +   %if ("&looptype" eq "BOOSTINFO") or ("&looptype" eq "BAGINFO") %then
372617    +       %boostbagcode(groupid=&groupid, type=&looptype, EnsembleIndex=&EnsembleIndex);
372619    +   %doendpl:
372621    +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):   filename _dec catalog "sashelp.emutil.em_decidecode.source";
NOTE: %INCLUDE (level 1) file _DEC is file SASHELP.EMUTIL.EM_DECIDECODE.SOURCE.
372622    +/*
372623    +       MACRO: EM_DECIDECODE
372624    +
372625    +       PURPOSE: Generate EM Decide Score Code for non-interval target.
372626    +       SUPPORT: Taiyeong Lee
372627    +
372628    +       HISTORY: 01OCT04 Initial code
372629    +       NOTE:    All parameters are optional, call %EM_DECIDECODE()
372630    +                to add the corresponding decision code
372631    +
372632    +*/
372633    +
372634    +
372635    +%macro  EM_DECIDECODE(data= , decdata= , decmeta= , noresfile=, resfile=);
372636    + %global m_data    m_decdata   m_decmeta  m_noresfile  m_resfile ;
372637    +
372638    +    %do;
372639    +    %let m_data      = &data;
372640    +    %let m_decdata   = &decdata;
372641    +    %let m_decmeta   = &decmeta;
372642    +    %let m_noresfile = &noresfile;
372643    +    %let m_resfile   = &resfile;
372644    +    dm "afa c=sashelp.emutil.decidecode.scl";
372645    +  %end;
372646    +%mend EM_DECIDECODE;
372647    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename _dec;
NOTE: Fileref _DEC has been deassigned.
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Tree2_EMINFO;
MPRINT(SCORE):   where key in('GROUPINFO','BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(SCORE):   call symput('GROUPID', strip(data));
MPRINT(SCORE):   call symput('LOOPTYPE', strip(key));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
372648    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
372649    +   proc display c=sashelp.emcore.pathscorecode.scl;
372650    +   run;
372651    +%mend EM_GETTRAINPATH;
372652    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
372653     data score_path;
MPRINT(EM_GETTRAINPATH):   data score_path;
372654     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 accumulatedScoreCode $1;
372655     nodelabel="FIMPORT";
MPRINT(EM_GETTRAINPATH):   nodelabel="FIMPORT";
372656     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
372657     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
372658     component="FileImport";
MPRINT(EM_GETTRAINPATH):   component="FileImport";
372659     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
372660     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372661     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372662     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372663     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372664     output;
MPRINT(EM_GETTRAINPATH):   output;
372665     nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
372666     parent="FIMPORT";
MPRINT(EM_GETTRAINPATH):   parent="FIMPORT";
372667     description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
372668     component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
372669     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
372670     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372671     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372672     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372673     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372674     output;
MPRINT(EM_GETTRAINPATH):   output;
372675     nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
372676     parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
372677     description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
372678     component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
372679     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
372680     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372681     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372682     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372683     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372684     output;
MPRINT(EM_GETTRAINPATH):   output;
372685     nodelabel="EMCODE2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE2";
372686     parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
372687     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
372688     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
372689     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
372690     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372691     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372692     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372693     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372694     output;
MPRINT(EM_GETTRAINPATH):   output;
372695     nodelabel="Meta2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta2";
372696     parent="EMCODE2";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE2";
372697     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
372698     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
372699     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
372700     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372701     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372702     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372703     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372704     output;
MPRINT(EM_GETTRAINPATH):   output;
372705     nodelabel="EMCODE3";
MPRINT(EM_GETTRAINPATH):   nodelabel="EMCODE3";
372706     parent="Meta2";
MPRINT(EM_GETTRAINPATH):   parent="Meta2";
372707     description="SASHELP.EMCORE.EMCODETOOL.CLASS";
MPRINT(EM_GETTRAINPATH):   description="SASHELP.EMCORE.EMCODETOOL.CLASS";
372708     component="SASCode";
MPRINT(EM_GETTRAINPATH):   component="SASCode";
372709     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
372710     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372711     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372712     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372713     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372714     output;
MPRINT(EM_GETTRAINPATH):   output;
372715     nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
372716     parent="EMCODE3";
MPRINT(EM_GETTRAINPATH):   parent="EMCODE3";
372717     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
372718     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
372719     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
372720     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372721     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372722     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372723     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372724     output;
MPRINT(EM_GETTRAINPATH):   output;
372725     nodelabel="Meta";
MPRINT(EM_GETTRAINPATH):   nodelabel="Meta";
372726     parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
372727     description="Metadata Node";
MPRINT(EM_GETTRAINPATH):   description="Metadata Node";
372728     component="Metadata";
MPRINT(EM_GETTRAINPATH):   component="Metadata";
372729     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
372730     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372731     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372732     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372733     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372734     output;
MPRINT(EM_GETTRAINPATH):   output;
372735     nodelabel="Trans2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans2";
372736     parent="Meta";
MPRINT(EM_GETTRAINPATH):   parent="Meta";
372737     description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
372738     component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
372739     tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
372740     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372741     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372742     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372743     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372744     output;
MPRINT(EM_GETTRAINPATH):   output;
372745     nodelabel="Grp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Grp2";
372746     parent="Trans2";
MPRINT(EM_GETTRAINPATH):   parent="Trans2";
372747     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
372748     component="StartGroup";
MPRINT(EM_GETTRAINPATH):   component="StartGroup";
372749     tooltype="UTILITY";
MPRINT(EM_GETTRAINPATH):   tooltype="UTILITY";
372750     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372751     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372752     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372753     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372754     output;
MPRINT(EM_GETTRAINPATH):   output;
372755     nodelabel="Tree2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree2";
372756     parent="Grp2";
MPRINT(EM_GETTRAINPATH):   parent="Grp2";
372757     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
372758     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
372759     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
372760     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372761     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372762     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372763     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372764     output;
MPRINT(EM_GETTRAINPATH):   output;
372765     nodelabel="EndGrp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="EndGrp2";
372766     parent="Tree2";
MPRINT(EM_GETTRAINPATH):   parent="Tree2";
372767     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
372768     component="EndGroup";
MPRINT(EM_GETTRAINPATH):   component="EndGroup";
372769     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
372770     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
372771     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
372772     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
372773     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
372774     output;
MPRINT(EM_GETTRAINPATH):   output;
372775     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK.SCORE_PATH has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(SCORE):  ;
MPRINT(SCORE):   data score_path;
MPRINT(SCORE):   retain LOOPID 1;
MPRINT(SCORE):   set score_path;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set WORK.SCORE_PATH has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc append base=EMWS1.EndGrp2_PATH data=score_path;
MPRINT(SCORE):   run;
 
NOTE: Appending WORK.SCORE_PATH to EMWS1.ENDGRP2_PATH.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: The data set EMWS1.ENDGRP2_PATH has 12 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   retain index 0 ensembleIndex 0;
MPRINT(SCORE):   set score_Path end=eof;
MPRINT(SCORE):   if nodelabel = "Grp2" or index then do;
MPRINT(SCORE):   index + 1;
MPRINT(SCORE):   call symput('loopnode'!!strip(put(index, best.)), strip(nodelabel));
MPRINT(SCORE):   call symput('loopdesc'!!strip(put(index, best.)), strip(component));
MPRINT(SCORE):   end;
MPRINT(SCORE):   if component='Ensemble' then ensembleIndex = index;
MPRINT(SCORE):   if eof then do;
MPRINT(SCORE):   call symput('loopcodenum', strip(put(index, best.)));
MPRINT(SCORE):   call symput('EnsembleIndex', strip(put(ensembleIndex, best.)));
MPRINT(SCORE):   end;
MPRINT(SCORE):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE_PATH.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   proc datasets lib=work nolist;
MPRINT(SCORE):   delete score_Path;
MPRINT(SCORE):   run;
 
NOTE: Deleting WORK.SCORE_PATH (memtype=DATA).
MPRINT(SCORE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: EndGrp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372776     *------------------------------------------------------------*;
372777     * End SCORE: EndGrp2;
372778     *------------------------------------------------------------*;
372779
 
372780     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
372781     * EndGrp2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Scoring DATA data;
372782     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372783     data EMWS1.EndGrp2_TRAIN
372784     / view=EMWS1.EndGrp2_TRAIN
372785     ;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_TRAIN / view=EMWS1.EndGrp2_TRAIN ;
372786     set EMWS1.Tree2_TRAIN
372787     ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_TRAIN ;
372788     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.ENDGRP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
372789     quit;
 
372791     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
372792     * EndGrp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * EndGrp2: Computing metadata for TRAIN data;
372793     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.EndGrp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.EndGrp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.EndGrp2_TRAIN out=WORK.M3O0EU8I noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3O0EU8I;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3O0EU8I(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3O0EU8I;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3O0EU8I;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M12QNAS9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03ELE0F(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   set WORK.M12QNAS9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "EndGrp2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "EndGrp2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "EndGrp2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EndGrp2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
373139     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
373140     set EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO;
373141     where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='EndGrp2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
373142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMINFO.
      WHERE (DATA='EndGrp2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373143     data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMINFO;
373144     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
373145     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
373146     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
373150     run;
373151     data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
373152     set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMINFO WORK.MODELTEMP_INFO;
373153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: There were 1 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
373154     proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.EndGrp2_EMINFO NOTHREADS;
373155     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373156     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
373157     proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
373158     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373159     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
373160     proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.EndGrp2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
373161     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373163     data EMWS1.EndGrp2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.EndGrp2_EMINFO;
373164     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
373165     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 4 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.ENDGRP2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
373167     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
373168     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
373169     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
373170     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "02 June 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:29:29 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                02 June 2018
Time:                16:29:29 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1W53P3E "C:\Users\misil\Desktop\DM 2\Project\WarGameStore_sasProject\Workspaces\EMWS1\EndGrp2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1W53P3E new;
MPRINT(EM_DIAGRAM):   run;
373194     data EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT;
373195     set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
373196     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
373197     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
373198     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
373199     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
373200     proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMREPORTFIT nothreads;
373201     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
373202     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
373203     %let _EMwarndup = 0;
373204     %let _EMtargetdup =;
373205     %let _EMASEtargetdup =;
373206     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
373207     set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
373208     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
373209     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
373210     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
373211     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
373212     end;
MPRINT(EM_DIAGRAM):   end;
373213     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373214     proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree2_CMeta_TRAIN out=WORK.SUBSETINMETA;
373215     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373216     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.TREE2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
373217     proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.EndGrp2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
373218     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373219     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.ENDGRP2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
373220     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
373221     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
373222     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 23 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
373224     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
373225     set EMWS1.EndGrp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_CMeta_TRAIN;
373226     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
373227     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.ENDGRP2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
373228     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
373229     set EMWS1.EndGrp2_TRAIN(keep=
373230     F_DepVar
373231     I_DepVar
373232     P_DepVar0
373233     P_DepVar1
373234     Q_DepVar0
373235     Q_DepVar1
373236     R_DepVar0
373237     R_DepVar1
373238     U_DepVar
373239     _WARN_
373240     DepVar
373241     );
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
373242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2197 observations read from the data set EMWS1.GRP2_TRAIN.
NOTE: View EMWS1.ENDGRP2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2197 observations read from the data set EMWS1.TREE2_TRAIN.
NOTE: There were 2197 observations read from the data set EMWS1.ENDGRP2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2197 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
377429     %let _cn = %sysfunc(getoption(CENTER));
377430     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
377431     proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMREPORTFIT noobs label;
377432     var STAT LABEL TRAIN
377433     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN ;
377434     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
377435     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
377436     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
377437     run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 232.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
377438     title10;
MPRINT(EM_DIAGRAM):   title10;
377439     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
377440     proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.EndGrp2_EMCLASSIFICATION nothreads;
377441     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
377442     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
377443     %let _cn = %sysfunc(getoption(CENTER));
377444     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
377445     proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMCLASSIFICATION noobs label;
377446     var from into pct_row pct_col count percent
377447     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
377448     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
377449     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
377450     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
377451     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
377452     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
377453     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
377454     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
377455     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
377456     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
377457     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
377458     run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 233.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
377459     title9;
MPRINT(EM_DIAGRAM):   title9;
377460     title10;
MPRINT(EM_DIAGRAM):   title10;
377461     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
377462     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
377463     modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
377464     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
377465     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
377466     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMRANK.DATA.
377467     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
377468     %let _cn = %sysfunc(getoption(CENTER));
377469     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
377470     proc print data=EMWS1.EndGrp2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.EndGrp2_EMRANK label noobs;
377471     var
377472     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
377473     by
377474     notsorted DATAROLE
377475     notsorted TARGET
377476     notsorted TARGETLABEL
377477     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
377478     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
377479     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
377480     run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 234.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
377481     title10;
MPRINT(EM_DIAGRAM):   title10;
377482     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
377483     proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
377484     modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
377485     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
377486     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
377487     run;
 
NOTE: MODIFY was successful for EMWS1.ENDGRP2_EMSCOREDIST.DATA.
377488     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
377489     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
377490     set EMWS1.Grp2_GROUPINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Grp2_GROUPINFO;
377491     where _LOOP_=1;
MPRINT(EM_DIAGRAM):   where _LOOP_=1;
377492     call symput('LOOP_WHERE', strip(_wheredesc_));
MPRINT(EM_DIAGRAM):   call symput('LOOP_WHERE', strip(_wheredesc_));
377493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.GRP2_GROUPINFO.
      WHERE _LOOP_=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
377494     data temp;
MPRINT(EM_DIAGRAM):    data temp;
377495     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
377496     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
377497     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
377498     set EMWS1.EndGrp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMRANK;
377499     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
377500     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
377501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.ENDGRP2_EMRANK.
NOTE: The data set WORK.TEMP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
377502     data EMWS1.EndGrp2_EMRANK_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMRANK_LOOP;
377503     set temp;
MPRINT(EM_DIAGRAM):   set temp;
377504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMRANK_LOOP has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
377505     data temp;
MPRINT(EM_DIAGRAM):    data temp;
377506     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
377507     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
377508     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
377509     set EMWS1.EndGrp2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMSCOREDIST;
377510     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
377511     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
377512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.ENDGRP2_EMSCOREDIST.
NOTE: The data set WORK.TEMP has 11 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
377513     data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMSCOREDIST_LOOP;
377514     set temp;
MPRINT(EM_DIAGRAM):   set temp;
377515     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMSCOREDIST_LOOP has 11 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
377516     data temp;
MPRINT(EM_DIAGRAM):    data temp;
377517     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
377518     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
377519     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
377520     set EMWS1.EndGrp2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMOUTFIT;
377521     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
377522     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
377523     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.ENDGRP2_EMOUTFIT.
NOTE: The data set WORK.TEMP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
377524     data EMWS1.EndGrp2_EMOUTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMOUTFIT_LOOP;
377525     set temp;
MPRINT(EM_DIAGRAM):   set temp;
377526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMOUTFIT_LOOP has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
377527     data temp;
MPRINT(EM_DIAGRAM):    data temp;
377528     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
377529     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
377530     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
377531     set EMWS1.EndGrp2_EMREPORTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMREPORTFIT;
377532     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
377533     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
377534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.ENDGRP2_EMREPORTFIT.
NOTE: The data set WORK.TEMP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
377535     data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMREPORTFIT_LOOP;
377536     set temp;
MPRINT(EM_DIAGRAM):   set temp;
377537     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMREPORTFIT_LOOP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
377538     data temp;
MPRINT(EM_DIAGRAM):    data temp;
377539     length _LOOP_ 8 _WHERE_ $200;
MPRINT(EM_DIAGRAM):   length _LOOP_ 8 _WHERE_ $200;
377540     format _LOOP_ 6.;
MPRINT(EM_DIAGRAM):   format _LOOP_ 6.;
377541     label _LOOP_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_loop_vlabel, NOQUOTE))" _WHERE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_where_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LOOP_ = "Group Index" _WHERE_ = "Group";
377542     set EMWS1.EndGrp2_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS1.EndGrp2_EMCLASSIFICATION;
377543     _LOOP_ =1;
MPRINT(EM_DIAGRAM):   _LOOP_ =1;
377544     _WHERE_ ="^(cv_var =1)";
MPRINT(EM_DIAGRAM):   _WHERE_ ="^(cv_var =1)";
377545     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.ENDGRP2_EMCLASSIFICATION.
NOTE: The data set WORK.TEMP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
377546     data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
MPRINT(EM_DIAGRAM):    data EMWS1.EndGrp2_EMCLASSIFICATION_LOOP;
377547     set temp;
MPRINT(EM_DIAGRAM):   set temp;
377548     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.ENDGRP2_EMCLASSIFICATION_LOOP has 4 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
